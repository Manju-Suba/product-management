{"version":3,"file":"static/js/399.e0568be1.chunk.js","mappings":"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","sources":["views/products/ViewProduct.js","views/products/productHead/AddProduct.js","views/products/productHead/EditProduct.js","views/svgImages/BackArrowSvg.js","views/svgImages/Calendar.js","views/svgImages/DeleteSvg.js","views/svgImages/EditSvg.js","views/svgImages/EyeSvg.js","views/svgImages/FileSvg.js","views/svgImages/PlusSvg.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react'\nimport { CCol, CForm, CFormLabel, CRow } from '@coreui/react'\nimport PropTypes from 'prop-types'\nimport { getHeaders, ImageUrl, getDecodeData } from '../../constant/Global'\nimport profileImage1 from '../../assets/images/avatars/man1.png'\nimport { Breadcrumb, Select, Col, Row, Input, Button, Form, DatePicker, Card, Skeleton } from 'antd'\nimport { CheckOutlined } from '@ant-design/icons'\nimport BackArrowSvg from 'src/views/svgImages/BackArrowSvg'\nimport { toast } from 'react-toastify'\nimport Calendar from '../svgImages/Calendar'\nimport dayjs from 'dayjs'\nimport stage from '../../assets/images/form/stage.png'\nimport stage1 from '../../assets/images/form/stage-p.png'\nimport stage2 from '../../assets/images/form/stage-a.png'\nimport stage3 from '../../assets/images/form/stage-r.png'\nimport eyeIcon from '../../assets/images/login/Show.png'\nimport PlusSvg from '../svgImages/PlusSvg'\nimport DeleteSvg from '../svgImages/DeleteSvg'\nimport FileSvg from '../svgImages/FileSvg'\nimport useAxios from 'src/constant/UseAxios'\nimport Downarrowimg from '../../assets/images/downarrow.png'\nimport { Link } from 'react-router-dom'\n\nconst ViewProduct = ({\n  flowList,\n  viewStatus,\n  ownerOption,\n  close,\n  techHeadList,\n  prodHeadList,\n  dataHeadList,\n  categories,\n  ViewProductData,\n  titleList,\n  mastersTech,\n  mastersProd,\n  mastersData,\n}) => {\n  let api = useAxios()\n  const formRef = useRef(null)\n  const [form] = Form.useForm()\n  const user = getDecodeData()\n  const branch = user?.branch\n  const [addTeamMember, setAddTeamMember] = useState([{ member: 0, role: '' }])\n  const [selectedMember, setSelectedMember] = useState([])\n  const [selectedValues, setSelectedValues] = useState([])\n  const [userData, setUserData] = useState([])\n  const [loadings, setLoadings] = useState(false)\n  const [memberLoader, setMemberLoader] = useState(true)\n  console.log(ViewProductData)\n  const openFileInNewTab = () => {\n    window.open(ImageUrl + ViewProductData.file, '_blank')\n  }\n  form.setFieldsValue({\n    budget: ViewProductData.budget,\n    summary: ViewProductData.summary,\n    flow: ViewProductData.flowName,\n    name: ViewProductData.name,\n    techHead:\n      ViewProductData.tech_headId !== 0 ? ViewProductData.tech_headId : 'Choose Technical Head',\n    dataHead: ViewProductData.data_headId !== 0 ? ViewProductData.data_headId : 'Choose Data Head',\n    prodHead:\n      ViewProductData.prod_headId !== 0 ? ViewProductData.prod_headId : 'Choose Product Head',\n    startDateValue: ViewProductData.startDate && dayjs(ViewProductData.startDate),\n    endDateValue: ViewProductData.endDate && dayjs(ViewProductData.endDate),\n    filesValue: ViewProductData.file,\n    currency:\n      ViewProductData.currency === 'undefined' || ViewProductData.currency === 'null'\n        ? null\n        : ViewProductData.currency,\n    category: ViewProductData.categoryID,\n  })\n\n  const prodHeadOption = prodHeadList.map((user) => ({\n    value: user.id,\n    label: (\n      <div className=\"select-options1 select-options-form\">\n        <img\n          src={user.profile_pic ? ImageUrl + user.profile_pic : profileImage1}\n          style={user.profile_pic ? { width: '20px' } : { width: '29px' }}\n          alt={user.name}\n          className=\"img-flag\"\n        />\n        <div className=\"node1\" style={user.profile_pic ? { marginLeft: '11px' } : {}}>\n          <p className=\"user-name1\" title={user.name} style={{ cursor: 'not-allowed' }}>\n            {' '}\n            {user.name}\n          </p>\n          <p className=\"role-text1\" title={user.role} style={{ cursor: 'not-allowed' }}>\n            {user.role}\n          </p>\n        </div>\n      </div>\n    ),\n  }))\n  const getMemberData = async () => {\n    const url = `member/view/` + ViewProductData.id\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        const data = response.data.data\n        const memberDetails = data.member?.map((member) => ({\n          member: member.userId,\n          role: member.role,\n        }))\n        if (viewStatus === 'OwnerEdit') {\n          setAddTeamMember(memberDetails)\n        }\n      })\n      .catch((error) => {})\n  }\n  const techHeadOption = techHeadList.map((user) => ({\n    value: user.id,\n    label: (\n      <div className=\"select-options1 select-options-form\">\n        <img\n          src={user.profile_pic ? ImageUrl + user.profile_pic : profileImage1}\n          style={user.profile_pic ? { width: '20px' } : { width: '29px' }}\n          alt={user.name}\n          className=\"img-flag\"\n        />\n        <div className=\"node1\" style={user.profile_pic ? { marginLeft: '11px' } : {}}>\n          <p className=\"user-name1\" title={user.name} style={{ cursor: 'not-allowed' }}>\n            {user.name}\n          </p>\n          <p className=\"role-text1\" title={user.role} style={{ cursor: 'not-allowed' }}>\n            {user.role}\n          </p>\n        </div>\n      </div>\n    ),\n  }))\n\n  const dataHeadOption = dataHeadList.map((user) => ({\n    value: user.id,\n    label: (\n      <div className=\"select-options1 select-options-form\">\n        <img\n          src={user.profile_pic ? ImageUrl + user.profile_pic : profileImage1}\n          style={user.profile_pic ? { width: '20px' } : { width: '29px' }}\n          alt={user.name}\n          className=\"img-flag\"\n        />\n        <div className=\"node1\" style={user.profile_pic ? { marginLeft: '11px' } : {}}>\n          <p className=\"user-name1\" title={user.name} style={{ cursor: 'not-allowed' }}>\n            {user.name}\n          </p>\n          <p className=\"role-text1\" title={user.role} style={{ cursor: 'not-allowed' }}>\n            {user.role}\n          </p>\n        </div>\n      </div>\n    ),\n  }))\n\n  const options = flowList.map((flow) => ({\n    value: flow.id,\n    label: flow.name,\n  }))\n\n  const categoryOption = categories.map((cate) => ({\n    value: cate.id,\n    label: cate.name,\n  }))\n\n  // Owner Member Add\n  const userOptions = userData.map((user) => ({\n    value: user.id,\n    label: (\n      <div className=\"select-options select-options-bg\">\n        <img\n          src={user.profile_pic ? ImageUrl + user.profile_pic : profileImage1}\n          style={user.profile_pic ? { width: '29px' } : { width: '39px' }}\n          alt={user.name}\n          className=\"img-flag\"\n        />\n        <div className=\"node1\" style={user.profile_pic ? { marginLeft: '11px' } : {}}>\n          <p className=\"user-name1\" title={user.name}>\n            {' '}\n            {user.name}\n          </p>\n          <p className=\"role-text1\">{user.role}</p>\n        </div>\n      </div>\n    ),\n  }))\n  const getUserList = async (id) => {\n    const url = `member/user/list/show/` + branch + '/' + ViewProductData.id\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        setUserData(response.data.data)\n        setMemberLoader(false)\n      })\n      .catch((error) => {})\n  }\n  useEffect(() => {\n    if (viewStatus === 'OwnerCreate' || viewStatus === 'OwnerEdit') {\n      getMemberData()\n      getUserList()\n    }\n    console.log(ViewProductData)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const addTeamMembers = () => {\n    setAddTeamMember([...addTeamMember, { member: 0, role: '' }])\n    setSelectedValues([...selectedValues, null])\n    setSelectedMember([...selectedMember, null])\n  }\n  const handleMember = (selectedOption, index) => {\n    if (selectedOption) {\n      const newValue = selectedOption\n      setSelectedMember((prevSelectedMember) => {\n        const updatedMember = [...prevSelectedMember]\n        updatedMember[index] = {\n          id: Number(newValue),\n          name: userData.find((user) => user.id === newValue)?.name || '',\n        }\n        return updatedMember\n      })\n      setAddTeamMember((prevMember) => {\n        const memberId = [...prevMember]\n        memberId[index].member = Number(newValue)\n        return memberId\n      })\n    } else {\n      // Handle the case when the selection is cleared\n      setSelectedMember((prevSelectedMember) => {\n        const updatedMember = [...prevSelectedMember]\n        updatedMember[index] = null\n        return updatedMember\n      })\n      setAddTeamMember((prevMember) => {\n        const memberId = [...prevMember]\n        memberId[index].member = null\n        return memberId\n      })\n    }\n  }\n  const handleRole = (e, index) => {\n    const newValue = e\n    setAddTeamMember((prevRole) => {\n      const updatedRole = [...prevRole]\n      updatedRole[index].role = newValue\n      return updatedRole\n    })\n  }\n  const removeMember = (index) => {\n    if (index !== 0) {\n      setAddTeamMember((prevApprovalFlows) => {\n        const updatedFlows = [...prevApprovalFlows]\n        updatedFlows.splice(index, 1)\n        return updatedFlows\n      })\n\n      setSelectedMember((prevSelectedApprovals) => {\n        const updatedApprovals = [...prevSelectedApprovals]\n        updatedApprovals.splice(index, 1)\n        return updatedApprovals\n      })\n\n      setSelectedValues((prevSelectedApprovals) => {\n        const updatedApprovals = [...prevSelectedApprovals]\n        updatedApprovals.splice(index, 1)\n        return updatedApprovals\n      })\n      setErrors((prevErrors) => {\n        const updatedErrors = { ...prevErrors }\n        updatedErrors.role.splice(index, 1)\n        updatedErrors.members.splice(index, 1)\n        return updatedErrors\n      })\n    }\n  }\n  const resetModal = () => {\n    //  setValidated(false)\n    // eventEmitter.emit('callOwnerProductList')\n    setAddTeamMember([{}])\n    setSelectedMember([])\n    close()\n  }\n  const [errors, setErrors] = useState({ role: [], members: [] })\n  const validateForm = () => {\n    const errors = {\n      role: Array.from({ length: addTeamMember.length }, () => ''),\n      members: Array.from({ length: addTeamMember.length }, () => ''),\n    }\n\n    addTeamMember.forEach((value, key) => {\n      if (value.member === 0) errors.members[key] = 'Please Select Team Member'\n      if (value.role === '') errors.role[key] = 'Please Select Role'\n    })\n    setErrors(errors)\n    const hasErrors =\n      Object.values(errors.role).some((value) => value !== '') ||\n      Object.values(errors.members).some((value) => value !== '')\n    return !hasErrors\n  }\n  const handleSubmit = async (e) => {\n    setLoadings(true)\n    e.preventDefault()\n    const isFormValid = validateForm()\n    if (isFormValid) {\n      const formData = new FormData()\n      addTeamMember.forEach((team, index) => {\n        formData.append(`members[${index}].member`, team.member)\n        formData.append(`members[${index}].role`, team.role)\n        formData.append(`members[${index}].prodId`, ViewProductData.id)\n      })\n      let url\n      let method\n      if (viewStatus === 'OwnerEdit') {\n        url = `member/update/${ViewProductData.id}`\n        method = 'put'\n      } else {\n        url = `member/create`\n        method = 'post'\n      }\n\n      try {\n        const response = await api({\n          method: method,\n          url: url,\n          data: formData,\n          headers: getHeaders('multi'),\n        })\n\n        setAddTeamMember([{ member: 0, role: 0 }])\n        toast.success(response.data.message, {\n          position: toast.POSITION.BOTTOM_RIGHT,\n          autoClose: 3000,\n        })\n        resetModal()\n        setLoadings(false)\n      } catch (error) {\n        setLoadings(false)\n        const message = error.response?.data?.message || 'An error occurred'\n        toast.error(message, {\n          position: toast.POSITION.BOTTOM_RIGHT,\n          autoClose: 3000,\n        })\n      }\n    } else {\n      setLoadings(false)\n    }\n  }\n\n  const handleClose = () => {\n    close()\n  }\n  const selectedMemberIds = addTeamMember.map((flow) => Number(flow.member))\n  const filteredOptions = userOptions.filter(\n    (option) => !selectedMemberIds.includes(Number(option.value)),\n  )\n\n  return (\n    <CRow>\n      <CCol xs={9} md={9}>\n        <div style={{ display: 'flex' }}>\n          <div style={{ display: 'flex', alignItems: 'center', width: '35px' }}>\n            <span\n              className=\"\"\n              onClick={handleClose}\n              style={{ cursor: 'pointer', marginTop: '17px', marginLeft: '10px' }}\n            >\n              <BackArrowSvg width=\"16\" height=\"15\" viewBox=\"0 0 18 18\" fill=\"#A5A1A1\" />\n            </span>\n          </div>\n          <CCol>\n            <h6 className=\"product-heading\" style={{ marginTop: '2%' }}>\n              View <span style={{ color: '#E01B38' }}>{ViewProductData.name}</span>\n            </h6>\n\n            <Breadcrumb\n              className=\"bread-tab\"\n              separator={<span className=\"breadcrumb-separator\">|</span>}\n              items={[\n                {\n                  title: (\n                    <Link\n                      rel=\"Dashboard\"\n                      to={'/dashboard'}\n                      className=\"bread-items text-decoration-none text-secondary \"\n                    >\n                      Dashboard\n                    </Link>\n                  ),\n                },\n                {\n                  title: (\n                    <span\n                      className=\"bread-items text-secondary second-subheading\"\n                      style={{ cursor: 'pointer' }}\n                      onClick={close}\n                    >\n                      {titleList}\n                    </span>\n                  ),\n                },\n                {\n                  title: (\n                    <span\n                      className=\"text-secondary second-subheading\"\n                      style={{ cursor: 'default' }}\n                    >\n                      View Product\n                    </span>\n                  ),\n                },\n              ]}\n            />\n          </CCol>\n        </div>\n        <CCol>\n          <h6 className=\"product-heading\" style={{ marginTop: '2%' }}>\n            View <span style={{ color: '#E01B38' }}>{ViewProductData.name}</span>\n          </h6>\n\n          <Breadcrumb\n            className=\"bread-tab\"\n            separator={<span className=\"breadcrumb-separator\">|</span>}\n            items={[\n              {\n                title: (\n                  <span\n                    className=\"text-secondary text-decoration-none\"\n                    style={{ cursor: 'default' }}\n                  >\n                    Dashboard\n                  </span>\n                ),\n              },\n              {\n                title: (\n                  <span\n                    className=\"bread-items text-secondary second-subheading\"\n                    style={{ cursor: 'pointer' }}\n                    onClick={close}\n                  >\n                    {titleList}\n                  </span>\n                ),\n              },\n              {\n                title: (\n                  <span className=\"text-secondary second-subheading\" style={{ cursor: 'default' }}>\n                    View Product\n                  </span>\n                ),\n              },\n            ]}\n          />\n        </CCol>\n        <div style={{ overflowY: 'auto', overflowX: 'hidden' }} className=\"scroll-form\">\n          <CRow className=\"mt-3\">\n            {viewStatus === 'OwnerCreate' || viewStatus === 'OwnerEdit' ? (\n              <CCol style={{ marginLeft: '36px' }}>\n                <Card style={{ backgroundColor: '#FAFAFA' }}>\n                  <CRow>\n                    <CCol sm={8}>\n                      <h6>Team Members</h6>\n                    </CCol>\n                    <CCol style={{ display: 'flex', justifyContent: 'end' }}>\n                      <h6\n                        className=\"text-danger\"\n                        style={{ cursor: 'pointer' }}\n                        onClick={() => addTeamMembers()}\n                      >\n                        <span style={{ marginBottom: '3px', marginRight: '5px' }}>\n                          <PlusSvg width=\"8\" height=\"12\" viewBox=\"0 0 18 18\" fill=\"#E01B38\" />\n                        </span>\n                        <span className=\"add_Team\">Add Team member</span>\n                      </h6>\n                    </CCol>\n                  </CRow>\n                  <CRow>\n                    <CCol>\n                      <CForm\n                        className=\"mt-4 needs-validation\"\n                        // validated={validated}\n                        onSubmit={handleSubmit}\n                        // ref={formRef}\n                      >\n                        {addTeamMember.map((flow, index) => {\n                          // const filteredOptions = userOptions.filter(\n                          //   (option) =>\n                          //     !addTeamMember.some(\n                          //       (t, i) =>\n                          //         i < index &&\n                          //         t.member ===\n                          //           Number(userData.find((user) => user.id === option.value)),\n                          //     ),\n                          // )\n\n                          return (\n                            <Row key={index + 1} className={index >= 1 && `mt-3`}>\n                              <Col sm={4}>\n                                <div className=\"label-field-container\">\n                                  <CFormLabel\n                                    className=\"form-label text-c\"\n                                    htmlFor={`member-${index}`}\n                                  >\n                                    Member\n                                  </CFormLabel>\n                                  <Select\n                                    className=\"  time-border-bottom border-0\"\n                                    value={\n                                      selectedMember\n                                        ? userOptions.find(\n                                            (option) => option.value === flow.member,\n                                          ) || null\n                                        : null\n                                    }\n                                    feedbackInvalid=\"Please select a Member.\"\n                                    id={`member-${index}`}\n                                    options={\n                                      memberLoader\n                                        ? [\n                                            {\n                                              label: (\n                                                <div style={{ textAlign: 'center' }}>\n                                                  {Array.from({ length: 5 }, (_, index) => (\n                                                    <Skeleton\n                                                      key={index + 1}\n                                                      title={false}\n                                                      avatar={{\n                                                        size: '20',\n                                                      }} // Adjust the width and height here\n                                                      paragraph={{\n                                                        rows: 2,\n                                                        height: '10px',\n                                                        style: { height: '10px !important' },\n                                                      }}\n                                                    />\n                                                  ))}\n                                                </div>\n                                              ),\n                                              value: 'loading',\n                                              disabled: true,\n                                            },\n                                          ]\n                                        : filteredOptions\n                                    }\n                                    suffixIcon={\n                                      <img\n                                        src={Downarrowimg}\n                                        alt=\"Downarrowimg\"\n                                        style={{ width: '10px', height: '6px' }}\n                                      />\n                                    }\n                                    // onChange={(event) => {\n                                    //   const selectedValue = event ? event : null\n                                    //   const updatedValues = [...selectedValues]\n                                    //   updatedValues[index] = Number(\n                                    //     userData.find((user) => user.id === selectedValue),\n                                    //   )\n                                    //   setSelectedValues(updatedValues)\n                                    //   handleMember(event, index)\n                                    // }}\n                                    onChange={(event) => handleMember(event, index)}\n                                    filterOption={(input, option) => {\n                                      const userNameArray =\n                                        option.label.props.children[1].props.children[0].props\n                                          .children\n                                      const userName = userNameArray[1]\n                                      const lowerCaseInput = input.toLowerCase()\n                                      const lowerCaseUserName = userName.toLowerCase()\n                                      return lowerCaseUserName.includes(lowerCaseInput)\n                                    }}\n                                    required\n                                    showSearch\n                                    placeholder=\"Choose Member\"\n                                    allowClear\n                                  />\n                                </div>\n                                <span className=\"text-danger nameflow-error\">\n                                  {errors.members[index]}\n                                </span>{' '}\n                              </Col>\n                              <Col sm={1}></Col>\n                              <Col sm={4}>\n                                <div className=\"label-field-container\">\n                                  <CFormLabel\n                                    className=\"form-label text-c\"\n                                    htmlFor={`role-${index}`}\n                                  >\n                                    Role\n                                  </CFormLabel>\n                                  <Select\n                                    id={`role-${index}`}\n                                    className=\"  time-border-bottom border-0\"\n                                    value={flow.role}\n                                    onChange={(e) => handleRole(e, index)}\n                                    placeholder=\"Choose Role\"\n                                    suffixIcon={\n                                      <img\n                                        src={Downarrowimg}\n                                        alt=\"Downarrowimg\"\n                                        style={{ width: '10px', height: '6px' }}\n                                      />\n                                    }\n                                  >\n                                    <Select.Option value=\"Team Lead\">Team Leader</Select.Option>\n                                    <Select.Option value=\"Team Member\">Team Member</Select.Option>\n                                  </Select>\n                                </div>\n                                <span className=\"text-danger nameflow-error\">\n                                  {errors.role[index]}\n                                </span>{' '}\n                              </Col>\n                              <Col sm={1}></Col>\n                              <Col sm={4} className=\"mt-4\">\n                                {index !== 0 && (\n                                  <Button\n                                    className=\"pro-delete-button\"\n                                    style={{\n                                      backgroundColor: '#FAFAFA',\n                                    }}\n                                    onClick={() => removeMember(index)}\n                                  >\n                                    <div style={{ marginRight: '15px', marginTop: ' -3px' }}>\n                                      <DeleteSvg\n                                        width=\"16\"\n                                        height=\"15\"\n                                        viewBox=\"0 0 18 18\"\n                                        fill=\"#A5A1A1\"\n                                      />\n                                    </div>\n                                    <div style={{ fontSize: '14px' }}>Delete</div>\n                                  </Button>\n                                )}\n                              </Col>\n                            </Row>\n                          )\n                        })}\n                        <Row className=\"mt-3\">\n                          <Col sm={17}></Col>\n                          <Col sm={7} className=\"d-flex\">\n                            <Button className=\"draft-btn text-c mt-2 \" onClick={resetModal}>\n                              <FileSvg width=\"16\" height=\"16 \" viewBox=\"0 0 18 18\" fill=\"none\" />{' '}\n                              &nbsp; Cancel\n                            </Button>\n                            <Button\n                              className=\"submit-button save_changes mt-2\"\n                              style={{ fontSize: '13px', color: 'white', width: '96px' }}\n                              htmlType=\"submit\"\n                              loading={loadings}\n                            >\n                              <CheckOutlined />\n                              {viewStatus === 'OwnerEdit' ? 'Update' : 'Submit'}\n                            </Button>\n                          </Col>\n                        </Row>\n                      </CForm>\n                    </CCol>\n                  </CRow>\n                </Card>\n              </CCol>\n            ) : (\n              <></>\n            )}\n            <Form\n              className=\"mt-4 needs-validation app-scroll \"\n              ref={formRef}\n              form={form}\n              initialValues={{\n                budget: ViewProductData.budget,\n                summary: ViewProductData.summary,\n                flow: ViewProductData.flow,\n                name: ViewProductData.name,\n                techHead: ViewProductData.tech_headId,\n                prodHead: ViewProductData.prod_headId,\n                dataHead: ViewProductData.data_headId,\n                startDateValue: ViewProductData.startDate && dayjs(ViewProductData.startDate),\n                endDateValue: ViewProductData.endDate && dayjs(ViewProductData.endDate),\n                filesValue: ViewProductData.file,\n                currency:\n                  ViewProductData.currency === 'undefined' || ViewProductData.currency === 'null'\n                    ? null\n                    : ViewProductData.currency,\n                category: ViewProductData.categoryID,\n              }}\n              layout=\"vertical\"\n              requiredMark={false}\n              style={{ marginLeft: '39px', width: '100%', height: '300px' }}\n            >\n              {viewStatus === 'Head' && (\n                <>\n                  <Row>\n                    <h6\n                      style={{\n                        fontWeight: '700',\n                        fontSize: '13px',\n                      }}\n                    >\n                      {branch === 'Technical'\n                        ? 'Technical'\n                        : branch === 'Product'\n                        ? 'Product'\n                        : 'Data'}{' '}\n                      Owners\n                    </h6>\n                  </Row>\n\n                  <Row gutter={16}>\n                    <Col sm={14}>\n                      <Select\n                        onClick={(e) => e.stopPropagation()}\n                        className=\"form-custom-selects access-input-box_owner\"\n                        value={\n                          branch === 'Technical'\n                            ? ownerOption.filter((option) =>\n                                ViewProductData.techOwnerName.some(\n                                  (selected) => selected === option.value,\n                                ),\n                              )\n                            : branch === 'Product'\n                            ? ownerOption.filter((option) =>\n                                ViewProductData.prodOwnerName.some(\n                                  (selected) => selected === option.value,\n                                ),\n                              )\n                            : ownerOption.filter((option) =>\n                                ViewProductData.dataOwnerName.some(\n                                  (selected) => selected === option.value,\n                                ),\n                              )\n                        }\n                        options={ownerOption}\n                        required\n                        showSearch\n                        disabled\n                        placeholder=\"Choose Owners\"\n                        allowClear\n                        mode=\"multiple\"\n                        variant={'borderless'}\n                        suffixIcon={\n                          <img\n                            src={Downarrowimg}\n                            alt=\"Downarrowimg\"\n                            style={{ width: '10px', height: '6px' }}\n                          />\n                        }\n                        labelInValue={(option) => (\n                          <div className=\"select-options select-options-approval\">\n                            <img\n                              src={\n                                option.profile_pic ? ImageUrl + option.profile_pic : profileImage1\n                              }\n                              style={\n                                option.profile_pic\n                                  ? { width: '29px', borderRadius: '14px' }\n                                  : { width: '39px' }\n                              }\n                              alt={option.value}\n                              className=\"img-flag\"\n                            />\n                            <div\n                              className=\"node1\"\n                              style={option.profile_pic ? { marginLeft: '11px' } : {}}\n                            >\n                              <p className=\"user-name1\">{option.value}</p>\n                              <p className=\"role-text1\">{option.label.role}</p>\n                            </div>\n                          </div>\n                        )}\n                      />\n                    </Col>\n                  </Row>\n                </>\n              )}\n              {viewStatus === 'Admin' && (\n                <Row>\n                  {ViewProductData.techOwnerName?.length !== 0 && (\n                    <CCol xs={12} sm={12} md={6}>\n                      <h6\n                        style={{\n                          fontWeight: '700',\n                          fontSize: '13px',\n                        }}\n                      >\n                        Technical Owners\n                      </h6>\n                      <Select\n                        style={{ width: '85%' }}\n                        onClick={(e) => e.stopPropagation()}\n                        className=\"form-custom-selects access-input-box_owner\"\n                        value={mastersTech.filter((option) =>\n                          ViewProductData.techOwnerName?.some(\n                            (selected) => selected === option.value,\n                          ),\n                        )}\n                        options={mastersTech}\n                        required\n                        showSearch\n                        disabled\n                        placeholder=\"Choose Owners\"\n                        allowClear\n                        mode=\"multiple\"\n                        variant={'borderless'}\n                        suffixIcon={\n                          <img\n                            src={Downarrowimg}\n                            alt=\"Downarrowimg\"\n                            style={{ width: '10px', height: '6px' }}\n                          />\n                        }\n                        labelInValue={(option) => (\n                          <div className=\"select-options select-options-approval\">\n                            <img\n                              src={\n                                option.profile_pic ? ImageUrl + option.profile_pic : profileImage1\n                              }\n                              style={\n                                option.profile_pic\n                                  ? { width: '29px', borderRadius: '14px' }\n                                  : { width: '39px' }\n                              }\n                              alt={option.value}\n                              className=\"img-flag\"\n                            />\n                            <div\n                              className=\"node1\"\n                              style={option.profile_pic ? { marginLeft: '11px' } : {}}\n                            >\n                              <p className=\"user-name1\">{option.value}</p>\n                              <p className=\"role-text1\">{option.label.role}</p>\n                            </div>\n                          </div>\n                        )}\n                      />\n                    </CCol>\n                  )}\n                  {ViewProductData?.prodOwnerName?.length !== 0 && (\n                    <CCol xs={12} sm={12} md={6}>\n                      <h6\n                        style={{\n                          fontWeight: '700',\n                          fontSize: '13px',\n                        }}\n                      >\n                        Product Owners\n                      </h6>\n                      <Select\n                        style={{ width: '85%' }}\n                        onClick={(e) => e.stopPropagation()}\n                        className=\"form-custom-selects access-input-box_owner\"\n                        value={mastersProd.filter((option) =>\n                          ViewProductData.prodOwnerName?.some(\n                            (selected) => selected === option.value,\n                          ),\n                        )}\n                        options={mastersProd}\n                        required\n                        showSearch\n                        disabled\n                        placeholder=\"Choose Owners\"\n                        allowClear\n                        mode=\"multiple\"\n                        variant={'borderless'}\n                        suffixIcon={\n                          <img\n                            src={Downarrowimg}\n                            alt=\"Downarrowimg\"\n                            style={{ width: '10px', height: '6px' }}\n                          />\n                        }\n                        labelInValue={(option) => (\n                          <div className=\"select-options select-options-approval\">\n                            <img\n                              src={\n                                option.profile_pic ? ImageUrl + option.profile_pic : profileImage1\n                              }\n                              style={\n                                option.profile_pic\n                                  ? { width: '29px', borderRadius: '14px' }\n                                  : { width: '39px' }\n                              }\n                              alt={option.value}\n                              className=\"img-flag\"\n                            />\n                            <div\n                              className=\"node1\"\n                              style={option.profile_pic ? { marginLeft: '11px' } : {}}\n                            >\n                              <p className=\"user-name1\">{option.value}</p>\n                              <p className=\"role-text1\">{option.label.role}</p>\n                            </div>\n                          </div>\n                        )}\n                      />\n                    </CCol>\n                  )}\n                  {ViewProductData?.dataOwnerName?.length !== 0 && (\n                    <CCol xs={12} sm={12} md={6}>\n                      <h6\n                        style={{\n                          fontWeight: '700',\n                          fontSize: '13px',\n                        }}\n                      >\n                        Data Owners\n                      </h6>\n                      <Select\n                        style={{ width: '85%' }}\n                        onClick={(e) => e.stopPropagation()}\n                        className=\"form-custom-selects access-input-box_owner\"\n                        value={mastersData.filter((option) =>\n                          ViewProductData.dataOwnerName?.some(\n                            (selected) => selected === option.value,\n                          ),\n                        )}\n                        options={mastersData}\n                        required\n                        showSearch\n                        disabled\n                        placeholder=\"Choose Owners\"\n                        allowClear\n                        mode=\"multiple\"\n                        variant={'borderless'}\n                        suffixIcon={\n                          <img\n                            src={Downarrowimg}\n                            alt=\"Downarrowimg\"\n                            style={{ width: '10px', height: '6px' }}\n                          />\n                        }\n                        labelInValue={(option) => (\n                          <div className=\"select-options select-options-approval\">\n                            <img\n                              src={\n                                option.profile_pic ? ImageUrl + option.profile_pic : profileImage1\n                              }\n                              style={\n                                option.profile_pic\n                                  ? { width: '29px', borderRadius: '14px' }\n                                  : { width: '39px' }\n                              }\n                              alt={option.value}\n                              className=\"img-flag\"\n                            />\n                            <div\n                              className=\"node1\"\n                              style={option.profile_pic ? { marginLeft: '11px' } : {}}\n                            >\n                              <p className=\"user-name1\">{option.value}</p>\n                              <p className=\"role-text1\">{option.label.role}</p>\n                            </div>\n                          </div>\n                        )}\n                      />\n                    </CCol>\n                  )}\n                </Row>\n              )}\n              <Row className={viewStatus === 'View' ? '' : 'mt-4'}>\n                <h6\n                  style={{\n                    fontWeight: '700',\n                    fontSize: '13px',\n                  }}\n                >\n                  Product Details\n                </h6>\n              </Row>\n              <CRow>\n                <CCol xs={6} sm={4} md={3} lg={3}>\n                  <Form.Item\n                    name=\"flow\"\n                    label={<span className=\"form-label\">Flow</span>}\n                    rules={[{ required: true, message: 'Please Choose Flow' }]}\n                  >\n                    <Select\n                      className=\"border-0 time-border-bottom \"\n                      placeholder=\"Choose Flow\"\n                      suffixIcon={\n                        <img\n                          src={Downarrowimg}\n                          alt=\"Downarrowimg\"\n                          style={{ width: '10px', height: '6px' }}\n                        />\n                      }\n                      options={options}\n                      disabled\n                      filterOption={(input, option) =>\n                        option.label.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                      }\n                    />\n                  </Form.Item>\n                </CCol>\n                <CCol xs={6} sm={4} md={3} lg={3}>\n                  <Form.Item\n                    name=\"name\"\n                    label={<span className=\"form-label\">Product Name</span>}\n                    rules={[{ required: true, message: 'Please Enter Product Name' }]}\n                  >\n                    <Input\n                      variant={'borderless'}\n                      className=\"border-0 time-border-bottom px-0\"\n                      placeholder=\"Enter Product Name\"\n                      readOnly\n                      style={{ cursor: 'not-allowed' }}\n                    />\n                  </Form.Item>\n                </CCol>\n                <CCol xs={6} sm={4} md={3} lg={3}>\n                  <Form.Item\n                    name=\"prodHead\"\n                    label={<span className=\"form-label\">Product Head</span>}\n                  >\n                    <Select\n                      className=\"border-0 time-border-bottom\"\n                      placeholder=\"Choose Product Head\"\n                      suffixIcon={\n                        <img\n                          src={Downarrowimg}\n                          alt=\"Downarrowimg\"\n                          style={{ width: '10px', height: '6px' }}\n                        />\n                      }\n                      options={prodHeadOption}\n                      filterOption={(input, option) => {\n                        const userName =\n                          option.label.props.children[1].props.children[0].props.children[1] // Adjust this according to the actual structure\n                        return userName.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                      }}\n                      disabled\n                    />\n                  </Form.Item>\n                </CCol>\n                <CCol xs={6} sm={4} md={3} lg={3}>\n                  <Form.Item\n                    name=\"techHead\"\n                    label={<span className=\"form-label\">Technical Head</span>}\n                  >\n                    <Select\n                      className=\"border-0 time-border-bottom\"\n                      placeholder=\"Choose Technical Head\"\n                      suffixIcon={\n                        <img\n                          src={Downarrowimg}\n                          alt=\"Downarrowimg\"\n                          style={{ width: '10px', height: '6px' }}\n                        />\n                      }\n                      options={techHeadOption}\n                      filterOption={(input, option) => {\n                        const userName =\n                          option.label.props.children[1].props.children[0].props.children[1] // Adjust this according to the actual structure\n                        return userName.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                      }}\n                      disabled\n                    />\n                  </Form.Item>\n                </CCol>\n                <CCol xs={6} sm={4} md={3} lg={3}>\n                  <Form.Item name=\"dataHead\" label={<span className=\"form-label\">Data Head</span>}>\n                    <Select\n                      className=\"border-0 time-border-bottom\"\n                      placeholder=\"Choose Data Head\"\n                      suffixIcon={\n                        <img\n                          src={Downarrowimg}\n                          alt=\"Downarrowimg\"\n                          style={{ width: '10px', height: '6px' }}\n                        />\n                      }\n                      options={dataHeadOption}\n                      filterOption={(input, option) => {\n                        const userName =\n                          option.label.props.children[1].props.children[0].props.children[1] // Adjust this according to the actual structure\n                        return userName.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                      }}\n                      disabled\n                    />\n                  </Form.Item>\n                </CCol>\n                <CCol xs={6} sm={4} md={3} lg={3}>\n                  <Form.Item\n                    name=\"category\"\n                    label={<span className=\"form-label\">Business Category</span>}\n                    rules={[{ required: true, message: 'Please Choose Category' }]}\n                  >\n                    <Select\n                      className=\"border-0 time-border-bottom\"\n                      placeholder=\"Choose Category\"\n                      suffixIcon={\n                        <img\n                          src={Downarrowimg}\n                          alt=\"Downarrowimg\"\n                          style={{ width: '10px', height: '6px' }}\n                        />\n                      }\n                      options={categoryOption}\n                      filterOption={(input, option) =>\n                        option.label.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                      }\n                      disabled\n                    />\n                  </Form.Item>\n                </CCol>\n\n                {/* <Row gutter={16} style={{ marginTop: '10px' }} className=\" start-date-prd\"> */}\n                <CCol xs={6} sm={4} md={3} lg={3}>\n                  <Form.Item\n                    name=\"startDateValue\"\n                    label={<span className=\"form-label\">Start Date</span>}\n                    rules={[{ required: true, message: 'Please Select Start Date' }]}\n                  >\n                    <DatePicker\n                      className=\"border-0 time-border-bottom\"\n                      style={{ paddingLeft: '0px', marginTop: '10px' }}\n                      placeholder=\"Choose Date\"\n                      suffixIcon={\n                        <Calendar width=\"15\" height=\"14\" viewBox=\"0 0 15 14\" fill=\"white\" />\n                      }\n                      disabled\n                      format=\"DD MMM,YYYY\"\n                    />\n                  </Form.Item>\n                </CCol>\n                <CCol xs={6} sm={4} md={3} lg={3}>\n                  <Form.Item\n                    name=\"endDateValue\"\n                    label={<span className=\"form-label\">End Date</span>}\n                    // rules={[{ required: true, message: 'Please Choose End Date' }]}\n                  >\n                    <DatePicker\n                      className=\"border-0 time-border-bottom\"\n                      style={{ paddingLeft: '0px', marginTop: '10px' }}\n                      placeholder=\"Choose Date\"\n                      suffixIcon={\n                        <Calendar width=\"15\" height=\"14\" viewBox=\"0 0 15 14\" fill=\"white\" />\n                      }\n                      disabled\n                      format=\"DD MMM,YYYY\"\n                    />\n                  </Form.Item>\n                </CCol>\n                <CCol xs={6} sm={6} md={5} lg={3}>\n                  <Form.Item\n                    name=\"summary\"\n                    label={<span className=\"form-label\">Product Summary</span>}\n                    // rules={[{ required: true, message: 'Please Enter Summary' }]}\n                  >\n                    <Input.TextArea\n                      className=\"border-0 time-border-bottom  px-0\"\n                      placeholder=\"Enter Summary\"\n                      id=\"summary\"\n                      style={{ color: 'black', marginTop: '10px', background: '#fff' }} // Adjust '100px' to your desired minimum height\n                      autoSize={{\n                        minRows: 0,\n                        maxRows: 1,\n                      }}\n                      disabled\n                    />\n                  </Form.Item>\n                </CCol>\n                <CCol xs={6} sm={4} md={3} lg={3}>\n                  <Form.Item\n                    name=\"filesValue\"\n                    label={\n                      <div style={{ width: '220px' }}>\n                        <span className=\"form-label\">File</span>\n                        <button\n                          onClick={openFileInNewTab}\n                          type=\"button\"\n                          className=\"border-0 bg-none\"\n                          style={{\n                            cursor: 'pointer',\n                            background: 'none',\n                            float: 'inline-end',\n                          }}\n                          disabled={ViewProductData.file === null}\n                        >\n                          <img src={eyeIcon} alt=\"eye\" width={12} />\n                        </button>\n                      </div>\n                    }\n                  >\n                    <div className=\"input-group custom-input-group custom_input_group\">\n                      <input\n                        type=\"text\"\n                        value={ViewProductData.file ? ViewProductData.file : ''}\n                        readOnly\n                        name=\"fieldName\"\n                        className=\"form-control border-0\"\n                        aria-label=\"Upload File\"\n                        aria-describedby=\"basic-addon1\"\n                        style={{\n                          fontSize: '13px',\n                          fontWeight: '500',\n                          height: '10px',\n                          cursor: 'not-allowed',\n                        }}\n                      />\n                    </div>\n                  </Form.Item>\n                </CCol>\n              </CRow>\n              <CRow>\n                <h6\n                  style={{ fontWeight: '700', fontSize: '13px', marginTop: '10px' }}\n                  className=\"bud-details\"\n                >\n                  Budget Details\n                </h6>\n              </CRow>\n              <CRow style={{ marginTop: '10px' }}>\n                <CCol xs={12} sm={4}>\n                  <Form.Item\n                    name=\"budget\"\n                    label={<span className=\"form-label\">Product Budget</span>}\n                    // rules={[{ required: true, message: 'Please Enter Budget' }]}\n                  >\n                    <Input\n                      className=\"border-0 time-border-bottom px-0\"\n                      placeholder=\"Enter Budget\"\n                      id=\"budget\"\n                      disabled\n                      style={{\n                        color: 'black',\n                        cursor: 'not-allowed',\n                        background: '#fff',\n                      }}\n                    />\n                  </Form.Item>\n                </CCol>\n                <CCol xs={12} sm={4}>\n                  <Form.Item\n                    name=\"currency\"\n                    label={<span className=\"form-label\">Currency</span>}\n                    rules={[{ required: false, message: 'Please Choose Currency' }]}\n                  >\n                    <Select\n                      className=\"border-0 time-border-bottom \"\n                      placeholder=\"Choose Currency\"\n                      disabled\n                      suffixIcon={\n                        <img\n                          src={Downarrowimg}\n                          alt=\"Downarrowimg\"\n                          style={{ width: '10px', height: '6px' }}\n                        />\n                      }\n                    >\n                      <Select.Option value=\"USD\">USD</Select.Option>\n                      <Select.Option value=\"INR\">INR</Select.Option>\n                    </Select>\n                  </Form.Item>\n                </CCol>\n              </CRow>\n            </Form>\n          </CRow>\n        </div>\n      </CCol>\n      <CCol xs={3} md={3} className=\"approvalflow-rightside\">\n        <div style={{ marginLeft: '14px' }}>\n          <Row style={{ marginTop: '31%' }}>\n            <h6 style={{ fontWeight: '700', fontSize: '13px' }}>Approval Flow</h6>\n          </Row>\n          <div style={{ maxHeight: '290px', overflowY: 'auto' }}>\n            {ViewProductData.approvalFlow &&\n              ViewProductData.approvalFlow.map((approver, approverIndex) => (\n                <React.Fragment key={approverIndex}>\n                  <Row className=\"align-items-center mt-2\">\n                    <div className=\"col-md-5\">\n                      <img\n                        alt=\"stages\"\n                        style={{ width: '12px' }}\n                        className=\"content-img appr_img\"\n                        src={\n                          approver.approStatus === 'Pending'\n                            ? stage1\n                            : approver.approStatus === 'Approved'\n                            ? stage2\n                            : approver.approStatus === 'Rejected'\n                            ? stage3\n                            : stage\n                        }\n                      />\n                      <span\n                        style={{ marginLeft: '10%', fontSize: '11px', fontWeight: '600' }}\n                        className=\"flow1_lable\"\n                      >\n                        Flow {approverIndex + 1}\n                      </span>\n                    </div>\n                  </Row>\n\n                  <Row className=\"align-items-center\" style={{ marginTop: '12px' }}>\n                    <div className=\"col-sm-1 col-xs-1\">\n                      <div className=\"vertical-line\"></div>\n                    </div>\n                  </Row>\n\n                  {/* Profile details */}\n                  <CRow className=\"align-items-center\">\n                    <div className=\"col-sm-1 col-xs-1\"></div>\n                    <div className=\"col-sm-2 col-md-1 col-xs-2\" style={{ marginleft: '12px' }}>\n                      <img\n                        alt=\"profile-pic\"\n                        className=\"head-td-flow approval_flow_img\"\n                        src={approver.profile_pic ? ImageUrl + approver.profile_pic : profileImage1}\n                      />\n                    </div>\n                    <div className=\"col-md-6 name_role name_role_view\" style={{ marginTop: '6px' }}>\n                      <p\n                        className=\"head-td-name\"\n                        title={approver.name}\n                        style={{ cursor: 'default' }}\n                      >\n                        {approver.name}\n                      </p>\n                      <p\n                        className=\"head-td-role\"\n                        title={approver.role}\n                        style={{ cursor: 'default' }}\n                      >\n                        {approver.role}\n                      </p>\n                    </div>\n                  </CRow>\n                </React.Fragment>\n              ))}\n          </div>\n        </div>\n      </CCol>\n    </CRow>\n  )\n}\nViewProduct.propTypes = {\n  flowList: PropTypes.array.isRequired,\n  close: PropTypes.func,\n  categories: PropTypes.array,\n  techHeadList: PropTypes.array,\n  prodHeadList: PropTypes.array,\n  dataHeadList: PropTypes.array,\n  ViewProductData: PropTypes.object,\n  viewStatus: PropTypes.string,\n  ownerOption: PropTypes.array,\n  titleList: PropTypes.string,\n  mastersProd: PropTypes.array,\n  mastersTech: PropTypes.array,\n  mastersData: PropTypes.array,\n}\nexport default ViewProduct\n","import React, { useState, useRef } from 'react'\nimport { Breadcrumb, Select, Input, Button, Form, DatePicker } from 'antd'\nimport { CCol, CRow } from '@coreui/react'\nimport PropTypes from 'prop-types'\nimport { ImageUrl, getDecodeData, getHeaders } from '../../../constant/Global'\nimport { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport profileImage1 from '../../../assets/images/avatars/man1.png'\nimport BackArrowSvg from 'src/views/svgImages/BackArrowSvg'\nimport Calendar from '../../svgImages/Calendar'\nimport dayjs from 'dayjs'\nimport useAxios from 'src/constant/UseAxios'\nimport Downarrowimg from '../../../assets/images/downarrow.png'\nimport { Link } from 'react-router-dom'\nconst AddProduct = ({\n  flow,\n  flowList,\n  close,\n  techHeadList,\n  prodHeadList,\n  dataHeadList,\n  categories,\n  titleList,\n  techOwnerList,\n  prodOwnerList,\n  dataOwnerList,\n}) => {\n  let api = useAxios()\n  const user = getDecodeData()\n  const userId = user?.id\n  const branch = user?.branch\n  const designation = user?.designation\n  const formRef = useRef(null)\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [status, setStatus] = useState('')\n  const [startDate, setStartDate] = useState()\n  const [endDate, setEndDate] = useState()\n  const fileInputRef = useRef(null)\n  const [form] = Form.useForm()\n  const [loadingState, setLoadings] = useState(false)\n  const selectRef = useRef(null)\n  const [error, setError] = useState('')\n  const handleDropdownVisibleChange = (visible) => {\n    if (!visible && selectRef.current) {\n      selectRef.current.blur()\n    }\n  }\n  const handleBrowseClick = () => {\n    fileInputRef.current.click()\n  }\n  if (!designation.includes('Internal Admin')) {\n    if (branch === 'Technical')\n      form.setFieldsValue({\n        techHeadValue: userId,\n      })\n    if (branch === 'Product')\n      form.setFieldsValue({\n        prodHeadValue: userId,\n      })\n    if (branch === 'Data')\n      form.setFieldsValue({\n        dataHeadValue: userId,\n      })\n  }\n  if (flow !== null)\n    form.setFieldsValue({\n      flow: flow,\n    })\n\n  const handleFileChange = (event) => {\n    const file = event.target.files[0]\n    setSelectedFile(file)\n  }\n\n  const prodHeadOption = prodHeadList.map((user) => ({\n    value: user.id,\n    label: (\n      <div className=\"select-options1 select-options-form\">\n        <img\n          src={user.profile_pic ? ImageUrl + user.profile_pic : profileImage1}\n          style={user.profile_pic ? { width: '20px' } : { width: '29px' }}\n          alt={user.name}\n          className=\"img-flag\"\n        />\n        <div className=\"node1\" style={user.profile_pic ? { marginLeft: '11px' } : {}}>\n          <p className=\"user-name1\" title={user.name}>\n            {' '}\n            {user.name}\n          </p>\n          <p className=\"role-text1\" title={user.role}>\n            {user.role}\n          </p>\n        </div>\n      </div>\n    ),\n  }))\n\n  const techHeadOption = techHeadList.map((user) => ({\n    value: user.id,\n    label: (\n      <div className=\"select-options1 select-options-form\">\n        <img\n          src={user.profile_pic ? ImageUrl + user.profile_pic : profileImage1}\n          style={user.profile_pic ? { width: '20px' } : { width: '29px' }}\n          alt={user.name}\n          className=\"img-flag\"\n        />\n        <div className=\"node1\" style={user.profile_pic ? { marginLeft: '11px' } : {}}>\n          <p className=\"user-name1\" title={user.name}>\n            {user.name}\n          </p>\n          <p className=\"role-text1\" title={user.role}>\n            {user.role}\n          </p>\n        </div>\n      </div>\n    ),\n  }))\n\n  const dataHeadOption = dataHeadList.map((user) => ({\n    value: user.id,\n    label: (\n      <div className=\"select-options1 select-options-form\">\n        <img\n          src={user.profile_pic ? ImageUrl + user.profile_pic : profileImage1}\n          style={user.profile_pic ? { width: '20px' } : { width: '29px' }}\n          alt={user.name}\n          className=\"img-flag\"\n        />\n        <div className=\"node1\" style={user.profile_pic ? { marginLeft: '11px' } : {}}>\n          <p className=\"user-name1\" title={user.name}>\n            {user.name}\n          </p>\n          <p className=\"role-text1\" title={user.role}>\n            {user.role}\n          </p>\n        </div>\n      </div>\n    ),\n  }))\n\n  const options = flowList.map((flow) => ({\n    value: flow.id,\n    label: flow.name,\n  }))\n\n  const categoryOption = categories.map((cate) => ({\n    value: cate.id,\n    label: cate.name,\n  }))\n\n  const handleSubmit = async (values) => {\n    if (selectedFile) {\n      const validFormats = ['.png', '.jpeg', '.jpg', '.pdf', '.docx']\n      const fileExtension = selectedFile.name.split('.').pop()\n\n      if (!validFormats.includes('.' + fileExtension.toLowerCase())) {\n        setError('Please select a valid file (.png, .jpeg, .jpg, .pdf, .docx).')\n        return\n      }\n    }\n    setLoadings(true)\n    const formData = new FormData()\n    formData.append('option', status)\n    Object.keys(values).forEach((key) => {\n      if (key === 'endDateValue') {\n        if (endDate === undefined) {\n          formData.append('endDate', '')\n        } else {\n          formData.append('endDate', endDate)\n        }\n      }\n      if (key === 'startDateValue') {\n        formData.append('startDate', startDate)\n      }\n      if (key === 'prodHeadValue') {\n        if (values[key] === undefined) {\n          formData.append('prodHead', 0)\n        } else {\n          formData.append('prodHead', values[key])\n        }\n      }\n      if (key === 'techHeadValue') {\n        if (values[key] === undefined) {\n          formData.append('techHead', 0)\n        } else {\n          formData.append('techHead', values[key])\n        }\n      }\n      if (key === 'dataHeadValue') {\n        if (values[key] === undefined) {\n          formData.append('dataHead', 0)\n        } else {\n          formData.append('dataHead', values[key])\n        }\n      }\n      if (key === 'techOwnerName') {\n        if (values[key] === undefined) {\n          formData.append('techOwner', [])\n        } else {\n          formData.append('techOwner', values[key])\n        }\n      }\n      if (key === 'prodOwnerName') {\n        if (values[key] === undefined) {\n          formData.append('prodOwner', [])\n        } else {\n          formData.append('prodOwner', values[key])\n        }\n      }\n      if (key === 'dataOwnerName') {\n        if (values[key] === undefined) {\n          formData.append('dataOwner', [])\n        } else {\n          formData.append('dataOwner', values[key])\n        }\n      }\n      if (key === 'filesValue') formData.append('files', selectedFile)\n      else formData.append(key, values[key])\n    })\n    let url\n    if (designation.includes('Internal Admin')) {\n      url = 'product/create?key=Admin'\n    } else {\n      url = 'product/create'\n    }\n    await api\n      .post(url, formData, {\n        headers: getHeaders('multi'),\n      })\n      .then((response) => {\n        if (response.status === 208) {\n          toast.error(response.data.message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n            autoClose: 3000,\n          })\n        } else {\n          toast.success(response.data.message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n            autoClose: 3000,\n          })\n          resetComponent()\n        }\n        setLoadings(false)\n      })\n      .catch((error) => {\n        toast.error(error, {\n          position: toast.POSITION.BOTTOM_RIGHT,\n          autoClose: 3000,\n        })\n        setLoadings(false)\n      })\n  }\n\n  const handleStartDateChange = (date, dateString) => {\n    if (date) {\n      const parsedDate = dayjs(date, 'DD MMM, YYYY')\n      const formattedDate = parsedDate.format('YYYY-MM-DD')\n      setStartDate(formattedDate)\n      setEndDate()\n      form.setFieldsValue({ endDateValue: undefined })\n    }\n  }\n\n  const handleEndDateChange = (date, dateString) => {\n    if (date) {\n      const parsedDate = dayjs(date, 'DD MMM, YYYY')\n      const formattedDate = parsedDate.format('YYYY-MM-DD')\n      setEndDate(formattedDate)\n    }\n  }\n\n  const disabledDate = (current) => {\n    return current && current < dayjs().startOf('day')\n  }\n\n  const disabledEndDate = (current) => {\n    if (!startDate) {\n      return current && current < dayjs().startOf('day')\n    }\n    return current && current < dayjs(startDate).startOf('day')\n  }\n\n  const resetComponent = () => {\n    setStatus('')\n    setSelectedFile(null)\n    form.resetFields()\n    close()\n  }\n\n  const techOwnerOptions = techOwnerList?.map((user) => ({\n    value: user.id,\n    label: (\n      <div className=\"select-options select-options-bg\">\n        <img\n          src={user.profile_pic ? ImageUrl + user.profile_pic : profileImage1}\n          style={user.profile_pic ? { width: '29px', borderRadius: '14px' } : { width: '39px' }}\n          alt={user.name}\n          className=\"img-flag\"\n        />\n        <div className=\"node1\" style={user.profile_pic ? { marginLeft: '11px' } : {}}>\n          <p className=\"user-name1\" title={user.name}>\n            {user.name}\n          </p>\n          <p className=\"role-text1\">{user.role}</p>\n        </div>\n      </div>\n    ),\n  }))\n\n  const prodOwnerOptions = prodOwnerList?.map((user) => ({\n    value: user.id,\n    label: (\n      <div className=\"select-options select-options-bg\">\n        <img\n          src={user.profile_pic ? ImageUrl + user.profile_pic : profileImage1}\n          style={user.profile_pic ? { width: '29px', borderRadius: '14px' } : { width: '39px' }}\n          alt={user.name}\n          className=\"img-flag\"\n        />\n        <div className=\"node1\" style={user.profile_pic ? { marginLeft: '11px' } : {}}>\n          <p className=\"user-name1\" title={user.name}>\n            {user.name}\n          </p>\n          <p className=\"role-text1\">{user.role}</p>\n        </div>\n      </div>\n    ),\n  }))\n\n  const dataOwnerOptions = dataOwnerList?.map((user) => ({\n    value: user.id,\n    label: (\n      <div className=\"select-options select-options-bg\">\n        <img\n          src={user.profile_pic ? ImageUrl + user.profile_pic : profileImage1}\n          style={user.profile_pic ? { width: '29px', borderRadius: '14px' } : { width: '39px' }}\n          alt={user.name}\n          className=\"img-flag\"\n        />\n        <div className=\"node1\" style={user.profile_pic ? { marginLeft: '11px' } : {}}>\n          <p className=\"user-name1\" title={user.name}>\n            {user.name}\n          </p>\n          <p className=\"role-text1\">{user.role}</p>\n        </div>\n      </div>\n    ),\n  }))\n\n  return (\n    <div style={{ display: 'flex' }}>\n      <CRow>\n        <div\n          style={{ marginTop: '35px' }}\n          className=\"back_arrow_create\"\n          // style={{width: '35px' }}\n        >\n          <span\n            className=\"\"\n            onClick={resetComponent}\n            style={{ cursor: 'pointer', marginTop: '17px', marginLeft: '10px' }}\n          >\n            <BackArrowSvg width=\"16\" height=\"15\" viewBox=\"0 0 18 18\" fill=\"#A5A1A1\" />\n          </span>\n        </div>\n      </CRow>\n      <CRow>\n        <div style={{ marginLeft: '9px' }}>\n          <CCol>\n            <div>\n              <h6 className=\"product-heading\" style={{ marginTop: '2%' }}>\n                Create Product\n              </h6>\n            </div>\n\n            <Breadcrumb\n              // style={{ marginLeft: '19px' }}\n              className=\"bread-tab\"\n              separator={<span className=\"breadcrumb-separator\">|</span>}\n              items={[\n                {\n                  title: (\n                    <Link\n                      rel=\"Dashboard\"\n                      to={'/dashboard'}\n                      className=\"bread-items text-decoration-none text-secondary \"\n                    >\n                      Dashboard\n                    </Link>\n                  ),\n                },\n                {\n                  title: (\n                    <button\n                      className=\"bg-none border-0 bread-items text-secondary second-subheading\"\n                      style={{ cursor: 'pointer', backgroundColor: 'transparent' }}\n                      onClick={close}\n                    >\n                      {titleList}\n                    </button>\n                  ),\n                },\n                {\n                  title: (\n                    <span\n                      className=\"text-secondary second-subheading\"\n                      style={{ cursor: 'default' }}\n                    >\n                      Create Product\n                    </span>\n                  ),\n                },\n              ]}\n            />\n          </CCol>\n\n          {/* <CRow> */}\n\n          <Form\n            className=\"mt-4 needs-validation create_product_list\"\n            ref={formRef}\n            form={form}\n            initialValues={{ budget: '', summary: '', currency: null }}\n            layout=\"vertical\"\n            onFinish={handleSubmit}\n            encType=\"multipart/form-data\"\n            requiredMark={false}\n            validateTrigger=\"onSubmit\"\n            style={{ width: '95%' }}\n          >\n            <div className=\"product-pend\">\n              <div\n                style={{\n                  height: !designation.includes('Internal Admin') ? '400px' : '500px',\n                  overflowY: 'auto',\n                }}\n              >\n                <CRow>\n                  <h6 style={{ fontWeight: '700', fontSize: '13px' }}>Product Details</h6>\n                </CRow>\n                <CRow sx={12}>\n                  <CCol xs={4} sm={3} md={3} lg={2}>\n                    <Form.Item\n                      name=\"flow\"\n                      label={\n                        <span className=\"form-label\">\n                          Flow <span className=\"red-text1\">*</span>\n                        </span>\n                      }\n                      rules={[{ required: true, message: 'Please Choose Flow' }]}\n                    >\n                      <Select\n                        ref={selectRef}\n                        className=\"border-0 time-border-bottom\"\n                        placeholder=\"Choose Flow\"\n                        suffixIcon={\n                          <img\n                            src={Downarrowimg}\n                            alt=\"Downarrowimg\"\n                            style={{ width: '10px', height: '6px' }}\n                          />\n                        }\n                        options={options}\n                        filterOption={(input, option) =>\n                          option.label.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                        }\n                        showSearch\n                        onDropdownVisibleChange={handleDropdownVisibleChange}\n                      />\n                    </Form.Item>\n                  </CCol>\n                  <CCol xs={4} sm={3} md={3} lg={2}>\n                    <Form.Item\n                      name=\"name\"\n                      label={\n                        <span className=\"form-label\">\n                          Product Name <span className=\"red-text1\">*</span>\n                        </span>\n                      }\n                      rules={[\n                        { required: true, message: 'Please Enter Product Name' },\n                        {\n                          pattern:\n                            /^(?!.*\\s$)(?!^\\s)(?!.*\\s{2,})(?!.*\\(\\))(?!^\\(\\))[a-zA-Z0-9\\s.()-]+$/,\n                          message: 'Invalid input',\n                        },\n                      ]}\n                      validateTrigger={['onChange', 'onSubmit']}\n                    >\n                      <Input\n                        variant={'borderless'}\n                        style={{ marginTop: '9px' }}\n                        maxLength={48}\n                        className=\"border-0 time-border-bottom px-0\"\n                        placeholder=\"Enter Product Name\"\n                      />\n                    </Form.Item>\n                  </CCol>\n                  <CCol xs={4} sm={3} md={3} lg={2}>\n                    <Form.Item\n                      name=\"prodHeadValue\"\n                      label={<span className=\"form-label\">Product Head </span>}\n                      rules={[\n                        {\n                          required: true,\n                          message: 'Please Choose Product Head',\n                          validator: async (_, value) => {\n                            const prodHead = form.getFieldValue('techHeadValue')\n                            const dataHead = form.getFieldValue('dataHeadValue')\n                            if (!prodHead && !value && !dataHead) {\n                              throw new Error('Please Choose Product Head')\n                            }\n                          },\n                        },\n                      ]}\n                    >\n                      <Select\n                        ref={selectRef}\n                        className=\"border-0 time-border-bottom product_head_select\"\n                        placeholder=\"Choose Product Head\"\n                        suffixIcon={\n                          <img\n                            src={Downarrowimg}\n                            alt=\"Downarrowimg\"\n                            style={{ width: '10px', height: '6px' }}\n                          />\n                        }\n                        options={prodHeadOption}\n                        disabled={prodHeadOption.find((option) => option.value === userId)}\n                        filterOption={(input, option) => {\n                          const userName =\n                            option.label.props.children[1].props.children[0].props.children[1] // Adjust this according to the actual structure\n                          return userName.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                        }}\n                        onDropdownVisibleChange={handleDropdownVisibleChange}\n                        allowClear\n                        showSearch\n                      />\n                    </Form.Item>\n                  </CCol>\n                  <CCol xs={4} sm={3} md={3} lg={2}>\n                    <Form.Item\n                      name=\"techHeadValue\"\n                      label={<span className=\"form-label\">Technical Head</span>}\n                      rules={[\n                        {\n                          required: true,\n                          message: 'Please Choose Technical Head',\n                          validator: async (_, value) => {\n                            const prodHead = form.getFieldValue('prodHeadValue')\n                            const dataHead = form.getFieldValue('dataHeadValue')\n                            if (!prodHead && !value && !dataHead) {\n                              throw new Error('Please Choose Technical Head')\n                            }\n                          },\n                        },\n                      ]}\n                    >\n                      <Select\n                        ref={selectRef}\n                        className=\"border-0 time-border-bottom\"\n                        placeholder=\"Choose Technical Head\"\n                        suffixIcon={\n                          <img\n                            src={Downarrowimg}\n                            alt=\"Downarrowimg\"\n                            style={{ width: '10px', height: '6px' }}\n                          />\n                        }\n                        options={techHeadOption}\n                        disabled={techHeadOption.some((option) => option.value === userId)}\n                        filterOption={(input, option) => {\n                          const userName =\n                            option.label.props.children[1].props.children[0].props.children[1] // Adjust this according to the actual structure\n                          return userName.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                        }}\n                        onDropdownVisibleChange={handleDropdownVisibleChange}\n                        allowClear\n                        showSearch\n                      />\n                    </Form.Item>\n                  </CCol>\n                  <CCol xs={4} sm={3} md={3} lg={2}>\n                    <Form.Item\n                      name=\"dataHeadValue\"\n                      label={<span className=\"form-label\">Data Head</span>}\n                      rules={[\n                        {\n                          required: true,\n                          message: 'Please Choose Data Head',\n                          validator: async (_, value) => {\n                            const prodHead = form.getFieldValue('prodHeadValue')\n                            const techHead = form.getFieldValue('techHeadValue')\n                            if (!prodHead && !value && !techHead) {\n                              throw new Error('Please Choose Data Head')\n                            }\n                          },\n                        },\n                      ]}\n                    >\n                      <Select\n                        ref={selectRef}\n                        className=\"border-0 time-border-bottom\"\n                        placeholder=\"Choose Data Head\"\n                        suffixIcon={\n                          <img\n                            src={Downarrowimg}\n                            alt=\"Downarrowimg\"\n                            style={{ width: '10px', height: '6px' }}\n                          />\n                        }\n                        options={dataHeadOption}\n                        disabled={dataHeadOption.some((option) => option.value === userId)}\n                        filterOption={(input, option) => {\n                          const userName =\n                            option.label.props.children[1].props.children[0].props.children[1] // Adjust this according to the actual structure\n                          return userName.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                        }}\n                        onDropdownVisibleChange={handleDropdownVisibleChange}\n                        allowClear\n                        showSearch\n                      />\n                    </Form.Item>\n                  </CCol>\n                  <CCol xs={4} sm={3} md={3} lg={2}>\n                    <Form.Item\n                      name=\"category\"\n                      label={\n                        <span className=\"form-label\">\n                          Business Category <span className=\"red-text1\">*</span>\n                        </span>\n                      }\n                      rules={[{ required: true, message: 'Please Choose Category' }]}\n                    >\n                      <Select\n                        ref={selectRef}\n                        className=\"border-0 time-border-bottom\"\n                        placeholder=\"Choose Category\"\n                        suffixIcon={\n                          <img\n                            src={Downarrowimg}\n                            alt=\"Downarrowimg\"\n                            style={{ width: '10px', height: '6px' }}\n                          />\n                        }\n                        options={categoryOption}\n                        allowClear\n                        showSearch\n                        onDropdownVisibleChange={handleDropdownVisibleChange}\n                        filterOption={(input, option) =>\n                          option.label.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                        }\n                      />\n                    </Form.Item>\n                  </CCol>\n                  <CCol xs={4} sm={3} md={3} lg={2}>\n                    <Form.Item\n                      name=\"startDateValue\"\n                      label={\n                        <span className=\"form-label\">\n                          Start Date <span className=\"red-text1\">*</span>\n                        </span>\n                      }\n                      rules={[{ required: true, message: 'Please Select Start Date' }]}\n                    >\n                      <DatePicker\n                        variant={'borderless'}\n                        className=\"border-0 time-border-bottom\"\n                        style={{ paddingLeft: '0px', marginTop: '9px' }}\n                        placeholder=\"Choose Date\"\n                        allowClear\n                        suffixIcon={\n                          <Calendar width=\"15\" height=\"14\" viewBox=\"0 0 15 14\" fill=\"white\" />\n                        }\n                        disabledDate={disabledDate}\n                        onChange={handleStartDateChange}\n                        format=\"DD MMM,YYYY\"\n                      />\n                    </Form.Item>\n                  </CCol>\n\n                  <CCol xs={4} sm={3} md={3} lg={2}>\n                    <Form.Item\n                      name=\"endDateValue\"\n                      label={<span className=\"form-label\">End Date</span>}\n                      // rules={[{ required: true, message: 'Please Choose End Date' }]}\n                    >\n                      <DatePicker\n                        variant={'borderless'}\n                        className=\"border-0 time-border-bottom\"\n                        style={{ paddingLeft: '0px', marginTop: '10px' }}\n                        placeholder=\"Choose Date\"\n                        allowClear\n                        suffixIcon={\n                          <Calendar width=\"15\" height=\"14\" viewBox=\"0 0 15 14\" fill=\"white\" />\n                        }\n                        onChange={handleEndDateChange}\n                        disabledDate={disabledEndDate}\n                        format=\"DD MMM,YYYY\"\n                      />\n                    </Form.Item>\n                  </CCol>\n                  <CCol xs={4} sm={4} md={3} lg={2}>\n                    <Form.Item\n                      name=\"summary\"\n                      label={<span className=\"form-label\">Product Summary</span>}\n                      rules={[{ required: false, message: 'Please Enter Summary' }]}\n                    >\n                      <Input.TextArea\n                        className=\"border-0 time-border-bottom px-0\"\n                        placeholder=\"Enter Summary\"\n                        id=\"summary\"\n                        variant={'borderless'}\n                        style={{ color: 'black', marginTop: '10px' }} // Adjust '100px' to your desired minimum height\n                        autoSize={{\n                          minRows: 0,\n                          maxRows: 1,\n                        }}\n                      />\n                    </Form.Item>\n                  </CCol>\n                  <CCol xs={4} sm={3} md={3} lg={2}>\n                    <Form.Item name=\"filesValue\" label={<span className=\"form-label\">File</span>}>\n                      <div\n                        className=\"input-group custom-input-group custom_input_group\"\n                        style={{\n                          marginTop: '-9px',\n                        }}\n                      >\n                        <input\n                          type=\"text\"\n                          value={selectedFile ? selectedFile.name : ''}\n                          readOnly\n                          name=\"fieldName\"\n                          className=\"form-control input_border\"\n                          aria-label=\"Upload File\"\n                          aria-describedby=\"basic-addon1\"\n                          style={{\n                            fontSize: '13px',\n                            fontWeight: '500',\n                            height: '20px',\n                          }}\n                        />\n                        <div className=\"input-group-append\">\n                          <button\n                            className=\"browse input-group-text text-danger\"\n                            onClick={handleBrowseClick}\n                            type=\"button\"\n                          >\n                            Upload\n                          </button>\n                        </div>\n                      </div>\n                      <input\n                        type=\"file\"\n                        className=\"file\"\n                        ref={fileInputRef}\n                        accept=\".png, .jpeg, .jpg, .pdf, .docx\"\n                        style={{ display: 'none' }}\n                        onChange={handleFileChange}\n                      />\n                      <p className=\"text-danger\" style={{ fontSize: '12px' }}>\n                        {error}\n                      </p>\n                    </Form.Item>\n                  </CCol>\n                  {designation.includes('Internal Admin') && (\n                    <>\n                      <CCol xs={4} sm={4} md={6} lg={5}>\n                        <Form.Item\n                          name=\"techOwnerName\"\n                          label={<span className=\"form-label\">Technical Owners</span>}\n                          rules={[\n                            {\n                              required: true,\n                              message: 'Please Choose Technical Owner',\n                              validator: async (_, value) => {\n                                const prodOwner = form.getFieldValue('prodOwnerName')\n                                const dataOwner = form.getFieldValue('dataOwnerName')\n                                if (!prodOwner && !value && !dataOwner) {\n                                  throw new Error('Please Choose Technical Owner')\n                                }\n                              },\n                            },\n                          ]}\n                        >\n                          <Select\n                            className=\"form-custom-selects access-input-box approval_select\"\n                            options={techOwnerOptions}\n                            required\n                            showSearch\n                            placeholder=\"Choose Technical Owner\"\n                            allowClear\n                            mode=\"multiple\"\n                            variant={'borderless'}\n                            filterOption={(input, option) => {\n                              const userName =\n                                option.label.props.children[1].props.children[0].props.children // Adjust this according to the actual structure\n                              return userName.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                            }}\n                            suffixIcon={\n                              <img\n                                src={Downarrowimg}\n                                alt=\"Downarrowimg\"\n                                style={{ width: '10px', height: '6px' }}\n                              />\n                            }\n                            maxTagCount=\"responsive\"\n                          />\n                        </Form.Item>\n                      </CCol>\n                      <CCol xs={4} sm={4} md={6} lg={5}>\n                        <Form.Item\n                          name=\"prodOwnerName\"\n                          label={<span className=\"form-label\">Product Owners</span>}\n                          rules={[\n                            {\n                              required: true,\n                              message: 'Please Choose Product Owner',\n                              validator: async (_, value) => {\n                                const prodOwner = form.getFieldValue('techOwnerName')\n                                const dataOwner = form.getFieldValue('dataOwnerName')\n                                if (!prodOwner && !value && !dataOwner) {\n                                  throw new Error('Please Choose Product Owner')\n                                }\n                              },\n                            },\n                          ]}\n                        >\n                          <Select\n                            className=\"form-custom-selects access-input-box approval_select\"\n                            options={prodOwnerOptions}\n                            required\n                            showSearch\n                            placeholder=\"Choose Product Owner\"\n                            allowClear\n                            mode=\"multiple\"\n                            variant={'borderless'}\n                            filterOption={(input, option) => {\n                              const userName =\n                                option.label.props.children[1].props.children[0].props.children // Adjust this according to the actual structure\n                              return userName.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                            }}\n                            suffixIcon={\n                              <img\n                                src={Downarrowimg}\n                                alt=\"Downarrowimg\"\n                                style={{ width: '10px', height: '6px' }}\n                              />\n                            }\n                            maxTagCount=\"responsive\"\n                          />\n                        </Form.Item>\n                      </CCol>\n                      <CCol xs={4} sm={4} md={6} lg={5}>\n                        <Form.Item\n                          name=\"dataOwnerName\"\n                          label={<span className=\"form-label\">Data Owners</span>}\n                          rules={[\n                            {\n                              required: true,\n                              message: 'Please Choose Data Owner',\n                              validator: async (_, value) => {\n                                const prodOwner = form.getFieldValue('techOwnerName')\n                                const techOwner = form.getFieldValue('dataOwnerName')\n                                if (!prodOwner && !value && !techOwner) {\n                                  throw new Error('Please Choose Data Owner')\n                                }\n                              },\n                            },\n                          ]}\n                        >\n                          <Select\n                            className=\"form-custom-selects access-input-box approval_select\"\n                            options={dataOwnerOptions}\n                            required\n                            showSearch\n                            placeholder=\"Choose Data Owner\"\n                            allowClear\n                            mode=\"multiple\"\n                            variant={'borderless'}\n                            filterOption={(input, option) => {\n                              const userName =\n                                option.label.props.children[1].props.children[0].props.children // Adjust this according to the actual structure\n                              return userName.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                            }}\n                            suffixIcon={\n                              <img\n                                src={Downarrowimg}\n                                alt=\"Downarrowimg\"\n                                style={{ width: '10px', height: '6px' }}\n                              />\n                            }\n                            maxTagCount=\"responsive\"\n                          />\n                        </Form.Item>\n                      </CCol>\n                    </>\n                  )}\n                </CRow>\n                <CRow>\n                  <h6 style={{ fontWeight: '700', fontSize: '13px' }}>Budget Details</h6>\n                </CRow>\n                <CRow>\n                  <CCol sm={3} md={3} lg={2}>\n                    <Form.Item\n                      name=\"budget\"\n                      label={<span className=\"form-label\">Product Budget</span>}\n                      rules={[\n                        {\n                          required: true,\n                          message: 'Please Enter Budget',\n                          validator: async (_, value) => {\n                            const currencyValue = form.getFieldValue('currency')\n                            if (currencyValue && !value) {\n                              throw new Error('Please enter product budget')\n                            }\n                          },\n                        },\n                        {\n                          pattern: /^[0-9,.]{1,8}$/,\n                          message: 'Number input with maximum 8 digits allowed',\n                        },\n                      ]}\n                      validateTrigger={['onChange', 'onSubmit']}\n                    >\n                      <Input\n                        className=\"border-0 time-border-bottom px-0\"\n                        placeholder=\"Choose Budget\"\n                        id=\"budget\"\n                        style={{ color: 'black' }}\n                        variant={'borderless'}\n                      />\n                    </Form.Item>\n                  </CCol>\n                  <CCol sm={3} md={3} lg={2}>\n                    <Form.Item\n                      name=\"currency\"\n                      label={<span className=\"form-label\">Currency</span>}\n                      rules={[\n                        {\n                          required: true,\n                          message: 'Please Choose Currency',\n                          validator: async (_, value) => {\n                            const budgetValue = form.getFieldValue('budget')\n                            if (budgetValue && !value) {\n                              throw new Error('Please choose currency')\n                            }\n                          },\n                        },\n                      ]}\n                    >\n                      <Select\n                        className=\"border-0 time-border-bottom\"\n                        placeholder=\"Choose Currency\"\n                        suffixIcon={\n                          <img\n                            src={Downarrowimg}\n                            alt=\"Downarrowimg\"\n                            style={{ width: '10px', height: '6px' }}\n                          />\n                        }\n                      >\n                        <Select.Option value=\"USD\">USD</Select.Option>\n                        <Select.Option value=\"INR\">INR</Select.Option>\n                      </Select>\n                    </Form.Item>\n                  </CCol>\n                </CRow>\n              </div>\n              <CRow>\n                <CCol sm={12} className=\"d-flex justify-content-end align-items-center\">\n                  {!designation.includes('Internal Admin') && (\n                    <Button\n                      className=\"draft-btn\"\n                      loading={loadingState}\n                      htmlType=\"submit\"\n                      onClick={() => setStatus('DRAFT')}\n                    >\n                      Save As Draft\n                    </Button>\n                  )}\n                  <Button\n                    className=\"submit-button save_changes\"\n                    style={{ fontSize: '13px', color: 'white' }}\n                    htmlType=\"submit\"\n                    onClick={() => setStatus('CREATED')}\n                    loading={loadingState}\n                  >\n                    Submit\n                  </Button>\n                </CCol>\n              </CRow>\n            </div>\n          </Form>\n        </div>\n      </CRow>\n    </div>\n  )\n}\nAddProduct.propTypes = {\n  flow: PropTypes.number,\n  flowList: PropTypes.array.isRequired,\n  close: PropTypes.func,\n  prodOwnerList: PropTypes.array,\n  techOwnerList: PropTypes.array,\n  dataOwnerList: PropTypes.array,\n  categories: PropTypes.array,\n  techHeadList: PropTypes.array,\n  prodHeadList: PropTypes.array,\n  dataHeadList: PropTypes.array,\n  titleList: PropTypes.string,\n}\nexport default AddProduct\n","import React, { useState, useRef, useEffect } from 'react'\nimport { CCol, CRow } from '@coreui/react'\nimport PropTypes from 'prop-types'\nimport { ImageUrl, getDecodeData, getHeaders } from '../../../constant/Global'\nimport { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport profileImage1 from '../../../assets/images/avatars/man1.png'\nimport { Breadcrumb, Select, Col, Row, Input, Button, Form, DatePicker } from 'antd'\nimport { CaretDownOutlined } from '@ant-design/icons'\nimport BackArrowSvg from 'src/views/svgImages/BackArrowSvg'\nimport Calendar from '../../svgImages/Calendar'\nimport dayjs from 'dayjs'\nimport stage from '../../../assets/images/form/stage.png'\nimport stage1 from '../../../assets/images/form/stage-p.png'\nimport stage2 from '../../../assets/images/form/stage-a.png'\nimport stage3 from '../../../assets/images/form/stage-r.png'\nimport eyeIcon from '../../../assets/images/login/Show.png'\nimport useAxios from 'src/constant/UseAxios'\nimport Downarrowimg from '../../../assets/images/downarrow.png'\nimport { Link } from 'react-router-dom'\n\nconst EditProduct = ({\n  flowList,\n  techHeadList,\n  prodHeadList,\n  dataHeadList,\n  categories,\n  EditProductData,\n  callBackFunc,\n  title,\n  viewStatus,\n  mastersTech,\n  mastersProd,\n  mastersData,\n}) => {\n  let api = useAxios()\n  const user = getDecodeData()\n  const userId = user?.id\n  const formRef = useRef(null)\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [status, setStatus] = useState('')\n  const [startDate, setStartDate] = useState()\n  const [endDate, setEndDate] = useState()\n  const [loadingState, setLoadings] = useState(false)\n  const fileInputRef = useRef(null)\n  const [form] = Form.useForm()\n  const [error, setError] = useState('')\n  const selectRef = useRef(null)\n\n  const handleBrowseClick = () => {\n    fileInputRef.current.click()\n  }\n\n  const openFileInNewTab = () => {\n    window.open(ImageUrl + EditProductData.file, '_blank')\n  }\n\n  const handleFileChange = (event) => {\n    const file = event.target.files[0]\n    setSelectedFile(file)\n  }\n\n  const prodHeadOption = prodHeadList.map((user) => ({\n    value: user.id,\n    label: (\n      <div className=\"select-options1 select-options-form\">\n        <img\n          src={user.profile_pic ? ImageUrl + user.profile_pic : profileImage1}\n          style={user.profile_pic ? { width: '20px' } : { width: '29px' }}\n          alt={user.name}\n          className=\"img-flag\"\n        />\n        <div className=\"node1\" style={user.profile_pic ? { marginLeft: '11px' } : {}}>\n          <p className=\"user-name1\" title={user.name}>\n            {' '}\n            {user.name}\n          </p>\n          <p className=\"role-text1\" title={user.role}>\n            {user.role}\n          </p>\n        </div>\n      </div>\n    ),\n  }))\n\n  const techHeadOption = techHeadList.map((user) => ({\n    value: user.id,\n    label: (\n      <div className=\"select-options1 select-options-form\">\n        <img\n          src={user.profile_pic ? ImageUrl + user.profile_pic : profileImage1}\n          style={user.profile_pic ? { width: '20px' } : { width: '29px' }}\n          alt={user.name}\n          className=\"img-flag\"\n        />\n        <div className=\"node1\" style={user.profile_pic ? { marginLeft: '11px' } : {}}>\n          <p className=\"user-name1\" title={user.name}>\n            {user.name}\n          </p>\n          <p className=\"role-text1\" title={user.role}>\n            {user.role}\n          </p>\n        </div>\n      </div>\n    ),\n  }))\n\n  const dataHeadOption = dataHeadList.map((user) => ({\n    value: user.id,\n    label: (\n      <div className=\"select-options1 select-options-form\">\n        <img\n          src={user.profile_pic ? ImageUrl + user.profile_pic : profileImage1}\n          style={user.profile_pic ? { width: '20px' } : { width: '29px' }}\n          alt={user.name}\n          className=\"img-flag\"\n        />\n        <div className=\"node1\" style={user.profile_pic ? { marginLeft: '11px' } : {}}>\n          <p className=\"user-name1\" title={user.name}>\n            {user.name}\n          </p>\n          <p className=\"role-text1\" title={user.role}>\n            {user.role}\n          </p>\n        </div>\n      </div>\n    ),\n  }))\n\n  const options = flowList.map((flow) => ({\n    value: flow.id,\n    label: flow.name,\n  }))\n\n  const categoryOption = categories.map((cate) => ({\n    value: cate.id,\n    label: cate.name,\n  }))\n\n  const techOwnerOptions = mastersTech?.map((user) => ({\n    value: user.id,\n    label: (\n      <div className=\"select-options select-options-bg\">\n        <img\n          src={user.profile_pic ? ImageUrl + user.profile_pic : profileImage1}\n          style={user.profile_pic ? { width: '29px', borderRadius: '14px' } : { width: '39px' }}\n          alt={user.name}\n          className=\"img-flag\"\n        />\n        <div className=\"node1\" style={user.profile_pic ? { marginLeft: '11px' } : {}}>\n          <p className=\"user-name1\" title={user.name}>\n            {user.name}\n          </p>\n          <p className=\"role-text1\">{user.role}</p>\n        </div>\n      </div>\n    ),\n  }))\n\n  const prodOwnerOptions = mastersProd?.map((user) => ({\n    value: user.id,\n    label: (\n      <div className=\"select-options select-options-bg\">\n        <img\n          src={user.profile_pic ? ImageUrl + user.profile_pic : profileImage1}\n          style={user.profile_pic ? { width: '29px', borderRadius: '14px' } : { width: '39px' }}\n          alt={user.name}\n          className=\"img-flag\"\n        />\n        <div className=\"node1\" style={user.profile_pic ? { marginLeft: '11px' } : {}}>\n          <p className=\"user-name1\" title={user.name}>\n            {user.name}\n          </p>\n          <p className=\"role-text1\">{user.role}</p>\n        </div>\n      </div>\n    ),\n  }))\n\n  const dataOwnerOptions = mastersData?.map((user) => ({\n    value: user.id,\n    label: (\n      <div className=\"select-options select-options-bg\">\n        <img\n          src={user.profile_pic ? ImageUrl + user.profile_pic : profileImage1}\n          style={user.profile_pic ? { width: '29px', borderRadius: '14px' } : { width: '39px' }}\n          alt={user.name}\n          className=\"img-flag\"\n        />\n        <div className=\"node1\" style={user.profile_pic ? { marginLeft: '11px' } : {}}>\n          <p className=\"user-name1\" title={user.name}>\n            {user.name}\n          </p>\n          <p className=\"role-text1\">{user.role}</p>\n        </div>\n      </div>\n    ),\n  }))\n\n  useEffect(() => {\n    const selectedProdOwnerIds = EditProductData?.prodOwnerName\n      ? EditProductData.prodOwnerName\n          .map((name) => mastersProd.find((user) => user.name === name)?.id)\n          .filter(Boolean)\n      : []\n    const selectedTechOwnerIds = EditProductData?.techOwnerName\n      ? EditProductData.techOwnerName\n          .map((name) => mastersTech.find((user) => user.name === name)?.id)\n          .filter(Boolean)\n      : []\n    const selectedDataOwnerIds = EditProductData?.dataOwnerName\n      ? EditProductData.dataOwnerName\n          .map((name) => mastersData.find((user) => user.name === name)?.id)\n          .filter(Boolean)\n      : []\n    form.setFieldsValue({\n      budget: EditProductData.budget,\n      summary: EditProductData.summary,\n      flow: EditProductData.flow,\n      name: EditProductData.name,\n      techHeadValue: EditProductData.tech_headId !== 0 ? EditProductData.tech_headId : '',\n      prodHeadValue: EditProductData.prod_headId !== 0 ? EditProductData.prod_headId : '',\n      dataHeadValue: EditProductData.data_headId !== 0 ? EditProductData.data_headId : '',\n      startDateValue: EditProductData.startDate && dayjs(EditProductData.startDate),\n      endDateValue: EditProductData.endDate && dayjs(EditProductData.endDate),\n      filesValue: EditProductData.file,\n      currency:\n        EditProductData.currency === 'undefined' || EditProductData.currency === 'null'\n          ? null\n          : EditProductData.currency,\n      category: EditProductData.categoryID,\n      prodOwnerName: selectedProdOwnerIds,\n      techOwnerName: selectedTechOwnerIds,\n      dataOwnerName: selectedDataOwnerIds,\n    })\n    setSelectedFile(EditProductData.file)\n    setStartDate(EditProductData.startDate)\n    setEndDate(EditProductData.endDate !== null ? EditProductData.endDate : '')\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [EditProductData])\n\n  const handleSubmit = async (values) => {\n    if (selectedFile) {\n      const validFormats = ['.png', '.jpeg', '.jpg', '.pdf', '.docx']\n      const fileExtension = selectedFile.name.split('.').pop()\n\n      if (!validFormats.includes('.' + fileExtension.toLowerCase())) {\n        setError('Please select a valid file (.png, .jpeg, .jpg, .pdf, .docx).')\n        return\n      }\n    }\n    const formData = new FormData()\n    setLoadings(true)\n    // formData.append('option', status)\n    Object.keys(values).forEach((key) => {\n      if (key === 'endDateValue') {\n        if (endDate === undefined && endDate === null) {\n          formData.append('endDate', '')\n        } else {\n          formData.append('endDate', endDate)\n        }\n      }\n      if (key === 'prodHeadValue') {\n        if (values[key] === undefined) {\n          formData.append('prodHead', 0)\n        } else {\n          formData.append('prodHead', values[key])\n        }\n      }\n      if (key === 'techHeadValue') {\n        if (values[key] === undefined) {\n          formData.append('techHead', 0)\n        } else {\n          formData.append('techHead', values[key])\n        }\n      }\n      if (key === 'dataHeadValue') {\n        if (values[key] === undefined) {\n          formData.append('dataHead', 0)\n        } else {\n          formData.append('dataHead', values[key])\n        }\n      }\n      if (key === 'startDateValue') {\n        formData.append('startDate', startDate)\n      }\n      if (key === 'techOwnerName') {\n        if (values[key] === undefined) {\n          formData.append('techOwner', [])\n        } else {\n          formData.append('techOwner', values[key])\n        }\n      }\n      if (key === 'prodOwnerName') {\n        if (values[key] === undefined) {\n          formData.append('prodOwner', [])\n        } else {\n          formData.append('prodOwner', values[key])\n        }\n      }\n      if (key === 'dataOwnerName') {\n        if (values[key] === undefined) {\n          formData.append('dataOwner', [])\n        } else {\n          formData.append('dataOwner', values[key])\n        }\n      }\n      if (key === 'filesValue') formData.append('files', selectedFile)\n      else formData.append(key, values[key])\n    })\n    let url\n    if (viewStatus === 'Admin') {\n      url = 'product/update/' + EditProductData.id + '/' + status + '?key=Admin'\n    } else {\n      url = 'product/update/' + EditProductData.id + '/' + status\n    }\n    await api\n      .put(url, formData, {\n        headers: getHeaders('multi'),\n      })\n      .then((response) => {\n        if (response.status === 208) {\n          toast.error(response.data.message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n            autoClose: 3000,\n          })\n        } else {\n          toast.success(response.data.message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n            autoClose: 3000,\n          })\n          resetComponent()\n        }\n        setLoadings(false)\n      })\n      .catch((error) => {\n        toast.error(error, {\n          position: toast.POSITION.BOTTOM_RIGHT,\n          autoClose: 3000,\n        })\n        setLoadings(false)\n      })\n  }\n\n  const handleStartDateChange = (date, dateString) => {\n    if (date) {\n      const parsedDate = dayjs(date, 'DD MMM, YYYY')\n      const formattedDate = parsedDate.format('YYYY-MM-DD')\n      setStartDate(formattedDate)\n      form.setFieldsValue({ endDateValue: undefined })\n    }\n  }\n\n  const handleEndDateChange = (date, dateString) => {\n    if (date) {\n      const parsedDate = dayjs(date, 'DD MMM, YYYY')\n      const formattedDate = parsedDate.format('YYYY-MM-DD')\n      setEndDate(formattedDate)\n    }\n  }\n\n  const disabledDate = (current) => {\n    return current && current < dayjs().startOf('day')\n  }\n\n  const disabledEndDate = (current) => {\n    if (!startDate) {\n      return current && current < dayjs().startOf('day')\n    }\n    return current && current < dayjs(startDate).startOf('day')\n  }\n\n  const resetComponent = () => {\n    setStatus('')\n    setSelectedFile(null)\n    form.resetFields()\n    callBackFunc()\n  }\n  const handleDropdownVisibleChange = (visible) => {\n    if (!visible && selectRef.current) {\n      selectRef.current.blur()\n    }\n  }\n\n  return (\n    <CRow>\n      <CCol md={9}>\n        <div style={{ display: 'flex' }}>\n          <div style={{ display: 'flex', alignItems: 'center', width: '35px' }}>\n            <span\n              className=\"\"\n              onClick={resetComponent}\n              style={{ cursor: 'pointer', marginTop: '17px', marginLeft: '10px' }}\n            >\n              <BackArrowSvg width=\"16\" height=\"15\" viewBox=\"0 0 18 18\" fill=\"#A5A1A1\" />\n            </span>\n          </div>\n\n          <CCol>\n            <div>\n              <h6 className=\"product-heading\" style={{ marginTop: '2%' }}>\n                Edit <span style={{ color: '#E01B38' }}>{EditProductData.name}</span>\n              </h6>\n            </div>\n\n            <Breadcrumb\n              className=\"bread-tab\"\n              separator={<span className=\"breadcrumb-separator\">|</span>}\n              items={[\n                {\n                  title: (\n                    <Link\n                      rel=\"Dashboard\"\n                      to={'/dashboard'}\n                      className=\"bread-items text-decoration-none text-secondary \"\n                    >\n                      Dashboard\n                    </Link>\n                  ),\n                },\n                {\n                  title: (\n                    <span\n                      className=\"bread-items text-secondary second-subheading\"\n                      style={{ cursor: 'pointer' }}\n                      onClick={resetComponent}\n                    >\n                      {title}\n                    </span>\n                  ),\n                },\n                {\n                  title: (\n                    <span\n                      className=\"text-secondary second-subheading\"\n                      style={{ cursor: 'default' }}\n                    >\n                      {title === 'Draft List' ? 'Edit Draft' : 'Edit Product'}\n                    </span>\n                  ),\n                },\n              ]}\n            />\n          </CCol>\n        </div>\n        <Row className=\"product-draft-edit\">\n          <Form\n            className=\"mt-4 needs-validation\"\n            ref={formRef}\n            form={form}\n            initialValues={{\n              budget: EditProductData.budget,\n              summary: EditProductData.summary,\n              flow: EditProductData.flow,\n              name: EditProductData.name,\n              techHeadValue: EditProductData.tech_headId !== 0 ? EditProductData.tech_headId : '',\n              prodHeadValue: EditProductData.prod_headId !== 0 ? EditProductData.prod_headId : '',\n              startDateValue: EditProductData.startDate && dayjs(EditProductData.startDate),\n              endDateValue: EditProductData.endDate && dayjs(EditProductData.endDate),\n              filesValue: EditProductData.file,\n              currency:\n                EditProductData.currency === 'undefined' || EditProductData.currency === 'null'\n                  ? null\n                  : EditProductData.currency,\n              category: EditProductData.categoryID,\n              // prodOwnerName:\n              //   EditProductData?.prodOwnerName.length !== 0 ? EditProductData.prodOwnerName : null,\n              // techOwnerName:\n              //   EditProductData?.techOwnerName.length !== 0 ? EditProductData.techOwnerName : null,\n            }}\n            layout=\"vertical\"\n            onFinish={handleSubmit}\n            encType=\"multipart/form-data\"\n            requiredMark={false}\n            validateTrigger=\"onSubmit\"\n            style={{ marginLeft: '39px', width: '100%' }}\n          >\n            <Row>\n              <h6 style={{ fontWeight: '700', fontSize: '13px' }}>Product Details</h6>\n            </Row>\n            <Row gutter={16}>\n              <Col sm={4}>\n                <Form.Item\n                  name=\"flow\"\n                  label={\n                    <span className=\"form-label\">\n                      Flow <span className=\"red-text1\">*</span>\n                    </span>\n                  }\n                  rules={[{ required: true, message: 'Please Choose Flow' }]}\n                >\n                  <Select\n                    ref={selectRef}\n                    className=\"border-0 time-border-bottom\"\n                    placeholder=\"Choose Flow\"\n                    suffixIcon={<CaretDownOutlined className=\"caretdownicon\" />}\n                    options={options}\n                    showSearch\n                    onDropdownVisibleChange={handleDropdownVisibleChange}\n                    filterOption={(input, option) =>\n                      option.label.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    }\n                  />\n                </Form.Item>\n              </Col>\n              <Col sm={4} offset={1}>\n                <Form.Item\n                  name=\"name\"\n                  label={\n                    <span className=\"form-label\">\n                      Product Name <span className=\"red-text1\">*</span>\n                    </span>\n                  }\n                  rules={[\n                    { required: true, message: 'Please Enter Product Name' },\n                    {\n                      pattern:\n                        /^(?!.*\\s$)(?!^\\s)(?!.*\\s{2,})(?!.*\\(\\))(?!^\\(\\))[a-zA-Z0-9\\s.()-]+$/,\n                      message: 'Invalid input',\n                    },\n                  ]}\n                >\n                  <Input\n                    maxLength={48}\n                    className=\"border-0 time-border-bottom px-0\"\n                    placeholder=\"Enter Product Name\"\n                  />\n                </Form.Item>\n              </Col>\n              <Col sm={4} offset={1}>\n                <Form.Item\n                  name=\"prodHeadValue\"\n                  label={<span className=\"form-label\">Product Head</span>}\n                >\n                  <Select\n                    ref={selectRef}\n                    className=\"border-0 time-border-bottom\"\n                    placeholder=\"Choose Product Head\"\n                    suffixIcon={<CaretDownOutlined className=\"caretdownicon\" />}\n                    options={prodHeadOption}\n                    disabled={prodHeadOption.find((option) => option.value === userId)}\n                    filterOption={(input, option) => {\n                      const userName =\n                        option.label.props.children[1].props.children[0].props.children[1] // Adjust this according to the actual structure\n                      return userName.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    }}\n                    onDropdownVisibleChange={handleDropdownVisibleChange}\n                    allowClear\n                    showSearch\n                  />\n                </Form.Item>\n              </Col>\n              <Col sm={4} offset={1}>\n                <Form.Item\n                  name=\"techHeadValue\"\n                  label={<span className=\"form-label\">Technical Head</span>}\n                >\n                  <Select\n                    ref={selectRef}\n                    className=\"border-0 time-border-bottom\"\n                    placeholder=\"Choose Technical Head\"\n                    suffixIcon={<CaretDownOutlined className=\"caretdownicon\" />}\n                    options={techHeadOption}\n                    disabled={techHeadOption.some((option) => option.value === userId)}\n                    filterOption={(input, option) => {\n                      const userName =\n                        option.label.props.children[1].props.children[0].props.children[1] // Adjust this according to the actual structure\n                      return userName.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    }}\n                    onDropdownVisibleChange={handleDropdownVisibleChange}\n                    allowClear\n                    showSearch\n                  />\n                </Form.Item>\n              </Col>\n              <Col sm={4} offset={1}>\n                <Form.Item\n                  name=\"dataHeadValue\"\n                  label={<span className=\"form-label\">Data Head</span>}\n                >\n                  <Select\n                    ref={selectRef}\n                    className=\"border-0 time-border-bottom\"\n                    placeholder=\"Choose Data Head\"\n                    suffixIcon={<CaretDownOutlined className=\"caretdownicon\" />}\n                    options={dataHeadOption}\n                    disabled={dataHeadOption.some((option) => option.value === userId)}\n                    filterOption={(input, option) => {\n                      const userName =\n                        option.label.props.children[1].props.children[0].props.children[1] // Adjust this according to the actual structure\n                      return userName.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    }}\n                    onDropdownVisibleChange={handleDropdownVisibleChange}\n                    allowClear\n                    showSearch\n                  />\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row gutter={16} style={{ marginTop: '10px' }}>\n              <Col sm={4}>\n                <Form.Item\n                  name=\"category\"\n                  label={\n                    <span className=\"form-label\">\n                      Business Category <span className=\"red-text1\">*</span>\n                    </span>\n                  }\n                  rules={[{ required: true, message: 'Please Choose Category' }]}\n                >\n                  <Select\n                    ref={selectRef}\n                    className=\"border-0 time-border-bottom\"\n                    placeholder=\"Choose Category\"\n                    suffixIcon={<CaretDownOutlined className=\"caretdownicon\" />}\n                    options={categoryOption}\n                    allowClear\n                    filterOption={(input, option) =>\n                      option.label.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    }\n                    onDropdownVisibleChange={handleDropdownVisibleChange}\n                    showSearch\n                  />\n                </Form.Item>\n              </Col>\n              <Col sm={4} offset={1}>\n                <Form.Item\n                  name=\"startDateValue\"\n                  label={\n                    <span className=\"form-label\">\n                      Start Date <span className=\"red-text1\">*</span>\n                    </span>\n                  }\n                  rules={[{ required: true, message: 'Please Select Start Date' }]}\n                >\n                  <DatePicker\n                    className=\"border-0 time-border-bottom\"\n                    style={{ paddingLeft: '0px', marginTop: '10px' }}\n                    placeholder=\"Choose Date\"\n                    allowClear\n                    suffixIcon={\n                      <Calendar width=\"15\" height=\"14\" viewBox=\"0 0 15 14\" fill=\"white\" />\n                    }\n                    disabledDate={disabledDate}\n                    onChange={handleStartDateChange}\n                    format=\"DD MMM,YYYY\"\n                  />\n                </Form.Item>\n              </Col>\n              <Col sm={4} offset={1}>\n                <Form.Item name=\"endDateValue\" label={<span className=\"form-label\">End Date</span>}>\n                  <DatePicker\n                    className=\"border-0 time-border-bottom\"\n                    style={{ paddingLeft: '0px', marginTop: '10px' }}\n                    placeholder=\"Choose Date\"\n                    allowClear\n                    suffixIcon={\n                      <Calendar width=\"15\" height=\"14\" viewBox=\"0 0 15 14\" fill=\"white\" />\n                    }\n                    onChange={handleEndDateChange}\n                    disabledDate={disabledEndDate}\n                    format=\"DD MMM,YYYY\"\n                  />\n                </Form.Item>\n              </Col>\n              <Col sm={4} offset={1}>\n                <Form.Item\n                  name=\"summary\"\n                  label={<span className=\"form-label\">Product Summary</span>}\n                >\n                  <Input.TextArea\n                    className=\"border-0 time-border-bottom px-0\"\n                    placeholder=\"Enter Summary\"\n                    id=\"summary\"\n                    variant={'borderless'}\n                    style={{ color: 'black', marginTop: '10px' }}\n                    autoSize={{\n                      minRows: 0,\n                      maxRows: 1,\n                    }}\n                  />\n                </Form.Item>\n              </Col>\n              <Col sm={4} offset={1}>\n                <Form.Item\n                  name=\"filesValue\"\n                  label={\n                    <div style={{ width: '220px' }}>\n                      <span className=\"form-label\">File</span>\n                      <button\n                        onClick={openFileInNewTab}\n                        type=\"button\"\n                        className=\"border-0 bg-none\"\n                        style={{\n                          cursor: 'pointer',\n                          background: 'none',\n                          float: 'inline-end',\n                        }}\n                        disabled={EditProductData.file === null}\n                      >\n                        <img src={eyeIcon} alt=\"Password\" width={12} />\n                      </button>\n                    </div>\n                  }\n                >\n                  <div className=\"input-group custom-input-group custom_input_group\">\n                    <input\n                      type=\"text\"\n                      value={selectedFile ? selectedFile.name : ''}\n                      readOnly\n                      name=\"fieldName\"\n                      className=\"form-control border-0\"\n                      aria-label=\"Upload File\"\n                      aria-describedby=\"basic-addon1\"\n                      style={{ fontSize: '13px', fontWeight: '500', height: '10px' }}\n                    />\n                    <div className=\"input-group-append\">\n                      <button\n                        className=\"browse input-group-text text-danger\"\n                        onClick={handleBrowseClick}\n                        type=\"button\"\n                      >\n                        Upload\n                      </button>\n                    </div>\n                  </div>\n                  <input\n                    type=\"file\"\n                    className=\"file\"\n                    ref={fileInputRef}\n                    style={{ display: 'none' }}\n                    onChange={handleFileChange}\n                  />\n                  <p className=\"text-danger\" style={{ fontSize: '12px' }}>\n                    {error}\n                  </p>\n                </Form.Item>\n              </Col>\n            </Row>\n            {viewStatus === 'Admin' && (\n              <Row>\n                <CCol xs={4} sm={6} md={6} lg={6}>\n                  <Form.Item\n                    name=\"techOwnerName\"\n                    label={<span className=\"form-label\">Technical Owners</span>}\n                    rules={[\n                      {\n                        required: true,\n                        message: 'Please Choose Technical Owner',\n                        validator: async (_, value) => {\n                          const prodOwner = form.getFieldValue('prodOwnerName')\n                          const dataOwner = form.getFieldValue('dataOwnerName')\n                          if (!prodOwner && !value && !dataOwner) {\n                            throw new Error('Please Choose Technical Owner')\n                          }\n                        },\n                      },\n                    ]}\n                  >\n                    <Select\n                      style={{ width: '85%' }}\n                      className=\"border-0 time-border-bottom\"\n                      options={techOwnerOptions}\n                      required\n                      showSearch\n                      placeholder=\"Choose Technical Owners\"\n                      allowClear\n                      mode=\"multiple\"\n                      variant={'borderless'}\n                      filterOption={(input, option) => {\n                        const userName =\n                          option.label.props.children[1].props.children[0].props.children // Adjust this according to the actual structure\n                        return userName.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                      }}\n                      suffixIcon={\n                        <img\n                          src={Downarrowimg}\n                          alt=\"Downarrowimg\"\n                          style={{ width: '10px', height: '6px' }}\n                        />\n                      }\n                    />\n                  </Form.Item>\n                </CCol>\n                <CCol xs={4} sm={6} md={6} lg={6}>\n                  <Form.Item\n                    name=\"prodOwnerName\"\n                    label={<span className=\"form-label\">Product Owners</span>}\n                    rules={[\n                      {\n                        required: true,\n                        message: 'Please Choose Product Owner',\n                        validator: async (_, value) => {\n                          const prodOwner = form.getFieldValue('techOwnerName')\n                          const dataOwner = form.getFieldValue('dataOwnerName')\n                          if (!prodOwner && !value && !dataOwner) {\n                            throw new Error('Please Choose Product Owner')\n                          }\n                        },\n                      },\n                    ]}\n                  >\n                    <Select\n                      style={{ width: '85%' }}\n                      className=\"border-0 time-border-bottom\"\n                      options={prodOwnerOptions}\n                      required\n                      showSearch\n                      placeholder=\"Choose Product Owners\"\n                      allowClear\n                      mode=\"multiple\"\n                      variant={'borderless'}\n                      filterOption={(input, option) => {\n                        const userName =\n                          option.label.props.children[1].props.children[0].props.children // Adjust this according to the actual structure\n                        return userName.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                      }}\n                      suffixIcon={\n                        <img\n                          src={Downarrowimg}\n                          alt=\"Downarrowimg\"\n                          style={{ width: '10px', height: '6px' }}\n                        />\n                      }\n                    />\n                  </Form.Item>\n                </CCol>\n                <CCol xs={4} sm={6} md={6} lg={6}>\n                  <Form.Item\n                    name=\"dataOwnerName\"\n                    label={<span className=\"form-label\">Data Owners</span>}\n                    rules={[\n                      {\n                        required: true,\n                        message: 'Please Choose Data Owner',\n                        validator: async (_, value) => {\n                          const prodOwner = form.getFieldValue('prodOwnerName')\n                          const techOwner = form.getFieldValue('techOwnerName')\n                          if (!prodOwner && !value && !techOwner) {\n                            throw new Error('Please Choose Data Owner')\n                          }\n                        },\n                      },\n                    ]}\n                  >\n                    <Select\n                      style={{ width: '85%' }}\n                      className=\"border-0 time-border-bottom\"\n                      options={dataOwnerOptions}\n                      required\n                      showSearch\n                      placeholder=\"Choose Data Owners\"\n                      allowClear\n                      mode=\"multiple\"\n                      variant={'borderless'}\n                      filterOption={(input, option) => {\n                        const userName =\n                          option.label.props.children[1].props.children[0].props.children // Adjust this according to the actual structure\n                        return userName.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                      }}\n                      suffixIcon={\n                        <img\n                          src={Downarrowimg}\n                          alt=\"Downarrowimg\"\n                          style={{ width: '10px', height: '6px' }}\n                        />\n                      }\n                    />\n                  </Form.Item>\n                </CCol>\n              </Row>\n            )}\n            <Row style={{ marginTop: '10px' }}>\n              <h6 style={{ fontWeight: '700', fontSize: '13px' }}>Budget Details</h6>\n            </Row>\n            <Row gutter={16} style={{ marginTop: '10px' }}>\n              <Col sm={4}>\n                <Form.Item\n                  name=\"budget\"\n                  label={<span className=\"form-label\">Product Budget</span>}\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please Enter Budget',\n                      validator: async (_, value) => {\n                        const currencyValue = form.getFieldValue('currency')\n                        if (currencyValue && !value) {\n                          throw new Error('Please enter product budget')\n                        }\n                      },\n                    },\n                    {\n                      pattern: /^[0-9,.]{1,8}$/,\n                      message: 'Number input',\n                    },\n                  ]}\n                >\n                  <Input\n                    className=\"border-0 time-border-bottom px-0\"\n                    placeholder=\"Choose Budget\"\n                    id=\"budget\"\n                    variant={'borderless'}\n                    style={{ color: 'black' }}\n                  />\n                </Form.Item>\n              </Col>\n              <Col sm={4} offset={1}>\n                <Form.Item\n                  name=\"currency\"\n                  label={<span className=\"form-label\">Currency</span>}\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please Choose Currency',\n                      validator: async (_, value) => {\n                        const budgetValue = form.getFieldValue('budget')\n                        if (budgetValue && !value) {\n                          throw new Error('Please choose currency')\n                        }\n                      },\n                    },\n                  ]}\n                >\n                  <Select\n                    className=\"border-0 time-border-bottom\"\n                    placeholder=\"Choose Currency\"\n                    suffixIcon={<CaretDownOutlined className=\"caretdownicon\" />}\n                  >\n                    <Select.Option value=\"USD\">USD</Select.Option>\n                    <Select.Option value=\"INR\">INR</Select.Option>\n                  </Select>\n                </Form.Item>\n              </Col>\n              <Col\n                sm={6}\n                offset={9}\n                className=\"d-flex justify-content-end align-items-center\"\n                style={{ padding: '19px' }}\n              >\n                {title !== 'Product Creation Master' && (\n                  <Button\n                    className=\"draft-btn\"\n                    htmlType=\"submit\"\n                    onClick={() => setStatus('DRAFT')}\n                    loading={loadingState}\n                  >\n                    Save As Draft\n                  </Button>\n                )}\n                <Button\n                  className=\"submit-button save_changes\"\n                  style={{ fontSize: '13px', color: 'white' }}\n                  htmlType=\"submit\"\n                  onClick={() => setStatus('CREATED')}\n                  loading={loadingState}\n                >\n                  {viewStatus === 'Admin' ? 'Update' : 'Submit'}\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n        </Row>\n      </CCol>\n      <CCol md={3} className=\"approvalflow-rightside\">\n        <div style={{ marginLeft: '14px' }}>\n          <Row style={{ marginTop: '31%' }}>\n            <h6 style={{ fontWeight: '700', fontSize: '13px' }}>Approval Flow</h6>\n          </Row>\n          <div style={{ maxHeight: '290px', overflowY: 'auto' }}>\n            {EditProductData.approvalFlow &&\n              EditProductData.approvalFlow.map((approver, approverIndex) => (\n                <React.Fragment key={approverIndex}>\n                  <Row className=\"align-items-center mt-2\">\n                    <div className=\"col-md-5\">\n                      <img\n                        alt=\"stages\"\n                        style={{ width: '12px' }}\n                        className=\"content-img appr_img\"\n                        src={\n                          approver.approStatus === 'Pending'\n                            ? stage1\n                            : approver.approStatus === 'Approved'\n                            ? stage2\n                            : approver.approStatus === 'Rejected'\n                            ? stage3\n                            : stage\n                        }\n                      />\n                      <span style={{ marginLeft: '10%', fontSize: '11px', fontWeight: '600' }}>\n                        Flow {approverIndex + 1}\n                      </span>\n                    </div>\n                  </Row>\n\n                  <Row className=\"align-items-center\" style={{ marginTop: '12px' }}>\n                    <div className=\"col-md-1\">\n                      <div className=\"vertical-line\"></div>\n                    </div>\n                  </Row>\n\n                  <Row className=\"align-items-center\">\n                    <div className=\"col-md-1\"></div>\n                    <div className=\"col-md-2\" style={{ marginleft: '12px' }}>\n                      <img\n                        alt=\"profile*\"\n                        className=\"head-td-flow\"\n                        src={approver.profile_pic ? ImageUrl + approver.profile_pic : profileImage1}\n                      />\n                    </div>\n                    <div className=\"col-md-6 name_role\" style={{ marginTop: '6px' }}>\n                      <p className=\"head-td-name\" title={approver.name}>\n                        {approver.name}\n                      </p>\n                      <p className=\"head-td-role\" title={approver.role}>\n                        {approver.role}\n                      </p>\n                    </div>\n                  </Row>\n                </React.Fragment>\n              ))}\n          </div>\n        </div>\n      </CCol>\n    </CRow>\n  )\n}\nEditProduct.propTypes = {\n  flowList: PropTypes.array.isRequired,\n  prodOwnerList: PropTypes.array,\n  techOwnerList: PropTypes.array,\n  categories: PropTypes.array,\n  techHeadList: PropTypes.array,\n  prodHeadList: PropTypes.array,\n  dataHeadList: PropTypes.array,\n  EditProductData: PropTypes.object,\n  callBackFunc: PropTypes.func,\n  title: PropTypes.string,\n  mastersProd: PropTypes.array,\n  mastersTech: PropTypes.array,\n  mastersData: PropTypes.array,\n  viewStatus: PropTypes.string,\n}\nexport default EditProduct\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst BackArrowSvg = ({ width, height, fill, viewBox }) => (\n  <svg\n    width={width}\n    height={height}\n    viewBox={viewBox}\n    fill={fill}\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M16.5824 4.58202H3.41244L6.29244 1.70202C6.47942 1.51504 6.58447 1.26145 6.58447 0.997021C6.58447 0.732594 6.47942 0.478998 6.29244 0.292021C6.10547 0.105043 5.85187 0 5.58744 0C5.32302 0 5.06942 0.105043 4.88244 0.292021L0.292444 4.88202C0.19974 4.97453 0.126193 5.08442 0.0760114 5.2054C0.02583 5.32637 0 5.45605 0 5.58702C0 5.71799 0.02583 5.84767 0.0760114 5.96865C0.126193 6.08962 0.19974 6.19951 0.292444 6.29202L4.88244 10.882C4.97503 10.9746 5.08494 11.048 5.2059 11.0981C5.32687 11.1483 5.45651 11.174 5.58744 11.174C5.71837 11.174 5.84802 11.1483 5.96899 11.0981C6.08995 11.048 6.19986 10.9746 6.29244 10.882C6.38503 10.7894 6.45847 10.6795 6.50857 10.5586C6.55868 10.4376 6.58447 10.308 6.58447 10.177C6.58447 10.0461 6.55868 9.91644 6.50857 9.79548C6.45847 9.67451 6.38503 9.5646 6.29244 9.47202L3.41244 6.58202H16.5824C17.1324 6.58202 17.5824 6.13202 17.5824 5.58202C17.5824 5.03202 17.1324 4.58202 16.5824 4.58202Z\"\n      fill=\"#919EAB\"\n    />\n  </svg>\n)\n\nBackArrowSvg.propTypes = {\n  width: PropTypes.string,\n  height: PropTypes.string,\n  fill: PropTypes.string,\n  viewBox: PropTypes.string,\n}\n\nexport default BackArrowSvg\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Calendar = ({ width, height, fill, viewBox }) => (\n  <svg\n    width={width}\n    height={height}\n    viewBox={viewBox}\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <g clipPath=\"url(#clip0_717_8974)\">\n      <path\n        d=\"M0.905273 11.0833C0.9062 11.8565 1.21379 12.5978 1.76057 13.1446C2.30735 13.6914 3.04868 13.999 3.82194 13.9999H11.9886C12.7619 13.999 13.5032 13.6914 14.05 13.1446C14.5968 12.5978 14.9043 11.8565 14.9053 11.0833V5.83325H0.905273V11.0833ZM10.8219 8.45825C10.995 8.45825 11.1642 8.50957 11.3081 8.60572C11.452 8.70186 11.5641 8.83852 11.6303 8.9984C11.6966 9.15829 11.7139 9.33422 11.6801 9.50396C11.6464 9.67369 11.563 9.8296 11.4407 9.95197C11.3183 10.0743 11.1624 10.1577 10.9926 10.1914C10.8229 10.2252 10.647 10.2079 10.4871 10.1416C10.3272 10.0754 10.1905 9.96327 10.0944 9.81938C9.99826 9.67548 9.94694 9.50631 9.94694 9.33325C9.94694 9.10119 10.0391 8.87863 10.2032 8.71453C10.3673 8.55044 10.5899 8.45825 10.8219 8.45825ZM7.90527 8.45825C8.07833 8.45825 8.2475 8.50957 8.3914 8.60572C8.53529 8.70186 8.64744 8.83852 8.71367 8.9984C8.77989 9.15829 8.79722 9.33422 8.76346 9.50396C8.7297 9.67369 8.64636 9.8296 8.52399 9.95197C8.40162 10.0743 8.24571 10.1577 8.07598 10.1914C7.90624 10.2252 7.73031 10.2079 7.57043 10.1416C7.41054 10.0754 7.27388 9.96327 7.17774 9.81938C7.08159 9.67548 7.03027 9.50631 7.03027 9.33325C7.03027 9.10119 7.12246 8.87863 7.28655 8.71453C7.45065 8.55044 7.67321 8.45825 7.90527 8.45825ZM4.98861 8.45825C5.16167 8.45825 5.33084 8.50957 5.47473 8.60572C5.61862 8.70186 5.73077 8.83852 5.797 8.9984C5.86323 9.15829 5.88056 9.33422 5.84679 9.50396C5.81303 9.67369 5.7297 9.8296 5.60733 9.95197C5.48495 10.0743 5.32904 10.1577 5.15931 10.1914C4.98958 10.2252 4.81364 10.2079 4.65376 10.1416C4.49387 10.0754 4.35722 9.96327 4.26107 9.81938C4.16492 9.67548 4.11361 9.50631 4.11361 9.33325C4.11361 9.10119 4.20579 8.87863 4.36989 8.71453C4.53398 8.55044 4.75654 8.45825 4.98861 8.45825Z\"\n        fill=\"#919EAB\"\n      />\n      <path\n        d=\"M11.9886 1.16667H11.4053V0.583333C11.4053 0.428624 11.3438 0.280251 11.2344 0.170854C11.125 0.0614582 10.9766 0 10.8219 0C10.6672 0 10.5189 0.0614582 10.4095 0.170854C10.3001 0.280251 10.2386 0.428624 10.2386 0.583333V1.16667H5.57194V0.583333C5.57194 0.428624 5.51048 0.280251 5.40109 0.170854C5.29169 0.0614582 5.14332 0 4.98861 0C4.8339 0 4.68552 0.0614582 4.57613 0.170854C4.46673 0.280251 4.40527 0.428624 4.40527 0.583333V1.16667H3.82194C3.04868 1.16759 2.30735 1.47518 1.76057 2.02196C1.21379 2.56874 0.9062 3.31007 0.905273 4.08333L0.905273 4.66667H14.9053V4.08333C14.9043 3.31007 14.5968 2.56874 14.05 2.02196C13.5032 1.47518 12.7619 1.16759 11.9886 1.16667Z\"\n        fill=\"#919EAB\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_717_8974\">\n        <rect width={width} fill={fill} height={height} transform=\"translate(0.905273)\" />\n      </clipPath>\n    </defs>\n  </svg>\n)\nCalendar.propTypes = {\n  width: PropTypes.string,\n  height: PropTypes.string,\n  fill: PropTypes.string,\n  viewBox: PropTypes.string,\n}\nexport default Calendar\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst DeleteSvg = ({ width, height, fill, viewBox }) => (\n  <svg\n    width={width}\n    height={height}\n    viewBox={viewBox}\n    fill={fill}\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M15.75 2.99999H13.425C13.0662 1.25518 11.5313 0.00225 9.74998 0H8.24996C6.46863 0.00225 4.93378 1.25518 4.57498 2.99999H2.24999C1.83578 2.99999 1.5 3.33577 1.5 3.74998C1.5 4.16419 1.83578 4.5 2.24999 4.5H2.99998V14.25C3.00247 16.32 4.67995 17.9975 6.74999 18H11.25C13.32 17.9975 14.9975 16.32 15 14.25V4.5H15.75C16.1642 4.5 16.5 4.16422 16.5 3.75001C16.5 3.3358 16.1642 2.99999 15.75 2.99999ZM8.25 12.75C8.25 13.1642 7.91422 13.5 7.50001 13.5C7.08577 13.5 6.74999 13.1642 6.74999 12.75V8.25001C6.74999 7.8358 7.08576 7.50002 7.49998 7.50002C7.91419 7.50002 8.24996 7.8358 8.24996 8.25001V12.75H8.25ZM11.25 12.75C11.25 13.1642 10.9142 13.5 10.5 13.5C10.0858 13.5 9.75001 13.1642 9.75001 12.75V8.25001C9.75001 7.8358 10.0858 7.50002 10.5 7.50002C10.9142 7.50002 11.25 7.8358 11.25 8.25001V12.75ZM6.12825 2.99999C6.44726 2.10171 7.29677 1.50114 8.25 1.49998H9.75001C10.7032 1.50114 11.5528 2.10171 11.8718 2.99999H6.12825Z\"\n      fill={fill}\n    />\n  </svg>\n)\nDeleteSvg.propTypes = {\n  width: PropTypes.string,\n  height: PropTypes.string,\n  fill: PropTypes.string,\n  viewBox: PropTypes.string,\n}\nexport default DeleteSvg\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst EditSvg = ({ width, height, fill, viewBox, color, clipH, clipW }) => (\n  <svg\n    width={width}\n    height={height}\n    viewBox={viewBox}\n    fill={fill}\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <g clipPath=\"url(#clip0_3212_26864)\">\n      <path\n        d=\"M0 17.4739C0.104004 17.0872 0.213135 16.7019 0.310913 16.3137C0.57312 15.2722 0.827637 14.2285 1.09351 13.1881C1.12097 13.0812 1.18506 12.9702 1.26306 12.8918C4.50146 9.64685 7.74353 6.40552 10.9852 3.16418C11.0178 3.13159 11.053 3.10083 11.072 3.08325C12.3519 4.36279 13.6271 5.63831 14.9172 6.9281C14.9004 6.94641 14.8605 6.99292 14.8169 7.03613C11.5913 10.261 8.36646 13.4862 5.13721 16.707C5.04346 16.8004 4.91089 16.8784 4.78308 16.911C3.38599 17.2677 1.98596 17.6138 0.587036 17.9635C0.554077 17.9719 0.522949 17.988 0.490723 18.0005H0.280151C0.186401 17.9067 0.0930176 17.8134 -0.000732422 17.7196C-0.000732422 17.6376 -0.000732422 17.5559 -0.000732422 17.4739H0Z\"\n        fill=\"#A5A1A1\"\n      />\n      <path\n        d=\"M0 17.7192C0.09375 17.813 0.187134 17.9064 0.280884 18.0001H0C0 17.9064 0 17.813 0 17.7192Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M16.0682 5.78585C14.7806 4.49825 13.5037 3.22201 12.2164 1.93477C12.5629 1.58834 12.9152 1.23202 13.2722 0.880087C13.4344 0.720419 13.5927 0.552694 13.7747 0.418295C14.4921 -0.111613 15.5486 -0.0731604 16.2081 0.527426C16.6571 0.936117 17.0889 1.36788 17.4965 1.81795C18.1018 2.48592 18.1274 3.50362 17.5884 4.22909C17.5188 4.32247 17.4408 4.41073 17.3588 4.49349C16.9274 4.92818 16.4934 5.36068 16.0682 5.78585Z\"\n        fill=\"#A5A1A1\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_3212_26864\">\n        <rect width={clipW} height={clipH} fill={color} />\n      </clipPath>\n    </defs>\n  </svg>\n)\nEditSvg.propTypes = {\n  width: PropTypes.string,\n  height: PropTypes.string,\n  fill: PropTypes.string,\n  viewBox: PropTypes.string,\n  color: PropTypes.string,\n  clipW: PropTypes.string,\n  clipH: PropTypes.string,\n}\nexport default EditSvg\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst EyeSvg = ({ width, height, fill, viewBox }) => (\n  <svg\n    width={width}\n    height={height}\n    viewBox={viewBox}\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M6.09756 8C6.09756 10.1333 7.8439 11.8691 10 11.8691C12.1463 11.8691 13.8927 10.1333 13.8927 8C13.8927 5.85697 12.1463 4.12121 10 4.12121C7.8439 4.12121 6.09756 5.85697 6.09756 8ZM15.7366 2.04606C17.4439 3.36485 18.8976 5.29455 19.9415 7.70909C20.0195 7.89333 20.0195 8.10667 19.9415 8.28121C17.8537 13.1103 14.1366 16 10 16H9.99024C5.86341 16 2.14634 13.1103 0.0585366 8.28121C-0.0195122 8.10667 -0.0195122 7.89333 0.0585366 7.70909C2.14634 2.88 5.86341 0 9.99024 0H10C12.0683 0 14.0293 0.717576 15.7366 2.04606ZM10.0012 10.4124C11.3378 10.4124 12.4304 9.32635 12.4304 7.99787C12.4304 6.65968 11.3378 5.57362 10.0012 5.57362C9.8841 5.57362 9.76702 5.58332 9.65971 5.60272C9.62068 6.66938 8.74263 7.52272 7.65971 7.52272H7.61093C7.58166 7.67787 7.56215 7.83302 7.56215 7.99787C7.56215 9.32635 8.65483 10.4124 10.0012 10.4124Z\"\n      fill={fill}\n    />\n  </svg>\n)\n\nEyeSvg.propTypes = {\n  width: PropTypes.string,\n  height: PropTypes.string,\n  fill: PropTypes.string,\n  viewBox: PropTypes.string,\n}\n\nexport default EyeSvg\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst FileSvg = ({ width, height, fill, viewBox }) => (\n  <svg\n    width={width}\n    height={height}\n    viewBox={viewBox}\n    fill={fill}\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <g clipPath=\"url(#clip0_586_10850)\">\n      <path\n        d=\"M9 5.25V0.345C9.68475 0.6045 10.3147 1.00425 10.8488 1.5375L13.4618 4.152C13.9957 4.68525 14.3955 5.31525 14.655 6H9.75C9.336 6 9 5.66325 9 5.25ZM9.9525 14.61C9.34275 15.2197 9 16.0462 9 16.9088V18H10.0912C10.9537 18 11.7803 17.6572 12.39 17.0475L17.4953 11.9423C18.168 11.2695 18.168 10.1775 17.4953 9.50475C16.8225 8.832 15.7305 8.832 15.0577 9.50475L9.9525 14.61ZM7.5 16.9088C7.5 15.6398 7.99425 14.4465 8.89125 13.5495L13.9965 8.44425C14.2883 8.1525 14.628 7.92825 14.9948 7.7685C14.9917 7.6785 14.988 7.58925 14.982 7.49925H9.75C8.5095 7.49925 7.5 6.48975 7.5 5.24925V0.018C7.37925 0.00975 7.2585 0 7.13625 0H3.75C1.68225 0 0 1.68225 0 3.75V14.25C0 16.3177 1.68225 18 3.75 18H7.5V16.9088Z\"\n        fill=\"#919EAB\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_586_10850\">\n        <rect width={width} height={height} />\n      </clipPath>\n    </defs>\n  </svg>\n)\nFileSvg.propTypes = {\n  width: PropTypes.string,\n  height: PropTypes.string,\n  fill: PropTypes.string,\n  viewBox: PropTypes.string,\n}\nexport default FileSvg\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst PlusSvg = ({ width, height, fill, viewBox }) => (\n  <svg\n    width={width}\n    height={height}\n    viewBox={viewBox}\n    fill={fill}\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M10.8604 7.29834H17.4741V11.041H10.8604V17.6206H7.11768V11.041H0.503906V7.29834H7.11768V0.633301H10.8604V7.29834Z\"\n      fill={fill}\n    />\n  </svg>\n)\n\nPlusSvg.propTypes = {\n  width: PropTypes.string,\n  height: PropTypes.string,\n  fill: PropTypes.string,\n  viewBox: PropTypes.string,\n}\nexport default PlusSvg\n"],"names":["_ref","_ViewProductData$tech","_ViewProductData$prod","_ViewProductData$data","flowList","viewStatus","ownerOption","close","techHeadList","prodHeadList","dataHeadList","categories","ViewProductData","titleList","mastersTech","mastersProd","mastersData","api","useAxios","formRef","useRef","form","Form","useForm","user","getDecodeData","branch","addTeamMember","setAddTeamMember","useState","member","role","selectedMember","setSelectedMember","selectedValues","setSelectedValues","userData","setUserData","loadings","setLoadings","memberLoader","setMemberLoader","console","log","setFieldsValue","budget","summary","flow","flowName","name","techHead","tech_headId","dataHead","data_headId","prodHead","prod_headId","startDateValue","startDate","dayjs","endDateValue","endDate","filesValue","file","currency","category","categoryID","prodHeadOption","map","value","id","label","_jsxs","className","children","_jsx","src","profile_pic","ImageUrl","profileImage1","style","width","alt","marginLeft","title","cursor","techHeadOption","dataHeadOption","options","categoryOption","cate","userOptions","useEffect","async","url","get","headers","getHeaders","then","response","_data$member","memberDetails","data","userId","catch","error","getMemberData","getUserList","resetModal","errors","setErrors","members","selectedMemberIds","Number","filteredOptions","filter","option","includes","CRow","CCol","xs","md","display","alignItems","onClick","handleClose","marginTop","BackArrowSvg","height","viewBox","fill","color","Breadcrumb","separator","items","Link","rel","to","overflowY","overflowX","Card","backgroundColor","sm","justifyContent","marginBottom","marginRight","PlusSvg","CForm","onSubmit","e","preventDefault","isFormValid","validateForm","Array","from","length","forEach","key","Object","values","some","formData","FormData","method","team","index","append","concat","toast","success","message","position","POSITION","BOTTOM_RIGHT","autoClose","_error$response","_error$response$data","Row","Col","CFormLabel","htmlFor","Select","find","feedbackInvalid","textAlign","_","Skeleton","avatar","size","paragraph","rows","disabled","suffixIcon","Downarrowimg","onChange","event","handleMember","selectedOption","newValue","prevSelectedMember","_userData$find","updatedMember","prevMember","memberId","filterOption","input","userName","props","lowerCaseInput","toLowerCase","required","showSearch","placeholder","allowClear","handleRole","prevRole","updatedRole","Option","Button","prevApprovalFlows","updatedFlows","splice","prevSelectedApprovals","updatedApprovals","prevErrors","updatedErrors","removeMember","DeleteSvg","fontSize","FileSvg","htmlType","loading","CheckOutlined","_Fragment","ref","initialValues","layout","requiredMark","fontWeight","gutter","stopPropagation","techOwnerName","selected","prodOwnerName","dataOwnerName","mode","variant","labelInValue","borderRadius","_ViewProductData$tech2","_ViewProductData$prod2","_ViewProductData$data2","lg","Item","rules","indexOf","Input","readOnly","DatePicker","paddingLeft","Calendar","format","TextArea","background","autoSize","minRows","maxRows","openFileInNewTab","window","open","type","float","eyeIcon","maxHeight","approvalFlow","approver","approverIndex","React","approStatus","stage1","stage2","stage3","stage","marginleft","techOwnerList","prodOwnerList","dataOwnerList","designation","selectedFile","setSelectedFile","status","setStatus","setStartDate","setEndDate","fileInputRef","loadingState","selectRef","setError","handleDropdownVisibleChange","visible","current","blur","techHeadValue","prodHeadValue","dataHeadValue","resetComponent","resetFields","techOwnerOptions","prodOwnerOptions","dataOwnerOptions","onFinish","validFormats","fileExtension","split","pop","keys","undefined","post","encType","validateTrigger","sx","onDropdownVisibleChange","pattern","maxLength","validator","getFieldValue","Error","disabledDate","startOf","handleStartDateChange","date","dateString","formattedDate","handleEndDateChange","handleBrowseClick","click","accept","target","files","prodOwner","dataOwner","maxTagCount","techOwner","EditProductData","callBackFunc","selectedProdOwnerIds","_mastersProd$find","Boolean","selectedTechOwnerIds","_mastersTech$find","selectedDataOwnerIds","_mastersData$find","put","CaretDownOutlined","offset","padding","xmlns","d","clipPath","transform","clipH","clipW","fillRule","clipRule"],"sourceRoot":""}