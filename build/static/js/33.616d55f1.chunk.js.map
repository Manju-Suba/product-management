{"version":3,"file":"static/js/33.616d55f1.chunk.js","mappings":"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","sources":["views/Reports/AllReport.js","views/svgImages/DownloadSvg.js","views/Reports/ViewReport.js","views/Reports/MyTeam.js","views/Reports/MyReport.js","views/Reports/Report.js","views/svgImages/BackArrowSvg.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport { Select, Breadcrumb, DatePicker, Button, Skeleton } from 'antd'\nimport {\n  CCol,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CSpinner,\n  CRow,\n} from '@coreui/react'\nimport { getHeaders, ImageUrl } from 'src/constant/Global'\nimport profileImage1 from '../../assets/images/avatars/wrapper.png'\nimport PropTypes from 'prop-types'\nimport 'react-toastify/dist/ReactToastify.css'\nimport dayjs from 'dayjs'\nimport useAxios from 'src/constant/UseAxios'\nimport { DownloadOutlined } from '@ant-design/icons'\nimport InfiniteScroll from 'react-infinite-scroll-component'\nimport Downarrowimg from '../../assets/images/downarrow.png'\nimport { toPascalCase } from '../../constant/TimeUtils'\nimport { Link } from 'react-router-dom'\nconst { RangePicker } = DatePicker\nconst AllReport = ({ today, formatDate, status }) => {\n  let api = useAxios()\n  const [activeTab] = useState(status)\n  const [supervisorId, setSupervisorId] = useState(0)\n  const [supervisorName, setSupervisorName] = useState('')\n  const [memberId, setMemberId] = useState(0)\n  const [memberName, setMemberName] = useState('')\n  const [timesheetData, setTimesheetData] = useState([])\n  const [supervisorList, setsupervisorList] = useState([])\n  const [memberList, setMemberList] = useState([])\n  const [commonLoader, setCommonLoader] = useState(true)\n  const [loading, setLoading] = useState(false)\n  // const [hasMore, setHasMore] = useState(true)\n  const hasMoreRef = useRef(true)\n  const pageRef = useRef(1)\n  const supervisorIdRef = useRef(0)\n  const dateWiseRef = useRef(today)\n  // const companyIdRef = useRef(null)\n  const memberIdRef = useRef(0)\n  const rangePickerRef = useRef()\n  const [startDate, setStartDate] = useState(today)\n  const [endDate, setEndDate] = useState(today)\n  const startDateRef = useRef(today)\n  const endDateRef = useRef(today)\n  const [abortController, setAbortController] = useState(new AbortController())\n  const [abortControllerSupervisor, setAbortControllerSupervisor] = useState(new AbortController())\n  const [suprLoader, setSuprLoader] = useState(false)\n  const [memberLoader, setMemberLoader] = useState(false)\n  const statusRef = useRef('all')\n  const companyRef = useRef('')\n\n  useEffect(() => {\n    getAllReport(startDateRef.current, endDateRef.current)\n    hasMoreRef.current = true\n    setSuprLoader(true)\n    getSupervisorList()\n    const tableContainer = document.querySelector('.table-container')\n    tableContainer.addEventListener('scroll', handleScroll)\n    return () => {\n      tableContainer.removeEventListener('scroll', handleScroll)\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const handleScroll = () => {\n    const tableContainer = document.querySelector('.table-container')\n    if (tableContainer.scrollTop + tableContainer.clientHeight === tableContainer.scrollHeight) {\n      if (hasMoreRef.current === true) {\n        if (supervisorIdRef.current !== 0 && memberIdRef.current === 0) {\n          getReport(\n            dayjs(startDateRef.current).format('YYYY-MM-DD'),\n            dayjs(endDateRef.current).format('YYYY-MM-DD'),\n            supervisorIdRef.current,\n          )\n        } else if (memberIdRef.current !== 0) {\n          getMemberReport(\n            dayjs(startDateRef.current).format('YYYY-MM-DD'),\n            dayjs(endDateRef.current).format('YYYY-MM-DD'),\n            memberId,\n          )\n        } else if (memberIdRef.current === 0 && supervisorIdRef.current === 0) {\n          getAllReport(\n            dayjs(startDateRef.current).format('YYYY-MM-DD'),\n            dayjs(endDateRef.current).format('YYYY-MM-DD'),\n          )\n        }\n      }\n    }\n  }\n\n  const getSupervisorList = async (value) => {\n    const url = value !== undefined ? `user/supervisorlist?company=${value}` : `user/supervisorlist`\n    // const url = `user/supervisorlist?company=${value}`\n    await api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        const supervisor = response.data.data\n        setsupervisorList(supervisor)\n        setSuprLoader(false)\n      })\n      .catch((error) => {\n        //console.error('Error fetching data:', error)\n      })\n  }\n\n  const getMemberList = async (id) => {\n    let newAbortController\n    if (pageRef.current === 1) {\n      setCommonLoader(true)\n      setMemberList([])\n      if (abortController) {\n        abortController.abort()\n      }\n      newAbortController = new AbortController()\n      setAbortController(newAbortController)\n    }\n    const url = `user/supervisor/${id}`\n    await api\n      .get(url, {\n        headers: getHeaders('json'),\n        signal: newAbortController?.signal,\n      })\n      .then((response) => {\n        const member = response.data.data\n        setMemberList(member)\n        setCommonLoader(false)\n        setMemberLoader(false)\n      })\n      .catch((error) => {\n        //console.error('Error fetching data:', error)\n      })\n  }\n\n  //supervisor option\n  const options = supervisorList.map((user) => ({\n    value: user.name,\n    label: (\n      <div className=\"select-options select-options-bg\">\n        <img\n          src={user.profile_pic ? ImageUrl + user.profile_pic : profileImage1}\n          style={user.profile_pic ? { width: '29px' } : { width: '39px' }}\n          alt={user.name}\n          className=\"img-flag\"\n        />\n        <div className=\"node1\" style={user.profile_pic ? { marginLeft: '11px' } : {}}>\n          <p className=\"user-name1\" title={user.name}>\n            {toPascalCase(user.name)}\n          </p>\n          <p className=\"role-text1\">{user.role}</p>\n        </div>\n      </div>\n    ),\n  }))\n\n  //member option\n  const options1 = memberList.map((user) => ({\n    value: user.name,\n    label: (\n      <div className=\"select-options select-options-bg\">\n        <img\n          src={user.profile_pic ? ImageUrl + user.profile_pic : profileImage1}\n          style={user.profile_pic ? { width: '29px' } : { width: '39px' }}\n          alt={user.name}\n          className=\"img-flag\"\n        />\n        <div className=\"node1\" style={user.profile_pic ? { marginLeft: '11px' } : {}}>\n          <p className=\"user-name1\" title={user.name}>\n            {toPascalCase(user.name)}\n          </p>\n          <p className=\"role-text1\">{user.role}</p>\n        </div>\n      </div>\n    ),\n  }))\n  const getAllReport = async (start, end, company) => {\n    let newAbortController\n    if (pageRef.current === 1) {\n      setCommonLoader(true)\n      setTimesheetData([])\n      if (abortController) {\n        abortController.abort()\n      }\n      newAbortController = new AbortController()\n      setAbortController(newAbortController)\n    }\n    let url =\n      companyRef.current === ''\n        ? `user/supervisorid/all/${start}/${end}/${statusRef.current}/${pageRef.current}/10`\n        : `user/supervisorid/all/${start}/${end}/${statusRef.current}/${pageRef.current}/10?company=${companyRef.current}`\n\n    try {\n      const response = await api.get(url, {\n        headers: getHeaders('json'),\n        signal: newAbortController?.signal,\n      })\n      const data = response.data.data.content\n\n      if (pageRef.current === 1) setTimesheetData(data)\n      else setTimesheetData((prevTimesheetData) => [...prevTimesheetData, ...data])\n      if (data.length < 10) {\n        hasMoreRef.current = false\n      }\n\n      // Increment the page number for the next fetch\n      pageRef.current = pageRef.current + 1\n      setCommonLoader(false)\n    } catch (error) {\n      //console.error('Error fetching data:', error)\n    }\n  }\n\n  //getallreports based on company\n  const getAllReportbasedCompany = async (start, end, value) => {\n    let newAbortController\n    if (pageRef.current === 1) {\n      setCommonLoader(true)\n      setTimesheetData([])\n      if (abortController) {\n        abortController.abort()\n      }\n      newAbortController = new AbortController()\n      setAbortController(newAbortController)\n    }\n    const url =\n      value !== undefined\n        ? `user/supervisorid/all/${start}/${end}/${statusRef.current}/${pageRef.current}/10?company=${value}`\n        : `user/supervisorid/all/${start}/${end}/${statusRef.current}/${pageRef.current}/10`\n    // let url = `user/supervisorid/all/${start}/${end}/${statusRef.current}/${pageRef.current}/10?company=${companyIdRef.current}`\n\n    try {\n      const response = await api.get(url, {\n        headers: getHeaders('json'),\n        signal: newAbortController?.signal,\n      })\n      const data = response.data.data.content\n\n      if (pageRef.current === 1) setTimesheetData(data)\n      else setTimesheetData((prevTimesheetData) => [...prevTimesheetData, ...data])\n      if (data.length < 10) {\n        hasMoreRef.current = false\n      }\n\n      // Increment the page number for the next fetch\n      pageRef.current = pageRef.current + 1\n      setCommonLoader(false)\n    } catch (error) {\n      //console.error('Error fetching data:', error)\n    }\n  }\n\n  const handleSupervisorChange = (selectedOption) => {\n    if (selectedOption) {\n      pageRef.current = 1\n      hasMoreRef.current = true\n      setMemberName('')\n      setMemberId(0)\n      setTimesheetData([])\n      setCommonLoader(true)\n      setMemberList([])\n      memberIdRef.current = 0\n      const newValue = selectedOption\n      const names = Number(supervisorList.find((user) => user.name === newValue)?.id || '')\n      setSupervisorName(newValue)\n      setSupervisorId(names)\n      supervisorIdRef.current = names\n      getReport(\n        dayjs(startDateRef.current).format('YYYY-MM-DD'),\n        dayjs(endDateRef.current).format('YYYY-MM-DD'),\n        names,\n      )\n      setMemberLoader(true)\n      getMemberList(names)\n    } else {\n      setSupervisorName('')\n      setSupervisorId(0)\n      setTimesheetData([])\n      setCommonLoader(true)\n      supervisorIdRef.current = 0\n      hasMoreRef.current = true\n      pageRef.current = 1\n      setMemberList([])\n      getAllReport(\n        dayjs(startDateRef.current).format('YYYY-MM-DD'),\n        dayjs(endDateRef.current).format('YYYY-MM-DD'),\n      )\n    }\n  }\n  const getReport = async (start, end, id) => {\n    let newAbortController\n    if (pageRef.current === 1) {\n      setCommonLoader(true)\n      setTimesheetData([])\n      if (abortControllerSupervisor) {\n        abortControllerSupervisor.abort()\n      }\n      newAbortController = new AbortController()\n      setAbortControllerSupervisor(newAbortController)\n    }\n    let url = `user/supervisorid/all/${start}/${end}/${statusRef.current}/${pageRef.current}/10?supervisorId=${id}`\n    await api\n      .get(url, {\n        headers: getHeaders('json'),\n        signal: newAbortController?.signal,\n      })\n      .then((response) => {\n        const data = response.data.data.content\n        if (pageRef.current === 1) setTimesheetData(data)\n        else setTimesheetData((prevTimesheetData) => [...prevTimesheetData, ...data])\n        if (data.length < 10) {\n          hasMoreRef.current = false\n        }\n        pageRef.current = pageRef.current + 1\n        setCommonLoader(false)\n      })\n      .catch((error) => {\n        //console.error('Error fetching data:', error)\n      })\n  }\n  const handleMemberChange = (selectedOption) => {\n    if (selectedOption) {\n      const newValue = selectedOption\n      const names = Number(memberList.find((user) => user.name === newValue)?.id || '')\n      setMemberName(newValue)\n      setMemberId(names)\n      setTimesheetData([])\n      setCommonLoader(true)\n      pageRef.current = 1\n      hasMoreRef.current = true\n      memberIdRef.current = names\n      getMemberReport(\n        dayjs(startDateRef.current).format('YYYY-MM-DD'),\n        dayjs(endDateRef.current).format('YYYY-MM-DD'),\n        names,\n      )\n    } else {\n      setMemberName('')\n      setMemberId(0)\n      setTimesheetData([])\n      setCommonLoader(true)\n      hasMoreRef.current = true\n      memberIdRef.current = 0\n      pageRef.current = 1\n      getReport(\n        dayjs(startDateRef.current).format('YYYY-MM-DD'),\n        dayjs(endDateRef.current).format('YYYY-MM-DD'),\n        supervisorId,\n      )\n    }\n  }\n  const getMemberReport = async (start, end, id) => {\n    let newAbortController\n    if (pageRef.current === 1) {\n      setCommonLoader(true)\n      setTimesheetData([])\n      if (abortController) {\n        abortController.abort()\n      }\n      newAbortController = new AbortController()\n      setAbortController(newAbortController)\n    }\n    let url = `user/supervisorid/all/${start}/${end}/${statusRef.current}/${pageRef.current}/10?memberId=${id}`\n    await api\n      .get(url, {\n        headers: getHeaders('json'),\n        signal: newAbortController?.signal,\n      })\n      .then((response) => {\n        const data = response.data.data.content\n        if (pageRef.current === 1) setTimesheetData(data)\n        else setTimesheetData((prevTimesheetData) => [...prevTimesheetData, ...data])\n        if (data.length < 10) {\n          hasMoreRef.current = false\n        }\n        pageRef.current = pageRef.current + 1\n        setCommonLoader(false)\n      })\n      .catch((error) => {\n        //console.error('Error fetching data:', error)\n      })\n  }\n  const formatTimeDuration = (timeString) => {\n    if (timeString !== '' && timeString !== null) {\n      const [hours, minutes] = timeString.split(':').map(Number)\n      let formattedTime = ''\n      if (hours > 0) {\n        formattedTime += `${hours} hrs`\n      }\n      if (minutes > 0) {\n        formattedTime += ` ${minutes} mins`\n      }\n      return formattedTime.trim()\n    } else {\n      return '-'\n    }\n  }\n  const handleDownload = async (status, date, supId, memId) => {\n    setLoading(true)\n    const from = dayjs(startDate).format('YYYY-MM-DD')\n    const to = dayjs(endDate).format('YYYY-MM-DD')\n    const url =\n      companyRef.current === ''\n        ? `GenerateReport/downloadExcel?fromDate=${from}&toDate=${to}&status=${statusRef.current}&supervisorid=${supId}&memberid=${memId}`\n        : `GenerateReport/downloadExcel?fromDate=${from}&toDate=${to}&companyid=${companyRef.current}&status=${statusRef.current}&supervisorid=${supId}&memberid=${memId}`\n\n    try {\n      const response = await api.get(url, {\n        headers: {\n          'Content-Type': 'application/octet-stream',\n        },\n        responseType: 'arraybuffer',\n      })\n      // Create a Blob object from the binary data\n      const blob = new Blob([response.data], {\n        type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n      })\n\n      // Create a link element and trigger the download\n      const link = document.createElement('a')\n      link.href = window.URL.createObjectURL(blob)\n      link.download = `${status}_details_${date}.xlsx`\n      document.body.appendChild(link)\n      link.click()\n      document.body.removeChild(link)\n      setLoading(false) // Set loading to false regardless of success or error\n    } catch (error) {\n      //console.error('Error fetching data:', error)\n    }\n  }\n\n  const handleStartDateChange = (date) => {\n    if (date) {\n      pageRef.current = 1\n      hasMoreRef.current = true\n      supervisorIdRef.current = 0\n      memberIdRef.current = 0\n      setMemberName('')\n      setMemberId(0)\n      setSupervisorName('')\n      setSupervisorId(0)\n      setTimesheetData([])\n      setCommonLoader(true)\n      setMemberList([])\n      setStartDate(date[0])\n      setEndDate(date[1])\n      startDateRef.current = date[0]\n      endDateRef.current = date[1]\n      getAllReport(dayjs(date[0]).format('YYYY-MM-DD'), dayjs(date[1]).format('YYYY-MM-DD'))\n    }\n  }\n\n  const ranges = {\n    'Past 1 Week': [dayjs().subtract(6, 'days'), dayjs()],\n    'Past 2 Weeks': [dayjs().subtract(13, 'days'), dayjs()],\n    'Past 1 Month': [dayjs().subtract(1, 'months'), dayjs()],\n    'Custom Range': [null, null], // Placeholder for custom range\n  }\n\n  const handleStatusChange = (value) => {\n    if (value === undefined) {\n      statusRef.current = 'all'\n    } else {\n      statusRef.current = value\n    }\n    pageRef.current = 1\n    hasMoreRef.current = true\n    if (memberIdRef.current === 0 && supervisorIdRef.current === 0) {\n      getAllReport(\n        dayjs(startDateRef.current).format('YYYY-MM-DD'),\n        dayjs(endDateRef.current).format('YYYY-MM-DD'),\n      )\n    } else if (memberIdRef.current === 0 && supervisorIdRef.current !== 0) {\n      getReport(\n        dayjs(startDateRef.current).format('YYYY-MM-DD'),\n        dayjs(endDateRef.current).format('YYYY-MM-DD'),\n        supervisorIdRef.current,\n      )\n    } else if (memberIdRef.current !== 0 && supervisorIdRef.current !== 0) {\n      getMemberReport(\n        dayjs(startDateRef.current).format('YYYY-MM-DD'),\n        dayjs(endDateRef.current).format('YYYY-MM-DD'),\n        memberIdRef.current,\n      )\n    }\n  }\n  const handleCompanyChange = (value) => {\n    getSupervisorList(value)\n    companyRef.current = value\n    pageRef.current = 1\n    hasMoreRef.current = true\n    if (memberIdRef.current === 0 && supervisorIdRef.current === 0) {\n      getAllReportbasedCompany(\n        dayjs(startDateRef.current).format('YYYY-MM-DD'),\n        dayjs(endDateRef.current).format('YYYY-MM-DD'),\n        value,\n      )\n    } else if (memberIdRef.current === 0 && supervisorIdRef.current !== 0) {\n      getReport(\n        dayjs(startDateRef.current).format('YYYY-MM-DD'),\n        dayjs(endDateRef.current).format('YYYY-MM-DD'),\n        supervisorIdRef.current,\n      )\n    } else if (memberIdRef.current !== 0 && supervisorIdRef.current !== 0) {\n      getMemberReport(\n        dayjs(startDateRef.current).format('YYYY-MM-DD'),\n        dayjs(endDateRef.current).format('YYYY-MM-DD'),\n        memberIdRef.current,\n      )\n    }\n  }\n\n  return (\n    <>\n      <CRow className=\"mt-3\">\n        <CCol sm={2} md={2} lg={2} xl={2}>\n          <b style={{ paddingLeft: '30px' }}>{activeTab}</b>\n          <br />\n          <Breadcrumb\n            style={{ paddingLeft: '30px' }}\n            className=\"bread-tab\"\n            separator={<span className=\"breadcrumb-separator\">|</span>}\n            items={[\n              {\n                title: (\n                  <Link\n                    rel=\"Dashboard\"\n                    to={'/dashboard'}\n                    className=\"bread-items text-decoration-none text-secondary \"\n                  >\n                    Dashboard\n                  </Link>\n                ),\n              },\n              {\n                title: (\n                  <span className=\"text-secondary \" style={{ cursor: 'default' }}>\n                    All Report\n                  </span>\n                ),\n              },\n            ]}\n          />\n        </CCol>\n        <CCol sm={2} md={2} lg={2} xl={2}>\n          <RangePicker\n            variant=\"borderless\"\n            ranges={ranges}\n            style={{ width: '94%' }}\n            ref={rangePickerRef}\n            className=\"rangeField report_rangepicker\"\n            onChange={handleStartDateChange}\n            defaultValue={[dayjs(startDate, 'YYYY-MM-DD'), dayjs(endDate, 'YYYY-MM-DD')]}\n            calendar=\"date\"\n            format=\"DD MMM,YY\"\n            allowClear={false}\n            disabledDate={(current) => current && current > dayjs().endOf('day')}\n          />\n        </CCol>\n\n        <CCol sm={2} md={1} lg={1} xl={1} style={{ padding: '0px' }}>\n          <Select\n            className=\"choose_mem_report \"\n            id=\"member-list\"\n            onChange={(value) => handleCompanyChange(value)}\n            options={[\n              {\n                value: 'hepl',\n                label: 'HEPL',\n              },\n              {\n                value: 'citpl',\n                label: 'CITPL',\n              },\n            ]}\n            placeholder=\"Company\"\n            allowClear\n            showSearch\n            style={{ width: '-webkit-fill-available' }}\n            suffixIcon={\n              <img src={Downarrowimg} alt={Downarrowimg} style={{ width: '10px', height: '6px' }} />\n            }\n          />\n        </CCol>\n\n        <CCol sm={3} md={2} lg={1} xl={2}>\n          <Select\n            className=\"choose_mem_report \"\n            id=\"member-list\"\n            onChange={(value) => handleStatusChange(value)}\n            options={[\n              {\n                value: 'entered',\n                label: 'Entered',\n              },\n              {\n                value: 'not entered',\n                label: 'Not Entered',\n              },\n            ]}\n            placeholder=\"Choose Status\"\n            allowClear\n            showSearch\n            style={{ width: '-webkit-fill-available' }}\n            suffixIcon={\n              <img src={Downarrowimg} alt={Downarrowimg} style={{ width: '10px', height: '6px' }} />\n            }\n          />\n        </CCol>\n        <CCol sm={2} md={2} lg={2} xl={2}>\n          <Select\n            className=\" custom-select-report \"\n            id=\"supervisor-list\"\n            value={options.find((option) => option.value === supervisorName) || null}\n            onChange={handleSupervisorChange}\n            options={\n              suprLoader\n                ? [\n                    {\n                      label: (\n                        <div style={{ textAlign: 'center' }}>\n                          {Array.from({ length: 5 }, (_, index) => (\n                            <Skeleton\n                              key={index}\n                              title={false}\n                              avatar={{\n                                size: '20',\n                              }} // Adjust the width and height here\n                              paragraph={{\n                                rows: 2,\n                                height: '10px',\n                                style: { height: '10px !important' },\n                              }}\n                            />\n                          ))}\n                        </div>\n                      ),\n                      value: 'loading',\n                      disabled: true,\n                    },\n                  ]\n                : options\n            }\n            placeholder=\"Choose Supervisor\"\n            allowClear\n            showSearch\n            style={{ width: '-webkit-fill-available' }}\n            suffixIcon={\n              <img src={Downarrowimg} alt={Downarrowimg} style={{ width: '10px', height: '6px' }} />\n            }\n          />\n        </CCol>\n\n        {/* Member&rsquo;s */}\n        <CCol sm={2} md={2} lg={2} xl={2}>\n          <Select\n            className=\"choose_mem_report \"\n            id=\"member-list\"\n            value={options1.find((option) => option.value === memberName) || null}\n            onChange={handleMemberChange}\n            options={\n              memberLoader\n                ? [\n                    {\n                      label: (\n                        <div style={{ textAlign: 'center' }}>\n                          {Array.from({ length: 5 }, (_, index) => (\n                            <Skeleton\n                              key={index}\n                              title={false}\n                              avatar={{\n                                size: '20',\n                              }} // Adjust the width and height here\n                              paragraph={{\n                                rows: 2,\n                                height: '10px',\n                                style: { height: '10px !important' },\n                              }}\n                            />\n                          ))}\n                        </div>\n                      ),\n                      value: 'loading',\n                      disabled: true,\n                    },\n                  ]\n                : options1\n            }\n            placeholder=\"Choose Member\"\n            allowClear\n            showSearch\n            style={{ width: '-webkit-fill-available' }}\n            suffixIcon={\n              <img src={Downarrowimg} alt={Downarrowimg} style={{ width: '10px', height: '6px' }} />\n            }\n          />\n        </CCol>\n        <CCol sm={1} xl={1}>\n          <Button\n            className=\"submit-button-dow btn-sm save_changes down_excel_button\"\n            loading={loading}\n            style={{\n              cursor: timesheetData.length === 0 ? 'not-allowed' : 'pointer',\n              fontSize: '11px',\n              color: 'white',\n              height: '42px',\n              width: '20%',\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n            }}\n            type=\"button\"\n            title=\"Download as Excel\"\n            disabled={timesheetData.length === 0}\n            onClick={() => handleDownload(activeTab, dateWiseRef.current, supervisorId, memberId)}\n          >\n            <DownloadOutlined />\n          </Button>\n        </CCol>\n      </CRow>\n\n      <div className=\"table-container table_scroll-report\" style={{ border: 'none' }}>\n        <InfiniteScroll\n          dataLength={timesheetData.length}\n          next={handleScroll}\n          hasMore={hasMoreRef.current}\n          loader={\n            <div className=\"text-c text-center my-3 td-text\">\n              <CSpinner color=\"danger\" />\n            </div>\n          }\n          endMessage={\n            timesheetData.length !== 0 && (\n              <p style={{ textAlign: 'center' }}>\n                <b style={{ color: '#e40e2d', fontSize: '12px' }}>No more Data to load</b>\n              </p>\n            )\n          }\n          // loader={<h4>Loading...</h4>}\n        >\n          <CTable hover>\n            <CTableHead className=\"head-row draft-head-row-ts\">\n              <CTableRow>\n                <CTableHeaderCell\n                  className=\"table-head-productlist text-c text-center\"\n                  scope=\"col\"\n                  width=\"4%\"\n                >\n                  SI.No\n                </CTableHeaderCell>\n                <CTableHeaderCell className=\"table-head-productlist text-c\" scope=\"col\" width=\"10%\">\n                  Activity Date\n                </CTableHeaderCell>\n                <CTableHeaderCell className=\"table-head-productlist text-c\" scope=\"col\" width=\"8%\">\n                  Branch\n                </CTableHeaderCell>\n                <CTableHeaderCell className=\"table-head-productlist text-c\" scope=\"col\" width=\"10%\">\n                  Member\n                </CTableHeaderCell>\n                <CTableHeaderCell className=\"table-head-productlist text-c\" scope=\"col\" width=\"10%\">\n                  Supervisor Name\n                </CTableHeaderCell>\n\n                <CTableHeaderCell className=\"table-head-productlist text-c\" scope=\"col\" width=\"10%\">\n                  Supervisor Status\n                </CTableHeaderCell>\n                <CTableHeaderCell className=\"table-head-productlist text-c\" scope=\"col\" width=\"10%\">\n                  Tot.of.hrs\n                </CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {!timesheetData ? (\n                <div></div>\n              ) : (\n                timesheetData.map((row, index) => (\n                  <CTableRow key={index}>\n                    <CTableDataCell className=\"text-c text-center pd-text1 grid-cell\">\n                      {index + 1}\n                    </CTableDataCell>\n                    <CTableDataCell className=\"text-c pd-text1 grid-cell\">\n                      {formatDate(row.activity_date)}\n                    </CTableDataCell>\n                    <CTableDataCell className=\" text-c pd-text1 grid-cell\">\n                      {row.branch}\n                    </CTableDataCell>\n                    <CTableDataCell className=\"text-c pd-text1 grid-cell\">\n                      {row.userName !== null ? toPascalCase(row.userName) : '-'}\n                    </CTableDataCell>\n                    <CTableDataCell className=\"text-c pd-text1 grid-cell\">\n                      {row.supervisorName !== null ? toPascalCase(row.supervisorName) : '-'}\n                    </CTableDataCell>\n\n                    <CTableDataCell\n                      className={`text-c grid-cell ${\n                        row.supervisorStatus === 'Approved'\n                          ? 'green-text1 '\n                          : row.supervisorStatus === 'Pending'\n                          ? 'warning-text1 '\n                          : row.supervisorStatus === 'Reject'\n                          ? 'red-text1 '\n                          : 'pd-text1'\n                      }`}\n                      width=\"10%\"\n                    >\n                      <span>\n                        {row.supervisorStatus === 'Approved' && (\n                          <span style={{ fontSize: '16px' }}>&#8226;</span>\n                        )}\n                        {row.supervisorStatus === 'Pending' && (\n                          <span style={{ fontSize: '16px' }}>&#8226;</span>\n                        )}\n                        {row.supervisorStatus === 'Reject' && (\n                          <span style={{ fontSize: '16px' }}>&#8226;</span>\n                        )}\n                        <span style={{ marginLeft: '5px' }}>\n                          {row.supervisorStatus ? row.supervisorStatus : '-'}\n                        </span>\n                      </span>\n                    </CTableDataCell>\n                    <CTableDataCell className=\"text-c pd-text1 grid-cell\">\n                      {formatTimeDuration(row.hours)}\n                    </CTableDataCell>\n                  </CTableRow>\n                ))\n              )}\n            </CTableBody>\n          </CTable>\n          {(timesheetData === null && !commonLoader) ||\n          (timesheetData.length === 0 && !commonLoader) ? (\n            <div className=\"text-c text-center my-3 td-text\">No Data Found</div>\n          ) : commonLoader ? (\n            <div className=\"text-c text-center my-3 td-text\">\n              <CSpinner color=\"danger\" />\n            </div>\n          ) : (\n            <div></div>\n          )}\n        </InfiniteScroll>\n      </div>\n    </>\n  )\n}\n\nAllReport.propTypes = {\n  today: PropTypes.string,\n  formatDate: PropTypes.func,\n  status: PropTypes.string,\n}\nexport default AllReport\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst DownloadSvg = ({ width, height, fill, viewBox }) => (\n  <svg\n    width={width}\n    height={height}\n    viewBox={viewBox}\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <g clipPath=\"url(#clip0_5042_52946)\">\n      <path\n        d=\"M7.4094 13.5918C7.61835 13.8006 7.86645 13.9664 8.13953 14.0796C8.41261 14.1928 8.70531 14.251 9.0009 14.251C9.2965 14.251 9.5892 14.1928 9.86227 14.0796C10.1353 13.9664 10.3835 13.8006 10.5924 13.5918L13.0007 11.1833C13.1298 11.0404 13.199 10.8535 13.1941 10.661C13.1891 10.4685 13.1104 10.2853 12.9741 10.1494C12.8378 10.0134 12.6545 9.93499 12.462 9.93045C12.2695 9.92592 12.0827 9.99558 11.9402 10.125L9.74565 12.3202L9.7509 0.75C9.7509 0.551088 9.67188 0.360322 9.53123 0.21967C9.39058 0.0790176 9.19981 0 9.0009 0C8.80199 0 8.61122 0.0790176 8.47057 0.21967C8.32992 0.360322 8.2509 0.551088 8.2509 0.75L8.24418 12.306L6.06165 10.125C5.92092 9.98437 5.73009 9.9054 5.53114 9.90547C5.33218 9.90554 5.14141 9.98464 5.00078 10.1254C4.86018 10.2661 4.78118 10.4569 4.78125 10.6559C4.78132 10.8548 4.86042 11.0456 5.00118 11.1862L7.4094 13.5918Z\"\n        fill={fill}\n      />\n      <path\n        d=\"M17.25 12C17.0511 12 16.8603 12.079 16.7197 12.2197C16.579 12.3603 16.5 12.5511 16.5 12.75V18.75C16.5 18.9489 16.421 16.1397 16.2803 16.2803C16.1397 16.421 18.9489 16.5 18.75 16.5H2.25C2.05109 16.5 1.86032 16.421 1.71967 16.2803C1.57902 16.1397 1.5 18.9489 1.5 18.75V12.75C1.5 12.5511 1.42098 12.3603 1.28033 12.2197C1.13968 12.079 0.948912 12 0.75 12C0.551088 12 0.360322 12.079 0.21967 12.2197C0.0790176 12.3603 0 12.5511 0 12.75L0 18.75C0 16.3467 0.237053 16.919 0.65901 17.341C1.08097 17.7629 1.65326 18 2.25 18H18.75C16.3467 18 16.919 17.7629 17.341 17.341C17.7629 16.919 18 16.3467 18 18.75V12.75C18 12.5511 17.921 12.3603 17.7803 12.2197C17.6397 12.079 17.4489 12 17.25 12Z\"\n        fill={fill}\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_5042_52946\">\n        <rect width={width} height={height} fill={fill} />\n      </clipPath>\n    </defs>\n  </svg>\n)\n\nDownloadSvg.propTypes = {\n  width: PropTypes.string,\n  height: PropTypes.string,\n  fill: PropTypes.string,\n  viewBox: PropTypes.string,\n}\nexport default DownloadSvg\n","import React, { useRef, useEffect, useState } from 'react'\nimport {\n  CCol,\n  CSpinner,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport PropTypes from 'prop-types'\nimport { getHeaders } from '../../constant/Global'\nimport { Breadcrumb, Col, Row, Button, DatePicker } from 'antd'\nimport { DownloadOutlined } from '@ant-design/icons'\nimport BackArrowSvg from 'src/views/svgImages/BackArrowSvg'\nimport { Link } from 'react-router-dom'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport useAxios from 'src/constant/UseAxios'\nimport dayjs from 'dayjs'\nconst { RangePicker } = DatePicker\n\nconst ViewReport = ({\n  close,\n  name,\n  id,\n  titleList,\n  today,\n  formatDate,\n  startDateValue,\n  endDateValue,\n}) => {\n  let api = useAxios()\n  const rangePickerRef = useRef()\n  const [commonLoader, setCommonLoader] = useState(true)\n  const [startDate, setStartDate] = useState(startDateValue)\n  const [timesheetData, setTimesheetData] = useState([])\n  const [endDate, setEndDate] = useState(endDateValue)\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    if (startDateValue && endDateValue) {\n      getMyReport(\n        dayjs(startDateValue).format('YYYY-MM-DD'),\n        dayjs(endDateValue).format('YYYY-MM-DD'),\n      )\n    }\n  }, [startDateValue, endDateValue])\n\n  const handleStartDateChange = (date) => {\n    if (date) {\n      setStartDate(date[0])\n      setEndDate(date[1])\n      getMyReport(dayjs(date[0]).format('YYYY-MM-DD'), dayjs(date[1]).format('YYYY-MM-DD'))\n    }\n  }\n\n  const getMyReport = async (start, end) => {\n    const url = `GenerateReport/id/${id}/date/${start}/${end}`\n\n    await api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        const data = response.data.data\n        // setTimesheetData(data)\n        const groupedData = data.reduce((acc, curr) => {\n          const activityDate = curr[0].activity_date // Assuming each inner array contains at least one record\n          if (!acc[activityDate]) {\n            acc[activityDate] = []\n          }\n          acc[activityDate].push(...curr)\n          return acc\n        }, {})\n        setTimesheetData(groupedData)\n\n        setCommonLoader(false)\n      })\n      .catch((error) => {\n        //console.error('Error fetching data:', error)\n      })\n  }\n  const formatTimeDuration = (timeString) => {\n    if (timeString !== '' && timeString !== null) {\n      const [hours, minutes] = timeString.split(':').map(Number)\n      let formattedTime = ''\n      if (hours > 0) {\n        formattedTime += `${hours} hrs`\n      }\n      if (minutes > 0) {\n        formattedTime += ` ${minutes} mins`\n      }\n      return formattedTime.trim()\n    } else {\n      return '-'\n    }\n  }\n\n  const handleDownloadPDF = async () => {\n    setLoading(true)\n    const startDateConv = dayjs(startDate).format('YYYY-MM-DD')\n    const endDateConv = dayjs(endDate).format('YYYY-MM-DD')\n    const url = `GenerateReport/pdf/${id}/${startDateConv}/${endDateConv}`\n\n    try {\n      const response = await api.get(url, {\n        headers: {\n          'Content-Type': 'application/octet-stream',\n        },\n        responseType: 'arraybuffer',\n      })\n      // Create a Blob object from the binary data\n      const blob = new Blob([response.data], {\n        type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n      })\n      // Create a link element and trigger the download\n      const link = document.createElement('a')\n      link.href = window.URL.createObjectURL(blob)\n      link.download = `Report_${startDate}_${endDate}.pdf`\n      document.body.appendChild(link)\n      link.click()\n      document.body.removeChild(link)\n      setLoading(false)\n    } catch (error) {\n      //console.error('Error fetching data:', error)\n    }\n  }\n  const ranges = {\n    'Past 1 Week': [dayjs().subtract(6, 'days'), dayjs()],\n    'Past 2 Weeks': [dayjs().subtract(13, 'days'), dayjs()],\n    'Past 1 Month': [dayjs().subtract(1, 'months'), dayjs()],\n    'Custom Range': [null, null], // Placeholder for custom range\n  }\n  return (\n    <>\n      <Row className=\"mt-3\" gutter={16}>\n        <Col sm={12}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ display: 'flex', alignItems: 'center', width: '35px' }}>\n              <span\n                className=\"\"\n                onClick={close}\n                style={{ cursor: 'pointer', marginLeft: '15px', marginTop: '15px' }}\n              >\n                <BackArrowSvg width=\"16\" height=\"15\" viewBox=\"0 0 18 18\" fill=\"#A5A1A1\" />\n              </span>\n            </div>\n            <CCol>\n              <h6 className=\"product-heading\" style={{ marginTop: '2%' }}>\n                View <span style={{ color: '#E01B38' }}>{name}</span>\n              </h6>\n              <Breadcrumb\n                className=\"bread-tab\"\n                separator={<span className=\"breadcrumb-separator\">|</span>}\n                items={[\n                  {\n                    title: (\n                      <Link\n                        rel=\"Dashboard\"\n                        to={'/dashboard'}\n                        className=\"bread-items text-decoration-none text-secondary \"\n                      >\n                        Dashboard\n                      </Link>\n                    ),\n                  },\n                  {\n                    title: (\n                      <span\n                        className=\"bread-items text-secondary second-subheading\"\n                        style={{ cursor: 'pointer' }}\n                        onClick={close}\n                      >\n                        Report List\n                      </span>\n                    ),\n                  },\n                  {\n                    title: (\n                      <span\n                        className=\"text-secondary second-subheading\"\n                        style={{ cursor: 'default' }}\n                      >\n                        Detail View\n                      </span>\n                    ),\n                  },\n                ]}\n              />\n            </CCol>\n          </div>\n        </Col>\n        <Col sm={2}></Col>\n        <Col sm={6}>\n          <RangePicker\n            variant={'borderless'}\n            style={{ width: '90%', marginTop: '15px' }}\n            className=\"rangeField range-file-view report_datepicker\"\n            ranges={ranges}\n            ref={rangePickerRef}\n            defaultValue={[dayjs(startDate, 'YYYY-MM-DD'), dayjs(endDate, 'YYYY-MM-DD')]}\n            onChange={handleStartDateChange}\n            format=\"DD MMM,YYYY\"\n            allowClear={false}\n            disabledDate={(current) => current && current > dayjs().endOf('day')}\n          />\n        </Col>\n        <Col sm={3}>\n          {/* <Popconfirm\n            title=\"Choose download format:\"\n            okText=\"Excel\"\n            cancelText=\"PDF\"\n            placement=\"left\"\n            // onConfirm={() => handleDownloadExcel(id, activityDate)}\n            // onCancel={() => handleDownloadPDF(id, activityDate)}\n          > */}\n          <Button\n            className=\" submit-button-view save_changes\"\n            loading={loading}\n            style={{\n              cursor: Object.keys(timesheetData).length === 0 ? 'not-allowed' : 'pointer',\n              fontSize: '13px',\n              marginTop: '7px',\n              width: '100%',\n              color: 'white',\n            }}\n            type=\"button\"\n            disabled={Object.keys(timesheetData).length === 0}\n            onClick={() => handleDownloadPDF()}\n          >\n            <DownloadOutlined />\n            Download\n          </Button>\n          {/* </Popconfirm> */}\n        </Col>\n      </Row>\n      <div className=\"table-container table_scroll\" style={{ border: 'none', marginTop: '20px' }}>\n        <CTable hover>\n          <CTableHead className=\"head-row draft-head-row-ts\">\n            <CTableRow>\n              <CTableHeaderCell\n                className=\"table-head-productlist text-c text-center \"\n                scope=\"col\"\n                width=\"4%\"\n              >\n                SI.No\n              </CTableHeaderCell>\n              <CTableHeaderCell className=\"table-head-productlist text-c\" scope=\"col\" width=\"10%\">\n                Product\n              </CTableHeaderCell>\n              <CTableHeaderCell className=\"table-head-productlist text-c\" scope=\"col\" width=\"8%\">\n                Task\n              </CTableHeaderCell>\n              <CTableHeaderCell className=\"table-head-productlist text-c\" scope=\"col\" width=\"10%\">\n                No.of.Hours\n              </CTableHeaderCell>\n              <CTableHeaderCell className=\"table-head-productlist text-c\" scope=\"col\" width=\"10%\">\n                Description\n              </CTableHeaderCell>\n              <CTableHeaderCell className=\"table-head-productlist text-c\" scope=\"col\" width=\"10%\">\n                User Status\n              </CTableHeaderCell>\n              <CTableHeaderCell className=\"table-head-productlist text-c\" scope=\"col\" width=\"10%\">\n                Approver Status\n              </CTableHeaderCell>\n              <CTableHeaderCell className=\"table-head-productlist text-c\" scope=\"col\" width=\"10%\">\n                Approver Remarks\n              </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {!timesheetData ? (\n              <div></div>\n            ) : (\n              Object.entries(timesheetData).map(([date, records], index) => (\n                <React.Fragment key={index}>\n                  {/* Thick line row with activity_date */}\n                  <CTableRow>\n                    <CTableDataCell colSpan={8} className=\"height_date grid-cell\">\n                      <span style={{ marginLeft: '12px', color: 'grey', fontSize: '10px' }}>\n                        {formatDate(date)}\n                      </span>\n                    </CTableDataCell>\n                  </CTableRow>\n                  {/* Records for current activity_date */}\n                  {records.map((row, rowIndex) => (\n                    <CTableRow key={rowIndex}>\n                      {/* Render your table data cells for each record */}\n                      <CTableDataCell className=\"text-c text-center pd-text1 grid-cell\">\n                        {rowIndex + 1}\n                      </CTableDataCell>\n                      <CTableDataCell className=\"text-c pd-text1 grid-cell\">\n                        {row.productName}\n                      </CTableDataCell>\n                      <CTableDataCell className=\"text-c pd-text1 grid-cell\">\n                        {row.task}\n                      </CTableDataCell>\n                      {/* Render other table data cells as needed */}\n                      <CTableDataCell className=\"text-c pd-text1 grid-cell\">\n                        {row.hours ? formatTimeDuration(row.hours) : '-'}\n                      </CTableDataCell>\n                      <CTableDataCell className=\"text-c pd-text1 grid-cell\">\n                        {row.description !== null ? row.description : '-'}\n                      </CTableDataCell>\n                      <CTableDataCell\n                        className={`text-c grid-cell ${\n                          row.userstatus === 'Approved'\n                            ? 'green-text1 '\n                            : row.userstatus === 'Pending'\n                            ? 'warning-text1 '\n                            : row.userstatus === 'Reject'\n                            ? 'red-text1 '\n                            : 'pd-text1'\n                        }`}\n                        width=\"10%\"\n                      >\n                        <span>\n                          {row.userstatus === 'Approved' && (\n                            <span style={{ fontSize: '20px' }}>&#8226;</span>\n                          )}\n                          {row.userstatus === 'Pending' && (\n                            <span style={{ fontSize: '20px' }}>&#8226;</span>\n                          )}\n                          {row.userstatus === 'Reject' && (\n                            <span style={{ fontSize: '20px' }}>&#8226;</span>\n                          )}\n                          <span style={{ marginLeft: '5px' }}>\n                            {row.userstatus ? row.userstatus : '-'}\n                          </span>\n                        </span>\n                      </CTableDataCell>\n                      <CTableDataCell\n                        className={`text-c grid-cell ${\n                          row.approveStatus === 'Approved'\n                            ? 'green-text1 '\n                            : row.approveStatus === 'Pending'\n                            ? 'warning-text1 '\n                            : row.approveStatus === 'Not yet'\n                            ? 'warning-text1 '\n                            : row.approveStatus === 'Reject'\n                            ? 'red-text1 '\n                            : 'pd-text1'\n                        }`}\n                        width=\"10%\"\n                      >\n                        <span>\n                          {row.approveStatus === 'Approved' && (\n                            <span style={{ fontSize: '16px' }}>&#8226;</span>\n                          )}\n                          {row.approveStatus === 'Pending' && (\n                            <span style={{ fontSize: '16px' }}>&#8226;</span>\n                          )}\n                          {row.approveStatus === 'Not yet' && (\n                            <span style={{ fontSize: '16px' }}>&#8226;</span>\n                          )}\n                          {row.approveStatus === 'Reject' && (\n                            <span style={{ fontSize: '16px' }}>&#8226;</span>\n                          )}\n                          <span style={{ marginLeft: '5px' }}>\n                            {row.approveStatus ? row.approveStatus : '-'}\n                          </span>\n                        </span>\n                      </CTableDataCell>\n                      <CTableDataCell className=\"text-c pd-text1 grid-cell\">\n                        {row.remarks ? row.remarks : '-'}\n                      </CTableDataCell>\n                    </CTableRow>\n                  ))}\n                </React.Fragment>\n              ))\n            )}\n          </CTableBody>\n        </CTable>\n\n        {(Object.keys(timesheetData).length === 0 && !commonLoader) ||\n        (timesheetData === undefined && !commonLoader) ||\n        (timesheetData.length === 0 && !commonLoader) ? (\n          <div className=\"text-c text-center my-3 td-text\">No Data Found</div>\n        ) : commonLoader ? (\n          <div className=\"text-c text-center my-3 td-text\">\n            <CSpinner color=\"danger\" />\n          </div>\n        ) : (\n          <div></div>\n        )}\n      </div>\n    </>\n  )\n}\nViewReport.propTypes = {\n  close: PropTypes.func,\n  name: PropTypes.string,\n  id: PropTypes.number,\n  titleList: PropTypes.string,\n  today: PropTypes.string,\n  formatDate: PropTypes.func,\n  startDateValue: PropTypes.any,\n  endDateValue: PropTypes.any,\n}\nexport default ViewReport\n","import React, { useState, useEffect, useRef } from 'react'\nimport { Select, Breadcrumb, DatePicker, Checkbox, Popconfirm, Skeleton } from 'antd'\nimport {\n  CCol,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CSpinner,\n} from '@coreui/react'\nimport { getHeaders, ImageUrl } from 'src/constant/Global'\nimport profileImage1 from '../../assets/images/avatars/wrapper.png'\nimport PropTypes from 'prop-types'\nimport 'react-toastify/dist/ReactToastify.css'\nimport dayjs from 'dayjs'\nimport useAxios from 'src/constant/UseAxios'\nimport DownloadSvg from '../svgImages/DownloadSvg'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport { DownloadOutlined, EyeFilled } from '@ant-design/icons'\nimport InfiniteScroll from 'react-infinite-scroll-component'\nimport ViewReport from './ViewReport'\nimport { Link } from 'react-router-dom'\nimport Downarrowimg from '../../assets/images/downarrow.png'\nimport { toPascalCase } from '../../constant/TimeUtils'\n\nconst { RangePicker } = DatePicker\n\nconst MyTeam = ({ today, formatDate }) => {\n  let api = useAxios()\n  const rangePickerRef = useRef()\n  const [commonLoader, setCommonLoader] = useState(true)\n  const [headerLabel, setHeaderLabel] = useState('')\n  const hasMoreRef = useRef(true)\n  const [timesheetData, setTimesheetData] = useState([])\n  const pageRef = useRef(0)\n  const [startDate, setStartDate] = useState(today)\n  const [endDate, setEndDate] = useState(today)\n  const startDateRef = useRef(today)\n  const endDateRef = useRef(today)\n  const [memberList, setMemberList] = useState([])\n  const [selectedRows, setSelectedRows] = useState([])\n  const [ids, setIds] = useState(0)\n  const [names, setNames] = useState('')\n  const [reportVisble, setReportVisible] = useState(false)\n  const [abortController, setAbortController] = useState(new AbortController())\n  const [memberLoader, setMemberLoader] = useState(false)\n  const rolestatus = useRef('all')\n  const memberIdRef = useRef(0)\n  const sizeRef = useRef(1)\n\n  useEffect(() => {\n    // if (!reportVisble) {\n    hasMoreRef.current = true\n    getAllReport(startDateRef.current, endDateRef.current)\n    setMemberLoader(true)\n    getMemberList()\n    const tableContainer = document.querySelector('.table-container')\n    tableContainer.addEventListener('scroll', handleScroll)\n    return () => {\n      tableContainer.removeEventListener('scroll', handleScroll)\n    }\n    // }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n  const handleStartDateChange = (date) => {\n    pageRef.current = 0\n    hasMoreRef.current = true\n    if (date) {\n      setStartDate(date[0])\n      setEndDate(date[1])\n      startDateRef.current = dayjs(date[0]).format('YYYY-MM-DD')\n      endDateRef.current = dayjs(date[1]).format('YYYY-MM-DD')\n      getAllReport(dayjs(date[0]).format('YYYY-MM-DD'), dayjs(date[1]).format('YYYY-MM-DD'))\n    }\n  }\n\n  const handleroletypeChange = (value) => {\n    if (value === undefined) {\n      rolestatus.current = 'all'\n    } else {\n      rolestatus.current = value\n    }\n    getMemberList()\n    pageRef.current = 0\n    sizeRef.current = 1\n    getAllReport(startDateRef.current, endDateRef.current)\n  }\n\n  const getMemberList = async () => {\n    let newAbortController\n    if (pageRef.current === 0) {\n      setCommonLoader(true)\n      setMemberList([])\n      if (abortController) {\n        abortController.abort()\n      }\n      newAbortController = new AbortController()\n      setAbortController(newAbortController)\n    }\n    const url = `GenerateReport/contractmembers?roletype=${rolestatus.current}`\n    await api\n      .get(url, {\n        headers: getHeaders('json'),\n        signal: newAbortController?.signal,\n      })\n      .then((response) => {\n        const members = response.data.data\n        setMemberList(members)\n        setMemberLoader(false)\n      })\n      .catch((error) => {\n        //console.error('Error fetching data:', error)\n      })\n  }\n  const memberOptions = memberList.map((user) => ({\n    value: user.name,\n    label: (\n      <div className=\"select-options select-options-bg\">\n        <img\n          src={user.profile_pic ? ImageUrl + user.profile_pic : profileImage1}\n          style={user.profile_pic ? { width: '29px' } : { width: '39px' }}\n          alt={user.name}\n          className=\"img-flag\"\n        />\n        <div className=\"node1\" style={user.profile_pic ? { marginLeft: '11px' } : {}}>\n          <p className=\"user-name1\" title={user.name}>\n            {' '}\n            {user.name}\n          </p>\n          <p className=\"role-text1\">{user.role}</p>\n        </div>\n      </div>\n    ),\n  }))\n  const formatTimeDuration = (timeString) => {\n    if (timeString !== '' && timeString !== null) {\n      const [hours, minutes] = timeString.split(':').map(Number)\n      let formattedTime = ''\n      if (hours > 0) {\n        formattedTime += `${hours} hrs`\n      }\n      if (minutes > 0) {\n        formattedTime += ` ${minutes} mins`\n      }\n      return formattedTime.trim()\n    } else {\n      return '-'\n    }\n  }\n\n  const getAllReport = async (start, end) => {\n    let newAbortController\n    if (pageRef.current === 0) {\n      setCommonLoader(true)\n      setTimesheetData([])\n      abortController.abort()\n      newAbortController = new AbortController()\n      setAbortController(newAbortController)\n    }\n    const url = `GenerateReport/Supervisorcontract/daterange/${start}/${end}/${pageRef.current}/${sizeRef.current}?userid=${memberIdRef.current}&roletype=${rolestatus.current}`\n\n    try {\n      const response = await api.get(url, {\n        headers: getHeaders('json'),\n        signal: newAbortController?.signal,\n      })\n      const data = response.data.data\n\n      if (pageRef.current === 0) setTimesheetData(data)\n      else setTimesheetData((prevTimesheetData) => [...prevTimesheetData, ...data])\n      if (data.length < 10) {\n        hasMoreRef.current = false\n      }\n\n      // Increment the page number for the next fetch\n      pageRef.current = pageRef.current + 1\n      setCommonLoader(false)\n    } catch (error) {\n      //console.error('Error fetching data:', error)\n      // Handle error, if any\n    }\n  }\n  const handleScroll = () => {\n    const tableContainer = document.querySelector('.table-container')\n    if (tableContainer.scrollTop + tableContainer.clientHeight === tableContainer.scrollHeight) {\n      if (hasMoreRef.current === true) {\n        getAllReport(startDateRef.current, endDateRef.current)\n      }\n    }\n  }\n  const handleHeaderCheck = (isChecked) => {\n    if (isChecked) {\n      const approvedRowIds = timesheetData\n        .filter((row) => row.finalApprove === 'Approved')\n        .map((row) => row.id)\n      if (approvedRowIds.length !== 0) {\n        setHeaderLabel(`${approvedRowIds.length} Selected`)\n        setSelectedRows(approvedRowIds)\n      }\n    } else {\n      setSelectedRows([])\n      setHeaderLabel('')\n    }\n  }\n  const handleMember = (value) => {\n    if (value) sizeRef.current = 20\n    else sizeRef.current = 1\n    const ids = Number(memberList.find((user) => user.name === value)?.id || '')\n    pageRef.current = 0\n    hasMoreRef.current = true\n    memberIdRef.current = ids\n    getAllReport(startDateRef.current, endDateRef.current)\n  }\n  const handleMemberCheck = (rowId, isChecked) => {\n    if (isChecked) {\n      setSelectedRows((prevSelectedRows) => [...prevSelectedRows, rowId])\n    } else {\n      setSelectedRows((prevSelectedRows) =>\n        prevSelectedRows.filter((selectedId) => selectedId !== rowId),\n      )\n    }\n\n    // Calculate the new number of selected rows\n    const newSelectedRows = isChecked\n      ? [...selectedRows, rowId]\n      : selectedRows.filter((selectedId) => selectedId !== rowId)\n    const newSelectedRowCount = newSelectedRows.length\n\n    // Update the header label\n    if (newSelectedRowCount < 1) {\n      setHeaderLabel('')\n    } else {\n      setHeaderLabel(`${newSelectedRowCount} Selected`)\n    }\n  }\n  const ranges = {\n    'Past 1 Week': [dayjs().subtract(6, 'days'), dayjs()],\n    'Past 2 Weeks': [dayjs().subtract(13, 'days'), dayjs()],\n    'Past 1 Month': [dayjs().subtract(1, 'months'), dayjs()],\n    'Custom Range': [null, null], // Placeholder for custom range\n  }\n  const handleDownloadExcel = async (id, date) => {\n    const url = `GenerateReport/generate/${id}/${date}`\n\n    try {\n      const response = await api.get(url, {\n        headers: {\n          'Content-Type': 'application/octet-stream',\n        },\n        responseType: 'arraybuffer',\n      })\n      // Create a Blob object from the binary data\n      const blob = new Blob([response.data], {\n        type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n      })\n\n      // Create a link element and trigger the download\n      const link = document.createElement('a')\n      link.href = window.URL.createObjectURL(blob)\n      link.download = `Report_${date}.xlsx`\n      document.body.appendChild(link)\n      link.click()\n      document.body.removeChild(link)\n    } catch (error) {\n      //console.error('Error fetching data:', error)\n    }\n  }\n  const handleDownloadPDF = async (id, date) => {\n    const url = `GenerateReport/pdf/${id}/${date}`\n\n    try {\n      const response = await api.get(url, {\n        headers: {\n          'Content-Type': 'application/octet-stream',\n        },\n        responseType: 'arraybuffer',\n      })\n      // Create a Blob object from the binary data\n      const blob = new Blob([response.data], {\n        type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n      })\n      // Create a link element and trigger the download\n      const link = document.createElement('a')\n      link.href = window.URL.createObjectURL(blob)\n      link.download = `Report_${date}.pdf`\n      document.body.appendChild(link)\n      link.click()\n      document.body.removeChild(link)\n    } catch (error) {\n      //console.error('Error fetching data:', error)\n    }\n  }\n  const handleDownloadPDFAll = async () => {\n    const startDateConv = dayjs(startDate).format('YYYY-MM-DD')\n    const endDateConv = dayjs(endDate).format('YYYY-MM-DD')\n    // http://localhost:8080/api/GenerateReport/contractpdf/111,112/2024-02-01/2024-02-02\n    const url = `GenerateReport/contractpdf/${selectedRows}/${startDateConv}/${endDateConv}`\n\n    try {\n      const response = await api.get(url, {\n        headers: {\n          'Content-Type': 'application/octet-stream',\n        },\n        responseType: 'arraybuffer',\n      })\n      // Create a Blob object from the binary data\n      const blob = new Blob([response.data], {\n        type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n      })\n      // Create a link element and trigger the download\n      const link = document.createElement('a')\n      link.href = window.URL.createObjectURL(blob)\n      link.download = `Report_${startDate}_${endDate}.pdf`\n      document.body.appendChild(link)\n      link.click()\n      document.body.removeChild(link)\n    } catch (error) {\n      //console.error('Error fetching data:', error)\n    }\n  }\n  const resetComponent = () => {\n    setReportVisible(false)\n    memberIdRef.current = 0\n    sizeRef.current = 1\n    pageRef.current = 0\n    getAllReport(startDateRef.current, endDateRef.current)\n  }\n  // const member\n  return (\n    <>\n      {reportVisble ? (\n        <ViewReport\n          id={ids}\n          name={names}\n          titleList=\"Detail View\"\n          today={today}\n          startDateValue={startDate}\n          endDateValue={endDate}\n          close={resetComponent}\n          formatDate={formatDate}\n        />\n      ) : (\n        <>\n          <CRow className=\"mt-3\">\n            <CCol xs={7} sm={5} md={6}>\n              <b style={{ paddingLeft: '30px' }}>My Team</b>\n              <br />\n              <Breadcrumb\n                style={{ paddingLeft: '30px' }}\n                className=\"bread-tab\"\n                separator={<span className=\"breadcrumb-separator\">|</span>}\n                items={[\n                  {\n                    title: (\n                      <Link\n                        to={'/dashboard'}\n                        className=\"bread-items text-decoration-none text-secondary\"\n                      >\n                        Dashboard\n                      </Link>\n                    ),\n                  },\n                  {\n                    title: (\n                      <span className=\"text-secondary \" style={{ cursor: 'default' }}>\n                        My Team\n                      </span>\n                    ),\n                  },\n                ]}\n              />\n            </CCol>\n            <CCol className=\"report_myTeam\" xs={12} sm={4} md={3}>\n              {/* <RangePicker\n                style={{ width: '94%' }}\n                className=\"rangeField\"\n                ref={rangePickerRef}\n                defaultValue={[dayjs(startDate, 'YYYY-MM-DD'), dayjs(endDate, 'YYYY-MM-DD')]}\n                onChange={handleStartDateChange}\n                format=\"DD MMM,YYYY\"\n                allowClear={false}\n                disabledDate={(current) => current && current > dayjs().endOf('day')}\n              /> */}\n              <RangePicker\n                variant={'borderless'}\n                ranges={ranges}\n                style={{ width: '90%' }}\n                ref={rangePickerRef}\n                className=\"rangeField_report  report_datepicker_myteam \"\n                onChange={handleStartDateChange}\n                defaultValue={[dayjs(startDate, 'YYYY-MM-DD'), dayjs(endDate, 'YYYY-MM-DD')]}\n                calendar=\"date\"\n                format=\"DD MMM,YYYY\"\n                allowClear={false}\n                disabledDate={(current) => current && current > dayjs().endOf('day')}\n              />\n            </CCol>\n\n            <CCol xs={12} sm={2} md={1} className=\"report_myTeam\">\n              <Select\n                className=\"choose_mem_report \"\n                id=\"member-list\"\n                onChange={(value) => handleroletypeChange(value)}\n                options={[\n                  {\n                    value: 'ON Role',\n                    label: 'ON Role',\n                  },\n                  {\n                    value: 'Contract',\n                    label: 'Contract',\n                  },\n                ]}\n                placeholder=\"Choose Role Type\"\n                allowClear\n                showSearch\n                style={{ width: '-webkit-fill-available' }}\n                suffixIcon={\n                  <img\n                    src={Downarrowimg}\n                    alt={Downarrowimg}\n                    style={{ width: '10px', height: '6px' }}\n                  />\n                }\n              />\n            </CCol>\n\n            {/* Member&rsquo;s */}\n            <CCol xs={12} sm={2} md={2} className=\"report_myTeam\">\n              <Select\n                className=\" custom-select_report\"\n                id=\"member-list\"\n                // value={memberOptions.find((option) => option.value === memberName) || null}\n                onChange={handleMember}\n                options={\n                  memberLoader\n                    ? [\n                        {\n                          label: (\n                            <div style={{ textAlign: 'center' }}>\n                              {Array.from({ length: 5 }, (_, index) => (\n                                <Skeleton\n                                  key={index}\n                                  title={false}\n                                  avatar={{\n                                    size: '20',\n                                  }} // Adjust the width and height here\n                                  paragraph={{\n                                    rows: 2,\n                                    height: '10px',\n                                    style: { height: '10px !important' },\n                                  }}\n                                />\n                              ))}\n                            </div>\n                          ),\n                          value: 'loading',\n                          disabled: true,\n                        },\n                      ]\n                    : memberOptions\n                }\n                placeholder=\"Choose Member\"\n                allowClear\n                showSearch\n                style={{ width: '-webkit-fill-available' }}\n                suffixIcon={\n                  <img\n                    src={Downarrowimg}\n                    alt={Downarrowimg}\n                    style={{ width: '12px', height: '7px' }}\n                  />\n                }\n              />\n            </CCol>\n          </CRow>\n\n          <div className=\"table-container table_scroll_report\" style={{ border: 'none' }}>\n            <InfiniteScroll\n              dataLength={timesheetData.length}\n              next={handleScroll} // Function to call when reaching the end of the list\n              hasMore={hasMoreRef.current}\n              loader={\n                <div className=\"text-c text-center my-3 td-text\">\n                  <CSpinner color=\"danger\" />\n                </div>\n              }\n              endMessage={\n                timesheetData.length !== 0 && (\n                  <p style={{ textAlign: 'center' }}>\n                    <b style={{ color: '#e40e2d', fontSize: '12px' }}>No more Data to load</b>\n                  </p>\n                )\n              }\n            >\n              <CTable hover>\n                <CTableHead className=\"head-row draft-head-row-ts\">\n                  {!headerLabel ? (\n                    <CTableRow>\n                      <CTableHeaderCell\n                        className=\"table-head-draft text-center text-c grid-cell-header\"\n                        scope=\"col\"\n                        width=\"4%\"\n                        style={{ position: 'sticky', top: '0', zIndex: '12' }}\n                      >\n                        <Checkbox\n                          id=\"flexCheckDefault\"\n                          className=\"checkbox_design\"\n                          checked={\n                            selectedRows.length === timesheetData.length && timesheetData.length\n                          }\n                          onChange={(e) => handleHeaderCheck(e.target.checked)}\n                        />\n                      </CTableHeaderCell>\n                      <CTableHeaderCell\n                        className=\"table-head-productlist text-c text-center \"\n                        scope=\"col\"\n                        width=\"4%\"\n                      >\n                        SI.No\n                      </CTableHeaderCell>\n                      <CTableHeaderCell\n                        className=\"table-head-productlist text-c \"\n                        scope=\"col\"\n                        width=\"10%\"\n                      >\n                        Branch\n                      </CTableHeaderCell>\n                      <CTableHeaderCell\n                        className=\"table-head-productlist text-c\"\n                        scope=\"col\"\n                        width=\"10%\"\n                      >\n                        Activity Date\n                      </CTableHeaderCell>\n                      <CTableHeaderCell\n                        className=\"table-head-productlist text-c\"\n                        scope=\"col\"\n                        width=\"10%\"\n                      >\n                        Supervisor Name\n                      </CTableHeaderCell>\n                      <CTableHeaderCell\n                        className=\"table-head-productlist text-c\"\n                        scope=\"col\"\n                        width=\"10%\"\n                      >\n                        Username\n                      </CTableHeaderCell>\n                      <CTableHeaderCell\n                        className=\"table-head-productlist text-c\"\n                        scope=\"col\"\n                        width=\"10%\"\n                      >\n                        Date of Joining\n                      </CTableHeaderCell>\n                      <CTableHeaderCell\n                        className=\"table-head-productlist text-c\"\n                        scope=\"col\"\n                        width=\"10%\"\n                      >\n                        Tot.of.hrs\n                      </CTableHeaderCell>\n                      <CTableHeaderCell\n                        className=\"table-head-productlist text-c\"\n                        scope=\"col\"\n                        width=\"10%\"\n                      >\n                        Final Approver Status\n                      </CTableHeaderCell>\n                      <CTableHeaderCell\n                        className=\"table-head-productlist text-c\"\n                        scope=\"col\"\n                        width=\"10%\"\n                      >\n                        Action\n                      </CTableHeaderCell>\n                    </CTableRow>\n                  ) : (\n                    <CTableRow>\n                      <CTableHeaderCell\n                        className=\"table-head-selected text-center  text-c \"\n                        width=\"4%\"\n                      >\n                        <Checkbox\n                          id=\"flexCheckDefault\"\n                          className=\"checkbox_design\"\n                          checked={\n                            selectedRows.length === timesheetData.length && timesheetData.length\n                          }\n                          onChange={(e) => handleHeaderCheck(e.target.checked)}\n                        />\n                      </CTableHeaderCell>\n                      <CTableDataCell className=\"table-head-selected\" colSpan={8}>\n                        <span style={{ color: '#f50505' }}>{headerLabel}</span>\n                      </CTableDataCell>\n                      <CTableDataCell className=\"table-head-selected\">\n                        <button\n                          className=\"btn border-0 text-c text-secondary cross-button\"\n                          style={{ fontSize: '12px', padding: '4px 8px' }}\n                          onClick={handleDownloadPDFAll}\n                        >\n                          <DownloadSvg height=\"18\" width=\"18\" viewBox=\"0 0 18 18\" fill=\"#f50505\" />\n                        </button>\n                      </CTableDataCell>\n                    </CTableRow>\n                  )}\n                </CTableHead>\n                <CTableBody>\n                  {!timesheetData ? (\n                    <div></div>\n                  ) : (\n                    timesheetData.map((row, index) => (\n                      <CTableRow key={index}>\n                        <CTableDataCell\n                          className={`text-c text-center pd-text1 grid-cell ${\n                            selectedRows.includes(row.id) ? 'checked-table-row' : ''\n                          }`}\n                          width=\"4%\"\n                        >\n                          <Checkbox\n                            className=\"checkbox_design\"\n                            id={`flexCheckDefault-${index}`}\n                            value={row.id}\n                            disabled={row.final_Approve !== 'Approved'}\n                            checked={\n                              selectedRows.includes(row.id) && row.final_Approve === 'Approved'\n                            }\n                            onChange={(e) => {\n                              handleMemberCheck(row.id, e.target.checked)\n                            }}\n                          />\n                        </CTableDataCell>\n                        <CTableDataCell\n                          className=\"text-c text-center pd-text1 grid-cell\"\n                          width=\"4%\"\n                        >\n                          {index + 1}\n                        </CTableDataCell>\n                        <CTableDataCell className=\"text-c pd-text1 grid-cell\" width=\"10%\">\n                          {row.branch}\n                        </CTableDataCell>\n                        <CTableDataCell className=\"text-c pd-text1 grid-cell\" width=\"10%\">\n                          {formatDate(row.activityDate)}\n                        </CTableDataCell>\n                        <CTableDataCell className=\" text-c pd-text1 grid-cell\" width=\"10%\">\n                          {row.supervisor_name !== null ? toPascalCase(row.supervisor_name) : '-'}\n                        </CTableDataCell>\n                        <CTableDataCell className=\"text-c pd-text1 grid-cell\" width=\"10%\">\n                          {toPascalCase(row.name)}\n                        </CTableDataCell>\n                        <CTableDataCell className=\"text-c pd-text1 grid-cell\" width=\"10%\">\n                          {formatDate(row.date_of_joining)}\n                        </CTableDataCell>\n                        <CTableDataCell className=\"text-c pd-text1 grid-cell\" width=\"10%\">\n                          {row.hours ? formatTimeDuration(row.hours) : '-'}\n                        </CTableDataCell>\n                        <CTableDataCell\n                          width=\"10%\"\n                          className={`text-c grid-cell ${\n                            row.final_Approve === 'Approved'\n                              ? 'green-text1 '\n                              : row.final_Approve === 'Pending'\n                              ? 'warning-text1 '\n                              : row.final_Approve === 'Not yet'\n                              ? 'warning-text1 '\n                              : row.final_Approve === 'Reject'\n                              ? 'red-text1 '\n                              : 'pd-text1'\n                          }`}\n                          // width=\"10%\"\n                        >\n                          <span>\n                            {row.final_Approve === 'Approved' && (\n                              <span style={{ fontSize: '16px' }}>&#8226;</span>\n                            )}\n                            {row.final_Approve === 'Pending' && (\n                              <span style={{ fontSize: '16px' }}>&#8226;</span>\n                            )}\n                            {row.final_Approve === 'Not yet' && (\n                              <span style={{ fontSize: '16px' }}>&#8226;</span>\n                            )}\n                            {row.final_Approve === 'Reject' && (\n                              <span style={{ fontSize: '16px' }}>&#8226;</span>\n                            )}\n                            <span style={{ marginLeft: '5px' }}>\n                              {row.final_Approve ? row.final_Approve : '-'}\n                            </span>\n                          </span>\n                        </CTableDataCell>\n                        <CTableDataCell className=\"text-c pd-text1 grid-cell\" width=\"10%\">\n                          <Popconfirm\n                            title=\"Choose download format:\"\n                            okText=\"Excel\"\n                            cancelText=\"PDF\"\n                            placement=\"left\"\n                            onConfirm={() => handleDownloadExcel(row.id, row.activityDate)}\n                            onCancel={() => handleDownloadPDF(row.id, row.activityDate)}\n                            disabled={row.final_Approve !== 'Approved'}\n                          >\n                            <button\n                              className={`btn border-0 text-c text-secondary cross-button ${\n                                row.final_Approve !== 'Approved' ? 'cursor_imp' : ''\n                              }`}\n                              style={{\n                                fontSize: '12px',\n                                padding: '4px 8px',\n                                cursor:\n                                  row.final_Approve !== 'Approved' ? 'not-allowed' : 'pointer',\n                              }}\n                              onClick={() => {\n                                // handleButtonClick('Reject')\n                              }}\n                            >\n                              <DownloadOutlined />\n                            </button>\n                          </Popconfirm>\n                          <button\n                            className=\"btn border-0 text-c text-secondary cross-button\"\n                            style={{\n                              fontSize: '12px',\n                              padding: '4px 8px',\n                            }}\n                            onClick={() => {\n                              setIds(row.id)\n                              setNames(row.name)\n                              setReportVisible(true)\n                            }}\n                          >\n                            <EyeFilled />\n                          </button>\n                        </CTableDataCell>\n                      </CTableRow>\n                    ))\n                  )}\n                </CTableBody>\n              </CTable>\n\n              {(timesheetData === null && !commonLoader) ||\n              (timesheetData.length === 0 && !commonLoader) ? (\n                <div className=\"text-c text-center my-3 td-text\">No Data Found</div>\n              ) : commonLoader && timesheetData.length === 0 ? (\n                <div className=\"text-c text-center my-3 td-text\">\n                  <CSpinner color=\"danger\" />\n                </div>\n              ) : (\n                <div></div>\n              )}\n            </InfiniteScroll>\n          </div>\n        </>\n      )}\n    </>\n  )\n}\n\nMyTeam.propTypes = {\n  today: PropTypes.string,\n  formatDate: PropTypes.func,\n}\nexport default MyTeam\n","import React, { useState, useEffect, useRef } from 'react'\nimport { Breadcrumb, DatePicker } from 'antd'\nimport {\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CSpinner,\n  CRow,\n  CCol,\n} from '@coreui/react'\nimport { getHeaders } from 'src/constant/Global'\nimport PropTypes from 'prop-types'\nimport 'react-toastify/dist/ReactToastify.css'\nimport dayjs from 'dayjs'\nimport useAxios from 'src/constant/UseAxios'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport { EyeFilled } from '@ant-design/icons'\nimport InfiniteScroll from 'react-infinite-scroll-component'\nimport ViewReport from './ViewReport'\nimport { Link } from 'react-router-dom'\n\nconst { RangePicker } = DatePicker\nconst MyReport = ({ today, formatDate }) => {\n  let api = useAxios()\n  const rangePickerRef = useRef()\n  const [timesheetData, setTimesheetData] = useState([])\n  const [commonLoader, setCommonLoader] = useState(true)\n  // const [hasMore, setHasMore] = useState(true)\n  const hasMoreRef = useRef(true)\n  const [startDate, setStartDate] = useState(today)\n  const [endDate, setEndDate] = useState(today)\n\n  const pageRef = useRef(1)\n  const startDateRef = useRef(today)\n  const [reportVisble, setReportVisible] = useState(false)\n  const [ids, setIds] = useState(0)\n  const [names, setNames] = useState('')\n  const endDateRef = useRef(today)\n  const [abortController, setAbortController] = useState(new AbortController())\n\n  useEffect(() => {\n    if (!reportVisble) {\n      getAllReport()\n      hasMoreRef.current = true\n      const tableContainer = document.querySelector('.table-container')\n      tableContainer.addEventListener('scroll', handleScroll)\n      return () => {\n        tableContainer.removeEventListener('scroll', handleScroll)\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [reportVisble])\n  const handleScroll = () => {\n    const tableContainer = document.querySelector('.table-container')\n    if (tableContainer.scrollTop + tableContainer.clientHeight === tableContainer.scrollHeight) {\n      if (hasMoreRef.current === true) {\n        getAllReport()\n      }\n    }\n  }\n  const handleStartDateChange = (date) => {\n    if (date) {\n      setStartDate(date[0])\n      setEndDate(date[1])\n      startDateRef.current = dayjs(date[0]).format('YYYY-MM-DD')\n      endDateRef.current = dayjs(date[1]).format('YYYY-MM-DD')\n      pageRef.current = 1\n      hasMoreRef.current = true\n      getAllReport(dayjs(date[0]).format('YYYY-MM-DD'), dayjs(date[1]).format('YYYY-MM-DD'))\n    }\n  }\n\n  const getAllReport = async () => {\n    let newAbortController\n    if (pageRef.current === 1) {\n      setCommonLoader(true)\n      setTimesheetData([])\n      abortController.abort()\n      newAbortController = new AbortController()\n      setAbortController(newAbortController)\n    }\n    let url = `GenerateReport/contract/${startDateRef.current}/${endDateRef.current}/${pageRef.current}/20`\n\n    try {\n      const response = await api.get(url, {\n        headers: getHeaders('json'),\n        signal: newAbortController?.signal,\n      })\n      const data = response.data.data\n\n      if (pageRef.current === 1) setTimesheetData(data)\n      else setTimesheetData((prevTimesheetData) => [...prevTimesheetData, ...data])\n      if (data.length < 10) {\n        hasMoreRef.current = false\n      }\n\n      // Increment the page number for the next fetch\n      pageRef.current = pageRef.current + 1\n      setCommonLoader(false)\n    } catch (error) {\n      // console.error('Error fetching data:', error)\n      // Handle error, if any\n    }\n  }\n  const formatTimeDuration = (timeString) => {\n    if (timeString !== '' && timeString !== null) {\n      const [hours, minutes] = timeString.split(':').map(Number)\n      let formattedTime = ''\n      if (hours > 0) {\n        formattedTime += `${hours} hrs`\n      }\n      if (minutes > 0) {\n        formattedTime += ` ${minutes} mins`\n      }\n      return formattedTime.trim()\n    } else {\n      return '-'\n    }\n  }\n  const resetComponent = () => {\n    setReportVisible(false)\n  }\n  const ranges = {\n    'Past 1 Week': [dayjs().subtract(6, 'days'), dayjs()],\n    'Past 2 Weeks': [dayjs().subtract(13, 'days'), dayjs()],\n    'Past 1 Month': [dayjs().subtract(1, 'months'), dayjs()],\n    'Custom Range': [null, null], // Placeholder for custom range\n  }\n  return (\n    <>\n      {reportVisble ? (\n        <ViewReport\n          id={ids}\n          name={names}\n          titleList=\"Detail View\"\n          today={today}\n          close={resetComponent}\n          formatDate={formatDate}\n          startDateValue={startDate}\n          endDateValue={endDate}\n        />\n      ) : (\n        <>\n          <CRow className=\"mt-3\">\n            <CCol sm={9}>\n              <b style={{ marginLeft: '30px' }}>My Report</b>\n              <br />\n              <Breadcrumb\n                style={{ marginLeft: '30px' }}\n                className=\"bread-tab\"\n                separator={<span className=\"breadcrumb-separator\">|</span>}\n                items={[\n                  {\n                    title: (\n                      <Link\n                        to={'/dashboard'}\n                        className=\"bread-items text-decoration-none text-secondary\"\n                      >\n                        Dashboard\n                      </Link>\n                    ),\n                  },\n                  {\n                    title: (\n                      <span className=\"text-secondary \" style={{ cursor: 'default' }}>\n                        My Report\n                      </span>\n                    ),\n                  },\n                ]}\n              />\n            </CCol>\n            <CCol sm={3}>\n              <RangePicker\n                style={{ width: '80%' }}\n                ranges={ranges}\n                className=\"rangeField rangepicker_cont_pend\"\n                ref={rangePickerRef}\n                defaultValue={[dayjs(startDate, 'YYYY-MM-DD'), dayjs(endDate, 'YYYY-MM-DD')]}\n                onChange={handleStartDateChange}\n                allowClear={false}\n                format=\"DD MMM,YYYY\"\n                disabledDate={(current) => current && current > dayjs().endOf('day')}\n              />\n            </CCol>\n          </CRow>\n\n          <div className=\"table-container table_scroll_report\" style={{ border: 'none' }}>\n            <InfiniteScroll\n              dataLength={timesheetData.length}\n              next={handleScroll}\n              hasMore={hasMoreRef.current}\n              loader={\n                <div className=\"text-c text-center my-3 td-text\">\n                  <CSpinner color=\"danger\" />\n                </div>\n              }\n              endMessage={\n                timesheetData.length !== 0 && (\n                  <p style={{ textAlign: 'center' }}>\n                    <b style={{ color: '#e40e2d', fontSize: '12px' }}>No more Data to load</b>\n                  </p>\n                )\n              }\n            >\n              <CTable hover>\n                <CTableHead className=\"head-row draft-head-row-ts\">\n                  <CTableRow>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c text-center\"\n                      scope=\"col\"\n                      width=\"4%\"\n                    >\n                      SI.No\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      Activity Date\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      Branch\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"8%\"\n                    >\n                      Supervisor Name\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      Username\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      Date of Joining\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      Tot.of.Hrs\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      Final Approver Status\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      Action\n                    </CTableHeaderCell>\n                  </CTableRow>\n                </CTableHead>\n                <CTableBody>\n                  {!timesheetData ? (\n                    <div></div>\n                  ) : (\n                    timesheetData.map((row, index) => (\n                      <CTableRow key={index}>\n                        <CTableDataCell className=\"text-c text-center pd-text1 grid-cell\">\n                          {index + 1}\n                        </CTableDataCell>\n                        <CTableDataCell className=\"text-c pd-text1 grid-cell\">\n                          {row.activityDate !== null ? formatDate(row.activityDate) : '-'}\n                        </CTableDataCell>\n                        <CTableDataCell className=\"text-c pd-text1 grid-cell\">\n                          {row.branch}\n                        </CTableDataCell>\n                        <CTableDataCell className=\"text-c pd-text1 grid-cell\">\n                          {row.supervisor_name !== null ? row.supervisor_name : '-'}\n                        </CTableDataCell>\n                        <CTableDataCell className=\"text-c pd-text1 grid-cell\">\n                          {row.name !== null ? row.name : '-'}\n                        </CTableDataCell>\n                        <CTableDataCell className=\"text-c pd-text1 grid-cell\">\n                          {row.date_of_joining !== null ? formatDate(row.date_of_joining) : '-'}\n                        </CTableDataCell>\n                        <CTableDataCell className=\"text-c pd-text1 grid-cell text-center\">\n                          {row.hours === null ? '-' : formatTimeDuration(row.hours)}\n                        </CTableDataCell>\n                        <CTableDataCell\n                          className={`text-c grid-cell ${\n                            row.final_Approve === 'Approved'\n                              ? 'green-text1 '\n                              : row.final_Approve === 'Rejected'\n                              ? 'red-text1 '\n                              : row.final_Approve === 'Not yet'\n                              ? 'warning-text1'\n                              : 'pd-text1'\n                          }`}\n                          width=\"10%\"\n                        >\n                          <span>\n                            {row.final_Approve === 'Approved' && (\n                              <span style={{ fontSize: '16px' }}>&#8226;</span>\n                            )}\n                            {row.final_Approve === 'Rejected' && (\n                              <span style={{ fontSize: '16px' }}>&#8226;</span>\n                            )}\n                            {row.final_Approve === 'Not yet' && (\n                              <span style={{ fontSize: '16px' }}>&#8226;</span>\n                            )}\n                            <span style={{ marginLeft: '5px' }}>\n                              {row.final_Approve ? row.final_Approve : '-'}\n                            </span>\n                          </span>\n                        </CTableDataCell>\n                        <CTableDataCell className=\"text-c pd-text1 grid-cell\">\n                          <button\n                            className=\"btn border-0 text-c text-secondary cross-button\"\n                            style={{ fontSize: '12px', padding: '4px 8px' }}\n                            onClick={() => {\n                              setIds(row.id)\n                              setNames(row.name)\n                              setReportVisible(true)\n                            }}\n                          >\n                            <EyeFilled />\n                          </button>\n                        </CTableDataCell>\n                      </CTableRow>\n                    ))\n                  )}\n                </CTableBody>\n              </CTable>\n\n              {(timesheetData === null && !commonLoader) ||\n              (timesheetData.length === 0 && !commonLoader) ? (\n                <div className=\"text-c text-center my-3 td-text\">No Data Found</div>\n              ) : commonLoader && timesheetData.length === 0 ? (\n                <div className=\"text-c text-center my-3 td-text\">\n                  <CSpinner color=\"danger\" />\n                </div>\n              ) : (\n                <div></div>\n              )}\n            </InfiniteScroll>\n          </div>\n        </>\n      )}\n    </>\n  )\n}\n\nMyReport.propTypes = {\n  today: PropTypes.string,\n  formatDate: PropTypes.func,\n}\nexport default MyReport\n","import React, { useState, useEffect } from 'react'\nimport { CCard, CCol, CRow, CNavItem, CTabContent, CTabPane, CNav, CNavLink } from '@coreui/react'\nimport { getDecodeData } from 'src/constant/Global'\nimport AllReport from './AllReport'\nimport MyTeam from './MyTeam'\nimport MyReport from './MyReport'\n\nconst Reports = () => {\n  const user = getDecodeData()\n  const supervisor = user && user.superviser\n  const [activeKey, setActiveKey] = useState()\n  const [tabs, setTabs] = useState([])\n  function getToday() {\n    const today = new Date()\n    const year = today.getFullYear()\n    const month = String(today.getMonth() + 1).padStart(2, '0')\n    const day = String(today.getDate()).padStart(2, '0')\n    return `${year}-${month}-${day}`\n  }\n  const formatDate = (dateString) => {\n    const date = new Date(dateString)\n    const options = { day: 'numeric', month: 'short', year: 'numeric' }\n    let formattedDate = date.toLocaleDateString('en-GB', options)\n    if (!formattedDate.includes(',')) {\n      formattedDate = formattedDate.replace(/(\\w{3}) (\\d{4})/, '$1, $2')\n    }\n    return formattedDate\n  }\n\n  useEffect(() => {\n    tabsActivity(user && user.designation, user && user.roleIntake, supervisor)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const tabsActivity = async (designation, roleIntake, supervisor) => {\n    if (\n      (designation === 'Technical Admin' || designation === 'Product Admin') &&\n      supervisor === 'false' &&\n      roleIntake !== 'Contract'\n    ) {\n      setTabs(['All Report', 'My Report'])\n      setActiveKey('All Report')\n    }\n    if (\n      (designation === 'Technical Admin' || designation === 'Product Admin') &&\n      supervisor === 'true' &&\n      roleIntake !== 'Contract'\n    ) {\n      setTabs(['All Report', 'My Report', 'My Team'])\n      setActiveKey('All Report')\n    }\n    if (\n      designation !== 'Technical Admin' &&\n      designation !== 'Product Admin' &&\n      supervisor === 'true'\n    ) {\n      setTabs(['My Report', 'My Team'])\n      setActiveKey('My Report')\n    }\n    if (\n      designation !== 'Technical Admin' &&\n      designation !== 'Product Admin' &&\n      supervisor === 'false'\n    ) {\n      setTabs(['My Report'])\n      setActiveKey('My Report')\n    }\n  }\n  return (\n    <>\n      <CRow className=\"my-2\">\n        <CCol xs={12}>\n          <CCard className=\"mt-4 timesheet-content-report\">\n            <div>\n              {tabs.length > 1 && (\n                <CNav variant=\"pills\" role=\"tablist\" className=\"report-navbar\">\n                  {tabs.map((tabId) => (\n                    <CNavItem role=\"presentation\" key={tabId}>\n                      <CNavLink\n                        active={activeKey === tabId}\n                        component=\"button\"\n                        role=\"tab\"\n                        aria-controls=\"contact-tab-pane\"\n                        aria-selected={activeKey === tabId}\n                        onClick={() => setActiveKey(tabId)}\n                      >\n                        {tabId}\n                      </CNavLink>\n                    </CNavItem>\n                  ))}\n                </CNav>\n              )}\n\n              <CTabContent>\n                <CTabPane\n                  role=\"tabpanel\"\n                  aria-labelledby=\"home-tab-pane\"\n                  visible={activeKey === 'All Report'}\n                  className={`pendingactivity-card ${\n                    tabs.length > 1 ? 'tab_height_report' : 'tab_height1'\n                  }`}\n                >\n                  <CRow>\n                    {activeKey === 'All Report' && (\n                      <AllReport today={getToday()} formatDate={formatDate} status=\"All\" />\n                    )}\n                  </CRow>\n                </CTabPane>\n                <CTabPane\n                  role=\"tabpanel\"\n                  aria-labelledby=\"contact-tab-pane\"\n                  visible={activeKey === 'My Team'}\n                  className={`pendingactivity-card ${\n                    tabs.length > 1 ? 'tab_height' : 'tab_height1'\n                  }`}\n                >\n                  <CRow>\n                    {activeKey === 'My Team' && (\n                      <MyTeam today={getToday()} formatDate={formatDate} />\n                    )}\n                  </CRow>\n                </CTabPane>\n                <CTabPane\n                  role=\"tabpanel\"\n                  aria-labelledby=\"contact-tab-pane\"\n                  visible={activeKey === 'My Report'}\n                  className={`pendingactivity-card ${\n                    tabs.length > 1 ? 'tab_height' : 'tab_height1'\n                  }`}\n                >\n                  <CRow>\n                    {activeKey === 'My Report' && (\n                      <MyReport today={getToday()} formatDate={formatDate} />\n                    )}\n                  </CRow>\n                </CTabPane>\n              </CTabContent>\n            </div>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default Reports\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst BackArrowSvg = ({ width, height, fill, viewBox }) => (\n  <svg\n    width={width}\n    height={height}\n    viewBox={viewBox}\n    fill={fill}\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M16.5824 4.58202H3.41244L6.29244 1.70202C6.47942 1.51504 6.58447 1.26145 6.58447 0.997021C6.58447 0.732594 6.47942 0.478998 6.29244 0.292021C6.10547 0.105043 5.85187 0 5.58744 0C5.32302 0 5.06942 0.105043 4.88244 0.292021L0.292444 4.88202C0.19974 4.97453 0.126193 5.08442 0.0760114 5.2054C0.02583 5.32637 0 5.45605 0 5.58702C0 5.71799 0.02583 5.84767 0.0760114 5.96865C0.126193 6.08962 0.19974 6.19951 0.292444 6.29202L4.88244 10.882C4.97503 10.9746 5.08494 11.048 5.2059 11.0981C5.32687 11.1483 5.45651 11.174 5.58744 11.174C5.71837 11.174 5.84802 11.1483 5.96899 11.0981C6.08995 11.048 6.19986 10.9746 6.29244 10.882C6.38503 10.7894 6.45847 10.6795 6.50857 10.5586C6.55868 10.4376 6.58447 10.308 6.58447 10.177C6.58447 10.0461 6.55868 9.91644 6.50857 9.79548C6.45847 9.67451 6.38503 9.5646 6.29244 9.47202L3.41244 6.58202H16.5824C17.1324 6.58202 17.5824 6.13202 17.5824 5.58202C17.5824 5.03202 17.1324 4.58202 16.5824 4.58202Z\"\n      fill=\"#919EAB\"\n    />\n  </svg>\n)\n\nBackArrowSvg.propTypes = {\n  width: PropTypes.string,\n  height: PropTypes.string,\n  fill: PropTypes.string,\n  viewBox: PropTypes.string,\n}\n\nexport default BackArrowSvg\n"],"names":["RangePicker","DatePicker","_ref","today","formatDate","status","api","useAxios","activeTab","useState","supervisorId","setSupervisorId","supervisorName","setSupervisorName","memberId","setMemberId","memberName","setMemberName","timesheetData","setTimesheetData","supervisorList","setsupervisorList","memberList","setMemberList","commonLoader","setCommonLoader","loading","setLoading","hasMoreRef","useRef","pageRef","supervisorIdRef","dateWiseRef","memberIdRef","rangePickerRef","startDate","setStartDate","endDate","setEndDate","startDateRef","endDateRef","abortController","setAbortController","AbortController","abortControllerSupervisor","setAbortControllerSupervisor","suprLoader","setSuprLoader","memberLoader","setMemberLoader","statusRef","companyRef","useEffect","getAllReport","current","getSupervisorList","tableContainer","document","querySelector","addEventListener","handleScroll","removeEventListener","scrollTop","clientHeight","scrollHeight","getReport","dayjs","format","getMemberReport","async","url","undefined","value","concat","get","headers","getHeaders","then","response","supervisor","data","catch","error","options","map","user","name","label","_jsxs","className","children","_jsx","src","profile_pic","ImageUrl","profileImage1","style","width","alt","marginLeft","title","toPascalCase","role","options1","start","end","company","newAbortController","abort","_newAbortController2","signal","content","prevTimesheetData","length","id","_newAbortController4","_newAbortController5","formatTimeDuration","timeString","hours","minutes","split","Number","formattedTime","trim","ranges","subtract","handleCompanyChange","_newAbortController3","getAllReportbasedCompany","_Fragment","CRow","CCol","sm","md","lg","xl","paddingLeft","Breadcrumb","separator","items","Link","rel","to","cursor","variant","ref","onChange","date","defaultValue","calendar","allowClear","disabledDate","endOf","padding","Select","placeholder","showSearch","suffixIcon","Downarrowimg","height","handleStatusChange","find","option","selectedOption","_supervisorList$find","newValue","names","_newAbortController","member","getMemberList","textAlign","Array","from","_","index","Skeleton","avatar","size","paragraph","rows","disabled","_memberList$find","Button","fontSize","color","display","justifyContent","alignItems","type","onClick","supId","memId","responseType","blob","Blob","link","createElement","href","window","URL","createObjectURL","download","body","appendChild","click","removeChild","handleDownload","DownloadOutlined","border","InfiniteScroll","dataLength","next","hasMore","loader","CSpinner","endMessage","CTable","hover","CTableHead","CTableRow","CTableHeaderCell","scope","CTableBody","row","CTableDataCell","activity_date","branch","userName","supervisorStatus","fill","viewBox","xmlns","clipPath","d","close","titleList","startDateValue","endDateValue","getMyReport","groupedData","reduce","acc","curr","activityDate","push","Row","gutter","Col","marginTop","BackArrowSvg","Object","keys","startDateConv","endDateConv","handleDownloadPDF","entries","_ref2","records","React","colSpan","rowIndex","productName","task","description","userstatus","approveStatus","remarks","headerLabel","setHeaderLabel","selectedRows","setSelectedRows","ids","setIds","setNames","reportVisble","setReportVisible","rolestatus","sizeRef","members","memberOptions","handleHeaderCheck","isChecked","approvedRowIds","filter","finalApprove","ViewReport","resetComponent","xs","handleroletypeChange","Checkbox","checked","e","target","DownloadSvg","position","top","zIndex","includes","final_Approve","handleMemberCheck","rowId","prevSelectedRows","selectedId","newSelectedRowCount","supervisor_name","date_of_joining","Popconfirm","okText","cancelText","placement","onConfirm","handleDownloadExcel","onCancel","EyeFilled","Reports","getDecodeData","superviser","activeKey","setActiveKey","tabs","setTabs","getToday","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","dateString","formattedDate","toLocaleDateString","replace","tabsActivity","designation","roleIntake","CCard","CNav","tabId","CNavItem","CNavLink","active","component","CTabContent","CTabPane","visible","AllReport","MyTeam","MyReport"],"sourceRoot":""}