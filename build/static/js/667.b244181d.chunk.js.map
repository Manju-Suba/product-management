{"version":3,"file":"static/js/667.b244181d.chunk.js","mappings":"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","sources":["views/auth/login/Login.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport Cookies from 'universal-cookie'\nimport { BackEndBaseLink, getDecodeData } from '../../../constant/Global'\nimport './Login.css'\nimport logoimg from '../../../assets/images/login/logo.png'\nimport sideImg from '../../../assets/images/login/sideImg.png'\nimport passwordIcon from '../../../assets/images/login/Show.png'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport queryString from 'query-string'\n// import microsoftlogin from '../../../assets/images/login/microsoft-logo.png'\nimport { jwtDecode } from 'jwt-decode'\nimport { Button, Form, Input } from 'antd'\nimport useAxios from 'src/constant/UseAxios'\nimport { EyeInvisibleOutlined } from '@ant-design/icons'\n\nconst Login = () => {\n  const api = useAxios()\n  const navigate = useNavigate()\n  const [, setShowPassword] = useState(false)\n\n  const togglePasswordVisibility = () => {\n    setShowPassword((prevState) => !prevState)\n  }\n  useEffect(() => {\n    // Parse URL parameters using query-string\n    const urlParams = queryString.parse(window.location.search)\n    const tokenstatus = urlParams.RefreshToken\n    let tokencode\n    if (typeof tokenstatus === 'string') {\n      const decoded = jwtDecode(tokenstatus)\n      if ('code' in decoded) {\n        tokencode = decoded.code\n      }\n    }\n    const user = getDecodeData()\n    // const statusCode = new URLSearchParams(window.location.search).get('code')\n    if (tokencode === 200) {\n      localStorage.setItem('userData', JSON.stringify(urlParams))\n      localStorage.setItem('Pm_tool', 'true')\n      localStorage.setItem('logout', 'outlook')\n      localStorage.setItem('neram', 'true')\n      const newUrl = window.location.origin + window.location.pathname\n      window.history.replaceState({}, document.title, newUrl)\n      if (user.designation.includes('Internal Admin')) {\n        navigate('/master')\n      } else {\n        navigate('/dashboard')\n      }\n    } else if (user !== null) {\n      if (user.designation.includes('Internal Admin')) {\n        navigate('/master')\n      } else {\n        navigate('/dashboard')\n      }\n    } else if (tokencode) {\n      toast.error('User Not Found', {\n        position: toast.POSITION.TOP_RIGHT,\n        autoClose: 3000,\n      })\n      const redirectUrl = new URLSearchParams(window.location.search).get('redirectUrl')\n      navigate(redirectUrl || '/')\n    }\n  }, [navigate])\n  //set cookies\n  const cookies = new Cookies()\n  const [loadings, setLoadings] = useState(false)\n\n  const onFinish = async (values) => {\n    setLoadings(true)\n    const url = 'auth/signin'\n    try {\n      const response = await api.post(url, values)\n\n      if (response.status === 200) {\n        const data = response.data.data\n\n        localStorage.setItem('logout', 'local')\n        localStorage.setItem('neram', 'true')\n        localStorage.setItem('userData', JSON.stringify(data))\n        const decodeToken = jwtDecode(data.Token)\n        cookies.set('token', data.Token)\n        toast.success('Login Successfully', {\n          position: toast.POSITION.TOP_RIGHT,\n          autoClose: 200,\n          onClose: () => {\n            setLoadings(false)\n            if (decodeToken.designation.includes('Internal Admin')) {\n              navigate('/master')\n            } else {\n              navigate('/dashboard')\n            }\n          },\n        })\n      } else {\n        setLoadings(false)\n        toast.error('Login Failed', {\n          position: toast.POSITION.TOP_RIGHT,\n          autoClose: 3000,\n        })\n      }\n    } catch (error) {\n      const err = error.response ? error.response.data : error.message\n      setLoadings(false)\n      if (err.data === 'Bad credentials') {\n        toast.error('Incorrect Employee Id and Password', {\n          position: toast.POSITION.TOP_RIGHT,\n          autoClose: 3000,\n        })\n      } else {\n        toast.error(error.message, {\n          position: toast.POSITION.TOP_RIGHT,\n          autoClose: 3000,\n        })\n      }\n    }\n  }\n  // const handlemicrosoftClick = () => {\n  //   const url = BackEndBaseLink + `oauth2/authorization/azure-dev`\n  //   window.location.href = url\n  // }\n\n  return (\n    <>\n      <ToastContainer />\n      <section className=\"vh-100\">\n        <div className=\"container-fluid h-custom\">\n          <div className=\"row d-flex h-100\">\n            <div className=\"col-md-6 col-lg-6 col-sm-12 login-image-side\">\n              <div className=\"row\">\n                <img src={logoimg} alt=\"Neram-Logo\" className=\"login-logo\" />\n              </div>\n              <div className=\"row text-center\">\n                <p style={{ fontSize: '39px', fontWeight: '700', lineHeight: '52px' }}>\n                  <span style={{ color: '#800000' }}>Unlock your </span>\n                  <br />\n                  <span style={{ color: '#F49292', marginLeft: '17px' }}>Performance </span>\n                </p>\n              </div>\n              <div className=\"row d-flex justify-content-center\">\n                <img src={sideImg} alt=\"Neram-Logo\" className=\"side-img\" />\n              </div>\n            </div>\n            <div\n              className=\"col-md-6 col-lg-6 col-sm-12\"\n              style={{\n                background: '#F3F4F5',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n              }}\n            >\n              <div>\n                <p\n                  className=\"welcome-font\"\n                  style={{\n                    color: '#800000',\n                    fontSize: '37px',\n                    lineHeight: '20px',\n                    fontWeight: '700',\n                  }}\n                >\n                  Welcome to Neram\n                </p>\n                <h6\n                  style={{\n                    fontSize: '13px',\n                    fontWeight: '600',\n                    color: '#F49292',\n                    lineHeight: '20px',\n                    marginBottom: '29px',\n                  }}\n                >\n                  Unlock your team performance{' '}\n                </h6>\n                <Form\n                  name=\"basic\"\n                  initialValues={{\n                    remember: true,\n                  }}\n                  size=\"large\"\n                  onFinish={onFinish}\n                  autoComplete=\"off\"\n                >\n                  <Form.Item\n                    name=\"username\"\n                    rules={[\n                      {\n                        required: true,\n                        message: 'Please Enter your Employee Id!',\n                      },\n                    ]}\n                  >\n                    <Input\n                      placeholder=\"Enter Employee Id\"\n                      style={{ border: '1px solid #F20D2F', borderRadius: '5px' }}\n                    />\n                  </Form.Item>\n                  <Form.Item\n                    name=\"password\"\n                    rules={[\n                      {\n                        required: true,\n                        message: 'Please Enter your password!',\n                      },\n                    ]}\n                  >\n                    <Input.Password\n                      placeholder=\"Password\"\n                      iconRender={(visible) =>\n                        visible ? (\n                          <EyeInvisibleOutlined\n                            onClick={togglePasswordVisibility}\n                            style={{ color: '#F30D2F' }}\n                          />\n                        ) : (\n                          <button\n                            type=\"button\"\n                            onClick={togglePasswordVisibility}\n                            style={{\n                              background: 'none',\n                              border: 'none',\n                              cursor: 'pointer',\n                            }}\n                          >\n                            <img src={passwordIcon} alt=\"Password\" width={14} />\n                          </button>\n                        )\n                      }\n                      style={{ border: '1px solid #F20D2F', borderRadius: '5px' }}\n                    />\n                  </Form.Item>\n                  <Form.Item>\n                    <Button\n                      className=\"btn-white\"\n                      style={{\n                        textTransform: 'none',\n                        color: '#FFFFFF',\n                        background: '#F30D2F',\n                        fontSize: '14px',\n                        fontWeight: '700',\n                        borderRadius: '5px',\n                        height: '46px',\n                        width: '100%',\n                        border: 'none',\n                      }}\n                      htmlType=\"submit\"\n                      loading={loadings}\n                    >\n                      Login\n                    </Button>\n                  </Form.Item>\n                  {/* <Form.Item>\n                    <Button\n                      className=\"btn-white\"\n                      style={{\n                        textTransform: 'none',\n                        color: '#FFFFFF',\n                        background: '#F30D2F',\n                        fontSize: '14px',\n                        fontWeight: '700',\n                        borderRadius: '5px',\n                        height: '60px',\n                        width: '100%',\n                        border: 'none',\n                      }}\n                      onClick={handlemicrosoftClick}\n                    >\n                      <img\n                        src={microsoftlogin}\n                        alt=\"Microsoft Logo\"\n                        style={{ marginRight: '9px', width: '20px', height: '20px' }}\n                      />\n                      Sign in with Microsoft\n                    </Button>\n                  </Form.Item> */}\n                </Form>\n                <h6\n                  style={{\n                    textAlign: 'center',\n                    fontSize: '12px',\n                    fontWeight: '400',\n                    color: '#F49292',\n                    lineHeight: '20px',\n                  }}\n                >\n                  © 2023 all rights reserved\n                </h6>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </>\n  )\n}\n\nexport default Login\n"],"names":["Login","api","useAxios","navigate","useNavigate","setShowPassword","useState","togglePasswordVisibility","prevState","useEffect","urlParams","queryString","parse","window","location","search","tokenstatus","RefreshToken","tokencode","decoded","jwtDecode","code","user","getDecodeData","localStorage","setItem","JSON","stringify","newUrl","origin","pathname","history","replaceState","document","title","designation","includes","toast","error","position","POSITION","TOP_RIGHT","autoClose","redirectUrl","URLSearchParams","get","cookies","Cookies","loadings","setLoadings","_jsxs","_Fragment","children","_jsx","ToastContainer","className","src","logoimg","alt","style","fontSize","fontWeight","lineHeight","color","marginLeft","sideImg","background","display","justifyContent","alignItems","marginBottom","Form","name","initialValues","remember","size","onFinish","async","response","post","values","status","data","decodeToken","Token","set","success","onClose","err","message","autoComplete","Item","rules","required","Input","placeholder","border","borderRadius","Password","iconRender","visible","EyeInvisibleOutlined","onClick","type","cursor","passwordIcon","width","Button","textTransform","height","htmlType","loading","textAlign"],"sourceRoot":""}