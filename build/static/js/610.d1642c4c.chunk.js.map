{"version":3,"file":"static/js/610.d1642c4c.chunk.js","mappings":"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","sources":["redux/memberActivity/action.js","views/modal/ApprovedConfirmModel.js","views/modal/RejectConfirmModal.js","views/selfActivity/PendingMemberActivity.js","views/selfActivity/RaiseRequestList.js","views/selfActivity/ActivityCalendar.js","views/selfActivity/SelfActivity.js","views/svgImages/CheckSvg.js"],"sourcesContent":["import {\n  GET_MEMBER_ACTIVITY,\n  STATUS_CHANGE_SUCCESS,\n  STATUS_CHANGE_FAILURE,\n  GET_CONTRACT_MEMBER_ACTIVITY,\n  GET_CONTRACT_CLOSED_MEMBER_ACTIVITY,\n  GET_OWNER_MEMBER_ACTIVITY,\n  GET_PRODUCT_MEMBER_CLOSED_ACTIVITY,\n} from '../actionType'\nimport UseAxios from '../../constant/UseAxios'\nimport { getHeaders } from 'src/constant/Global'\nconst api = UseAxios()\n\nexport const getMemberActivity = (page, pageSize, category, status, startDate, endDate) => {\n  return async (dispatch) => {\n    // Ensure page is a number\n    let pageNo = typeof page === 'number' ? page : 0\n\n    // Ensure pageSize is a number\n    let size = typeof pageSize === 'number' ? pageSize : 10 // Default to 10 if not a number\n\n    // Construct the URL with proper encoding\n    let url = `/common/timesheet/activity/superviserlistall?page=${encodeURIComponent(\n      pageNo,\n    )}&size=${encodeURIComponent(size)}&category=${encodeURIComponent(category)}`\n    if (status && status !== 'undefined' && status !== '') {\n      url += `&status=${encodeURIComponent(status)}`\n    }\n    if (startDate && typeof startDate === 'string' && startDate.trim() !== '') {\n      url += `&startDate=${encodeURIComponent(startDate)}`\n    }\n    if (endDate && typeof endDate === 'string' && endDate.trim() !== '') {\n      url += `&endDate=${encodeURIComponent(endDate)}`\n    }\n    const response = await api.get(url, {\n      headers: getHeaders('json'),\n    })\n    if (response?.data) {\n      dispatch({\n        type: GET_MEMBER_ACTIVITY,\n        payload: response.data.data,\n      })\n      return response.data\n    }\n    // .then((res) => {\n    //   dispatch({\n    //     type: GET_MEMBER_ACTIVITY,\n    //     payload: res.data.data,\n    //   })\n    // })\n    // .catch((error) => {})\n  }\n}\n\nexport const getContractMemberActivity = (page, pageSize, category, status, startDate, endDate) => {\n  return (dispatch) => {\n    // Ensure page is a number\n    let pageNo = typeof page === 'number' ? page : 0\n\n    // Ensure pageSize is a number\n    let size = typeof pageSize === 'number' ? pageSize : 10 // Default to 10 if not a number\n\n    // Construct the URL with proper encoding\n    let url = `/common/timesheet/activity/final-approve-list?page=${encodeURIComponent(\n      pageNo,\n    )}&size=${encodeURIComponent(size)}&category=${encodeURIComponent(category)}`\n    if (status && status !== 'undefined' && status !== '') {\n      url += `&status=${encodeURIComponent(status)}`\n    }\n    if (startDate && typeof startDate === 'string' && startDate.trim() !== '') {\n      url += `&startDate=${encodeURIComponent(startDate)}`\n    }\n    if (endDate && typeof endDate === 'string' && endDate.trim() !== '') {\n      url += `&endDate=${encodeURIComponent(endDate)}`\n    }\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((res) => {\n        dispatch({\n          type: GET_CONTRACT_MEMBER_ACTIVITY,\n          payload: res.data.data,\n        })\n      })\n      .catch((error) => {})\n  }\n}\n\nexport const memberStatusChange = (statusValue, id, remarks) => {\n  return async (dispatch) => {\n    const url = `common/timesheet/approval/update`\n    const formData = new FormData()\n    formData.append('status', statusValue)\n    formData.append('remarks', remarks)\n    formData.append('id', id)\n\n    try {\n      const response = await api.put(url, formData, {\n        headers: getHeaders('multi'),\n      })\n      if (response?.data) {\n        dispatch({\n          type: STATUS_CHANGE_SUCCESS,\n          payload: response.data,\n        })\n        return response.data\n      } else {\n        throw new Error('Empty response received from the server')\n      }\n    } catch (error) {\n      dispatch({\n        type: STATUS_CHANGE_FAILURE,\n        error: error.message,\n      })\n      throw error\n    }\n  }\n}\n\nexport const contractMemberStatusChange = (statusValue, id, remarks) => {\n  return async (dispatch) => {\n    const url = `common/timesheet/approval/common/final-approved`\n    const formData = new FormData()\n    formData.append('status', statusValue)\n    formData.append('remarks', remarks)\n    formData.append('id', id)\n\n    try {\n      const response = await api.put(url, formData, {\n        headers: getHeaders('multi'),\n      })\n      if (response?.data) {\n        return response.data\n      } else {\n        throw new Error('Empty response received from the server')\n      }\n    } catch (error) {\n      throw error\n    }\n  }\n}\n\nexport const getClosedContractMemberActivity = (page, pageSize, category, status) => {\n  return (dispatch) => {\n    // Ensure page is a number\n    let pageNo = typeof page === 'number' ? page : 0\n\n    // Ensure pageSize is a number\n    let size = typeof pageSize === 'number' ? pageSize : 10 // Default to 10 if not a number\n\n    // Construct the URL with proper encoding\n    let url = `/common/timesheet/activity/final-approve-list/approved?page=${encodeURIComponent(\n      pageNo,\n    )}&size=${encodeURIComponent(size)}&category=${encodeURIComponent(category)}`\n    if (status && status !== 'undefined' && status !== '') {\n      url += `&status=${encodeURIComponent(status)}`\n    }\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((res) => {\n        dispatch({\n          type: GET_CONTRACT_CLOSED_MEMBER_ACTIVITY,\n          payload: res.data.data,\n        })\n      })\n      .catch((error) => {})\n  }\n}\n\nexport const getOwnerMemberActivity = (page, pageSize, category, startDate, endDate) => {\n  return (dispatch) => {\n    // Ensure page is a number\n    let pageNo = typeof page === 'number' ? page : 0\n\n    // Ensure pageSize is a number\n    let size = typeof pageSize === 'number' ? pageSize : 10 // Default to 10 if not a number\n\n    // Construct the URL with proper encoding\n    let url = `/common/timesheet/activity/owner/list?page=${encodeURIComponent(\n      pageNo,\n    )}&size=${encodeURIComponent(size)}&category=${encodeURIComponent(category)}`\n\n    if (startDate && typeof startDate === 'string' && startDate.trim() !== '') {\n      url += `&startDate=${encodeURIComponent(startDate)}`\n    }\n    if (endDate && typeof endDate === 'string' && endDate.trim() !== '') {\n      url += `&endDate=${encodeURIComponent(endDate)}`\n    }\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((res) => {\n        dispatch({\n          type: GET_OWNER_MEMBER_ACTIVITY,\n          payload: res.data.data,\n        })\n      })\n      .catch((error) => {})\n  }\n}\n\nexport const ownerMemberStatusUpdate = (statusValue, id, remarks) => {\n  return async (dispatch) => {\n    const url = `common/timesheet/approval/owner/update`\n    const formData = new FormData()\n    formData.append('status', statusValue)\n    formData.append('remarks', remarks)\n    formData.append('id', id)\n\n    try {\n      const response = await api.put(url, formData, {\n        headers: getHeaders('multi'),\n      })\n      if (response?.data) {\n        return response.data\n      } else {\n        throw new Error('Empty response received from the server')\n      }\n    } catch (error) {\n      throw error\n    }\n  }\n}\n\nexport const getClosedProductMemberActivity = (\n  page,\n  pageSize,\n  category,\n  status,\n  productId,\n  memberId,\n) => {\n  return (dispatch) => {\n    // Ensure page is a number\n    let pageNo = typeof page === 'number' ? page : 0\n\n    // Ensure pageSize is a number\n    let size = typeof pageSize === 'number' ? pageSize : 10 // Default to 10 if not a number\n\n    // Construct the URL with proper encoding\n    let url = `/common/timesheet/approval/owner/status?page=${encodeURIComponent(\n      pageNo,\n    )}&size=${encodeURIComponent(size)}&category=${encodeURIComponent(category)}`\n\n    if (productId && productId !== 'undefined' && productId !== '') {\n      url += `&productId=${encodeURIComponent(productId)}`\n    } else {\n      url += `&productId=0`\n    }\n    if (memberId && memberId !== 'undefined' && memberId !== '') {\n      url += `&memberId=${encodeURIComponent(memberId)}`\n    } else {\n      url += `&memberId=0`\n    }\n\n    if (status && status !== 'undefined' && status !== '') {\n      url += `&status=${encodeURIComponent(status)}`\n    }\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((res) => {\n        dispatch({\n          type: GET_PRODUCT_MEMBER_CLOSED_ACTIVITY,\n          payload: res.data.data,\n        })\n      })\n      .catch((error) => {})\n  }\n}\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { Input, Modal } from 'antd'\n\nconst { TextArea } = Input\nconst ApprovedConfirmModal = ({\n  isModalOpen,\n  handleCancel,\n  handleApprove,\n  id,\n  headContent,\n  resetFunc,\n}) => {\n  const [remarks, setRemarks] = useState('')\n  const [loading, setLoadings] = useState(false)\n\n  const handleOk = async () => {\n    setLoadings(true)\n    try {\n      const response = await handleApprove('Approved', id, remarks)\n      if (response.status === true) {\n        resetFunc()\n      }\n    } catch (error) {\n    } finally {\n      setLoadings(false)\n    }\n  }\n\n  const handleRemark = (remarks) => {\n    const regex = /^(?!\\s)(?![&@.,()\\s])(?![^a-zA-Z0-9\\s.,()-]+$)[&@a-zA-Z0-9\\s.,()-]*$/\n    if (regex.test(remarks) || remarks === '') {\n      setRemarks(remarks)\n    }\n  }\n\n  return (\n    <Modal\n      title={`Approved ${headContent}`}\n      open={isModalOpen}\n      onOk={handleOk}\n      okText=\"Approved\"\n      onCancel={handleCancel}\n      okButtonProps={{\n        style: { background: '#f54550', borderColor: '#f54550', color: 'white' },\n        loading: loading,\n      }} // Change button color here\n      maskClosable={false}\n    >\n      <p>Do you want to do Approved this {headContent} ?</p>\n\n      <TextArea\n        id=\"Description\"\n        variant={'borderless'}\n        value={remarks}\n        onChange={(e) => handleRemark(e.target.value)}\n        className=\"time-border-bottom\"\n        style={{\n          color: 'black',\n          width: '265px',\n          fontSize: '13px',\n          padding: '0px',\n        }}\n        placeholder=\"Enter Remarks...\"\n        autoSize={{\n          minRows: 0,\n          maxRows: 1,\n        }}\n      />\n      <br />\n    </Modal>\n  )\n}\n\nApprovedConfirmModal.propTypes = {\n  isModalOpen: PropTypes.bool,\n  handleCancel: PropTypes.func,\n  handleApprove: PropTypes.func,\n  id: PropTypes.any,\n  headContent: PropTypes.string,\n  resetFunc: PropTypes.func,\n}\nexport default ApprovedConfirmModal\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { Input, Modal } from 'antd'\n\nconst { TextArea } = Input\nconst RejectConfirmModal = ({\n  isModalOpen,\n  handleCancel,\n  handleApprove,\n  id,\n  headContent,\n  resetFunc,\n}) => {\n  const [remarks, setRemarks] = useState('')\n  const [loadings, setLoadings] = useState(false)\n  const [formErrors, setFormErrors] = useState({\n    remarks: '',\n  })\n\n  const validateForm = () => {\n    const errors = {\n      remarks: '',\n    }\n    if (remarks === '') {\n      errors.remarks = 'Please Enter Remarks'\n    }\n    setFormErrors(errors)\n    const hasErrors = errors.remarks !== ''\n    return !hasErrors\n  }\n\n  const handleOk = async () => {\n    const isFormValid = validateForm()\n    if (isFormValid) {\n      setLoadings(true)\n      try {\n        const response = await handleApprove('Rejected', id, remarks)\n        if (response.status === true) {\n          resetFunc()\n        }\n      } catch (error) {\n      } finally {\n        setLoadings(false)\n      }\n    }\n  }\n\n  const handleRemark = (remarks) => {\n    const regex = /^(?!\\s)(?![&@.,()\\s])(?![^a-zA-Z0-9\\s.,()-]+$)[&@a-zA-Z0-9\\s.,()-]*$/\n    if (regex.test(remarks) || remarks === '') {\n      setRemarks(remarks)\n    }\n  }\n\n  return (\n    <Modal\n      title={`Reject ${headContent}`}\n      open={isModalOpen}\n      onOk={handleOk}\n      okText=\"Reject\"\n      onCancel={handleCancel}\n      okButtonProps={{\n        style: { background: '#f54550', borderColor: '#f54550', color: 'white' },\n        loading: loadings,\n        disabled: remarks.trim() === '',\n      }} // Change button color here\n      maskClosable={false}\n    >\n      <p>Do you want to do reject this {headContent} ?</p>\n\n      <TextArea\n        id=\"Description\"\n        variant={'borderless'}\n        value={remarks}\n        onChange={(e) => handleRemark(e.target.value)}\n        className=\"time-border-bottom\"\n        style={{\n          color: 'black',\n          width: '265px',\n          fontSize: '13px',\n          padding: '0px',\n        }}\n        placeholder=\"Enter Remarks...\"\n        autoSize={{\n          minRows: 0,\n          maxRows: 1,\n        }}\n      />\n      <br />\n      <span className=\"text-danger nameflow-error \">{formErrors.remarks}</span>\n    </Modal>\n  )\n}\n\nRejectConfirmModal.propTypes = {\n  isModalOpen: PropTypes.bool,\n  handleCancel: PropTypes.func,\n  handleApprove: PropTypes.func,\n  id: PropTypes.any,\n  headContent: PropTypes.string,\n  resetFunc: PropTypes.func,\n}\nexport default RejectConfirmModal\n","import React, { useState, useEffect, useRef, useCallback } from 'react'\nimport { Checkbox, Table } from 'antd'\nimport { useDispatch, useSelector } from 'react-redux'\nimport CrossSvg from 'src/views/svgImages/CrossSvg'\nimport CheckSvg from 'src/views/svgImages/CheckSvg'\nimport { memberStatusChange } from 'src/redux/memberActivity/action'\nimport debounce from 'lodash.debounce'\nimport { CSpinner } from '@coreui/react'\nimport ApprovedConfirmModal from '../modal/ApprovedConfirmModel'\nimport RejectConfirmModal from '../modal/RejectConfirmModal'\nimport { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport PropTypes from 'prop-types'\nimport useAxios from 'src/constant/UseAxios'\nimport { getHeaders } from 'src/constant/Global'\nimport { ToastContainer } from 'react-toastify'\n\nconst PendingMemberActivity = ({\n  startDate,\n  endDate,\n  memberId,\n  memberName,\n  date,\n  resetComponent,\n}) => {\n  const dispatch = useDispatch()\n  let api = useAxios()\n  // const [data, setData] = useState([])\n  const tableBodyRef = useRef(null)\n  const pageRef = useRef(0)\n  const sizeRef = useRef(5)\n  const hasMoreRef = useRef(true)\n  const [commonLoader, setCommonLoader] = useState(true)\n  const [memberTable, setMemberTable] = useState([])\n  const [selectedRows, setSelectedRows] = useState([])\n  const selectedRef = useRef('')\n  const [isModalOpen, setIsModalOpen] = useState(false)\n\n  const [rejectStatus, setRejectStatus] = useState('')\n  const [singleId, setSingleId] = useState()\n  const [singleApprovedId, setSingleApprovedId] = useState('')\n  const [openSelectAll, setOpenSelectAll] = useState(false)\n  const [openSelectRejectAll, setOpenSelectRejectAll] = useState(false)\n  const [open, setOpen] = useState(false)\n  const [approvedStatusAll, setApprovedStatusAll] = useState('')\n  const [approvedStatus, setApprovedStatus] = useState('')\n  const [headerLabel, setHeaderLabel] = useState('')\n  const sidebarShow = useSelector((state) => state.dashboard.sidebarShow)\n  const [abortController, setAbortController] = useState(new AbortController())\n\n  // console.log(memberId)\n\n  useEffect(() => {\n    setSelectedRows([])\n    selectedRef.current = ''\n    setHeaderLabel('')\n    pageRef.current = 0\n    hasMoreRef.current = true\n    setCommonLoader(true)\n    // setData([])\n    setMemberTable([])\n    getMemberActivityall()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [startDate, endDate, memberId, dispatch])\n\n  const getMemberActivityall = async () => {\n    let newAbortController\n    if (pageRef.current === 0) {\n      setCommonLoader(true)\n      setMemberTable([])\n      abortController.abort()\n      newAbortController = new AbortController()\n      setAbortController(newAbortController)\n    }\n\n    try {\n      const response = await api.get(\n        `common/timesheet/activity/superviserlistall?page=${pageRef.current}&size=${sizeRef.current}&category=dateandmember&memberId=${memberId}&startDate=${startDate}&endDate=${endDate}`,\n        {\n          headers: getHeaders('json'),\n          signal: newAbortController?.signal,\n        },\n      )\n      const data = response.data.data\n      // console.log(data)\n      if (pageRef.current === 0) {\n        setMemberTable(data)\n      } else {\n        setMemberTable((prevUserData) => {\n          const uniqueSet = new Set(prevUserData.map((user) => user.id))\n          const newData = data.filter((user) => !uniqueSet.has(user.id))\n          return [...prevUserData, ...newData]\n        })\n      }\n      if (data.length < 5) {\n        hasMoreRef.current = false\n      } else {\n        hasMoreRef.current = true\n      }\n      pageRef.current = pageRef.current + 1\n      setCommonLoader(false)\n    } catch (error) {\n      setCommonLoader(false)\n    }\n  }\n\n  const showPopconfirm = (status, rowId) => {\n    setOpen(true)\n    setSingleApprovedId(rowId)\n    setApprovedStatus(status)\n  }\n\n  const showPopconfirmAll = (status) => {\n    if (status === 'Approved') {\n      setOpenSelectAll(true)\n      setApprovedStatusAll('Approved')\n    } else if (status === 'Reject') {\n      setOpenSelectRejectAll(true)\n      setApprovedStatusAll('Reject')\n    }\n  }\n\n  const truncateString = (str, num) => {\n    if (!str) {\n      return '' // or you can return str itself, which would be null or undefined\n    }\n    return str.length > num ? `${str.substring(0, num)}...` : str\n  }\n\n  const handleScroll = useCallback(\n    debounce(() => {\n      if (!tableBodyRef.current) return\n\n      const { scrollTop, scrollHeight, clientHeight } = tableBodyRef.current\n      if (scrollTop + clientHeight >= scrollHeight - 10) {\n        fetchMoreData()\n      }\n    }, 100),\n    [],\n  )\n\n  const fetchMoreData = () => {\n    if (hasMoreRef.current) {\n      getMemberActivityall()\n    }\n  }\n\n  useEffect(() => {\n    const tableBody = document.querySelector('.ant-table-body')\n    if (tableBody) {\n      tableBodyRef.current = tableBody\n      tableBody.addEventListener('scroll', handleScroll)\n    }\n\n    return () => {\n      if (tableBody) {\n        tableBody.removeEventListener('scroll', handleScroll)\n      }\n    }\n  }, [handleScroll])\n\n  const columns = [\n    {\n      title: (\n        <div className=\"checkbox-container\">\n          <Checkbox\n            id=\"flexCheckDefault\"\n            disabled={sidebarShow === true}\n            onChange={(e) => handleHeaderCheck(e.target.checked)}\n            checked={selectedRows.length === memberTable.length && memberTable.length > 0}\n          />\n        </div>\n      ),\n      width: 10,\n      fixed: 'left',\n      render: (text, row) => (\n        <div className=\"checkbox-container\">\n          <Checkbox\n            id=\"flexCheckDefault\"\n            disabled={sidebarShow === true}\n            checked={selectedRows.includes(row.id)}\n            onChange={(e) => handleRowCheck(row.id, e.target.checked)}\n          />\n        </div>\n      ),\n    },\n    {\n      title: 'Product',\n      dataIndex: 'productName',\n      key: 'productName',\n      fixed: 'left',\n      width: 20,\n      render: (text, row) => {\n        const truncatedProductName = truncateString(row.productName, 12)\n        return (\n          <div>\n            <span>\n              {row.assignedStatus === true && (\n                <span style={{ fontSize: '16px', color: '#00ab55' }}>&#8226;</span>\n              )}\n              {row.assignedStatus === false && (\n                <span style={{ fontSize: '16px', color: '#ffaa00' }}>&#8226;</span>\n              )}\n              <span style={{ marginLeft: '5px' }}>{truncatedProductName}</span>\n            </span>\n          </div>\n        )\n      },\n    },\n    {\n      title: 'Task',\n      dataIndex: 'taskName',\n      key: 'taskName',\n      width: 17,\n      render: (text) => truncateString(text, 12),\n    },\n    {\n      title: 'Hours',\n      dataIndex: 'hours',\n      key: 'hours',\n      width: 10,\n    },\n    {\n      title: 'Description',\n      width: 30,\n      dataIndex: 'description',\n      key: 'description',\n      render: (text) => truncateString(text, 20),\n    },\n    {\n      title: 'Team member',\n      dataIndex: 'userName',\n      key: 'userName',\n      width: 20,\n      render: (text) => truncateString(text, 12),\n    },\n    {\n      title: 'Action',\n      width: 14,\n      dataIndex: 'action',\n      fixed: 'right',\n      key: 'action',\n      render: (text, row) => (\n        <div>\n          <button\n            className=\"btn border-0 text-c text-secondary check-button\"\n            style={{ fontSize: '12px', padding: '4px 8px' }}\n            disabled={selectedRows.includes(row.id) || sidebarShow === true}\n            onClick={() => showPopconfirm('Approved', row.id)}\n          >\n            <CheckSvg width=\"11\" height=\"9\" viewBox=\"0 0 14 10\" fill=\"#A5A1A1\" />\n          </button>\n          <button\n            className=\"btn border-0 text-c text-secondary cross-button\"\n            style={{ fontSize: '12px', padding: '4px 8px' }}\n            onClick={() => showModal(row.id, 'Reject')}\n            disabled={selectedRows.includes(row.id) || sidebarShow === true}\n          >\n            <CrossSvg width=\"9\" height=\"11\" viewBox=\"0 0 14 10\" fill=\"#A5A1A1\" />\n          </button>\n        </div>\n      ),\n    },\n  ]\n\n  const handleHeaderCheck = (isChecked) => {\n    if (isChecked) {\n      const allRowIds = memberTable.map((row) => row.id)\n      setSelectedRows(allRowIds)\n      selectedRef.current = ''\n      setHeaderLabel(`${allRowIds.length} Selected`)\n    } else {\n      setSelectedRows([])\n      setHeaderLabel('')\n      selectedRef.current = ''\n    }\n  }\n\n  const handleRowCheck = (id, isChecked) => {\n    if (isChecked) {\n      setSelectedRows((prevSelectedRows) => {\n        const updatedSelectedRows = [...prevSelectedRows, id]\n        selectedRef.current = updatedSelectedRows // Update the ref directly\n        setHeaderLabel(`${selectedRef.current.length} Selected`)\n        return updatedSelectedRows\n      })\n    } else {\n      setSelectedRows((prevSelectedRows) => {\n        const updatedSelectedRows = prevSelectedRows.filter((selectedKey) => selectedKey !== id)\n        selectedRef.current = updatedSelectedRows // Update the ref directly\n        if (updatedSelectedRows.length > 0) {\n          setHeaderLabel(`${selectedRef.current.length} Selected`)\n        } else {\n          setHeaderLabel('')\n        }\n        return updatedSelectedRows\n      })\n    }\n  }\n\n  const showModal = (id, status) => {\n    setIsModalOpen(true)\n    setSingleId(id)\n    setRejectStatus(status)\n  }\n\n  const handleCancel = () => {\n    setIsModalOpen(false)\n  }\n\n  const handleApproveCancel = () => {\n    setOpen(false)\n  }\n\n  const handleApproveCancelAll = () => {\n    setOpenSelectAll(false)\n    setSelectedRows([])\n    setHeaderLabel('')\n  }\n\n  const handleRejectCancelAll = () => {\n    setOpenSelectRejectAll(false)\n  }\n\n  const handleApproveActivity = async (status, id, remarks) => {\n    return await statusChange(rejectStatus, id, remarks)\n  }\n\n  const handleApproved = async (status, singleApprovedId, remarks) => {\n    return await statusChange(approvedStatus, singleApprovedId, remarks)\n  }\n\n  const handleButtonClick = async (status, selectedRows, remarks) => {\n    return await statusChange(status, selectedRows, remarks)\n  }\n\n  const statusChange = async (statusValue, id, remarks) => {\n    try {\n      const response = await dispatch(memberStatusChange(statusValue, id, remarks))\n      if (response && response.status === true) {\n        const message = `Activity ${statusValue} Successfully`\n        toast.success(message, {\n          position: toast.POSITION.BOTTOM_RIGHT,\n          autoClose: 2000,\n        })\n        pageRef.current = 0\n        // setData([]) // Clear current data\n        hasMoreRef.current = true\n        getMemberActivityall()\n        return response\n      } else {\n        throw new Error('Empty response received from the server')\n      }\n    } catch (error) {\n      toast.error(`Error: ${error.message}`, {\n        position: toast.POSITION.BOTTOM_RIGHT,\n        autoClose: 3000,\n      })\n    }\n  }\n\n  const resetFormValues = () => {\n    setIsModalOpen(false)\n    setOpenSelectRejectAll(false)\n    setOpen(false)\n    setOpenSelectAll(false)\n    setSelectedRows([])\n    setHeaderLabel('')\n    selectedRef.current = ''\n    pageRef.current = 0\n    hasMoreRef.current = true\n    getMemberActivityall()\n    resetComponent()\n  }\n\n  return (\n    <>\n      <ToastContainer />\n      <div style={{ fontSize: '14px', fontWeight: '600', paddingLeft: '40px' }}>\n        {' '}\n        {memberName} activity for {date}\n      </div>\n      <br></br>\n      <div className=\"db_table\" style={{ height: '412px', overflow: 'auto' }} id=\"scrollableDiv\">\n        <style>{`\n          .ant-table-body {\n            scrollbar-width: thin;\n          }\n          .db_table .ant-table-wrapper .ant-table-thead > tr > th {\n            color: #919EAB !important;\n            font-size: 12px !important;\n            padding: 12px !important;\n          }\n          .db_table .ant-table-cell {\n            font-size: 12px !important;\n            color: #A5A3A4 !important;\n            font-weight: 600;\n          }\n        `}</style>\n\n        {headerLabel && (\n          <div\n            className=\"table-header\"\n            style={{ display: 'grid', gridTemplateColumns: '10% 1fr auto', alignItems: 'center' }}\n          >\n            <div className=\"table-head-selected text-center text-c\" style={{ paddingTop: '15px' }}>\n              {/* <Checkbox\n                id=\"flexCheckDefault\"\n                className=\"checkbox_design\"\n                checked={selectedRows.length === memberTable.length && memberTable.length > 0}\n                onChange={(e) => handleHeaderCheck(e.target.checked)}\n              /> */}\n            </div>\n            <div\n              className=\"table-head-selected text-c\"\n              style={{ textAlign: 'center', padding: '17px 0px 4px 0px' }}\n            >\n              <span style={{ color: '#f50505' }}>{headerLabel}</span>\n            </div>\n            <div\n              className=\"table-head-selected\"\n              style={{ display: 'flex', justifyContent: 'center' }}\n            >\n              <button\n                className=\"btn border-0 text-c text-secondary check-button\"\n                style={{ fontSize: '12px', padding: '4px 8px' }}\n                type=\"button\"\n                onClick={() => showPopconfirmAll('Approved')}\n              >\n                <CheckSvg width=\"11\" height=\"9\" viewBox=\"0 0 14 10\" fill=\"#00ab55\" />\n              </button>\n              <button\n                className=\"btn border-0 text-c text-secondary cross-button\"\n                style={{ fontSize: '12px', padding: '4px 8px' }}\n                onClick={() => showPopconfirmAll('Reject')}\n              >\n                <CrossSvg width=\"9\" height=\"11\" viewBox=\"0 0 14 10\" fill=\"#e40e2d\" />\n              </button>\n            </div>\n          </div>\n        )}\n        <Table\n          columns={columns}\n          dataSource={memberTable}\n          className=\"db_table_content\"\n          scroll={{ x: 1000, y: 300 }}\n          pagination={false}\n          loading={{\n            spinning: commonLoader,\n            indicator: <CSpinner color=\"danger\" />,\n          }}\n        />\n\n        {isModalOpen && (\n          <RejectConfirmModal\n            isModalOpen={isModalOpen}\n            handleCancel={handleCancel}\n            handleApprove={handleApproveActivity}\n            id={singleId}\n            headContent=\"Activity\"\n            resetFunc={resetFormValues}\n          />\n        )}\n        {open && (\n          <ApprovedConfirmModal\n            isModalOpen={open}\n            handleCancel={handleApproveCancel}\n            handleApprove={handleApproved}\n            id={singleApprovedId}\n            headContent=\"Activity\"\n            resetFunc={resetFormValues}\n          />\n        )}\n        {openSelectAll && (\n          <ApprovedConfirmModal\n            isModalOpen={openSelectAll}\n            handleCancel={handleApproveCancelAll}\n            handleApprove={(remarks) => handleButtonClick(approvedStatusAll, selectedRows, remarks)}\n            headContent=\"Activity\"\n            resetFunc={resetFormValues}\n          />\n        )}\n        {openSelectRejectAll && (\n          <RejectConfirmModal\n            isModalOpen={openSelectRejectAll}\n            handleCancel={handleRejectCancelAll}\n            handleApprove={(remarks) => handleButtonClick(approvedStatusAll, selectedRows, remarks)}\n            headContent=\"Activity\"\n            resetFunc={resetFormValues}\n          />\n        )}\n      </div>\n    </>\n  )\n}\n\nPendingMemberActivity.propTypes = {\n  startDate: PropTypes.any,\n  endDate: PropTypes.any,\n  memberId: PropTypes.any,\n  memberName: PropTypes.any,\n  date: PropTypes.any,\n  resetComponent: PropTypes.func,\n}\nexport default PendingMemberActivity\n","import React, { useState, useEffect, useRef, useCallback } from 'react'\nimport { Table } from 'antd'\nimport { useDispatch, useSelector } from 'react-redux'\nimport CrossSvg from 'src/views/svgImages/CrossSvg'\nimport CheckSvg from 'src/views/svgImages/CheckSvg'\nimport debounce from 'lodash.debounce'\nimport { CSpinner } from '@coreui/react'\nimport ApprovedConfirmModal from '../modal/ApprovedConfirmModel'\nimport RejectConfirmModal from '../modal/RejectConfirmModal'\nimport { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport PropTypes from 'prop-types'\nimport useAxios from 'src/constant/UseAxios'\nimport { getHeaders } from 'src/constant/Global'\nimport { ToastContainer } from 'react-toastify'\n\nconst RaiseRequestList = ({ startDate, endDate, memberId, memberName, date, resetComponent }) => {\n  const dispatch = useDispatch()\n  let api = useAxios()\n  const tableBodyRef = useRef(null)\n  const pageRef = useRef(0)\n  const sizeRef = useRef(5)\n  const hasMoreRef = useRef(true)\n  const [commonLoader, setCommonLoader] = useState(true)\n  const [memberTable, setMemberTable] = useState([])\n  const [selectedRows, setSelectedRows] = useState([])\n  const selectedRef = useRef('')\n  const [isModalOpen, setIsModalOpen] = useState(false)\n  const [singleId, setSingleId] = useState()\n  const [singleApprovedId, setSingleApprovedId] = useState('')\n  const [open, setOpen] = useState(false)\n  const [approvedStatus, setApprovedStatus] = useState('')\n  const sidebarShow = useSelector((state) => state.dashboard.sidebarShow)\n  const [abortController, setAbortController] = useState(new AbortController())\n\n  useEffect(() => {\n    setSelectedRows([])\n    selectedRef.current = ''\n    pageRef.current = 0\n    hasMoreRef.current = true\n    setCommonLoader(true)\n    setMemberTable([])\n    getRequestList()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [startDate, endDate, memberId, dispatch])\n\n  const getRequestList = async () => {\n    let newAbortController\n    if (pageRef.current === 0) {\n      setCommonLoader(true)\n      setMemberTable([])\n      abortController.abort()\n      newAbortController = new AbortController()\n      setAbortController(newAbortController)\n    }\n\n    try {\n      const response = await api.get(\n        `activity/raisedRequest/tosupervisor?page=${pageRef.current}&size=${sizeRef.current}&filter=true&userid=${memberId}&date=${startDate}`,\n        {\n          headers: getHeaders('json'),\n          signal: newAbortController?.signal,\n        },\n      )\n      const data = response.data.data\n      // console.log(data)\n      if (pageRef.current === 0) {\n        setMemberTable(data)\n      } else {\n        setMemberTable((prevUserData) => {\n          const uniqueSet = new Set(prevUserData.map((user) => user.id))\n          const newData = data.filter((user) => !uniqueSet.has(user.id))\n          return [...prevUserData, ...newData]\n        })\n      }\n      if (data.length < 10) {\n        hasMoreRef.current = false\n      } else {\n        hasMoreRef.current = true\n      }\n      pageRef.current = pageRef.current + 1\n      setCommonLoader(false)\n    } catch (error) {\n      setCommonLoader(false)\n    }\n  }\n\n  const showPopconfirm = (status, rowId) => {\n    setOpen(true)\n    setSingleApprovedId(rowId)\n    setApprovedStatus(status)\n  }\n\n  const truncateString = (str, num) => {\n    if (!str) {\n      return '' // or you can return str itself, which would be null or undefined\n    }\n    return str.length > num ? `${str.substring(0, num)}...` : str\n  }\n\n  const handleScroll = useCallback(\n    debounce(() => {\n      if (!tableBodyRef.current) return\n\n      const { scrollTop, scrollHeight, clientHeight } = tableBodyRef.current\n      if (scrollTop + clientHeight >= scrollHeight - 10) {\n        fetchMoreData()\n      }\n    }, 100),\n    [],\n  )\n\n  const fetchMoreData = () => {\n    if (hasMoreRef.current) {\n      getRequestList()\n    }\n  }\n\n  useEffect(() => {\n    const tableBody = document.querySelector('.ant-table-body')\n    if (tableBody) {\n      tableBodyRef.current = tableBody\n      tableBody.addEventListener('scroll', handleScroll)\n    }\n\n    return () => {\n      if (tableBody) {\n        tableBody.removeEventListener('scroll', handleScroll)\n      }\n    }\n  }, [handleScroll])\n\n  const columns = [\n    {\n      title: 'Reason',\n      dataIndex: 'reason',\n      key: 'reason',\n      width: '80%',\n      render: (text) => truncateString(text, 12),\n    },\n    {\n      title: 'Action',\n      width: '18%',\n      dataIndex: 'action',\n      fixed: 'right',\n      key: 'action',\n      render: (text, row) => (\n        <div>\n          <button\n            className=\"btn border-0 text-c text-secondary check-button\"\n            style={{ fontSize: '12px', padding: '4px 8px' }}\n            disabled={selectedRows.includes(row.id) || sidebarShow === true}\n            onClick={() => showPopconfirm('Approved', row.id)}\n          >\n            <CheckSvg width=\"11\" height=\"9\" viewBox=\"0 0 14 10\" fill=\"#A5A1A1\" />\n          </button>\n          <button\n            className=\"btn border-0 text-c text-secondary cross-button\"\n            style={{ fontSize: '12px', padding: '4px 8px' }}\n            onClick={() => showModal(row.id, 'Reject')}\n            disabled={selectedRows.includes(row.id) || sidebarShow === true}\n          >\n            <CrossSvg width=\"9\" height=\"11\" viewBox=\"0 0 14 10\" fill=\"#A5A1A1\" />\n          </button>\n        </div>\n      ),\n    },\n  ]\n\n  const showModal = (id, status) => {\n    setIsModalOpen(true)\n    setSingleId(id)\n  }\n\n  const handleCancel = () => {\n    setIsModalOpen(false)\n  }\n\n  const handleApproveCancel = () => {\n    setOpen(false)\n  }\n\n  const handleApproved = async (status, singleApprovedId, remarks) => {\n    return await handleRaiseApprove(approvedStatus, singleApprovedId, remarks)\n  }\n\n  const handleRaiseApprove = async (status, id, remarks) => {\n    const url = 'activity/approve/' + id\n    const postData = {\n      status: status,\n      remarks: remarks,\n    }\n    try {\n      const response = await api.put(url, postData, {\n        headers: getHeaders('json'),\n      })\n\n      if (response?.data) {\n        const message = `Request ${status} Successfully`\n        toast.success(message, {\n          position: toast.POSITION.BOTTOM_RIGHT,\n          autoClose: 2000,\n        })\n        return response.data\n      } else {\n        throw new Error('Empty response received from the server')\n      }\n    } catch (error) {\n      const errorMessage = error.response ? error.response.data.message : error.message\n      toast.error(errorMessage, {\n        position: toast.POSITION.BOTTOM_RIGHT,\n        autoClose: 3000,\n      })\n      throw error\n    }\n  }\n\n  const resetFormValues = () => {\n    setIsModalOpen(false)\n    setOpen(false)\n    setSelectedRows([])\n    selectedRef.current = ''\n    pageRef.current = 0\n    hasMoreRef.current = true\n    getRequestList()\n    resetComponent()\n  }\n\n  return (\n    <>\n      <ToastContainer />\n      <div style={{ fontSize: '14px', fontWeight: '600', paddingLeft: '40px' }}>\n        {' '}\n        {memberName} activity for {date}\n      </div>\n      <br></br>\n      <div className=\"db_table\" style={{ height: '312px' }} id=\"scrollableDiv\">\n        <style>{`\n          .db_table .ant-table-body::-webkit-scrollbar {\n            display: none !important;\n          }\n          .db_table .ant-table-wrapper .ant-table-thead > tr > th {\n            color: #919EAB !important;\n            font-size: 12px !important;\n            padding: 12px !important;\n          }\n          .db_table .ant-table-cell {\n            font-size: 12px !important;\n            color: #A5A3A4 !important;\n            font-weight: 600;\n          }\n        `}</style>\n        <Table\n          columns={columns}\n          dataSource={memberTable}\n          className=\"db_table_content\"\n          pagination={false}\n          loading={{\n            spinning: commonLoader,\n            indicator: <CSpinner color=\"danger\" />,\n          }}\n        />\n\n        {isModalOpen && (\n          <RejectConfirmModal\n            isModalOpen={isModalOpen}\n            handleCancel={handleCancel}\n            handleApprove={handleRaiseApprove}\n            id={singleId}\n            headContent=\"request\"\n            resetFunc={resetFormValues}\n          />\n        )}\n        {open && (\n          <ApprovedConfirmModal\n            isModalOpen={open}\n            handleCancel={handleApproveCancel}\n            handleApprove={handleApproved}\n            id={singleApprovedId}\n            headContent=\"request\"\n            resetFunc={resetFormValues}\n          />\n        )}\n      </div>\n    </>\n  )\n}\n\nRaiseRequestList.propTypes = {\n  startDate: PropTypes.any,\n  endDate: PropTypes.any,\n  memberId: PropTypes.any,\n  memberName: PropTypes.any,\n  date: PropTypes.any,\n  resetComponent: PropTypes.func,\n}\nexport default RaiseRequestList\n","import React, { useState, useEffect, useRef } from 'react'\nimport { Breadcrumb, Calendar, Select, Skeleton, Badge, Tooltip } from 'antd'\nimport { CRow, CCol } from '@coreui/react'\nimport { getHeaders, ImageUrl } from 'src/constant/Global'\nimport 'react-toastify/dist/ReactToastify.css'\nimport dayjs from 'dayjs'\nimport updateLocale from 'dayjs/plugin/updateLocale'\nimport useAxios from 'src/constant/UseAxios'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport { Link } from 'react-router-dom'\nimport Downarrowimg from '../../assets/images/downarrow.png'\nimport moment from 'moment'\nimport PendingMemberActivity from './PendingMemberActivity'\nimport profileImage1 from '../../assets/images/avatars/wrapper.png'\nimport activityImage from '../../assets/images/activity-img.png'\nimport { LeftOutlined, RightOutlined } from '@ant-design/icons'\nimport RaiseRequestList from './RaiseRequestList'\n\ndayjs.extend(updateLocale)\ndayjs.updateLocale('en', {\n  weekStart: 1,\n})\n\nconst ActivityCalendar = () => {\n  let api = useAxios()\n  const memberIdRef = useRef('')\n  const memberNameRef = useRef('')\n  const setCellTypeRef = useRef('')\n  const [data, setData] = useState([])\n  const pageRef = useRef(1)\n  const [abortController, setAbortController] = useState(new AbortController())\n  const [currentMonth, setCurrentMonth] = useState(moment().month() + 1) // Current month (0-indexed)\n  const currentMonthRef = useRef(moment().month() + 1)\n  const currentYearRef = useRef(moment().year())\n  const [currentYear, setCurrentYear] = useState(moment().year()) // Current year\n  const selectedDateRef = useRef(null)\n  const selectedDateWithoutFormatRef = useRef(null)\n  const [selectedDate, setSelectedDate] = useState(null)\n  const [memberLoader, setMemberLoader] = useState(false)\n  const [memberList, setMemberList] = useState([])\n  const [selectedMember, setSelectedMember] = useState(null)\n  // const [hideLastRow, setHideLastRow] = useState(false);\n\n  const onPanelChange = (value, mode) => {\n    setCurrentMonth(value.month() + 1) // Month is 0-indexed, add 1 for human-readable format\n    currentMonthRef.current = value.month() + 1\n    currentYearRef.current = value.year()\n    setCurrentYear(value.year())\n    // setSelectedMember('')\n    setData([])\n    if (memberIdRef.current !== '' && memberIdRef.current !== 0) {\n      getSelfActivityRecord(memberIdRef.current)\n    }\n  }\n\n  // const onSelect = (date) => {\n  //   if (memberIdRef.current !== '') {\n  //     const dd = date.format('DDMMYYYY')\n  //     const cellValue = document.getElementById(`cell_value_${dd}`).value\n  //     if (cellValue != '') {\n  //       setCellTypeRef.current = cellValue\n  //     } else {\n  //       setCellTypeRef.current = ''\n  //     }\n  //   }\n\n  //   const formattedDate = date.format('YYYY-MM-DD')\n  //   selectedDateRef.current = formattedDate\n  //   selectedDateWithoutFormatRef.current = date\n  //   setSelectedDate(formattedDate)\n  // }\n\n  const onSelect = (date) => {\n    if (memberIdRef.current !== '') {\n      const dd = date.format('DDMMYYYY')\n      const cellElement = document.getElementById(`cell_value_${dd}`)\n\n      if (cellElement) {\n        // Element exists\n        const cellValue = cellElement.value\n        if (cellValue !== '') {\n          setCellTypeRef.current = cellValue\n        } else {\n          setCellTypeRef.current = ''\n        }\n      } else {\n        // Element does not exist\n        setCellTypeRef.current = ''\n      }\n    }\n\n    const formattedDate = date.format('YYYY-MM-DD')\n    selectedDateRef.current = formattedDate\n    selectedDateWithoutFormatRef.current = date\n    setSelectedDate(formattedDate)\n  }\n\n  const customFullHeaderRender = ({ value, onChange }) => {\n    const fullDayNames = [\n      'Monday',\n      'Tuesday',\n      'Wednesday',\n      'Thursday',\n      'Friday',\n      'Saturday',\n      'Sunday',\n    ]\n\n    // const [abortController, setAbortController] = useState(new AbortController())\n    const month = value.month()\n\n    const onMonthChange = (newMonth) => {\n      const newValue = value.clone().month(newMonth)\n      onChange(newValue)\n    }\n\n    const handleMember = (value) => {\n      const ids = Number(memberList.find((user) => user.name === value)?.id || '')\n      memberIdRef.current = ids\n      memberNameRef.current = value\n      if (ids !== '' && ids !== 0) {\n        getSelfActivityRecord(ids)\n      } else {\n        setData([])\n      }\n      setSelectedMember(value)\n    }\n\n    // const getSelfActivityRecord = async (id) => {\n    //   const url = `/activity/selfactivity?id=${id}&month=${currentMonth}&year=${currentYear}`\n    //   await api\n    //     .get(url, {\n    //       headers: getHeaders('json'),\n    //     })\n    //     .then((response) => {\n    //       const selfactivity = response.data.data\n    //       setData(selfactivity)\n    //       // console.log(data)\n\n    //       setMemberLoader(false)\n    //     })\n    //     .catch((error) => {})\n    // }\n\n    const formattedDate = value.format('MMMM YYYY')\n\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(() => {\n      setMemberLoader(true)\n      getMemberList()\n    }, [])\n\n    const memberOptions = memberList.map((user) => ({\n      value: user.name,\n      label: (\n        <div className=\"select-options select-options-bg\">\n          <img\n            src={user.profile_pic ? ImageUrl + user.profile_pic : profileImage1}\n            style={user.profile_pic ? { width: '29px' } : { width: '39px' }}\n            alt={user.name}\n            className=\"img-flag\"\n          />\n          <div className=\"node1\" style={user.profile_pic ? { marginLeft: '11px' } : {}}>\n            <p className=\"user-name1\" title={user.name}>\n              {user.name}\n            </p>\n            <p className=\"role-text1\">{user.role}</p>\n          </div>\n        </div>\n      ),\n    }))\n\n    const curMonth = new Date().getMonth()\n\n    return (\n      <div>\n        {/* <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', padding: '10px 10px 15px 0px' }}> */}\n        <CRow style={{ paddingBottom: '15px' }}>\n          <CCol md={8}>\n            <LeftOutlined onClick={() => onMonthChange(month - 1)} /> &nbsp;&nbsp;\n            <span style={{ fontSize: '16px', fontWeight: 'bold' }}>{formattedDate}</span>\n            &nbsp;&nbsp;\n            {/* <RightOutlined onClick={() => onMonthChange(month + 1)} /> */}\n            {month !== curMonth ? (\n              <RightOutlined onClick={() => onMonthChange(month + 1)} />\n            ) : (\n              <RightOutlined style={{ color: 'gray', cursor: 'not-allowed' }} />\n            )}\n          </CCol>\n          <CCol md={4}>\n            <Select\n              style={{ width: '161px' }}\n              className=\"calendar-select\"\n              id=\"member-list\"\n              onChange={handleMember}\n              // value={selectedMember ? 'Select Member'}\n              value={\n                selectedMember\n                  ? selectedMember\n                  : { label: 'Select Member', value: 'Select Member', className: 'ant-label' }\n              }\n              options={\n                memberLoader\n                  ? [\n                      {\n                        label: (\n                          <div style={{ textAlign: 'center' }}>\n                            {Array.from({ length: 5 }, (_, index) => (\n                              <Skeleton\n                                key={index}\n                                title={false}\n                                avatar={{\n                                  size: '20',\n                                }} // Adjust the width and height here\n                                paragraph={{\n                                  rows: 2,\n                                  height: '10px',\n                                  style: { height: '10px !important' },\n                                }}\n                              />\n                            ))}\n                          </div>\n                        ),\n                        value: 'loading',\n                        disabled: true,\n                      },\n                    ]\n                  : memberOptions\n              }\n              placeholder=\"Select Member\"\n              allowClear\n              showSearch\n              // style={{ width: '100%',color: 'red' }}\n              // style={{ width: '-webkit-fill-available' }}\n              suffixIcon={\n                <img\n                  src={Downarrowimg}\n                  alt={Downarrowimg}\n                  style={{ width: '10px', height: '7px' }}\n                />\n              }\n            />\n          </CCol>\n        </CRow>\n        {/* </div> */}\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'left',\n            fontSize: '12px',\n            color: '#787a7c',\n            paddingBottom: '15px',\n            paddingTop: '15px',\n            marginLeft: '4px',\n          }}\n        >\n          {fullDayNames.map((day, index) => (\n            <div key={index} style={{ width: '14.28%', textAlign: 'left', color: '#919EAB' }}>\n              {day}\n            </div>\n          ))}\n        </div>\n      </div>\n    )\n  }\n\n  const getSelfActivityRecord = async (id) => {\n    const url = `/activity/selfactivity?id=${id}&month=${currentMonthRef.current}&year=${currentYearRef.current}`\n    await api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        const selfactivity = response.data.data\n        setData(selfactivity)\n        // console.log(data)\n\n        setMemberLoader(false)\n      })\n      .catch((error) => {})\n  }\n\n  function formatDates(value) {\n    const day = value.format('D')\n    const month = value.format('MMMM')\n\n    const dayWithSuffix = getOrdinalSuffix(parseInt(day, 10))\n    return `${dayWithSuffix} ${month}`\n  }\n\n  // Function to get the ordinal suffix\n  function getOrdinalSuffix(day) {\n    const j = day % 10,\n      k = day % 100\n    if (j === 1 && k !== 11) {\n      return day + 'st'\n    }\n    if (j === 2 && k !== 12) {\n      return day + 'nd'\n    }\n    if (j === 3 && k !== 13) {\n      return day + 'rd'\n    }\n    return day + 'th'\n  }\n\n  const getListData = (value) => {\n    const dateStr = value.format('DD-MM-YYYY')\n    // console.log(data)\n    const listData = data.find((item) => item.date === dateStr)\n    if (listData) {\n      return [\n        ...(listData.pending !== 0 ? [{ type: 'pending', count: listData.pending }] : []),\n        ...(listData.approved !== 0 ? [{ type: 'approved', count: listData.approved }] : []),\n        ...(listData.rejected !== 0 ? [{ type: 'rejected', count: listData.rejected }] : []),\n        ...(listData.leave !== 0 ? [{ type: 'leave', count: listData.leave }] : []),\n        ...(listData.notEntered !== 0 ? [{ type: 'notEntered', count: listData.notEntered }] : []),\n        ...(listData.raisedrequest !== 0\n          ? [{ type: 'raisedrequest', count: listData.raisedrequest }]\n          : []),\n      ]\n    }\n    return []\n  }\n\n  const dateCellRender = (value) => {\n    const listData = getListData(value)\n    const datewithclass = value.format('DDMMYYYY')\n\n    // console.log(listData, 'listData')\n    const dateStr = value\n    let divValue = ''\n    const vDate = formatDates(dateStr)\n    const tooltipContent = (\n      <div>\n        <div>{vDate}</div>\n        <hr style={{ marginTop: '0px', marginBottom: '0px' }} />\n        {listData.map((item, index) => {\n          let status,\n            text,\n            className = ''\n          if (item.type === 'pending') {\n            status = 'warning'\n            text = `Pending (${item.count})`\n          } else if (item.type === 'approved') {\n            status = 'success'\n            text = `Approved (${item.count})`\n          } else if (item.type === 'rejected') {\n            status = 'error'\n            text = `Rejected (${item.count})`\n          } else if (item.type === 'leave') {\n            status = 'default'\n            className = 'default2'\n            text = `Leave (${item.count})`\n          } else if (item.type === 'notEntered') {\n            status = 'default'\n            text = `Not Entered (${item.count})`\n          } else if (item.type === 'raisedrequest') {\n            status = 'error'\n            className = 'default2'\n            text = `Raised Request (${item.count})`\n          }\n\n          return (\n            <div key={index} title=\"\">\n              <Badge className={className} status={status} /> {text}\n            </div>\n          )\n        })}\n      </div>\n    )\n\n    return (\n      <div>\n        <Tooltip title={tooltipContent} placement=\"right\" overlayClassName=\"custom-tooltip\">\n          <ul className=\"events-horizontal\">\n            {listData.map((item, index) => {\n              let color,\n                className = ''\n              if (item.type === 'pending') {\n                color = 'warning'\n                divValue = 'pending'\n              } else if (item.type === 'rejected') {\n                color = 'error'\n              } else if (item.type === 'approved') {\n                color = 'success'\n              } else if (item.type === 'leave') {\n                color = 'default'\n                className = 'default2'\n                divValue = 'leave'\n              } else if (item.type === 'notEntered') {\n                color = 'default'\n              } else if (item.type === 'raisedrequest') {\n                color = 'error'\n                className = 'default2'\n                divValue = 'raisedrequest'\n              }\n\n              return (\n                <li key={index} className=\"event-item-horizontal\" style={{ width: '0px' }}>\n                  <Badge className={className} status={color} />\n                  <input type=\"hidden\" id={`cell_value_${datewithclass}`} value={divValue} />\n                </li>\n              )\n            })}\n          </ul>\n        </Tooltip>\n      </div>\n    )\n  }\n\n  const getMemberList = async () => {\n    let newAbortController\n    if (pageRef.current === 0) {\n      setMemberList([])\n      if (abortController) {\n        abortController.abort()\n      }\n      newAbortController = new AbortController()\n      setAbortController(newAbortController)\n    }\n    const url = `GenerateReport/contractmembers?roletype=all`\n    await api\n      .get(url, {\n        headers: getHeaders('json'),\n        signal: newAbortController?.signal,\n      })\n      .then((response) => {\n        const members = response.data.data\n        setMemberList(members)\n        setMemberLoader(false)\n      })\n      .catch((error) => {\n        //console.error('Error fetching data:', error)\n      })\n  }\n\n  const resetComponent = () => {\n    getSelfActivityRecord(memberIdRef.current)\n  }\n\n  useEffect(() => {\n    const removeTitleAttributes = () => {\n      const tds = document.querySelectorAll('.ant-picker-cell[title]')\n      tds.forEach((td) => {\n        td.removeAttribute('title')\n      })\n    }\n\n    // Call the function initially and on every re-render\n    removeTitleAttributes()\n\n    // Add a mutation observer to watch for changes in the calendar and remove titles dynamically\n    const observer = new MutationObserver(removeTitleAttributes)\n    const calendarElement = document.querySelector('.ant-picker-panel')\n    if (calendarElement) {\n      observer.observe(calendarElement, { childList: true, subtree: true })\n    }\n\n    // Cleanup observer on component unmount\n    return () => {\n      if (calendarElement) {\n        observer.disconnect()\n      }\n    }\n  }, [])\n\n  const disabledDate = (current) => {\n    return current && (current > moment().endOf('month') || current > moment())\n  }\n\n  return (\n    <>\n      <style>{`\n            .ant-picker-calendar.ant-picker-calendar-full .ant-picker-calendar-date-content {\n                height : 50px;\n            }\n            .right-align {\n                display: flex;\n                justify-content: flex-end;\n            }\n            .ant-picker-cell-range-start .ant-picker-cell-inner, .ant-picker-cell-range-end .ant-picker-cell-inner, .ant-picker-cell-selected .ant-picker-cell-inner {\n                background-color: #e9a3ad1f !important;\n            }\n            .ant-picker-cell-selected .ant-picker-cell-inner.ant-picker-calendar-date{\n                border-radius: 11px !important;\n                border: 1px solid red !important;\n            }\n            .ant-picker-calendar.ant-picker-calendar-full .ant-picker-calendar-date {\n                border: 0;\n                // border: 1px solid rgba(5, 5, 5, 0.06);\n            }\n            .ant-picker-calendar.ant-picker-calendar-full .ant-picker-calendar-date-today {\n                background-color: #c6cbca26 !important;\n            }\n            .ant-picker-calendar tbody{\n                border: 1px solid #d5cdcd94;\n            }\n            .ant-picker-calendar.ant-picker-calendar-full .ant-picker-panel {\n                text-align: left !important;\n            }\n            .ant-picker-content thead{\n                display:none;\n            }\n\n            .events-horizontal {\n                list-style: none;\n                padding: 0;\n                margin: 0;\n                display: flex;\n            }\n\n            .event-item-horizontal {\n              margin-right: 10px; /* Adjust the margin as needed for spacing */\n            }\n\n            .event-item-horizontal:last-child {\n             margin-right: 0; /* Remove margin for the last item */\n            }\n\n            .ant-picker-calendar .ant-picker-calendar-header {\n                display: block !important;\n            }\n\n            .custom-tooltip .ant-tooltip-inner {\n              background-color: white;\n              color: black; /* Optional: Change text color if needed */\n              box-shadow: 0 0 10px rgb(32 18 18 / 50%); /* Grey shadow */\n              font-size: 10px;\n            }\n\n            .custom-tooltip .ant-tooltip-arrow-content {\n              background-color: white;\n            }\n\n            .fontSize-10px{\n              font-size: 13px;\n              color: rgb(145, 158, 171);\n            }\n\n            .fontSize-10px .ant-badge.ant-badge-status .ant-badge-status-dot{\n              width: 8px;\n              height: 8px;\n            }\n\n            .ant-badge.ant-badge-status.default2 .ant-badge-status-default {\n                background-color: rgb(117 24 205 / 70%);\n            }\n\n            .ant-badge.ant-badge-status.default2 .ant-badge-status-error {\n              background-color: rgb(24 124 205 / 94%);\n            }\n\n            .ant-picker-calendar.ant-picker-calendar-full .ant-picker-cell-selected .ant-picker-calendar-date .ant-picker-calendar-date-value, :where(.css-dev-only-do-not-override-djtmh8).ant-picker-calendar.ant-picker-calendar-full .ant-picker-cell-selected:hover .ant-picker-calendar-date .ant-picker-calendar-date-value, :where(.css-dev-only-do-not-override-djtmh8).ant-picker-calendar.ant-picker-calendar-full .ant-picker-cell-selected .ant-picker-calendar-date-today .ant-picker-calendar-date-value, :where(.css-dev-only-do-not-override-djtmh8).ant-picker-calendar.ant-picker-calendar-full .ant-picker-cell-selected:hover .ant-picker-calendar-date-today .ant-picker-calendar-date-value {\n                color: red;\n            }\n\n        `}</style>\n\n      <CRow className=\"mt-3\">\n        <CCol sm={9}>\n          <b style={{ marginLeft: '30px' }}>Self Activity</b>\n          <br />\n          <Breadcrumb\n            style={{ marginLeft: '30px' }}\n            className=\"bread-tab\"\n            separator={<span className=\"breadcrumb-separator\">|</span>}\n            items={[\n              {\n                title: (\n                  <Link\n                    to={'/dashboard'}\n                    className=\"bread-items text-decoration-none text-secondary\"\n                  >\n                    Dashboard\n                  </Link>\n                ),\n              },\n              {\n                title: (\n                  <span className=\"text-secondary \" style={{ cursor: 'default' }}>\n                    Self Activity\n                  </span>\n                ),\n              },\n              {\n                title: (\n                  <span className=\"text-secondary \" style={{ cursor: 'default' }}>\n                    Detail View\n                  </span>\n                ),\n              },\n            ]}\n          />\n        </CCol>\n      </CRow>\n\n      <CRow>\n        <CCol sm={6} style={{ padding: '20px 40px' }}>\n          <CRow className=\"mb-4\">\n            <div style={{ height: '80%' }}>\n              <Calendar\n                cellRender={dateCellRender}\n                onPanelChange={onPanelChange}\n                headerRender={customFullHeaderRender}\n                disabledDate={disabledDate}\n                onSelect={onSelect}\n              />\n              <div\n                className=\"fontSize-10px\"\n                style={{ display: 'flex', justifyContent: 'space-between', width: '100%' }}\n              >\n                <div style={{ flex: 0.9 }}>\n                  <Badge status=\"warning\" /> &nbsp;Pending\n                </div>\n                <div style={{ flex: 1.0 }}>\n                  <Badge status=\"success\" /> &nbsp;Approved\n                </div>\n                <div style={{ flex: 0.9 }}>\n                  <Badge status=\"error\" /> &nbsp;Rejected\n                </div>\n                <div style={{ flex: 1.3 }}>\n                  <Badge className=\"default2\" status=\"error\" /> &nbsp;Raised Request\n                </div>\n                <div style={{ flex: 1.1 }}>\n                  <Badge status=\"default\" /> &nbsp;Not Entered\n                </div>\n                <div style={{ flex: 0.5 }}>\n                  <Badge className=\"default2\" status=\"default\" /> &nbsp;Leave\n                </div>\n              </div>\n            </div>\n          </CRow>\n        </CCol>\n        <CCol sm={6} style={{ padding: '20px 50px' }}>\n          {selectedDate !== null &&\n          memberIdRef.current !== '' &&\n          setCellTypeRef.current === 'pending' ? (\n            <PendingMemberActivity\n              startDate={selectedDateRef.current}\n              endDate={selectedDateRef.current}\n              memberId={memberIdRef.current}\n              memberName={memberNameRef.current}\n              resetComponent={resetComponent}\n              date={formatDates(selectedDateWithoutFormatRef.current)}\n            />\n          ) : selectedDate !== null &&\n            memberIdRef.current !== '' &&\n            setCellTypeRef.current === 'raisedrequest' ? (\n            <RaiseRequestList\n              startDate={selectedDateRef.current}\n              endDate={selectedDateRef.current}\n              memberId={memberIdRef.current}\n              memberName={memberNameRef.current}\n              resetComponent={resetComponent}\n              date={formatDates(selectedDateWithoutFormatRef.current)}\n            />\n          ) : (\n            <div style={{ marginTop: '98px' }}>\n              <CRow>\n                <div style={{ display: 'flex', justifyContent: 'center' }}>\n                  <span className=\"caln-text\">Select a member & date to view their activity</span>\n                </div>\n              </CRow>\n              <CRow>\n                <div style={{ display: 'flex', justifyContent: 'center' }}>\n                  <img src={activityImage} alt=\"img1\" style={{ width: '250px', height: '250px' }} />\n                </div>\n              </CRow>\n              <CRow>\n                <div style={{ display: 'flex', justifyContent: 'center' }}>\n                  <span className=\"caln-text\">Nothing is selected</span>\n                </div>\n              </CRow>\n            </div>\n          )}\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default ActivityCalendar\n","import React from 'react'\nimport { CCard, CCol, CRow } from '@coreui/react'\nimport ActivityCalendar from './ActivityCalendar'\n\nconst SelfActivity = () => {\n  return (\n    <>\n      <CRow className=\"my-2\">\n        <CCol xs={12}>\n          <CCard className=\"mt-4 timesheet-content-report\">\n            <div>\n              <CCol className={`selfactivity-card tab_height`}>\n                <CRow>\n                  <ActivityCalendar />\n                </CRow>\n              </CCol>\n            </div>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default SelfActivity\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst CheckSvg = ({ width, height, fill, viewBox }) => (\n  <svg\n    width={width}\n    height={height}\n    viewBox={viewBox}\n    fill={fill}\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M4.87459 9.58157C5.2816 9.58171 5.67193 9.41992 5.95949 9.13188L12.9552 2.13716L12.9553 2.13712C13.3482 1.74402 13.3482 1.10682 12.9553 0.713727L12.9552 0.713671C12.5621 0.320704 11.9249 0.320704 11.5318 0.713671L11.5318 0.713699L4.87459 7.37091L2.4682 4.96451L2.46817 4.96448C2.07508 4.57151 1.43788 4.57151 1.04478 4.96448L1.04473 4.96454C0.651758 5.35763 0.651758 5.99483 1.04473 6.38793L1.04479 6.38799L3.7897 9.13188C3.78971 9.1319 3.78972 9.13191 3.78973 9.13192C4.07729 9.41994 4.46761 9.58171 4.87459 9.58157ZM4.87459 9.58157C4.87456 9.58157 4.87453 9.58157 4.87449 9.58157L4.87459 9.33157L4.8747 9.58157C4.87466 9.58157 4.87463 9.58157 4.87459 9.58157Z\"\n      fill={fill}\n      stroke=\"#A5A1A1\"\n      strokeWidth=\"0.5\"\n    />\n  </svg>\n)\nCheckSvg.propTypes = {\n  width: PropTypes.string,\n  height: PropTypes.string,\n  fill: PropTypes.string,\n  viewBox: PropTypes.string,\n}\nexport default CheckSvg\n"],"names":["api","UseAxios","getMemberActivity","page","pageSize","category","status","startDate","endDate","async","size","url","concat","encodeURIComponent","trim","response","get","headers","getHeaders","data","dispatch","type","GET_MEMBER_ACTIVITY","payload","getContractMemberActivity","then","res","GET_CONTRACT_MEMBER_ACTIVITY","catch","error","memberStatusChange","statusValue","id","remarks","formData","FormData","append","put","STATUS_CHANGE_SUCCESS","Error","STATUS_CHANGE_FAILURE","message","contractMemberStatusChange","getClosedContractMemberActivity","GET_CONTRACT_CLOSED_MEMBER_ACTIVITY","getOwnerMemberActivity","GET_OWNER_MEMBER_ACTIVITY","ownerMemberStatusUpdate","getClosedProductMemberActivity","productId","memberId","GET_PRODUCT_MEMBER_CLOSED_ACTIVITY","TextArea","Input","_ref","isModalOpen","handleCancel","handleApprove","headContent","resetFunc","setRemarks","useState","loading","setLoadings","_jsxs","Modal","title","open","onOk","okText","onCancel","okButtonProps","style","background","borderColor","color","maskClosable","children","_jsx","variant","value","onChange","e","test","handleRemark","target","className","width","fontSize","padding","placeholder","autoSize","minRows","maxRows","loadings","formErrors","setFormErrors","validateForm","errors","disabled","memberName","date","resetComponent","useDispatch","useAxios","tableBodyRef","useRef","pageRef","sizeRef","hasMoreRef","commonLoader","setCommonLoader","memberTable","setMemberTable","selectedRows","setSelectedRows","selectedRef","setIsModalOpen","rejectStatus","setRejectStatus","singleId","setSingleId","singleApprovedId","setSingleApprovedId","openSelectAll","setOpenSelectAll","openSelectRejectAll","setOpenSelectRejectAll","setOpen","approvedStatusAll","setApprovedStatusAll","approvedStatus","setApprovedStatus","headerLabel","setHeaderLabel","sidebarShow","useSelector","state","dashboard","abortController","setAbortController","AbortController","useEffect","current","getMemberActivityall","newAbortController","abort","_newAbortController","signal","prevUserData","uniqueSet","Set","map","user","newData","filter","has","length","showPopconfirmAll","truncateString","str","num","substring","handleScroll","useCallback","debounce","scrollTop","scrollHeight","clientHeight","fetchMoreData","tableBody","document","querySelector","addEventListener","removeEventListener","columns","Checkbox","handleHeaderCheck","checked","fixed","render","text","row","includes","handleRowCheck","dataIndex","key","truncatedProductName","productName","assignedStatus","marginLeft","onClick","showPopconfirm","rowId","CheckSvg","height","viewBox","fill","showModal","CrossSvg","isChecked","allRowIds","prevSelectedRows","updatedSelectedRows","selectedKey","handleButtonClick","statusChange","toast","success","position","POSITION","BOTTOM_RIGHT","autoClose","resetFormValues","_Fragment","ToastContainer","fontWeight","paddingLeft","overflow","display","gridTemplateColumns","alignItems","paddingTop","textAlign","justifyContent","Table","dataSource","scroll","x","y","pagination","spinning","indicator","CSpinner","RejectConfirmModal","ApprovedConfirmModal","handleApproveCancel","handleApproveCancelAll","handleRejectCancelAll","getRequestList","handleRaiseApprove","postData","errorMessage","dayjs","updateLocale","weekStart","ActivityCalendar","memberIdRef","memberNameRef","setCellTypeRef","setData","currentMonth","setCurrentMonth","moment","month","currentMonthRef","currentYearRef","year","currentYear","setCurrentYear","selectedDateRef","selectedDateWithoutFormatRef","selectedDate","setSelectedDate","memberLoader","setMemberLoader","memberList","setMemberList","selectedMember","setSelectedMember","getSelfActivityRecord","selfactivity","formatDates","day","format","dayWithSuffix","j","k","getOrdinalSuffix","parseInt","getMemberList","members","removeTitleAttributes","querySelectorAll","forEach","td","removeAttribute","observer","MutationObserver","calendarElement","observe","childList","subtree","disconnect","CRow","CCol","sm","Breadcrumb","separator","items","Link","to","cursor","Calendar","cellRender","listData","dateStr","find","item","pending","count","approved","rejected","leave","notEntered","raisedrequest","getListData","datewithclass","divValue","vDate","tooltipContent","marginTop","marginBottom","index","Badge","Tooltip","placement","overlayClassName","onPanelChange","mode","headerRender","onMonthChange","newMonth","newValue","clone","formattedDate","memberOptions","name","label","src","profile_pic","ImageUrl","profileImage1","alt","role","curMonth","Date","getMonth","paddingBottom","md","LeftOutlined","RightOutlined","Select","_memberList$find","ids","Number","options","Array","from","_","Skeleton","avatar","paragraph","rows","allowClear","showSearch","suffixIcon","Downarrowimg","disabledDate","endOf","onSelect","dd","cellElement","getElementById","cellValue","flex","PendingMemberActivity","RaiseRequestList","activityImage","SelfActivity","xs","CCard","xmlns","d","stroke","strokeWidth"],"sourceRoot":""}