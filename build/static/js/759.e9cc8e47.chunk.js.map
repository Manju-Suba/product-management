{"version":3,"file":"static/js/759.e9cc8e47.chunk.js","mappings":"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","sources":["redux/memberActivity/action.js","views/Dashboard/DashboardCard/DashboardPieChart.js","views/Dashboard/DashboardCard/DashboardBarChart.js","views/Dashboard/DashboardCard/DashboardCard.js","views/Dashboard/TimeSheet/barChart.js","views/Dashboard/TimeSheet/TimeSheetTable.js","views/Dashboard/DashboardSVG/TableSVG.js","views/Dashboard/TimeSheet/Timesheet.js","views/Dashboard/SubmitedActivity/SubmittedActivityTable.js","views/Dashboard/SubmitedActivity/index.js","views/Dashboard/RaisedRequest/RaisedRequestTable.js","views/Dashboard/RaisedRequest/RaisedRequest.js","views/Dashboard/TimeSheetStatus/TimeSheetstatusTable.js","views/Dashboard/TimeSheetStatus/TimeSheetstatusTableContract.js","views/Dashboard/TimeSheetStatus/TimeSheetStatus.js","views/Dashboard/LeaveHistory/LeaveTable.js","views/Dashboard/LeaveHistory/index.js","views/Dashboard/ContractMembers/index.js","views/Dashboard/WorkingHours/barChart.js","views/Dashboard/WorkingHours/index.js","views/Dashboard/Member Activity/PendingTable.js","views/Dashboard/Member Activity/ApprovalTable.js","views/Dashboard/Member Activity/ContractPendingTable.js","views/Dashboard/Member Activity/OwnerPendingTable.js","views/Dashboard/DashboardSVG/DropdownSVG.js","views/Dashboard/Member Activity/ClosedActivityTable.js","views/Dashboard/Member Activity/index.js","views/Dashboard/table.js","views/Dashboard/index.js","views/modal/ApprovedConfirmModel.js","views/modal/RejectConfirmModal.js","views/svgImages/CheckSvg.js"],"sourcesContent":["import {\n  GET_MEMBER_ACTIVITY,\n  STATUS_CHANGE_SUCCESS,\n  STATUS_CHANGE_FAILURE,\n  GET_CONTRACT_MEMBER_ACTIVITY,\n  GET_CONTRACT_CLOSED_MEMBER_ACTIVITY,\n  GET_OWNER_MEMBER_ACTIVITY,\n  GET_PRODUCT_MEMBER_CLOSED_ACTIVITY,\n} from '../actionType'\nimport UseAxios from '../../constant/UseAxios'\nimport { getHeaders } from 'src/constant/Global'\nconst api = UseAxios()\n\nexport const getMemberActivity = (page, pageSize, category, status, startDate, endDate) => {\n  return async (dispatch) => {\n    // Ensure page is a number\n    let pageNo = typeof page === 'number' ? page : 0\n\n    // Ensure pageSize is a number\n    let size = typeof pageSize === 'number' ? pageSize : 10 // Default to 10 if not a number\n\n    // Construct the URL with proper encoding\n    let url = `/common/timesheet/activity/superviserlistall?page=${encodeURIComponent(\n      pageNo,\n    )}&size=${encodeURIComponent(size)}&category=${encodeURIComponent(category)}`\n    if (status && status !== 'undefined' && status !== '') {\n      url += `&status=${encodeURIComponent(status)}`\n    }\n    if (startDate && typeof startDate === 'string' && startDate.trim() !== '') {\n      url += `&startDate=${encodeURIComponent(startDate)}`\n    }\n    if (endDate && typeof endDate === 'string' && endDate.trim() !== '') {\n      url += `&endDate=${encodeURIComponent(endDate)}`\n    }\n    const response = await api.get(url, {\n      headers: getHeaders('json'),\n    })\n    if (response?.data) {\n      dispatch({\n        type: GET_MEMBER_ACTIVITY,\n        payload: response.data.data,\n      })\n      return response.data\n    }\n    // .then((res) => {\n    //   dispatch({\n    //     type: GET_MEMBER_ACTIVITY,\n    //     payload: res.data.data,\n    //   })\n    // })\n    // .catch((error) => {})\n  }\n}\n\nexport const getContractMemberActivity = (page, pageSize, category, status, startDate, endDate) => {\n  return (dispatch) => {\n    // Ensure page is a number\n    let pageNo = typeof page === 'number' ? page : 0\n\n    // Ensure pageSize is a number\n    let size = typeof pageSize === 'number' ? pageSize : 10 // Default to 10 if not a number\n\n    // Construct the URL with proper encoding\n    let url = `/common/timesheet/activity/final-approve-list?page=${encodeURIComponent(\n      pageNo,\n    )}&size=${encodeURIComponent(size)}&category=${encodeURIComponent(category)}`\n    if (status && status !== 'undefined' && status !== '') {\n      url += `&status=${encodeURIComponent(status)}`\n    }\n    if (startDate && typeof startDate === 'string' && startDate.trim() !== '') {\n      url += `&startDate=${encodeURIComponent(startDate)}`\n    }\n    if (endDate && typeof endDate === 'string' && endDate.trim() !== '') {\n      url += `&endDate=${encodeURIComponent(endDate)}`\n    }\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((res) => {\n        dispatch({\n          type: GET_CONTRACT_MEMBER_ACTIVITY,\n          payload: res.data.data,\n        })\n      })\n      .catch((error) => {})\n  }\n}\n\nexport const memberStatusChange = (statusValue, id, remarks) => {\n  return async (dispatch) => {\n    const url = `common/timesheet/approval/update`\n    const formData = new FormData()\n    formData.append('status', statusValue)\n    formData.append('remarks', remarks)\n    formData.append('id', id)\n\n    try {\n      const response = await api.put(url, formData, {\n        headers: getHeaders('multi'),\n      })\n      if (response?.data) {\n        dispatch({\n          type: STATUS_CHANGE_SUCCESS,\n          payload: response.data,\n        })\n        return response.data\n      } else {\n        throw new Error('Empty response received from the server')\n      }\n    } catch (error) {\n      dispatch({\n        type: STATUS_CHANGE_FAILURE,\n        error: error.message,\n      })\n      throw error\n    }\n  }\n}\n\nexport const contractMemberStatusChange = (statusValue, id, remarks) => {\n  return async (dispatch) => {\n    const url = `common/timesheet/approval/common/final-approved`\n    const formData = new FormData()\n    formData.append('status', statusValue)\n    formData.append('remarks', remarks)\n    formData.append('id', id)\n\n    try {\n      const response = await api.put(url, formData, {\n        headers: getHeaders('multi'),\n      })\n      if (response?.data) {\n        return response.data\n      } else {\n        throw new Error('Empty response received from the server')\n      }\n    } catch (error) {\n      throw error\n    }\n  }\n}\n\nexport const getClosedContractMemberActivity = (page, pageSize, category, status) => {\n  return (dispatch) => {\n    // Ensure page is a number\n    let pageNo = typeof page === 'number' ? page : 0\n\n    // Ensure pageSize is a number\n    let size = typeof pageSize === 'number' ? pageSize : 10 // Default to 10 if not a number\n\n    // Construct the URL with proper encoding\n    let url = `/common/timesheet/activity/final-approve-list/approved?page=${encodeURIComponent(\n      pageNo,\n    )}&size=${encodeURIComponent(size)}&category=${encodeURIComponent(category)}`\n    if (status && status !== 'undefined' && status !== '') {\n      url += `&status=${encodeURIComponent(status)}`\n    }\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((res) => {\n        dispatch({\n          type: GET_CONTRACT_CLOSED_MEMBER_ACTIVITY,\n          payload: res.data.data,\n        })\n      })\n      .catch((error) => {})\n  }\n}\n\nexport const getOwnerMemberActivity = (page, pageSize, category, startDate, endDate) => {\n  return (dispatch) => {\n    // Ensure page is a number\n    let pageNo = typeof page === 'number' ? page : 0\n\n    // Ensure pageSize is a number\n    let size = typeof pageSize === 'number' ? pageSize : 10 // Default to 10 if not a number\n\n    // Construct the URL with proper encoding\n    let url = `/common/timesheet/activity/owner/list?page=${encodeURIComponent(\n      pageNo,\n    )}&size=${encodeURIComponent(size)}&category=${encodeURIComponent(category)}`\n\n    if (startDate && typeof startDate === 'string' && startDate.trim() !== '') {\n      url += `&startDate=${encodeURIComponent(startDate)}`\n    }\n    if (endDate && typeof endDate === 'string' && endDate.trim() !== '') {\n      url += `&endDate=${encodeURIComponent(endDate)}`\n    }\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((res) => {\n        dispatch({\n          type: GET_OWNER_MEMBER_ACTIVITY,\n          payload: res.data.data,\n        })\n      })\n      .catch((error) => {})\n  }\n}\n\nexport const ownerMemberStatusUpdate = (statusValue, id, remarks) => {\n  return async (dispatch) => {\n    const url = `common/timesheet/approval/owner/update`\n    const formData = new FormData()\n    formData.append('status', statusValue)\n    formData.append('remarks', remarks)\n    formData.append('id', id)\n\n    try {\n      const response = await api.put(url, formData, {\n        headers: getHeaders('multi'),\n      })\n      if (response?.data) {\n        return response.data\n      } else {\n        throw new Error('Empty response received from the server')\n      }\n    } catch (error) {\n      throw error\n    }\n  }\n}\n\nexport const getClosedProductMemberActivity = (\n  page,\n  pageSize,\n  category,\n  status,\n  productId,\n  memberId,\n) => {\n  return (dispatch) => {\n    // Ensure page is a number\n    let pageNo = typeof page === 'number' ? page : 0\n\n    // Ensure pageSize is a number\n    let size = typeof pageSize === 'number' ? pageSize : 10 // Default to 10 if not a number\n\n    // Construct the URL with proper encoding\n    let url = `/common/timesheet/approval/owner/status?page=${encodeURIComponent(\n      pageNo,\n    )}&size=${encodeURIComponent(size)}&category=${encodeURIComponent(category)}`\n\n    if (productId && productId !== 'undefined' && productId !== '') {\n      url += `&productId=${encodeURIComponent(productId)}`\n    } else {\n      url += `&productId=0`\n    }\n    if (memberId && memberId !== 'undefined' && memberId !== '') {\n      url += `&memberId=${encodeURIComponent(memberId)}`\n    } else {\n      url += `&memberId=0`\n    }\n\n    if (status && status !== 'undefined' && status !== '') {\n      url += `&status=${encodeURIComponent(status)}`\n    }\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((res) => {\n        dispatch({\n          type: GET_PRODUCT_MEMBER_CLOSED_ACTIVITY,\n          payload: res.data.data,\n        })\n      })\n      .catch((error) => {})\n  }\n}\n","import React, { useRef, useEffect, useState } from 'react'\nimport { PieChart } from '@mui/x-charts/PieChart'\nimport { CCol, CRow, CSpinner } from '@coreui/react'\nimport PropTypes from 'prop-types'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setLoader } from 'src/redux/Dashboard/action'\n\nconst DashboardPieChart = ({ chartData, title, widgetLength }) => {\n  const totalCountRef = useRef()\n  const mapDataRef = useRef({ labels: [] })\n  const setloader = useSelector((state) => state.dashboard.setloader)\n  const widgetData = useSelector((state) => state.dashboard.sequenceList)\n  const [widgetCountData, setWidgetCountData] = useState([])\n  const [mapData, setMapData] = useState({ values: [], labels: [], color: [] })\n  const dispatch = useDispatch()\n  useEffect(() => {\n    if (Object.keys(chartData).length !== 0) {\n      mapDataRef.current = generateChartData()\n      setMapData(generateChartData())\n      totalCountRef.current = `${getTitleType(title)} </span></br>`\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [chartData, title])\n\n  useEffect(() => {\n    if (widgetData?.[0]?.widgetCount) {\n      setWidgetCountData(widgetData[0].widgetCount)\n    }\n  }, [widgetData])\n  useEffect(() => {\n    if (Object.keys(chartData).length !== 0) {\n      dispatch(setLoader(false))\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [setloader, dispatch, chartData])\n\n  const generateChartData = () => {\n    let productKeys\n    if (title === 'Product Assigned') {\n      productKeys = Object.keys(chartData).filter((key) => !key.includes('total'))\n    }\n    switch (title) {\n      case 'Flows':\n      case 'Overall Members':\n        return {\n          values: [chartData.activeCount, chartData.inactiveCount],\n          labels:\n            title === 'Flows'\n              ? ['Active Work Flow', 'Inactive Work Flow']\n              : ['Active Members', 'Inactive Members'],\n          color: ['#FF2B0E', '#0B6BCD'],\n        }\n      case 'Designation Members':\n        return {\n          values: [\n            chartData.employeeCount,\n            chartData.approverCount,\n            chartData.ownerCount,\n            chartData.headCount,\n          ],\n          labels: ['Employee', 'Approver', 'Owner', 'Head'],\n          color: ['#33BC77', '#46A2E1', '#ED3D57', '#FFA657'],\n        }\n      case 'Product Assigned':\n        return {\n          values: productKeys.map((key) => chartData[key]),\n          labels: productKeys,\n          color: ['#46A2E1', '#33BC77', '#FFA657', '#ED3D57'],\n        }\n      case \"Team Member's Activity\":\n      case 'Second Level Approval Status':\n      case 'Sumbit Activity Status':\n      case 'Total Products':\n      case 'My Product Count':\n        return {\n          values: [chartData.pendingCount, chartData.approvedCount, chartData.rejectedCount],\n          labels: ['Pending ', 'Approved ', 'Rejected '],\n          color: ['#FFA657', '#33BC77', '#ED3D57'],\n        }\n      case 'My Products':\n        return {\n          values: [chartData.assignedCount, chartData.unassignedCount],\n          labels: ['Assigned Product', 'Unassigned Product'],\n          color: ['#FFA657', '#33BC77'],\n        }\n      case 'Team Members':\n        return {\n          values: [chartData.onroleMemberCount, chartData.contractMemberCount],\n          labels: ['Members', 'Contract Members'],\n          color: ['#FFA657', '#33BC77'],\n        }\n      case 'Flow Access':\n        return {\n          values: [chartData.assignedCount, chartData.unassignedCount],\n          labels: ['Assigned Flow', 'Unassigned Flow'],\n          color: ['#FFA657', '#33BC77'],\n        }\n      default:\n        return { values: [], labels: [], color: [] }\n    }\n  }\n\n  function getTitleType(title) {\n    if (title.includes('Flow')) {\n      return 'Flows'\n    } else if (title.includes('Members')) {\n      return 'Members'\n    } else if (title.includes('Activity')) {\n      return 'Activity'\n    } else if (title.includes('Product')) {\n      return 'Products'\n    } else {\n      return 'Activity'\n    }\n  }\n  return (\n    <CRow>\n      {setloader ? (\n        <div className=\"text-c text-center my-3 td-text\">\n          <CSpinner color=\"danger\" />\n        </div>\n      ) : (\n        <>\n          <CCol\n            xs={widgetCountData?.length === 3 ? 7 : 12}\n            className={widgetCountData?.length === 3 ? 'pie_chart' : 'pie_charttwo'}\n            style={{ position: 'relative' }}\n          >\n            <PieChart\n              key={JSON.stringify(mapData)}\n              series={[\n                {\n                  innerRadius: 40,\n                  paddingAngle: 0,\n                  cornerRadius: 1,\n                  highlightScope: { faded: 'global', highlighted: 'item' },\n                  faded: { innerRadius: 40, additionalRadius: -1 },\n                  data: mapData.values.map((value, index) => ({\n                    id: index,\n                    value,\n                    label: mapData.labels[index],\n                    color: mapData.color[index],\n                  })),\n                },\n              ]}\n              width={224}\n              height={200}\n            />\n            {widgetCountData?.length === 3 ? (\n              <div\n                className=\"pieChart_text\"\n                style={{\n                  position: 'absolute',\n                  top: '50%',\n                  left: '105px',\n                  transform: 'translate(-50%, -50%)',\n                  textAlign: 'center',\n                  pointerEvents: 'none',\n                  zIndex: 1,\n                }}\n              >\n                <div\n                  dangerouslySetInnerHTML={{\n                    __html: `<span style=\"color:#a5a3a4;font-size:11px\">Total ${totalCountRef.current}<b>${chartData.totalCount}</b>`,\n                  }}\n                />\n              </div>\n            ) : (\n              <div\n                style={{\n                  position: 'absolute',\n                  top: '40%',\n                  left: '120px',\n                  transform: 'translate(-50%, -50%)',\n                  textAlign: 'center',\n                  pointerEvents: 'none',\n                  zIndex: 1,\n                }}\n              >\n                <div\n                  dangerouslySetInnerHTML={{\n                    __html: `<span style=\"color:#a5a3a4;font-size:11px\">Total ${totalCountRef.current}<b>${chartData.totalCount}</b>`,\n                  }}\n                />\n              </div>\n            )}\n          </CCol>\n          {widgetCountData?.length === 3 ? (\n            <CCol xs={5} style={{ display: 'flex', alignItems: 'center' }} className=\"legend\">\n              <div className=\"legend-container\">\n                {mapData.labels.map((label, index) => (\n                  <div key={index + 1} className=\"legend-item\">\n                    <div\n                      className=\"legend-color\"\n                      style={{ backgroundColor: mapData.color[index] }}\n                    />\n                    <span\n                      className=\"legend-label\"\n                      style={{\n                        fontSize: '12px',\n                        color: 'rgba(0, 0, 0, 0.87)',\n                        paddingLeft: '10px',\n                      }}\n                      title={label}\n                    >\n                      {label}\n                    </span>\n                  </div>\n                ))}\n              </div>\n            </CCol>\n          ) : (\n            <div\n              style={{\n                transform: ' translate(-1px, -35px)',\n                height: '20px',\n                overflowY: 'auto',\n                display: 'grid',\n                gridAutoFlow: 'column',\n                alignItems: 'center',\n              }}\n              // className=\"legend\"\n            >\n              <div className=\"legend-containers\">\n                {mapData.labels.map((label, index) => (\n                  <CRow key={index + 1}>\n                    <CCol\n                      xs={12}\n                      key={index + 1}\n                      className=\"legend-itemss\"\n                      style={{ display: 'flex', alignItems: 'center' }}\n                    >\n                      <div\n                        className=\"legend-color\"\n                        style={{\n                          backgroundColor: mapData.color[index],\n                          marginLeft: '10px',\n                        }}\n                      />\n                      <span\n                        className=\"legend-label\"\n                        style={{\n                          fontSize: '12px',\n                          color: 'rgba(0, 0, 0, 0.87)',\n                          paddingLeft: '10px',\n                        }}\n                        title={label}\n                      >\n                        {label}\n                      </span>\n                    </CCol>\n                  </CRow>\n                ))}\n              </div>\n            </div>\n          )}\n        </>\n      )}\n    </CRow>\n  )\n}\n\nDashboardPieChart.propTypes = {\n  chartData: PropTypes.any,\n  title: PropTypes.string,\n  widgetLength: PropTypes.number,\n}\n\nexport default DashboardPieChart\n","import React from 'react'\nimport { Bar } from 'react-chartjs-2'\nimport 'chart.js/auto'\nimport PropTypes from 'prop-types'\n\nconst DashboardBarChart = ({ chartData, title }) => {\n  const generateChartData = () => {\n    let productKeys\n    if (title === 'Product Assigned') {\n      productKeys = Object.keys(chartData).filter((key) => !key.includes('total'))\n    }\n    switch (title) {\n      case 'Flows':\n      case 'Overall Members':\n        return {\n          values: [chartData.activeCount, chartData.inactiveCount],\n          labels:\n            title === 'Flows'\n              ? ['Active Work Flow', 'Inactive Work Flow']\n              : ['Active Members', 'Inactive Members'],\n          color: ['#FF2B0E', '#0B6BCD'],\n        }\n      case 'Designation Members':\n        return {\n          values: [\n            chartData.employeeCount,\n            chartData.approverCount,\n            chartData.ownerCount,\n            chartData.headCount,\n          ],\n          labels: ['Employee', 'Approver', 'Owner', 'Head'],\n          color: ['#33BC77', '#46A2E1', '#ED3D57', '#FFA657'],\n        }\n      case 'Product Assigned':\n        return {\n          values: productKeys.map((key) => chartData[key]),\n          labels: productKeys,\n          color: ['#46A2E1', '#33BC77', '#FFA657', '#ED3D57'],\n        }\n      case \"Team Member's Activity\":\n      case 'Second Level Approval Status':\n      case 'Sumbit Activity Status':\n      case 'Total Products':\n      case 'My Product Count':\n        return {\n          values: [chartData.pendingCount, chartData.approvedCount, chartData.rejectedCount],\n          labels: ['Pending ', 'Approved ', 'Rejected '],\n          color: ['#FFA657', '#33BC77', '#ED3D57'],\n        }\n      case 'My Products':\n        return {\n          values: [chartData.assignedCount, chartData.unassignedCount],\n          labels: ['Assigned Product', 'Unassigned Product'],\n          color: ['#FFA657', '#33BC77'],\n        }\n      case 'Team Members':\n        return {\n          values: [chartData.onroleMemberCount, chartData.contractMemberCount],\n          labels: ['Members', 'Contract Members'],\n          color: ['#FFA657', '#33BC77'],\n        }\n      case 'Flow Access':\n        return {\n          values: [chartData.assignedCount, chartData.unassignedCount],\n          labels: ['Assigned Flow', 'Unassigned Flow'],\n          color: ['#FFA657', '#33BC77'],\n        }\n      default:\n        return { values: [], labels: [], color: [] }\n    }\n  }\n\n  const { values, labels, color } = generateChartData()\n\n  const data = {\n    labels,\n    datasets: [\n      {\n        data: values,\n        backgroundColor: color,\n      },\n    ],\n  }\n\n  const options = {\n    indexAxis: 'y',\n    plugins: {\n      tooltip: {\n        enabled: true, // Disable tooltips\n      },\n      legend: {\n        display: false, // Disable legend\n      },\n    },\n    responsive: true,\n    scales: {\n      y: {\n        barPercentage: 0.75,\n        grid: {\n          display: false,\n          drawTicks: true,\n          drawOnChartArea: false,\n        },\n        ticks: {\n          fontColor: '#555759',\n          fontFamily: 'Lato',\n          fontSize: 11,\n        },\n      },\n      x: {\n        grid: {\n          display: false,\n          drawTicks: false,\n          tickMarkLength: 5,\n          drawBorder: false,\n        },\n        ticks: {\n          padding: 5,\n          beginAtZero: true,\n          fontColor: '#555759',\n          fontFamily: 'Lato',\n          fontSize: 11,\n          callback: function (label) {\n            return label * 1\n          },\n        },\n        scaleLabel: {\n          display: true,\n          padding: 10,\n          fontFamily: 'Lato',\n          fontColor: '#555759',\n          fontSize: 16,\n          fontStyle: 'bold',\n          labelString: 'Scale Label',\n        },\n      },\n    },\n  }\n\n  return (\n    <div>\n      <Bar data={data} options={options} className=\"barchart-container\" />\n    </div>\n  )\n}\n\nDashboardBarChart.propTypes = {\n  chartData: PropTypes.any,\n  title: PropTypes.string,\n}\n\nexport default DashboardBarChart\n","import React, { useEffect, useRef, useState } from 'react'\nimport { Card, DatePicker, Tabs, Typography } from 'antd'\nimport { CCard, CCol, CRow } from '@coreui/react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport dayjs from 'dayjs'\nimport PropTypes from 'prop-types'\nimport briefcase from '../../../assets/images/briefcase.png'\nimport multipersonIcon from '../../../assets/images/MultipersonIcon.png'\nimport personIcon from '../../../assets/images/personIcon.png'\nimport groupicon from '../../../assets/images/groupicon.png'\nimport DashboardPieChart from './DashboardPieChart'\nimport DashboardBarChart from './DashboardBarChart'\nimport PieChartIcon from '../DashboardSVG/PiechartSVG'\nimport BarChartSVG from '../DashboardSVG/BarChartSVG'\nimport NextArrowSVG from '../DashboardSVG/NextArrowSVG'\nimport {\n  getFlowAccess,\n  getFlowsCount,\n  getMastersCount,\n  getMembersActivityBySup,\n  getMembersActivityBySupAndSecLvl,\n  getMembersAll,\n  getMembersByDesignation,\n  getMyActivityCount,\n  getProductAssigned,\n  getProductAssignedByOwner,\n  getProductByHead,\n  getProductCountByApprover,\n  getTeamMemberCount,\n  getTimesheetSummary,\n} from 'src/redux/Dashboard/action'\nimport { useNavigate } from 'react-router-dom'\n\nconst { MonthPicker } = DatePicker\n\nconst DashboardCardStyle = ({ index, title, widgetLength }) => {\n  const length = widgetLength\n  const [activeTab, setActiveTab] = useState(`tab-active-${index}-1`)\n  const dispatch = useDispatch()\n  const chartData = useRef({})\n  const monthRef = useRef(dayjs().format('MM'))\n  const yearRef = useRef(dayjs().format('YYYY'))\n  const navigate = useNavigate()\n  const [mapData, setMapData] = useState({})\n\n  const flowData = useSelector((state) => state.dashboard.flowCountData)\n  const designationMember = useSelector((state) => state.dashboard.designationMember)\n  const membersAll = useSelector((state) => state.dashboard.membersAll)\n  const productByHead = useSelector((state) => state.dashboard.productByHead)\n  const productAssigned = useSelector((state) => state.dashboard.productAssigned)\n  const flowAccess = useSelector((state) => state.dashboard.flowAccess)\n  const assignedByOwner = useSelector((state) => state.dashboard.assignedByOwner)\n  const teamMembersCount = useSelector((state) => state.dashboard.teamMembersCount)\n  const membersActivityCount = useSelector((state) => state.dashboard.membersActivityCount)\n  const membersActivitySecLvlCount = useSelector(\n    (state) => state.dashboard.membersActivitySecLvlCount,\n  )\n  const productCountByApprover = useSelector((state) => state.dashboard.productCountByApprover)\n  const myActivityCount = useSelector((state) => state.dashboard.myActivityCount)\n  const timesheetDaysCount = useSelector((state) => state.dashboard.timesheetDaysCount)\n  const mastersCount = useSelector((state) => state.dashboard.mastersCount)\n  const sidebarShow = useSelector((state) => state.dashboard.sidebarShow)\n  // const isFirstLoad = useRef(true)\n\n  useEffect(() => {\n    // if (title === 'Sumbit Activity Status' && isFirstLoad.current) {\n    // isFirstLoad.current = false\n    //   dispatch(getMyActivityCount())\n    // }\n\n    switch (title) {\n      case 'Flows':\n        dispatch(getFlowsCount())\n        break\n      case 'Designation Members':\n        dispatch(getMembersByDesignation())\n        break\n      case 'Overall Members':\n        dispatch(getMembersAll())\n        break\n      case 'Total Products':\n        dispatch(getProductByHead())\n        break\n      case 'Product Assigned':\n        dispatch(getProductAssigned())\n        break\n      case 'Flow Access':\n        dispatch(getFlowAccess())\n        break\n      case 'My Products':\n        dispatch(getProductAssignedByOwner())\n        break\n      case \"Team Member's Activity\":\n        dispatch(getMembersActivityBySup())\n        break\n      case 'Second Level Approval Status':\n        dispatch(getMembersActivityBySupAndSecLvl())\n        break\n      case 'Team Members':\n        dispatch(getTeamMemberCount())\n        break\n      case 'My Product Count':\n        dispatch(getProductCountByApprover())\n        break\n      case 'Sumbit Activity Status':\n        dispatch(getMyActivityCount())\n        break\n      case 'Total Timesheet Entry':\n        dispatch(getTimesheetSummary(monthRef.current, yearRef.current))\n        break\n      case \"Master's Overview\":\n        dispatch(getMastersCount())\n        break\n      default:\n        break\n    }\n  }, [dispatch, title])\n\n  useEffect(() => {\n    switch (title) {\n      case 'Flows':\n        if (!flowData || flowData.length === 0) {\n          dispatch(getFlowsCount())\n        } else {\n          chartData.current = flowData\n          setMapData(flowData)\n        }\n        break\n      case 'Designation Members':\n        if (!designationMember || designationMember.length === 0) {\n          dispatch(getMembersByDesignation())\n        } else {\n          chartData.current = designationMember\n          setMapData(designationMember)\n        }\n        break\n      case 'Overall Members':\n        if (!membersAll || membersAll.length === 0) {\n          dispatch(getMembersAll())\n        } else {\n          chartData.current = membersAll\n          setMapData(membersAll)\n        }\n        break\n      case 'Total Products':\n        if (!productByHead || productByHead.length === 0) {\n          dispatch(getProductByHead())\n        } else {\n          chartData.current = productByHead\n          setMapData(productByHead)\n        }\n        break\n      case 'Product Assigned':\n        if (!productAssigned || productAssigned.length === 0) {\n          dispatch(getProductAssigned())\n        } else {\n          chartData.current = productAssigned\n          setMapData(productAssigned)\n        }\n        break\n      case 'Flow Access':\n        if (!flowAccess || flowAccess.length === 0) {\n          dispatch(getFlowAccess())\n        } else {\n          chartData.current = flowAccess\n          setMapData(flowAccess)\n        }\n        break\n      case 'My Products':\n        if (!assignedByOwner || assignedByOwner.length === 0) {\n          dispatch(getProductAssignedByOwner())\n        } else {\n          chartData.current = assignedByOwner\n          setMapData(assignedByOwner)\n        }\n        break\n      case \"Team Member's Activity\":\n        if (!membersActivityCount || membersActivityCount.length === 0) {\n          dispatch(getMembersActivityBySup())\n        } else {\n          chartData.current = membersActivityCount\n          setMapData(membersActivityCount)\n        }\n        break\n      case 'Second Level Approval Status':\n        if (!membersActivitySecLvlCount || membersActivitySecLvlCount.length === 0) {\n          dispatch(getMembersActivityBySupAndSecLvl())\n        } else {\n          chartData.current = membersActivitySecLvlCount\n          setMapData(membersActivitySecLvlCount)\n        }\n        break\n      case 'Team Members':\n        if (!teamMembersCount || teamMembersCount.length === 0) {\n          dispatch(getTeamMemberCount())\n        } else {\n          chartData.current = teamMembersCount\n          setMapData(teamMembersCount)\n        }\n        break\n      case 'My Product Count':\n        if (!productCountByApprover || productCountByApprover.length === 0) {\n          dispatch(getProductCountByApprover())\n        } else {\n          chartData.current = productCountByApprover\n          setMapData(productCountByApprover)\n        }\n        break\n      case 'Sumbit Activity Status':\n        if (!myActivityCount || myActivityCount.length === 0) {\n          dispatch(getMyActivityCount())\n        } else {\n          chartData.current = myActivityCount\n          setMapData(myActivityCount)\n        }\n        break\n      case 'Total Timesheet Entry':\n        if (!timesheetDaysCount || timesheetDaysCount.length === 0) {\n          dispatch(getTimesheetSummary(monthRef.current, yearRef.current))\n        } else {\n          chartData.current = timesheetDaysCount\n          setMapData(timesheetDaysCount)\n        }\n        break\n      case \"Master's Overview\":\n        if (!mastersCount || mastersCount.length === 0) {\n          dispatch(getMastersCount())\n        }\n        break\n      default:\n        break\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    flowData,\n    designationMember,\n    membersAll,\n    productByHead,\n    productAssigned,\n    flowAccess,\n    assignedByOwner,\n    membersActivitySecLvlCount,\n    membersActivityCount,\n    teamMembersCount,\n    productCountByApprover,\n    myActivityCount,\n    timesheetDaysCount,\n    mastersCount,\n  ])\n\n  const toggleTab = (tabKey) => {\n    setActiveTab(tabKey)\n  }\n\n  const getTitle = (title, maxLength = 25) => {\n    const titlesMap = {\n      'Designation Members': 'Members',\n      'My Product Count': 'My Products',\n      'Total Timesheet Entry': 'Time Sheet Summary',\n    }\n    const modifiedTitle = titlesMap[title] || title\n    return modifiedTitle.length > maxLength\n      ? `${modifiedTitle.substring(0, maxLength)}...`\n      : modifiedTitle\n  }\n  const items = [\n    {\n      key: `tab-active-${index}-1`,\n      label: 'Pie Chart',\n      children: <DashboardPieChart chartData={mapData} title={title} widgetLength={length} />,\n    },\n    {\n      key: `tab-active-${index}-2`,\n      label: 'Bar Chart',\n      children: <DashboardBarChart chartData={mapData} title={title} />,\n    },\n  ]\n\n  const getTitleNames = (title) => {\n    let modifiedTitle\n    if (title === 'Designation Members') {\n      modifiedTitle = 'Members'\n    } else if (title === 'My Product Count') {\n      modifiedTitle = 'My Products'\n    } else {\n      modifiedTitle = title\n    }\n    return modifiedTitle\n  }\n\n  const mastersData = [\n    {\n      icon: multipersonIcon,\n      label: 'Members',\n      number: mastersCount?.userCount,\n      BGcolor: '#1F65CE0D',\n      iconbgcolor: '#1F65CE1A',\n    },\n    {\n      icon: briefcase,\n      label: 'Business Category',\n      number: mastersCount?.bussinessCount,\n      BGcolor: '#00AB550D',\n      iconbgcolor: '#00AB551A',\n    },\n    {\n      icon: personIcon,\n      label: 'Designation',\n      number: mastersCount?.roleCount,\n      BGcolor: '#FFA6570D',\n      iconbgcolor: '#FFA6571A',\n    },\n    {\n      icon: groupicon,\n      label: 'Task Groups',\n      number: mastersCount?.taskcategoryCount,\n      BGcolor: '#1F65CE0D',\n      iconbgcolor: '#E524481A',\n    },\n  ]\n  const nextArrow = (title) => {\n    console.log(title)\n    if (title === 'Flows') {\n      navigate('/flow')\n    } else if (title === 'Designation Members' || title === 'Overall Members') {\n      navigate('/master')\n    } else if (title === 'My Product Count' || title === 'Flow Access' || title === 'My Products') {\n      navigate('/product/list')\n    } else if (title === 'Total Products') {\n      navigate('/product/list?tab=7')\n    } else if (title === 'Product Assigned') {\n      navigate('/product/list?tab=1')\n    } else if (\n      title === `Team Member's Activity` ||\n      title === 'Second Level Approval Status' ||\n      title === 'Team Members'\n    ) {\n      navigate('/members-activity')\n    } else if (title === 'Sumbit Activity Status') {\n      navigate('/timesheet?tab=3')\n    }\n  }\n  return (\n    <div>\n      <CCard\n        style={{\n          backgroundColor: 'white',\n          height: widgetLength === 3 ? '250px' : '270px',\n          padding: '20px',\n          marginBottom: '10px',\n          paddingBottom: '0px',\n          borderRadius: '10px',\n          border: 'none',\n        }}\n      >\n        <CRow>\n          <CCol\n            xs={7}\n            md={title !== 'Total Timesheet Entry' ? 6 : 8}\n            style={{ display: 'flex', alignItems: 'center' }}\n          >\n            <Typography\n              className=\"Title_Card_lable\"\n              // style={{ color: '#4C4C4C', fontSize: '13px', fontWeight: 700, cursor: 'default' }}\n              title={getTitleNames(title)}\n            >\n              {getTitle(title)}\n            </Typography>\n          </CCol>\n          {title !== 'Total Timesheet Entry' && title !== \"Master's Overview\" ? (\n            <CCol xs={5} md={6}>\n              <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                <button\n                  className={`tab border-0 ${\n                    activeTab === `tab-active-${index}-1` ? 'DGroup_icon' : 'DGroup_img'\n                  }`}\n                  onClick={() => toggleTab(`tab-active-${index}-1`)}\n                  disabled={sidebarShow === true}\n                >\n                  <PieChartIcon\n                    width=\"16\"\n                    height=\"19\"\n                    viewBox=\"0 0 18 18\"\n                    fill={activeTab === `tab-active-${index}-1` ? '#F91414' : '#AAAAAA'}\n                    stopColor=\"\"\n                  />\n                </button>\n                <button\n                  className={`tab ${\n                    activeTab === `tab-active-${index}-2` ? 'DChart_img' : 'DChart_icon'\n                  }`}\n                  onClick={() => toggleTab(`tab-active-${index}-2`)}\n                  disabled={sidebarShow === true}\n                >\n                  <BarChartSVG\n                    width=\"16\"\n                    height=\"19\"\n                    viewBox=\"0 0 18 18\"\n                    fill={activeTab === `tab-active-${index}-2` ? '#FF2D2D' : '#AAAAAA'}\n                    stopColor={activeTab === `tab-active-${index}-2` ? '#FF2D2D' : '#AAAAAA'}\n                  />\n                </button>\n                <button\n                  className=\"DArrow_icon\"\n                  onClick={() => nextArrow(title)}\n                  style={{ border: 'none' }}\n                  disabled={sidebarShow === true}\n                >\n                  <NextArrowSVG\n                    fill=\"#AAAAAA\"\n                    viewBox=\"0 0 16 10\"\n                    width=\"15\"\n                    height=\"9\"\n                    stopColor=\"none\"\n                  />\n                </button>\n              </div>\n            </CCol>\n          ) : (\n            title === 'Total Timesheet Entry' && (\n              <CCol xs={5} md={4} style={{ display: 'flex' }}>\n                <MonthPicker\n                  style={{ fontSize: '11px' }}\n                  placeholder=\"This month\"\n                  defaultValue={dayjs()}\n                  format=\"MMM\"\n                  onChange={(value) => {\n                    monthRef.current = value.format('MM')\n                    yearRef.current = value.format('YYYY')\n                    dispatch(getTimesheetSummary(monthRef.current, yearRef.current))\n                  }}\n                  allowClear={false}\n                  disabledDate={(current) => current && current > dayjs().endOf('month')}\n                  disabled={sidebarShow === true}\n                />\n              </CCol>\n            )\n          )}\n        </CRow>\n        {title === 'Total Timesheet Entry' ? (\n          <div>\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                marginTop: '25px',\n                fontWeight: '600',\n              }}\n            >\n              <Typography style={{ fontSize: '25px' }}>\n                {timesheetDaysCount?.totalDays || 0} Days\n              </Typography>\n            </div>\n            <div>\n              <Typography\n                style={{\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                  color: '#8E8E93',\n                  fontSize: '13px',\n                  fontWeight: '600',\n                  marginTop: '5px',\n                }}\n              >\n                Total TimeSheet Entry\n              </Typography>\n            </div>\n            <div style={{ height: '92px', overflowY: 'auto', marginTop: '11px' }}>\n              <Card\n                className=\"Dashboard_Card\"\n                style={{\n                  backgroundColor: '#ffff',\n                  height: '64px',\n                  marginTop: '20px',\n                  border: '1px solid #F2F2F7',\n                  boxShadow: ' 0px 4px 30px 0px #0000000D',\n                }}\n              >\n                <CRow>\n                  <CCol>\n                    <Typography style={{ color: '#8E8E93', fontSize: '13px', fontWeight: '500' }}>\n                      Total Leave\n                    </Typography>\n                  </CCol>\n                  <CCol>\n                    <Typography\n                      style={{\n                        display: 'flex',\n                        justifyContent: 'end',\n                        color: '#1C1C1E',\n                        fontSize: '13px',\n                        fontWeight: '600',\n                      }}\n                    >\n                      {timesheetDaysCount?.leaveCount || 0} days\n                    </Typography>\n                  </CCol>\n                </CRow>\n              </Card>\n              <Card\n                className=\"Dashboard_Card\"\n                style={{\n                  backgroundColor: '#ffff',\n                  height: '64px',\n                  marginTop: '10px',\n                  border: '1px solid #F2F2F7',\n                  boxShadow: ' 0px 4px 30px 0px #0000000D',\n                }}\n              >\n                <CRow>\n                  <CCol>\n                    <Typography style={{ color: '#8E8E93', fontSize: '13px', fontWeight: '500' }}>\n                      Not Entered\n                    </Typography>\n                  </CCol>\n                  <CCol>\n                    <Typography\n                      style={{\n                        display: 'flex',\n                        justifyContent: 'end',\n                        color: '#1C1C1E',\n                        fontSize: '13px',\n                        fontWeight: '600',\n                      }}\n                    >\n                      {timesheetDaysCount?.notEnteredCount || 0} days\n                    </Typography>\n                  </CCol>\n                </CRow>\n              </Card>\n            </div>\n          </div>\n        ) : title === \"Master's Overview\" ? (\n          <CRow>\n            {mastersData.map((item, index) => (\n              <CCol sm={6} key={index}>\n                <Card\n                  className=\"inside_card mt-2\"\n                  style={{\n                    height: '85px',\n                    backgroundColor: item.BGcolor,\n                  }}\n                >\n                  <CRow>\n                    <CCol className=\"d-flex justify-content-end\">\n                      <div\n                        className=\"d-flex justify-content-center align-items-center\"\n                        style={{\n                          height: '30px',\n                          width: '30px',\n                          backgroundColor: item.iconbgcolor,\n                          borderRadius: '5px',\n                        }}\n                      >\n                        <img src={item.icon} alt=\"icon\" style={{ width: '15px', height: '15px' }} />\n                      </div>\n                    </CCol>\n                  </CRow>\n                  <CRow>\n                    <CCol>\n                      <div style={{ color: '#5F5F5F', fontWeight: 600, fontSize: '11px' }}>\n                        {item.label}\n                      </div>\n                      <div style={{ color: '#000000', fontWeight: 700, fontSize: '13px' }}>\n                        {item.number}\n                      </div>\n                    </CCol>\n                  </CRow>\n                </Card>\n              </CCol>\n            ))}\n          </CRow>\n        ) : (\n          <CRow>\n            <CCol className=\"Dashboard_Tab\">\n              <Tabs\n                defaultActiveKey={`tab-active-${index}-1`}\n                activeKey={activeTab}\n                items={items}\n                onChange={toggleTab}\n              />\n            </CCol>\n          </CRow>\n        )}\n      </CCard>\n    </div>\n  )\n}\n\nconst DashboardCard = ({ index, title, widgetLength }) => (\n  <DashboardCardStyle index={index} title={title} widgetLength={widgetLength} />\n)\n\nDashboardCardStyle.propTypes = {\n  index: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  widgetLength: PropTypes.number.isRequired,\n}\n\nDashboardCard.propTypes = {\n  index: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  widgetLength: PropTypes.number.isRequired,\n}\n\nexport default DashboardCard\n","import React, { useState, useRef, useEffect } from 'react'\nimport Chart from 'react-apexcharts'\nimport PropTypes from 'prop-types'\n\nconst MyTimesheetBarChart = ({ data = [], heightValue }) => {\n  const chartContainerRef = useRef(null)\n\n  const scrollLeft = () => {\n    if (chartContainerRef.current) {\n      chartContainerRef.current.scrollLeft -= 100\n    }\n  }\n\n  const scrollRight = () => {\n    if (chartContainerRef.current) {\n      chartContainerRef.current.scrollLeft += 100\n    }\n  }\n\n  const convertHoursToDecimal = (hours) => {\n    const [h, m] = hours.split(':').map(Number)\n    return h + m / 60\n  }\n  // 320\n  const [options, setOptions] = useState({\n    chart: {\n      id: 'basic-bar',\n      height: heightValue ? '150px' : '204px',\n      width: '100%',\n      zoom: {\n        enabled: true,\n      },\n    },\n    xaxis: {\n      categories: [],\n      labels: {\n        rotate: -45,\n      },\n      title: {\n        text: 'Tasks', // X-axis name\n        style: {\n          fontSize: '10px',\n          fontWeight: 'bold',\n          color: '#8E8E93',\n        },\n      },\n    },\n    yaxis: {\n      min: 0,\n      max: 9,\n      labels: {\n        formatter: (value) => {\n          const hours = Math.floor(value)\n          const minutes = Math.round((value % 1) * 60)\n          return `${hours}:${minutes === 0 ? '00' : minutes}`\n        },\n      },\n      title: {\n        text: 'Hours', // Y-axis name\n        style: {\n          fontSize: '10px',\n          fontWeight: 'bold',\n          color: '#8E8E93',\n        },\n      },\n    },\n    colors: ['#00AB55B2'],\n    plotOptions: {\n      bar: {\n        borderRadius: 5,\n        borderRadiusApplication: 'end',\n        columnWidth: '80%',\n        colors: {\n          backgroundBarOpacity: 0.3,\n        },\n      },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    tooltip: {\n      custom: function ({ seriesIndex, dataPointIndex, w }) {\n        const data = w.globals.initialSeries[seriesIndex].data[dataPointIndex]\n        return `<div style=\"padding: 10px;\">\n          <div style=\"font-weight: bold; color: #00AB55B2; box-shadow: 1px 2px 2px -2px gray; padding-bottom: 5px;\">Details</div><br/>\n          <table style=\"width: 100%; border-spacing: 0 10px;\">\n              <tr>\n                  <td style=\"font-weight: bold;\">Product</td>\n                  <td>: ${data.product}</td>\n              </tr>\n              <tr>\n                  <td style=\"font-weight: bold;\">Task</td>\n                  <td>: ${data.task}</td>\n              </tr>\n              <tr>\n                  <td style=\"font-weight: bold;\">Hours</td>\n                  <td>: ${data.hours}</td>\n              </tr>\n              <tr>\n                  <td style=\"font-weight: bold;\">Description</td>\n                  <td>: ${data.description}</td>\n              </tr>\n          </table>\n        </div>`\n      },\n    },\n    grid: {\n      padding: {\n        left: 0,\n        right: 0,\n      },\n    },\n  })\n\n  const [series, setSeries] = useState([])\n\n  const getDescription = (value, maxLength = 20) => {\n    const modifiedTitle = value\n    return modifiedTitle.length > maxLength\n      ? `${modifiedTitle.substring(0, maxLength)}...`\n      : modifiedTitle\n  }\n\n  const getTask = (value, maxLength = 10) => {\n    const modifiedTitle = value\n    return modifiedTitle.length > maxLength\n      ? `${modifiedTitle.substring(0, maxLength)}...`\n      : modifiedTitle\n  }\n\n  useEffect(() => {\n    setOptions((prevOptions) => ({\n      ...prevOptions,\n      xaxis: {\n        ...prevOptions.xaxis,\n        categories: data?.map((item) => getTask(item.task)),\n      },\n      plotOptions: {\n        bar: {\n          ...prevOptions.plotOptions.bar,\n          columnWidth: data?.length === 1 ? '10%' : '40%', // Adjust column width based on data length\n        },\n      },\n    }))\n    setSeries([\n      {\n        name: 'Completed',\n        data: data?.map((item) => ({\n          x: getTask(item.task),\n          y: convertHoursToDecimal(item.hours),\n          product: item.product,\n          task: getTask(item.task),\n          hours: item.hours,\n          description: getDescription(item.description),\n        })),\n      },\n    ])\n  }, [data])\n\n  const chartWidth = Math.max(600, data?.length * 50)\n\n  return (\n    <div>\n      <div\n        className=\"MyTimesheetBarChart\"\n        ref={chartContainerRef}\n        style={{\n          overflowX: 'scroll',\n          // display: 'flex',\n          // justifyContent: 'center',\n          height: heightValue ? '174px' : '341px',\n        }}\n      >\n        <div className=\"row\">\n          <div\n            className=\"mixed-chart\"\n            style={{\n              marginTop: '20px',\n              paddingRight: '20px',\n              overflowX: 'auto', // Enable horizontal scrolling\n              overflowY: 'hidden',\n              minWidth: `${chartWidth}px`,\n              height: heightValue ? '160px' : '312px',\n            }}\n          >\n            <Chart\n              options={options}\n              series={series}\n              type=\"bar\"\n              // width={chartWidth}\n              height={heightValue ? '150px' : '300px'}\n            />\n          </div>\n        </div>\n      </div>\n      {/* <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n        <button\n          style={{\n            borderRadius: '80%',\n            border: 'none',\n            backgroundColor: '#d9d9d966',\n            // padding: '5px',\n          }}\n          onClick={scrollLeft}\n        >\n          <IoIosArrowBack width=\"11px\" />\n        </button>\n        <button\n          style={{\n            borderRadius: '80%',\n            border: 'none',\n            backgroundColor: '#d9d9d966',\n            // padding: '5px',\n          }}\n          onClick={scrollRight}\n        >\n          <IoIosArrowForward />\n        </button>\n      </div> */}\n    </div>\n  )\n}\n\nMyTimesheetBarChart.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      product: PropTypes.string.isRequired,\n      hours: PropTypes.string.isRequired,\n      task: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n    }),\n  ),\n  heightValue: PropTypes.bool,\n}\n\nexport default MyTimesheetBarChart\n","import React, { useState, useRef, useEffect } from 'react'\nimport {\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport eventEmitter from 'src/constant/EventEmitter'\nimport FileSvg from '../../svgImages/FileSvg'\nimport { CaretDownOutlined } from '@ant-design/icons'\nimport TextArea from 'antd/es/input/TextArea'\nimport DeleteSvg from '../../svgImages/DeleteSvg'\nimport dayjs from 'dayjs'\nimport updateLocale from 'dayjs/plugin/updateLocale'\nimport { toast } from 'react-toastify'\nimport Downarrowimg from '../../../assets/images/downarrow.png'\nimport { useDispatch } from 'react-redux'\nimport { submitActivity } from 'src/redux/timesheet/action'\nimport PropTypes from 'prop-types'\nimport CheckSvg from 'src/views/svgImages/CheckSvg'\nimport { Checkbox, Select, TimePicker, Skeleton, Space, Modal } from 'antd'\nimport { useSelector } from 'react-redux'\n\ndayjs.extend(updateLocale)\ndayjs.updateLocale('en', {\n  weekStart: 1,\n})\n\nconst TimesheetTable = ({\n  productList,\n  taskList,\n  selectedDate,\n  loader,\n  loadingActiveTask,\n  handleDisableContent,\n  disableContents,\n  heightValue,\n}) => {\n  const dispatch = useDispatch()\n  const [disableContent, setDisableContent] = useState(disableContents)\n  const [dateWise, setDateWise] = useState(selectedDate)\n  const [isSubmitButtonDisabled, setIsSubmitButtonDisabled] = useState(false)\n  const [isDraftButtonDisabled, setIsDraftButtonDisabled] = useState(false)\n  const [selectAll, setSelectAll] = useState(false)\n  const [headerLabel, setHeaderLabel] = useState('')\n  const sidebarShow = useSelector((state) => state.dashboard.sidebarShow)\n  const selectRef = useRef(null)\n  const handleDropdownVisibleChange = (visible) => {\n    if (!visible && selectRef.current) {\n      selectRef.current.blur()\n    }\n  }\n  const [rows, setRows] = useState([\n    {\n      activity_date: dateWise,\n      isChecked: false,\n      checkUser: '',\n      product: '',\n      task: '',\n      hours: '',\n      status: '',\n      description: '',\n    },\n  ])\n  const addRow = () => {\n    setRows([\n      ...rows,\n      {\n        activity_date: dateWise,\n        isChecked: false,\n        checkUser: '',\n        product: '',\n        task: '',\n        hours: '',\n        status: '',\n        description: '',\n      },\n    ])\n  }\n\n  const hasCheckedRow = rows.some((value) => value.isChecked)\n\n  const handleCheckboxChange = (index) => {\n    const newRows = [...rows]\n    const currentRow = newRows[index]\n\n    const allFieldsFilled = areAllFieldsFilled(currentRow)\n\n    currentRow.isChecked = allFieldsFilled ? !currentRow.isChecked : false\n    setRows(newRows)\n\n    let count = countCheckedItems(newRows)\n    if (count >= 1) {\n      if (count === rows.length && count === newRows.filter((row) => row.isChecked).length) {\n        // All checkboxes are checked, update Select All checkbox\n        setSelectAll(true)\n        setHeaderLabel(`${count} rows selected`)\n      } else {\n        setSelectAll(false)\n        setHeaderLabel(`${count} rows selected`)\n      }\n    } else {\n      setSelectAll(false)\n      setHeaderLabel('')\n    }\n  }\n\n  const areAllFieldsFilled = (data) => {\n    return (\n      data.product !== 0 &&\n      data.product !== '' &&\n      data.task.trim() !== '' &&\n      data.hours !== '' &&\n      // data.status !== '' &&\n      data.description.trim() !== ''\n    )\n  }\n\n  const handleInputChange = (index, fieldName, value) => {\n    const newRows = [...rows]\n    const currentRow = newRows[index]\n\n    if (fieldName === 'hours') {\n      currentRow.hours = value\n    } else {\n      currentRow[fieldName] = value\n    }\n    currentRow.isChecked = false\n    const updatedRows = newRows.map((row, idx) => ({\n      ...row,\n      isChecked: false, // Update isChecked conditionally\n    }))\n    setSelectAll(false)\n    setHeaderLabel('')\n    handleDisableContent(false)\n    setRows(updatedRows)\n  }\n\n  const deleteRow = (index) => {\n    if (rows.length > 1) {\n      const newRows = [...rows]\n      newRows.splice(index, 1)\n      setRows(newRows)\n    } else {\n      toast.error('Deleting last row  Restricted', { position: toast.POSITION.BOTTOM_RIGHT })\n    }\n  }\n\n  const handleSubmit = async (e) => {\n    setIsSubmitButtonDisabled(true)\n    setIsDraftButtonDisabled(true)\n    const remainingRows = rows.filter((value) => !value.isChecked)\n\n    const formData = new FormData()\n    let i = 0\n\n    rows.forEach((value) => {\n      if (value.isChecked) {\n        formData.append(\n          `commonTimeSheetActivities[${i}].activity_date`,\n          dayjs(dateWise).format('YYYY-MM-DD'),\n        )\n        formData.append(`commonTimeSheetActivities[${i}].product`, value.product)\n        formData.append(`commonTimeSheetActivities[${i}].task`, value.task)\n        formData.append(\n          `commonTimeSheetActivities[${i}].hours`,\n          dayjs(value.hours.$d).format('HH:mm'),\n        )\n        // formData.append(`commonTimeSheetActivities[${i}].status`, value.status)\n        formData.append(`commonTimeSheetActivities[${i}].description`, value.description)\n        i++\n      }\n    })\n    formData.append(`status`, 'Created')\n    dispatch(submitActivity(formData))\n      .then((response) => {\n        toast.success(response.data.message, { position: toast.POSITION.BOTTOM_RIGHT })\n        setIsSubmitButtonDisabled(false)\n        setIsDraftButtonDisabled(false)\n        setHeaderLabel('')\n        setRows([])\n        setSelectAll(false)\n        if (remainingRows.length === 0) {\n          setRows([\n            {\n              activity_date: dateWise,\n              isChecked: false,\n              checkUser: '',\n              product: '',\n              task: '',\n              hours: '',\n              // status: 'Choose Status',\n              description: '',\n            },\n          ])\n        } else {\n          setRows(remainingRows)\n        }\n      })\n      .catch((error) => {\n        setIsSubmitButtonDisabled(false)\n        setIsDraftButtonDisabled(false)\n        setSelectAll(false)\n        const updatedRows = rows.map((row) => ({\n          ...row,\n          isChecked: false,\n        }))\n        setRows(updatedRows)\n        setHeaderLabel('')\n        const errors = error.response.data\n        if (errors) {\n          toast.error(errors.message, { position: toast.POSITION.BOTTOM_RIGHT })\n        } else {\n          toast.error(error.message, { position: toast.POSITION.BOTTOM_RIGHT })\n        }\n      })\n  }\n\n  const handleDraft = async () => {\n    setIsSubmitButtonDisabled(true)\n    setIsDraftButtonDisabled(true)\n    // Filter out rows with isChecked set to true\n    const remainingRows = rows.filter((value) => !value.isChecked)\n\n    const formData = new FormData()\n    let i = 0\n\n    rows.forEach((value) => {\n      if (value.isChecked) {\n        formData.append(\n          `commonTimeSheetActivities[${i}].activity_date`,\n          dayjs(dateWise).format('YYYY-MM-DD'),\n        )\n        formData.append(`commonTimeSheetActivities[${i}].product`, value.product)\n        formData.append(`commonTimeSheetActivities[${i}].task`, value.task)\n        formData.append(\n          `commonTimeSheetActivities[${i}].hours`,\n          `${dayjs(value.hours.$d).format('HH:mm')}`,\n        )\n        // formData.append(`commonTimeSheetActivities[${i}].status`, value.status)\n        formData.append(`commonTimeSheetActivities[${i}].description`, value.description)\n        i++\n      }\n    })\n    formData.append(`status`, 'Draft')\n    dispatch(submitActivity(formData))\n      .then((response) => {\n        toast.success(response.data.message, { position: toast.POSITION.BOTTOM_RIGHT })\n        setIsSubmitButtonDisabled(false)\n        setIsDraftButtonDisabled(false)\n        setHeaderLabel('')\n        setSelectAll(false)\n        if (remainingRows.length === 0) {\n          setRows([\n            {\n              activity_date: dateWise,\n              isChecked: false,\n              product: '',\n              task: '',\n              hours: '',\n              // status: '',\n              description: '',\n            },\n          ])\n        } else {\n          setRows(remainingRows)\n        }\n        eventEmitter.emit('callDraft')\n      })\n      .catch((error) => {\n        setIsSubmitButtonDisabled(false)\n        setIsDraftButtonDisabled(false)\n        setSelectAll(!selectAll)\n        const updatedRows = rows.map((row) => ({\n          ...row,\n          isChecked: !selectAll,\n        }))\n        setRows(updatedRows)\n        setHeaderLabel('')\n        toast.error(error.message, { position: toast.POSITION.BOTTOM_RIGHT })\n      })\n  }\n\n  useEffect(() => {\n    setDisableContent(disableContents)\n  }, [disableContents])\n\n  //Product List\n  const options = productList.map((product) => ({\n    value: product.id,\n    label: product.name,\n    status: product.status,\n    color: product.status === 'InActive' ? 'orange' : 'green',\n  }))\n  const activeOptions = options.filter((item) => item.status === 'Active')\n  const inactiveOptions = options.filter((item) => item.status === 'InActive')\n\n  // Task Activity list\n  const taskOptions = taskList.map((task) => ({\n    value: task,\n    label: task,\n  }))\n\n  const handleSelectAllChange = () => {\n    setSelectAll(!selectAll)\n    const updatedRows = rows.map((row) => ({\n      ...row,\n      isChecked: !selectAll,\n    }))\n    setRows(updatedRows)\n    let count = countCheckedItems(updatedRows)\n    if (count >= 1) setHeaderLabel(`${count} rows selected`)\n    else setHeaderLabel('')\n  }\n  function countCheckedItems(data) {\n    let checkedCount = 0\n    for (let item of data) {\n      if (item.isChecked === true) {\n        checkedCount++\n      }\n    }\n    return checkedCount\n  }\n\n  const disabledTime = (current) => {\n    const hour = current.hour()\n\n    return {\n      disabledHours: () => {\n        const disabledHoursArray = []\n        for (let i = 0; i < 24; i++) {\n          if (i < 0 || i > 9) {\n            disabledHoursArray.push(i)\n          }\n        }\n        return disabledHoursArray\n      },\n      disabledMinutes: () => {\n        if (hour === 9) {\n          return [...Array(60).keys()].slice(1)\n        } else if (hour === 0) {\n          return [0]\n        } else {\n          return []\n        }\n      },\n    }\n  }\n\n  const warning = (id) => {\n    Modal.warning({\n      title: 'Delete Activity',\n      content: 'Are you sure to delete this activity ?',\n      onOk: () => deleteRow(id),\n      closable: true,\n      okCancel: true,\n      autoFocusButton: true,\n      centered: true,\n      okText: 'Yes',\n      cancelText: 'No',\n      okButtonProps: { style: { background: '#f54550', borderColor: '#f54550', color: 'white' } },\n    })\n  }\n  return (\n    <div>\n      <div\n        className=\" p-0 \"\n        style={{ height: heightValue ? '150px' : '316px', overflowY: 'auto', overflowX: 'auto' }}\n      >\n        <CTable>\n          <CTableHead className=\"draft-head-row-ts\">\n            {!headerLabel ? (\n              <CTableRow className={`my-3 ${disableContent ? 'disabled-content' : ''}`}>\n                <CTableHeaderCell\n                  className=\"table-head-draft text-c text-center\"\n                  scope=\"col\"\n                  width=\"4%\"\n                >\n                  <Checkbox\n                    className=\"checkbox_design\"\n                    id=\"selectAllCheckbox\"\n                    checked={selectAll}\n                    onChange={handleSelectAllChange}\n                    disabled={\n                      disableContent ||\n                      sidebarShow === true ||\n                      rows.some((row) => !areAllFieldsFilled(row))\n                    }\n                  />\n                </CTableHeaderCell>\n                <CTableHeaderCell className=\"table-head-draft text-c\" width=\"12%\" scope=\"col\">\n                  Product\n                </CTableHeaderCell>\n                <CTableHeaderCell className=\"table-head-draft text-c\" scope=\"col\" width=\"20%\">\n                  Task\n                </CTableHeaderCell>\n                <CTableHeaderCell className=\"table-head-draft text-c\" scope=\"col\" width=\"15%\">\n                  Hours\n                </CTableHeaderCell>\n                <CTableHeaderCell className=\"table-head-draft text-c\" scope=\"col\" width=\"30%\">\n                  Remarks\n                </CTableHeaderCell>\n              </CTableRow>\n            ) : (\n              <CTableRow>\n                <CTableHeaderCell\n                  className=\"table-head-draft table-head-selected text-c text-center pad_bt\"\n                  scope=\"col\"\n                  width=\"4.3%\"\n                >\n                  <Checkbox\n                    id=\"selectAllCheckbox\"\n                    className=\"checkbox_design\"\n                    checked={selectAll}\n                    onChange={handleSelectAllChange}\n                    disabled={\n                      disableContent ||\n                      sidebarShow === true ||\n                      rows.some((row) => !areAllFieldsFilled(row))\n                    }\n                  />\n                </CTableHeaderCell>\n                <CTableHeaderCell className=\"table-head-selected text-c align_con_cen\" colSpan=\"3\">\n                  <span style={{ color: '#f50505' }}>{headerLabel}</span>\n                </CTableHeaderCell>\n                <CTableHeaderCell\n                  className=\"table-head-selected\"\n                  colSpan=\"4\"\n                  style={{ textAlign: 'right' }}\n                  width=\"39.1%\"\n                >\n                  <div\n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-end' }}\n                  >\n                    <button\n                      className=\"btn border-0 text-secondary save_draft_button\"\n                      disabled={!hasCheckedRow || isDraftButtonDisabled || disableContent}\n                      onClick={() => handleDraft()}\n                      type=\"button\"\n                    >\n                      <FileSvg width=\"17\" height=\"17\" viewBox=\"0 0 18 18\" fill=\"none\" />\n                    </button>\n                    <div\n                      title={\n                        !hasCheckedRow || isSubmitButtonDisabled\n                          ? 'Please check a row before submitting'\n                          : ''\n                      }\n                    >\n                      <button\n                        className=\"btn border-0 text-secondary save_draft_button\"\n                        type=\"button\"\n                        onClick={() => handleSubmit()}\n                        disabled={!hasCheckedRow || isSubmitButtonDisabled || disableContent}\n                      >\n                        <CheckSvg width=\"11\" height=\"9\" viewBox=\"0 0 14 10\" fill=\"#00ab55\" />\n                      </button>\n                    </div>\n                  </div>\n                </CTableHeaderCell>\n              </CTableRow>\n            )}\n          </CTableHead>\n          <CTableBody className={`my-3 ${disableContent ? 'disabled-content' : ''}`}>\n            {rows?.map((data, index) => (\n              <CTableRow\n                key={index}\n                className=\"my-3\"\n                style={{ position: 'relative' }}\n                onMouseEnter={() =>\n                  (document.getElementById(`delete-button-${index}`).style.display = 'block')\n                }\n                onMouseLeave={() =>\n                  (document.getElementById(`delete-button-${index}`).style.display = 'none')\n                }\n              >\n                <CTableDataCell\n                  className=\"activity-text-radio activity-text-index text-center pad-bottom\"\n                  style={{\n                    cursor: !areAllFieldsFilled(data) ? 'not-allowed' : 'default',\n                  }}\n                  width=\"4%\"\n                >\n                  <Checkbox\n                    className=\"checkbox_design\"\n                    id={`flexCheckDefault-${index}`}\n                    checked={data.isChecked}\n                    onChange={() => handleCheckboxChange(index)}\n                    disabled={!areAllFieldsFilled(data) || sidebarShow === true}\n                  />\n                </CTableDataCell>\n                <CTableDataCell className=\"activity-text-draft pad-bottom\" width=\"15%\">\n                  <Select\n                    showSearch\n                    placeholder=\"Choose Product\"\n                    variant={'borderless'}\n                    ref={selectRef}\n                    onDropdownVisibleChange={handleDropdownVisibleChange}\n                    className=\"product-select\"\n                    loading={loader}\n                    suffixIcon={\n                      <img\n                        src={Downarrowimg}\n                        alt={Downarrowimg}\n                        style={{ width: '12px', height: '7px' }}\n                      />\n                    }\n                    dropdownStyle={{\n                      border: '#ffff',\n                      width: '15%',\n                    }}\n                    style={{ width: '100%', fontWeight: '600' }}\n                    onChange={(selectedOption) =>\n                      handleInputChange(index, 'product', selectedOption)\n                    }\n                    options={\n                      loader\n                        ? [\n                            {\n                              label: (\n                                <div style={{ textAlign: 'center' }}>\n                                  <Skeleton\n                                    title={false}\n                                    paragraph={{\n                                      rows: 5,\n                                      width: '100%',\n                                    }}\n                                  />\n                                </div>\n                              ),\n                              value: 'loading',\n                              disabled: true,\n                            },\n                          ]\n                        : [\n                            {\n                              label: 'Assigned Projects',\n                              options: activeOptions,\n                            },\n                            {\n                              label: 'Other Projects',\n                              options: inactiveOptions,\n                            },\n                          ].map((group) => ({\n                            label: group.label,\n                            options: group.options.map((option) => ({\n                              label: (\n                                <Space>\n                                  <span\n                                    style={{\n                                      backgroundColor: option.color,\n                                      width: 6,\n                                      height: 6,\n                                      borderRadius: '50%',\n                                      display: 'inline-block',\n                                      border: 'none',\n                                    }}\n                                  />\n                                  <span style={{ fontWeight: '600' }} className=\"product_option\">\n                                    {option.label}\n                                  </span>\n                                </Space>\n                              ),\n                              value: option.value,\n                            })),\n                          }))\n                    }\n                    value={data.product || null}\n                    filterOption={(input, option) => {\n                      const label = option.label?.props?.children?.[1]?.props?.children\n                      return label?.toLowerCase().includes(input.toLowerCase())\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell className=\"activity-text-task pad-bottom\" width=\"20%\">\n                  <Select\n                    showSearch\n                    suffixIcon={\n                      <img\n                        src={Downarrowimg}\n                        alt={Downarrowimg}\n                        style={{ width: '12px', height: '7px' }}\n                      />\n                    }\n                    ref={selectRef}\n                    onDropdownVisibleChange={handleDropdownVisibleChange}\n                    className=\"draft-form-custom-selects choose_task_box\"\n                    id={`task-${index}`}\n                    value={taskOptions.find((task) => task.value === data.task) || null}\n                    onChange={(selectedOption) => handleInputChange(index, 'task', selectedOption)}\n                    menuportaltarget={document.body}\n                    styles={{\n                      control: (base) => ({\n                        ...base,\n                        fontSize: '14px',\n                        minWidth: '80px',\n                        minHeight: '46px',\n                        maxHeight: index <= 1 ? '120px' : '80px',\n                        zIndex: '1',\n                        border: 'none',\n                        boxShadow: 'none',\n                        fontWeight: 600,\n                      }),\n                      menu: (base) => ({\n                        ...base,\n                        fontSize: '14px',\n                        maxHeight: index <= 1 ? '120px' : '80px',\n                        overflowY: 'auto',\n                        '&::-webkit-scrollbar': {\n                          display: 'none',\n                        },\n                        fontWeight: 600,\n                      }),\n                      getOptionStyle: (provided, state) => ({\n                        ...provided,\n                        height: '40px',\n                        display: 'flex',\n                        alignItems: 'center',\n                        padding: '8px 12px',\n                      }),\n                    }}\n                    dropdownStyle={{\n                      border: '#ffff',\n                      width: '15%',\n                    }}\n                    options={\n                      loadingActiveTask\n                        ? [\n                            {\n                              label: (\n                                <div style={{ textAlign: 'center' }}>\n                                  <Skeleton\n                                    title={false}\n                                    paragraph={{\n                                      rows: 5,\n                                      width: '100%',\n                                    }}\n                                  />\n                                </div>\n                              ),\n                              value: 'loading',\n                              disabled: true,\n                            },\n                          ]\n                        : taskOptions\n                    }\n                    placeholder=\"Choose Task\"\n                  />\n                </CTableDataCell>\n                <CTableDataCell className=\"activity-text activity-text-time pad-bottom\" width=\"10%\">\n                  <TimePicker\n                    className=\"date_picker_db\"\n                    variant={'borderless'}\n                    placeholder=\"HH:mm\"\n                    format=\"HH:mm\"\n                    value={data.hours || null}\n                    style={{ border: 'none', fontWeight: 600, fontSize: '13px' }}\n                    suffixIcon={<CaretDownOutlined className=\"caredown-icon\" />}\n                    disabledTime={disabledTime}\n                    hideDisabledOptions\n                    picker=\"time\"\n                    allowClear={false}\n                    showNow={false}\n                    onChange={(value) => handleInputChange(index, 'hours', value)}\n                  />\n                </CTableDataCell>\n                <CTableDataCell\n                  className=\"activity-text activity-text-description pad-bottom\"\n                  width=\"30%\"\n                >\n                  <div style={{ display: 'flex' }}>\n                    <TextArea\n                      id={`des-${index}`}\n                      variant={'borderless'}\n                      value={data.description}\n                      className=\"db_textarea\"\n                      onChange={(e) => handleInputChange(index, 'description', e.target.value)}\n                      style={{ color: 'black', fontWeight: '600' }}\n                      placeholder=\"Enter Remarks...\"\n                      autoSize={{\n                        minRows: 0,\n                        maxRows: 1,\n                      }}\n                    />\n                    <div\n                      id={`delete-button-${index}`}\n                      style={\n                        {\n                          // position: 'absolute',\n                          // top: '50%',\n                          // right: '10px',\n                          // transform: 'translateY(-50%)',\n                          // display: 'none',\n                        }\n                      }\n                    >\n                      <button\n                        type=\"button\"\n                        className=\"action-view cross-button\"\n                        onClick={() => warning(index)}\n                        disabled={rows[index].isChecked}\n                        style={{ padding: '2px 2px' }}\n                      >\n                        <DeleteSvg width=\"16\" height=\"15\" viewBox=\"0 0 18 18\" fill=\"#A5A1A1\" />\n                      </button>\n                    </div>\n                  </div>\n                </CTableDataCell>\n              </CTableRow>\n            ))}\n          </CTableBody>\n        </CTable>\n      </div>\n      <div>\n        <button\n          style={{ background: 'transparent', marginTop: '10px' }}\n          type=\"button\"\n          className=\"Add_row_button border-0\"\n          disabled={sidebarShow === true}\n          // className=\"text-decoration-none  addrow_button\"\n          onClick={addRow}\n        >\n          <span className=\"row_label\">\n            <span style={{ fontSize: '14px' }}> + </span>Add Row\n          </span>\n        </button>\n      </div>\n    </div>\n  )\n}\n\nTimesheetTable.propTypes = {\n  productList: PropTypes.array,\n  taskList: PropTypes.array,\n  loadingActiveTask: PropTypes.bool,\n  loader: PropTypes.bool,\n  selectedDate: PropTypes.any,\n  handleDisableContent: PropTypes.func,\n  disableContents: PropTypes.bool,\n  heightValue: PropTypes.bool,\n}\nexport default TimesheetTable\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst NextArrowSVG = ({ width, height, fill, viewBox, stopColor }) => (\n  <>\n    <svg\n      width={width}\n      height={height}\n      viewBox={viewBox}\n      fill={fill}\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M15.5809 0.153809H1.26636L0.669922 0.750248V13.8719L1.26636 14.4683H15.5809L16.1773 13.8719V0.750248L15.5809 0.153809ZM1.8628 1.34669H14.9845V2.53957H1.8628V1.34669ZM10.2129 6.1182H6.63431V3.73244H10.2129V6.1182ZM10.2129 7.31108V9.69684H6.63431V7.31108H10.2129ZM1.8628 3.73244H5.44144V6.1182H1.8628V3.73244ZM1.8628 7.31108H5.44144V9.69684H1.8628V7.31108ZM1.8628 13.2755V10.8897H5.44144V13.2755H1.8628ZM6.63431 13.2755V10.8897H10.2129V13.2755H6.63431ZM14.9845 13.2755H11.4058V10.8897H14.9845V13.2755ZM14.9845 9.69684H11.4058V7.31108H14.9845V9.69684ZM11.4058 6.1182V3.73244H14.9845V6.1182H11.4058Z\"\n        fill={fill}\n      />\n    </svg>\n  </>\n)\n\nNextArrowSVG.propTypes = {\n  width: PropTypes.string.isRequired,\n  height: PropTypes.string.isRequired,\n  fill: PropTypes.string.isRequired,\n  viewBox: PropTypes.string.isRequired,\n  stopColor: PropTypes.string.isRequired,\n}\n\nexport default NextArrowSVG\n","import React, { useEffect, useRef, useState } from 'react'\nimport { Button, DatePicker, Select, Skeleton, Tabs, Typography } from 'antd'\nimport { CButton, CCard, CCol, CModal, CModalBody, CModalFooter, CRow } from '@coreui/react'\nimport Calendarimg from '../../../assets/images/calendar-image.png'\nimport Downarrowimg from '../../../assets/images/downarrow.png'\nimport MyTimesheetbarchart from './barChart'\nimport TimeSheetTable from '../TimeSheet/TimeSheetTable'\nimport BarChartSVG from '../DashboardSVG/BarChartSVG'\nimport NextArrowSVG from '../DashboardSVG/TableSVG'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  createAttendanceSheet,\n  getExistsDates,\n  getTaskActivityList,\n  getYesterdayCount,\n  getproductList,\n} from 'src/redux/timesheet/action'\nimport dayjs from 'dayjs'\nimport { getDecodeData } from 'src/constant/Global'\nimport { getToday } from 'src/TimeUtils'\nimport { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { FileAddFilled } from '@ant-design/icons'\nimport PropTypes from 'prop-types'\nimport { getMyTimesheetDetails } from 'src/redux/Dashboard/action'\nimport RaiseRequestModal from 'src/views/modal/RaiseRequestModal'\n\nconst DashboardTimesheet = ({ widgetLength, widgetTableData, title }) => {\n  const [activeTab, setActiveTab] = useState('1')\n  const [selectedDate, setSelectedDate] = useState(dayjs())\n  const [attendance, setAttendance] = useState(null)\n  const [raiseButton, setRaiseButton] = useState(false)\n  const [visibleView, setVisibleView] = useState(false)\n  const [dateWise, setDateWise] = useState(dayjs())\n  const [raiseModal, setRaiseModal] = useState(false)\n  const dispatch = useDispatch()\n  const yesterdayCount = useSelector((state) => state.timesheet?.yesterdayCount)\n  const existingDates = useSelector((state) => state.timesheet.existingDates)\n  const [loading, setLoading] = useState(true)\n  const [loadingActiveTask, setLoadingActiveTask] = useState(true)\n  const user = getDecodeData()\n  const joiningDate = user?.jod\n  const monthRef = useRef(null)\n  const yearRef = useRef(null)\n  const filter = useRef(0)\n  const [disableContent, setDisableContent] = useState(false)\n  const heightRef = useRef(false)\n  const toggleTab = (tab) => {\n    if (activeTab !== tab) setActiveTab(tab)\n  }\n  const today = getToday()\n  const productList = useSelector((state) => state.timesheet?.approvedProductList)\n  const taskList = useSelector((state) => state.timesheet?.taskList)\n  const myTimesheetDetails = useSelector((state) => state.dashboard?.myTimesheetDetails)\n  const sidebarShow = useSelector((state) => state.dashboard.sidebarShow)\n\n  useEffect(() => {\n    dispatch(getproductList())\n    dispatch(getTaskActivityList())\n    setLoading(false)\n    setLoadingActiveTask(false)\n    if (widgetLength > 2 && widgetTableData === title) {\n      heightRef.current = true\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {}, [disableContent])\n  const handleDateChange = (event) => {\n    const selectedDate = event\n    if (selectedDate === today) {\n      setRaiseButton(false)\n    }\n    if (activeTab === '1') {\n      dispatch(getMyTimesheetDetails(filter.current, selectedDate))\n    } else {\n      dispatch(getYesterdayCount(selectedDate))\n      checkCondition(yesterdayCount, selectedDate)\n    }\n    setSelectedDate(selectedDate)\n  }\n\n  const checkCondition = (resData, date) => {\n    const parsedDate = dayjs(date, 'DD MMM, YYYY')\n    const formattedDate = parsedDate.format('YYYY-MM-DD')\n    const { attendanceStatus, count, status } = resData\n\n    if (attendanceStatus === 'leave') {\n      setAttendance(attendanceStatus)\n    } else {\n      setAttendance('present')\n    }\n\n    if (formattedDate !== today && joiningDate !== today) {\n      if (attendanceStatus === 'leave') {\n        setDisableContent(true)\n        setRaiseButton(false)\n      } else if (status === 'Permission') {\n        setDisableContent(false)\n        setRaiseButton(false)\n      } else if (\n        count === 0 &&\n        status === 'Pending' &&\n        (attendanceStatus === 'present' || attendanceStatus === 'yet')\n      ) {\n        setDisableContent(true)\n        setRaiseButton(false)\n      } else if (\n        count === 0 &&\n        status === '' &&\n        (attendanceStatus === 'present' || attendanceStatus === 'yet')\n      ) {\n        setDisableContent(true)\n        setRaiseButton(true)\n      } else if (\n        count === 0 &&\n        status === 'Approved' &&\n        (attendanceStatus === 'present' || attendanceStatus === 'yet')\n      ) {\n        setDisableContent(false)\n        setRaiseButton(false)\n      } else if (status === 'Rejected') {\n        setDisableContent(true)\n        setRaiseButton(false)\n      } else if (count !== 0) {\n        setDisableContent(true)\n        setRaiseButton(false)\n        toast.error('Already Submitted the Timesheet', { position: toast.POSITION.BOTTOM_RIGHT })\n      }\n    } else {\n      setDisableContent(false)\n      setRaiseButton(false)\n    }\n  }\n\n  const handleApiResponse = (status, data, date) => {\n    if (status === 208) {\n      handleStatus208(data)\n    } else if (status === 201) {\n      handleStatus201(data, date)\n    }\n  }\n\n  const handleStatus208 = (data) => {\n    toast.error('You applied for this date', { position: toast.POSITION.BOTTOM_RIGHT })\n    setDisableContent(data.status === 'leave')\n    setAttendance(data.status)\n  }\n\n  const handleStatus201 = (data, date) => {\n    setAttendance(data.status)\n    toast.success('Successfully applied leave', { position: toast.POSITION.BOTTOM_RIGHT })\n    dispatch(getYesterdayCount(date))\n    checkCondition(yesterdayCount, date)\n  }\n\n  const renderDateCell = (current) => {\n    const month = parseInt(monthRef.current)\n    const year = parseInt(yearRef.current)\n    const currentDate = dayjs() // Current date\n\n    if (loading) {\n      return (\n        <div style={{ textAlign: 'center' }}>\n          <Skeleton\n            title={false}\n            paragraph={{\n              rows: 1,\n              width: '100%',\n              height: '10px',\n              style: { height: '10px !important' },\n            }}\n          />\n        </div>\n      )\n    }\n\n    const existDate = existingDates\n    if (!existDate) return null // Handle according to your use case\n\n    const isCurrentDate = (date) => current.isSame(date, 'day')\n    const formatDate = (date) => current.format('YYYY-MM-DD')\n\n    const getCommonStyles = (isSelected) => ({\n      backgroundColor: isSelected ? '#e40e2d' : 'transparent',\n      borderRadius: isSelected ? '50%' : '0%',\n      minWidth: isSelected ? '24px' : 'auto',\n      height: isSelected ? '24px' : 'auto',\n      display: isSelected ? 'inline-block' : 'initial',\n      lineHeight: isSelected ? '24px' : 'initial',\n    })\n\n    if (activeTab === '1') {\n      const submittedDates = existDate.SubmittedList || []\n      const isSubmitted = submittedDates.includes(formatDate(current))\n      const isSelected = isCurrentDate(selectedDate)\n\n      const styles = {\n        color: isSelected ? 'white' : isSubmitted ? 'green' : 'black',\n        fontWeight: isSelected ? 'normal' : isSubmitted ? 'bold' : 'normal',\n        ...getCommonStyles(isSelected),\n      }\n\n      return <div style={styles}>{current.date()}</div>\n    } else {\n      const {\n        RaisedRequestList = [],\n        AttendanceList = [],\n        SubmittedList = [],\n        Permission = [],\n      } = existDate\n\n      const isRaised = RaisedRequestList.includes(formatDate(current))\n      const isAttendance = AttendanceList.includes(formatDate(current))\n      const isSubmitted = SubmittedList.includes(formatDate(current))\n      const isPermission = Permission.includes(formatDate(current))\n      const isSelected = isCurrentDate(selectedDate)\n      const isTodayOrAfter = current.isAfter(currentDate, 'day')\n      const isJoiningDateOrBefore = current.isBefore(joiningDate, 'day')\n\n      const isDisabled =\n        isRaised || isAttendance || isSubmitted || isTodayOrAfter || isJoiningDateOrBefore\n\n      const styles = {\n        color: isDisabled ? 'gray' : isSelected ? 'white' : isPermission ? 'black' : '#ffaa00',\n        fontWeight: isDisabled ? 'normal' : isSelected || isPermission ? 'bold' : 'normal',\n        ...getCommonStyles(isSelected),\n      }\n\n      if (current.month() + 1 === month && current.year() === year) {\n        return <div style={styles}>{current.date()}</div>\n      } else {\n        return <div>{current.date()}</div>\n      }\n    }\n  }\n\n  const disabledDate = (current) => {\n    const existDate = existingDates\n    if (!existDate) return false\n\n    const formatDate = (date) => date.format('YYYY-MM-DD')\n    const currentDate = dayjs()\n\n    const checkDates = (datesArray) => datesArray.includes(formatDate(current))\n\n    if (activeTab === '1') {\n      const submittedDates = existDate.SubmittedList || []\n      return !checkDates(submittedDates)\n    } else {\n      const { RaisedRequestList = [], AttendanceList = [], SubmittedList = [] } = existDate\n\n      const isTodayOrAfter = current.isAfter(currentDate, 'day')\n      const isRaised = checkDates(RaisedRequestList)\n      const isAttendance = checkDates(AttendanceList)\n      const isSubmitted = checkDates(SubmittedList)\n      const isJoiningDateOrBefore = current.isBefore(joiningDate, 'day')\n\n      return isRaised || isAttendance || isSubmitted || isTodayOrAfter || isJoiningDateOrBefore\n    }\n  }\n\n  const handleDisableContent = (value) => {\n    setDisableContent(value)\n  }\n  // const barData = [\n  //   {\n  //     product: 'Trove Portal - Phase 1',\n  //     hours: '00:10',\n  //     task: 'Development',\n  //     description: 'Aggregation pipeline  top hashtag',\n  //   },\n  //   {\n  //     product: 'SwipeDetails',\n  //     hours: '04:00',\n  //     task: 'Testing',\n  //     description: 'Swipe details',\n  //   },\n  //   {\n  //     product: 'SwipeDetails',\n  //     hours: '07:00',\n  //     task: 'DB Designing',\n  //     description: 'Swipe details',\n  //   },\n  //   {\n  //     product: 'SwipeDetails',\n  //     hours: '01:00',\n  //     task: 'Team Discussion',\n  //     description: 'Swipe details',\n  //   },\n  //   {\n  //     product: 'SwipeDetails',\n  //     hours: '03:00',\n  //     task: 'IIY',\n  //     description: 'Swipe details',\n  //   },\n  //   {\n  //     product: 'SwipeDetails',\n  //     hours: '04:00',\n  //     task: 'Meeting',\n  //     description: 'Swipe details',\n  //   },\n  //   {\n  //     product: 'SwipeDetails',\n  //     hours: '04:00',\n  //     task: 'Team Coordination and Task Validation',\n  //     description: 'Swipe details',\n  //   },\n  // ]\n  const items = [\n    {\n      key: '1',\n      label: 'My Timesheet Bar Chart',\n      children: <MyTimesheetbarchart data={myTimesheetDetails} heightValue={heightRef.current} />,\n    },\n    {\n      key: '2',\n      label: 'Time Sheet Table',\n      children: (\n        <TimeSheetTable\n          productList={productList}\n          taskList={taskList}\n          loader={loading}\n          selectedDate={selectedDate}\n          loadingActiveTask={loadingActiveTask}\n          handleDisableContent={handleDisableContent}\n          disableContents={disableContent}\n          heightValue={heightRef.current}\n        />\n      ),\n    },\n  ]\n  const handlePanelChange = async (value, mode) => {\n    if (mode === 'date') {\n      setLoading(true)\n      const currentMonthYear = dayjs(value).format('YYYY-MM')\n      monthRef.current = dayjs(value).format('M')\n      yearRef.current = dayjs(selectedDate).format('YYYY')\n      dispatch(getExistsDates(currentMonthYear))\n      setLoading(false)\n    }\n  }\n\n  const options = productList.map((product) => ({\n    value: product.id,\n    label: product.name,\n  }))\n\n  useEffect(() => {\n    const currentMonthYear = dayjs(selectedDate).format('YYYY-MM')\n    monthRef.current = dayjs(selectedDate).format('M')\n    yearRef.current = dayjs(selectedDate).format('YYYY')\n    dispatch(getExistsDates(currentMonthYear))\n    setLoading(false)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    dispatch(getYesterdayCount(selectedDate))\n    dispatch(getMyTimesheetDetails(filter.current, selectedDate))\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch])\n\n  useEffect(() => {\n    if (yesterdayCount) {\n      checkCondition(yesterdayCount, selectedDate)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [yesterdayCount])\n  const handleProduct = (value) => {\n    if (value === undefined) {\n      filter.current = 0\n    } else {\n      filter.current = value\n    }\n    dispatch(getMyTimesheetDetails(filter.current, selectedDate))\n  }\n\n  //leave\n  const closeModalView = () => {\n    setVisibleView(false)\n    setDisableContent(false)\n    setAttendance('present')\n  }\n  const handleAttendance = (event) => {\n    const selectedValue = event\n    setAttendance(selectedValue)\n    if (selectedValue === 'leave') {\n      setVisibleView(true)\n    } else if (selectedValue === 'present') {\n      setDisableContent(false)\n      handleAttendanceSheet(dateWise, 'present')\n    } else {\n      setVisibleView(false)\n    }\n  }\n  const handleConfirm = (date, status) => {\n    setDisableContent(true)\n    handleAttendanceSheet(date, status)\n  }\n  const handleAttendanceSheet = async (date, status) => {\n    dispatch(createAttendanceSheet(date, status))\n      .then((response) => {\n        const data = response.data.data\n        handleApiResponse(response.status, data, date)\n        setVisibleView(false)\n      })\n      .catch((error) => {})\n  }\n  const handleRaiseCloseModal = () => {\n    setRaiseModal(false)\n    dispatch(getYesterdayCount(dateWise))\n    checkCondition(yesterdayCount, dateWise)\n  }\n  return (\n    <div>\n      <CCard\n        style={{\n          height: widgetLength > 2 && widgetTableData === title ? '270px' : '440px',\n          border: 'none',\n          marginBottom: '10px',\n          padding: '15px',\n          paddingTop: '24px',\n          paddingLeft: '18px',\n        }}\n      >\n        <CRow>\n          <CCol\n            xs={6}\n            sm={sidebarShow === true ? 6 : 6}\n            md={sidebarShow === true ? 6 : 4}\n            lg={sidebarShow === true ? 7 : 3}\n            style={{ display: 'flex', alignItems: 'center' }}\n          >\n            <div>\n              <Typography\n                style={{\n                  fontSize: '14px',\n                  color: '#161C24',\n                  fontWeight: '600',\n                }}\n                className=\"dB_timesheet_lable\"\n              >\n                {title}\n              </Typography>\n            </div>\n          </CCol>\n          <CCol\n            xs={6}\n            md={sidebarShow === true ? 6 : 6}\n            lg={sidebarShow === true ? 5 : 2}\n            style={{ paddingRight: '0px' }}\n          >\n            <div style={{ width: '95%', marginRight: '10px' }}>\n              <Select\n                className=\"bordered \"\n                style={{\n                  width: '100%',\n                  border: '0.5px solid #F3F3F3',\n                  padding: '10px',\n                  backgroundColor: '#FBFBFB',\n                  borderRadius: '5px',\n                  height: '33px',\n                }}\n                disabled={activeTab === '2' || sidebarShow === true}\n                variant=\"outlined\"\n                suffixIcon={\n                  <img\n                    src={Downarrowimg}\n                    alt=\"Downarrowimg\"\n                    style={{ width: '10px', height: '6px', marginRight: '4px' }}\n                  />\n                }\n                dropdownStyle={{\n                  border: '#ffff',\n                  width: '100%',\n                }}\n                id=\"products\"\n                value={options.find((option) => option.value === filter.current) || undefined}\n                onChange={(value) => handleProduct(value)}\n                showSearch={true}\n                allowClear={true}\n                filterOption={(input, option) =>\n                  option.label.toLowerCase().includes(input.toLowerCase())\n                }\n                options={\n                  loading\n                    ? [\n                        {\n                          label: (\n                            <div style={{ textAlign: 'center' }}>\n                              {Array.from({ length: 5 }, (_, index) => (\n                                <Skeleton\n                                  key={index}\n                                  title={false}\n                                  paragraph={{\n                                    rows: 1,\n                                    width: '100%',\n                                    height: '10px',\n                                    style: { height: '10px !important' },\n                                  }}\n                                />\n                              ))}\n                            </div>\n                          ),\n                          value: 'loading',\n                          disabled: true,\n                        },\n                      ]\n                    : options\n                }\n                // ref={selectRef}\n                placeholder=\"Product Filter\"\n                getPopupContainer={(triggerNode) => triggerNode.parentNode}\n              />\n            </div>\n          </CCol>\n          <CCol\n            xs={6}\n            // sm={raiseButton && activeTab === '2' ? 6 : 6}\n            md={raiseButton && activeTab === '2' ? 6 : 6}\n            lg={sidebarShow ? (raiseButton && activeTab === '2' ? 4 : 6) : 4}\n            style={{ paddingRight: '0px', paddingLeft: '0px' }}\n          >\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n              <div\n                style={{\n                  display: 'flex',\n                  border: '1px solid rgb(221 221 221)',\n                  borderRadius: '5px',\n                  width: '90%',\n                  alignItems: 'center',\n                  height: '33px',\n                }}\n              >\n                <DatePicker\n                  variant={'borderless'}\n                  id=\"date\"\n                  type=\"date\"\n                  name=\"fieldName\"\n                  size=\"small\"\n                  placeholder=\"Choose Date\"\n                  className=\"form-input-draft input-lg date-picker  time-pend-cal date-header date-size\"\n                  onChange={(date, dateString) => handleDateChange(date)}\n                  suffixIcon={\n                    <img\n                      src={Calendarimg}\n                      alt=\"Calendarimg\"\n                      style={{ width: '13px', height: '13px' }}\n                    />\n                  }\n                  format=\"DD MMM, YYYY\"\n                  defaultValue={dayjs()}\n                  max={today}\n                  allowClear={false}\n                  min={joiningDate}\n                  onPanelChange={handlePanelChange}\n                  cellRender={renderDateCell}\n                  disabledDate={disabledDate}\n                  disabled={sidebarShow === true}\n                />\n                <Select\n                  className={`form-input-draft input-lg times-pen-select ${\n                    attendance === 'present' ? 'present-color' : 'leave-color'\n                  }`}\n                  style={{ marginLeft: '-33px' }}\n                  suffixIcon={\n                    <img\n                      src={Downarrowimg}\n                      alt=\"Downarrow\"\n                      style={{ width: '10px', height: '5px', marginRight: '6px' }}\n                    />\n                  }\n                  value={attendance}\n                  dropdownStyle={{\n                    border: '#ffff',\n                    width: '10%',\n                  }}\n                  onChange={(value) => handleAttendance(value)}\n                  disabled={sidebarShow === true}\n                >\n                  <Select.Option value=\"present\" style={{ color: '#00ab55', fontWeight: '600' }}>\n                    Present\n                  </Select.Option>\n                  <Select.Option value=\"leave\" style={{ color: '#e40e2d', fontWeight: '600' }}>\n                    Leave\n                  </Select.Option>\n                </Select>\n              </div>\n            </div>\n          </CCol>\n          <CCol\n            xs={6}\n            md={sidebarShow ? (raiseButton && activeTab === '2' ? 4 : 6) : 6}\n            lg={sidebarShow ? (raiseButton && activeTab === '2' ? 4 : 6) : 3}\n            // lg={raiseButton && activeTab === '2' ? 3 : 2}\n          >\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'end',\n                marginTop: '2px',\n                marginLeft: raiseButton ? '' : '5px',\n              }}\n            >\n              {raiseButton && activeTab === '2' && (\n                <Button\n                  className=\"raise-timesheet mx-2 \"\n                  type=\"button\"\n                  style={{\n                    color: 'white',\n                    height: '28px',\n                    marginTop: '1px',\n                    width: '34px',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                  }}\n                  onClick={() => setRaiseModal(true)}\n                >\n                  <FileAddFilled />\n                </Button>\n              )}\n              <button\n                className={`tab ${activeTab === '1' ? 'DGroup_icon' : 'DGroup_img'}`}\n                onClick={() => toggleTab('1')}\n                disabled={sidebarShow === true}\n              >\n                {activeTab === '1' ? (\n                  <BarChartSVG\n                    width=\"15\"\n                    height=\"15\"\n                    viewBox=\"0 0 18 18\"\n                    fill=\"#FF2D2D\"\n                    stopColor=\"#FF2D2D\"\n                  />\n                ) : (\n                  <BarChartSVG\n                    width=\"16\"\n                    height=\"15\"\n                    viewBox=\"0 0 18 18\"\n                    fill=\"#AAAAAA\"\n                    stopColor=\"#AAAAAA\"\n                  />\n                )}\n              </button>\n\n              <button\n                className={`tab ${activeTab === '2' ? 'DChart_img' : 'DChart_icon'}`}\n                onClick={() => toggleTab('2')}\n                disabled={sidebarShow === true}\n              >\n                {activeTab === '2' ? (\n                  <NextArrowSVG\n                    fill=\"#FF2D2D\"\n                    viewBox=\"0 0 16 10\"\n                    width=\"16\"\n                    height=\"19\"\n                    stopColor=\"#FF2D2D\"\n                  />\n                ) : (\n                  <NextArrowSVG\n                    fill=\"#AAAAAA\"\n                    viewBox=\"0 0 16 10\"\n                    width=\"16\"\n                    height=\"19\"\n                    stopColor=\"#AAAAAA\"\n                  />\n                )}\n              </button>\n            </div>\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol className=\"Dashboard_Tab mt-3\" style={{ padding: activeTab === '2' ? '0px' : '' }}>\n            <Tabs activeKey={activeTab} onChange={toggleTab} items={items} />\n          </CCol>\n        </CRow>\n      </CCard>\n      {visibleView && (\n        <CModal\n          size=\"sm\"\n          backdrop=\"static\"\n          alignment=\"center\"\n          visible={visibleView}\n          onClose={closeModalView}\n          className={`right ${visibleView ? 'modal-visible' : 'modal-hidden'}`}\n        >\n          <CModalBody style={{ fontSize: '15px' }}>\n            Are you sure you want to leave on <b>{dateWise.format('DD MMM YYYY')}</b> ?{' '}\n          </CModalBody>\n          <CModalFooter style={{ border: 'none' }}>\n            <CButton className=\"edit-cancel-btn\" onClick={closeModalView}>\n              Cancel\n            </CButton>\n            <CButton\n              color=\"primary  button-clr\"\n              style={{ fontSize: '15px', fontWeight: '500' }}\n              onClick={() => handleConfirm(dateWise, 'leave')}\n            >\n              Confirm\n            </CButton>\n          </CModalFooter>\n        </CModal>\n      )}\n      {raiseModal && (\n        <RaiseRequestModal\n          isOpen={raiseModal}\n          closeModal={() => handleRaiseCloseModal()}\n          dateWise={selectedDate.format('YYYY-MM-DD')}\n        />\n      )}\n    </div>\n  )\n}\n\nDashboardTimesheet.propTypes = {\n  title: PropTypes.string.isRequired,\n  widgetLength: PropTypes.number.isRequired,\n  widgetTableData: PropTypes.array.isRequired,\n}\n\nexport default DashboardTimesheet\n","import React, { useState, useEffect, useRef, useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport { Table } from 'antd'\nimport { getSubmittedActivity } from 'src/redux/timesheet/action'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { CSpinner } from '@coreui/react'\nimport debounce from 'lodash.debounce'\nimport redirectImg from '../../../assets/images/share.png'\nimport { useNavigate } from 'react-router-dom'\nimport { formatDate, formatTimeDuration } from 'src/TimeUtils'\n\nconst SubmittedActivityTable = ({ selectedDate, heightValue }) => {\n  const dispatch = useDispatch()\n  const [data, setData] = useState([])\n  const pageRef = useRef(0)\n  const sizeRef = useRef(5)\n  const dateRef = useRef(selectedDate)\n  const filterRef = useRef(false)\n  const hasMoreRef = useRef(true)\n  const [commonLoader, setCommonLoader] = useState(true)\n  const tableBodyRef = useRef(null)\n  const navigate = useNavigate()\n  const submittedList = useSelector((state) => state.timesheet?.submittedTimesheetList)\n  const [isNorMore, setIsNorMore] = useState(false)\n\n  const addSerialNumbers = (data) => {\n    const startIndex = pageRef.current * sizeRef.current // Calculate the start index based on the page number\n    return data.map((item, index) => ({\n      ...item,\n      sno: startIndex + index + 1, // Generating serial number with the correct offset\n    }))\n  }\n\n  const truncateString = (str, num) => {\n    if (str.length <= num) {\n      return str\n    }\n    return str.slice(0, num) + '...'\n  }\n\n  const handleEdit = (id) => {\n    navigate(`/timesheet?tab=3&id=${id}`)\n  }\n\n  // submitActivity\n  const columns = [\n    {\n      title: 'S.No',\n      dataIndex: 'index',\n      key: 'index',\n      width: 16,\n      fixed: 'left',\n      align: 'center',\n      render: (text, record, index) => {\n        if (record.key === 'noMoreData') {\n          return {\n            children: null,\n            props: {\n              colSpan: 0, // Adjust this number based on the total number of columns to span\n            },\n          }\n        }\n        return index + 1\n      },\n    },\n    {\n      title: 'Product',\n      dataIndex: 'productName',\n      key: 'productName',\n      fixed: 'left',\n      width: 40,\n      render: (text, row) => {\n        if (row.key === 'noMoreData') {\n          return {\n            children: null,\n            props: {\n              colSpan: 0, // Adjust this number based on the total number of columns to span\n            },\n          }\n        }\n        return (\n          <span className=\"\" title={row.productName}>\n            {row.assignedStatus === true && (\n              <span style={{ fontSize: '16px', color: '#00ab55' }}>&#8226;</span>\n            )}\n            {row.assignedStatus === false && (\n              <span style={{ fontSize: '16px', color: '#ffaa00' }}>&#8226;</span>\n            )}\n            <span style={{ marginLeft: '5px' }}>{truncateString(row.productName, 11)}</span>\n          </span>\n        )\n      },\n    },\n    {\n      title: 'Task',\n      dataIndex: 'taskName',\n      key: 'taskName',\n      width: 30,\n      render: (text, row) => {\n        if (row.key === 'noMoreData') {\n          setIsNorMore(true)\n          return {\n            children: (\n              <div style={{ textAlign: 'center' }}>\n                <b style={{ color: '#e40e2d', fontSize: '12px' }}>No more Data to load</b>\n              </div>\n            ),\n            props: {\n              colSpan: 9, // Adjust this number based on the total number of columns to span\n            },\n          }\n        }\n        return truncateString(text, 8)\n      },\n    },\n    {\n      title: 'Activity Date',\n      dataIndex: 'activity_date',\n      key: 'activity_date',\n      width: 30,\n      render: (text, record, index) => {\n        if (record.key === 'noMoreData') {\n          return {\n            children: null,\n            props: {\n              colSpan: 0, // Adjust this number based on the total number of columns to span\n            },\n          }\n        }\n        return formatDate(text)\n      },\n    },\n    {\n      title: 'Hours',\n      dataIndex: 'hours',\n      key: 'hours',\n      width: 25,\n      render: (text, record, index) => {\n        if (record.key === 'noMoreData') {\n          return {\n            children: null,\n            props: {\n              colSpan: 0, // Adjust this number based on the total number of columns to span\n            },\n          }\n        }\n        return formatTimeDuration(record.hours)\n      },\n    },\n    {\n      title: 'Approver Status',\n      dataIndex: 'approvedStatus',\n      key: 'approvedStatus',\n      width: 35,\n      render: (text, row) => {\n        if (row.key === 'noMoreData') {\n          return {\n            children: null,\n            props: {\n              colSpan: 0, // Adjust this number based on the total number of columns to span\n            },\n          }\n        }\n        let className = ''\n        if (text === 'Approved') {\n          className = 'font-green'\n        } else if (text === 'Reject' || text === 'Rejected') {\n          className = 'font-red'\n        } else if (text === 'Pending') {\n          className = 'font-warning'\n        } else if (text === 'Resubmit') {\n          className = 'font-info'\n        }\n        return (\n          <div className={`dashboard-table-font ${className}`}>\n            <span style={{ fontSize: '16px' }}>&#8226;</span>{' '}\n            {text === 'Reject' ? 'Rejected' : text}\n          </div>\n        )\n      },\n    },\n    {\n      title: 'Final Status',\n      dataIndex: 'finalApproveStatus',\n      key: 'finalApproveStatus',\n      width: 33,\n      render: (text, row) => {\n        if (row.key === 'noMoreData') {\n          return {\n            children: null,\n            props: {\n              colSpan: 0, // Adjust this number based on the total number of columns to span\n            },\n          }\n        }\n        let className = ''\n        if (text === 'Approved') {\n          className = 'font-green'\n        } else if (text === 'Reject' || text === 'Rejected') {\n          className = 'font-red'\n        } else if (text === 'Pending') {\n          className = 'font-warning'\n        } else if (text === 'Resubmit') {\n          className = 'font-info'\n        }\n        return (\n          <div className={`dashboard-table-font ${className}`}>\n            <span style={{ fontSize: '16px' }}>&#8226;</span>{' '}\n            {text === 'Reject' ? 'Rejected' : text}\n          </div>\n        )\n      },\n    },\n    {\n      title: 'Remarks',\n      width: 60,\n      dataIndex: 'description',\n      key: 'description',\n      render: (text, record, index) => {\n        if (record.key === 'noMoreData') {\n          return {\n            children: null,\n            props: {\n              colSpan: 0, // Adjust this number based on the total number of columns to span\n            },\n          }\n        }\n        return <div title={text}> {truncateString(text, 30)}</div>\n      },\n    },\n    {\n      title: 'Action',\n      width: 18,\n      dataIndex: 'action',\n      fixed: 'right',\n      render: (text, row) => {\n        if (row.key === 'noMoreData') {\n          return {\n            children: null,\n            props: {\n              colSpan: 0, // Adjust this number based on the total number of columns to span\n            },\n          }\n        }\n        let action\n        if (\n          row.approvedStatus === 'Reject' ||\n          row.finalApproveStatus === 'Reject' ||\n          row.ownerStatus === 'Reject'\n        ) {\n          action = (\n            <button\n              type=\"button\"\n              className=\"action-view edit-button\"\n              style={{ padding: '4px 8px' }}\n              onClick={() => handleEdit(row.id)}\n            >\n              <img src={redirectImg} alt=\"share\" style={{ width: '17px' }} />\n            </button>\n          )\n        } else {\n          action = '--'\n        }\n        return action\n      },\n    },\n  ]\n\n  useEffect(() => {\n    if (submittedList && submittedList.length >= 0) {\n      const dataWithSerialNumbers = addSerialNumbers(submittedList)\n      if (dataWithSerialNumbers.length < sizeRef.current) {\n        hasMoreRef.current = false\n      }\n      setData((prevData) => [...prevData, ...dataWithSerialNumbers])\n      pageRef.current += 1\n    }\n    setCommonLoader(false)\n  }, [submittedList])\n\n  const displayData = [\n    ...data.map((row, index) => ({\n      key: row.id,\n      id: row.id,\n      index: index + 1,\n      activity_date: row.activity_date,\n      productName: row.productName,\n      taskName: row.taskName,\n      hours: row.hours,\n      description: row.description,\n      finalApproveStatus: row.finalApproveStatus,\n      approvedStatus: row.approvedStatus,\n      ownerStatus: row.ownerStatus,\n      assignedStatus: row.assignedStatus,\n    })),\n  ]\n\n  // Append the \"No more Data to load\" message as the last row if noMoreData is true\n  if (!hasMoreRef.current && displayData.length !== 0 && displayData.length > 5) {\n    displayData.push({\n      key: 'noMoreData',\n      index: '',\n      productName: 'No more Data to load',\n      taskName: '',\n      hours: '',\n      description: '',\n      action: '',\n      finalApproveStatus: '',\n      approvedStatus: '',\n      ownerStatus: '',\n      assignedStatus: '',\n    })\n  }\n\n  const fetchMoreData = () => {\n    if (hasMoreRef.current) {\n      dispatch(\n        getSubmittedActivity(pageRef.current, sizeRef.current, filterRef.current, dateRef.current),\n      )\n    }\n  }\n\n  useEffect(() => {\n    setCommonLoader(true)\n    dateRef.current = selectedDate\n    pageRef.current = 0\n    filterRef.current = !!selectedDate\n    setData([])\n    hasMoreRef.current = true\n    dispatch(\n      getSubmittedActivity(pageRef.current, sizeRef.current, filterRef.current, dateRef.current),\n    )\n  }, [selectedDate, dispatch])\n\n  const handleScroll = useCallback(\n    debounce(() => {\n      if (!tableBodyRef.current) return\n\n      const { scrollTop, scrollHeight, clientHeight } = tableBodyRef.current\n      if (scrollTop + clientHeight >= scrollHeight - 10 && hasMoreRef.current) {\n        setCommonLoader(true)\n        fetchMoreData()\n      }\n    }, 100),\n    [],\n  )\n\n  useEffect(() => {\n    const tableBody = document.querySelector('.submit_table .ant-table-body')\n    if (tableBody) {\n      tableBodyRef.current = tableBody\n      tableBody.addEventListener('scroll', handleScroll)\n    }\n\n    return () => {\n      if (tableBody) {\n        tableBody.removeEventListener('scroll', handleScroll)\n      }\n    }\n  }, [handleScroll])\n\n  return (\n    <div\n      className=\"db_table submit_table\"\n      style={{ height: heightValue ? '204px' : '349px', overflowY: 'auto' }}\n    >\n      <style>{`\n        .ant-table-body {\n          scrollbar-width: thin;\n        }\n        .db_table .ant-table-wrapper .ant-table-thead > tr > th {\n          color: #313131 !important;\n          font-size: 12px !important;\n          padding: 12px !important;\n        }\n        .db_table .ant-table-cell {\n          font-size: 12px !important;\n          color: #A5A3A4 !important;\n          font-weight: 600;\n        }\n      `}</style>\n      <Table\n        columns={columns}\n        dataSource={displayData}\n        className={`${isNorMore ? 'last-row-table' : ''} db_table_content custom-table`}\n        scroll={{ x: 1300, y: 290 }}\n        pagination={false}\n        loading={{\n          spinning: commonLoader,\n          indicator: <CSpinner color=\"danger\" />,\n        }}\n      />\n    </div>\n  )\n}\nSubmittedActivityTable.propTypes = {\n  selectedDate: PropTypes.any,\n  heightValue: PropTypes.bool,\n}\nexport default SubmittedActivityTable\n","import { CCard, CCol, CRow } from '@coreui/react'\nimport { Typography, DatePicker, Skeleton } from 'antd'\nimport { React, useRef, useState, useEffect } from 'react'\nimport Calendarimg from '../../../assets/images/calendar-image.png'\nimport dayjs from 'dayjs'\nimport { getToday } from 'src/TimeUtils'\nimport { useDispatch, useSelector } from 'react-redux'\nimport SubmittedActivityTable from './SubmittedActivityTable'\nimport { getExistsDates } from 'src/redux/timesheet/action'\nimport PropTypes from 'prop-types'\nimport NextArrowSVG from '../DashboardSVG/NextArrowSVG'\nimport { Link } from 'react-router-dom'\n\nfunction SubmitedActivity({ widgetLength, widgetTableData, title }) {\n  const dispatch = useDispatch()\n  const today = getToday()\n  const dateRef = useRef()\n  const pageRef = useRef(0)\n  const filterRef = useRef(false)\n  const [dateWise, setDateWise] = useState(dayjs())\n  const [loading, setLoading] = useState(true)\n  const existingDates = useSelector((state) => state.timesheet.existingDates)\n  const sidebarShow = useSelector((state) => state.dashboard.sidebarShow)\n  const heightRef = useRef(false)\n\n  const handleDateChange = (date, dateString) => {\n    if (date !== null) {\n      const parsedDate = dayjs(date, 'DD MMM, YYYY')\n      const formattedDate = parsedDate.format('YYYY-MM-DD')\n      dateRef.current = formattedDate\n      filterRef.current = true\n    } else {\n      dateRef.current = null\n      filterRef.current = false\n    }\n    setDateWise(date)\n    pageRef.current = 0\n  }\n\n  useEffect(() => {\n    if (widgetLength > 2 && widgetTableData === title) {\n      heightRef.current = true\n    }\n    setLoading(false)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const handlePanelChange = async (value, mode) => {\n    if (mode === 'date') {\n      setLoading(true)\n      const currentMonthYear = dayjs(value).format('YYYY-MM')\n      dispatch(getExistsDates(currentMonthYear))\n      setLoading(false)\n    }\n  }\n\n  const renderDateCell = (current) => {\n    if (loading) {\n      return (\n        <div style={{ textAlign: 'center' }}>\n          {Array.from({ length: 1 }, (_, index) => (\n            <Skeleton\n              key={index}\n              title={false}\n              paragraph={{\n                rows: 1,\n                width: '100%',\n                height: '10px',\n                style: { height: '10px !important' },\n              }}\n            />\n          ))}\n        </div>\n      )\n    }\n    const existDate = existingDates\n    if (!existDate) {\n      return null // Or handle it according to your use case\n    }\n\n    const submittedDates = existDate.SubmittedList || []\n\n    const isSubmitted = submittedDates.includes(current.format('YYYY-MM-DD'))\n    const isSelected = current.isSame(dateWise, 'day')\n\n    const color = isSelected ? 'white' : isSubmitted ? 'green' : 'black'\n    const fontWeight = isSelected ? 'normal' : isSubmitted ? 'bold' : 'normal'\n\n    const backgroundColor = isSelected ? '#e40e2d' : 'transparent'\n    const borderRadius = isSelected ? '50%' : '0%'\n    const minWidth = isSelected ? '24px' : 'auto'\n    const height = isSelected ? '24px' : 'auto'\n    const display = isSelected ? 'inline-block' : 'initial'\n    const lineHeight = isSelected ? '24px' : 'initial'\n    return (\n      <div\n        style={{\n          color,\n          fontWeight,\n          backgroundColor,\n          borderRadius,\n          minWidth,\n          height,\n          display,\n          lineHeight,\n        }}\n      >\n        {current.date()}\n      </div>\n    )\n  }\n\n  const disabledDate = (current) => {\n    const existDate = existingDates\n    if (!existDate) {\n      return true // Or handle it according to your use case\n    }\n\n    const submittedDates = existDate.SubmittedList || []\n\n    const isSubmitted = submittedDates.includes(current.format('YYYY-MM-DD'))\n\n    return !isSubmitted\n  }\n\n  return (\n    <div>\n      {' '}\n      <CCard\n        style={{\n          height: widgetLength > 2 && widgetTableData === title ? '270px' : '440px',\n          border: 'none',\n          marginBottom: '10px',\n        }}\n      >\n        <div\n          style={{\n            padding: '10px 30px 0px',\n          }}\n        >\n          <CRow>\n            <CCol xs={7} sm={12} md={7} style={{ display: 'flex', alignItems: 'end' }}>\n              <div>\n                <Typography\n                  style={{\n                    fontSize: '13px',\n                    color: '#161C24',\n                    fontWeight: '600',\n                    paddingLeft: '5px',\n                  }}\n                  className=\"DB_ts_lable\"\n                >\n                  Submitted Activity\n                </Typography>\n              </div>\n            </CCol>\n            <CCol xs={4} sm={6} md={4} style={{ paddingRight: '0px' }}>\n              <DatePicker\n                variant={'borderless'}\n                id=\"date\"\n                type=\"date\"\n                name=\"fieldName\"\n                placeholder=\"Choose Date\"\n                style={{\n                  overflow: 'hidden',\n                  color: '#000000',\n                  width: '90%',\n                  textOverflow: 'ellipsis',\n                  fontSize: '13px',\n                  fontStyle: 'normal',\n                  fontWeight: 500,\n                  border: '1px solid #F1F1F1',\n                }}\n                // className=\"form-input-draft input-lg date-picker activity-date\"\n                onChange={handleDateChange}\n                suffixIcon={\n                  <img\n                    src={Calendarimg}\n                    alt=\"Calendarimg\"\n                    style={{ width: '13px', height: '13px' }}\n                  />\n                }\n                format=\"DD MMM, YYYY\"\n                // defaultValue={dayjs()}\n                max={today}\n                active\n                allowClear={false}\n                // min={joiningDate}\n                onPanelChange={handlePanelChange}\n                cellRender={renderDateCell}\n                disabledDate={disabledDate}\n                disabled={sidebarShow === true}\n              />\n            </CCol>\n            <CCol xs={1} sm={6} md={1} style={{ paddingLeft: '0px' }}>\n              <div className=\"DArrow_icon\">\n                <Link\n                  className={` ${sidebarShow === true ? 'disabled-content' : ''}`}\n                  to=\"/timesheet?tab=3\"\n                >\n                  <NextArrowSVG\n                    fill=\"#AAAAAA\"\n                    viewBox=\"0 0 16 10\"\n                    width=\"15\"\n                    height=\"9\"\n                    stopColor=\"none\"\n                  />\n                </Link>\n              </div>\n            </CCol>\n          </CRow>\n        </div>\n\n        <CRow>\n          <CCol style={{ marginTop: '20px' }}>\n            <SubmittedActivityTable\n              selectedDate={dateRef.current}\n              heightValue={heightRef.current}\n            />\n          </CCol>\n        </CRow>\n      </CCard>\n    </div>\n  )\n}\nSubmitedActivity.propTypes = {\n  widgetLength: PropTypes.number.isRequired,\n  widgetTableData: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n}\nexport default SubmitedActivity\n","import React, { useState, useEffect, useRef, useCallback } from 'react'\nimport { Table } from 'antd'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getRaisedRequest } from 'src/redux/timesheet/action'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport { CSpinner } from '@coreui/react'\nimport PropTypes from 'prop-types'\nimport debounce from 'lodash.debounce'\nimport { formatDate } from 'src/TimeUtils'\n\nconst RaisedRequestTable = ({ selectedStatus, filterType, selectedDate, heightValue }) => {\n  const dispatch = useDispatch()\n  const pageRef = useRef(0)\n  const sizeRef = useRef(5)\n  const hasMoreRef = useRef(true)\n  const dateRef = useRef(selectedDate)\n  const statusRef = useRef(selectedStatus)\n  const filterRef = useRef(filterType)\n  const [data, setData] = useState([])\n  const [commonLoader, setCommonLoader] = useState(true)\n  const raisedRequestData = useSelector((state) => state.timesheet?.raisedRequestList)\n  const tableBodyRef = useRef(null)\n  const [isNorMore, setIsNorMore] = useState(false)\n\n  const addSerialNumbers = (data) => {\n    const startIndex = pageRef.current * sizeRef.current // Calculate the start index based on the page number\n    return data.map((item, index) => ({\n      ...item,\n      sno: startIndex + index + 1, // Generating serial number with the correct offset\n    }))\n  }\n\n  const truncateString = (str, num) => {\n    if (str.length <= num) {\n      return str\n    }\n    return str.slice(0, num) + '...'\n  }\n\n  const columns = [\n    {\n      title: 'S.No',\n      dataIndex: 'index',\n      key: 'index',\n      width: 2,\n      fixed: 'left',\n      align: 'center',\n      render: (text, record, index) => {\n        if (record.key === 'noMoreData') {\n          return {\n            children: null,\n            props: {\n              colSpan: 0, // Adjust this number based on the total number of columns to span\n            },\n          }\n        }\n        return index + 1\n      },\n    },\n    {\n      title: 'Request Date',\n      dataIndex: 'requestDate',\n      key: 'requestDate',\n      width: 5,\n      fixed: 'left',\n      render: (text, record, index) => {\n        if (record.key === 'noMoreData') {\n          return {\n            children: null,\n            props: {\n              colSpan: 0, // Adjust this number based on the total number of columns to span\n            },\n          }\n        }\n        return formatDate(text)\n      },\n    },\n    {\n      title: 'Team member',\n      dataIndex: 'teamName',\n      key: 'teamName',\n      width: 8,\n      render: (text, row) => {\n        if (row.key === 'noMoreData') {\n          setIsNorMore(true)\n          return {\n            children: (\n              <div style={{ textAlign: 'center' }}>\n                <b style={{ color: '#e40e2d', fontSize: '12px' }}>No more Data to load</b>\n              </div>\n            ),\n            props: {\n              colSpan: 6, // Adjust this number based on the total number of columns to span\n            },\n          }\n        }\n        return truncateString(text, 13)\n      },\n    },\n    {\n      title: 'Reason',\n      dataIndex: 'reason',\n      key: 'reason',\n      width: 15,\n      render: (text, row) => {\n        if (row.key === 'noMoreData') {\n          return {\n            children: null,\n            props: {\n              colSpan: 0, // Adjust this number based on the total number of columns to span\n            },\n          }\n        }\n        return truncateString(text, 20)\n      },\n    },\n    {\n      title: 'Approver Status',\n      dataIndex: 'status',\n      key: 'status',\n      width: 5,\n      render: (text, row) => {\n        if (row.key === 'noMoreData') {\n          return {\n            children: null,\n            props: {\n              colSpan: 0, // Adjust this number based on the total number of columns to span\n            },\n          }\n        }\n        let className = ''\n        if (text === 'Approved') {\n          className = 'font-green'\n        } else if (text === 'Reject' || text === 'Rejected') {\n          className = 'font-red'\n        } else if (text === 'Pending') {\n          className = 'font-warning'\n        } else if (text === 'Resubmit') {\n          className = 'font-info'\n        }\n        return (\n          <div className={`dashboard-table-font ${className}`}>\n            <span style={{ fontSize: '16px' }}>&#8226;</span>{' '}\n            {text === 'Reject' ? 'Rejected' : text}\n          </div>\n        )\n      },\n    },\n    {\n      title: 'Approver Remarks',\n      dataIndex: 'remarks',\n      key: 'remarks',\n      width: 9,\n      color: '#313131',\n      render: (text, record, index) => {\n        if (record.key === 'noMoreData') {\n          return {\n            children: null,\n            props: {\n              colSpan: 0, // Adjust this number based on the total number of columns to span\n            },\n          }\n        }\n        return <div title={text}> {text ? truncateString(text, 30) : '---'}</div>\n      },\n    },\n  ]\n\n  useEffect(() => {\n    console.log(raisedRequestData.length, 'length')\n    if (raisedRequestData && raisedRequestData.length >= 0) {\n      console.log(12345)\n      const dataWithSerialNumbers = addSerialNumbers(raisedRequestData)\n      if (dataWithSerialNumbers.length < sizeRef.current) {\n        hasMoreRef.current = false\n      }\n      setData((prevData) => [...prevData, ...dataWithSerialNumbers])\n      pageRef.current += 1\n    }\n    setCommonLoader(false)\n  }, [raisedRequestData])\n\n  const displayData = [\n    ...data.map((row, index) => ({\n      key: row.id,\n      id: row.id,\n      index: index + 1,\n      requestDate: row.requestDate,\n      teamName: row.teamName,\n      reason: row.reason,\n      status: row.status,\n    })),\n  ]\n\n  // Append the \"No more Data to load\" message as the last row if noMoreData is true\n  if (!hasMoreRef.current && displayData.length !== 0 && displayData.length > 5) {\n    displayData.push({\n      key: 'noMoreData',\n      index: '',\n      requestDate: '',\n      teamName: 'No more Data to load',\n      reason: '',\n      status: '',\n    })\n  }\n\n  const fetchMoreData = () => {\n    console.log(hasMoreRef.current, 'hasMoreRef.current')\n    if (hasMoreRef.current) {\n      dispatch(\n        getRaisedRequest(\n          pageRef.current,\n          sizeRef.current,\n          filterRef.current,\n          dateRef.current,\n          statusRef.current,\n        ),\n      )\n    }\n  }\n\n  useEffect(() => {\n    setCommonLoader(true)\n    statusRef.current = selectedStatus\n    filterRef.current = filterType\n    dateRef.current = selectedDate\n    pageRef.current = 0 // Reset pagination\n    setData([]) // Clear current data\n    hasMoreRef.current = true\n    dispatch(\n      getRaisedRequest(\n        pageRef.current,\n        sizeRef.current,\n        filterRef.current,\n        dateRef.current,\n        statusRef.current,\n      ),\n    )\n  }, [selectedStatus, filterType, selectedDate, dispatch])\n\n  const handleScroll = useCallback(\n    debounce(() => {\n      if (!tableBodyRef.current) return\n\n      const { scrollTop, scrollHeight, clientHeight } = tableBodyRef.current\n      if (scrollTop + clientHeight >= scrollHeight - 10) {\n        if (hasMoreRef.current && !commonLoader) {\n          setCommonLoader(true)\n          fetchMoreData()\n        }\n      }\n    }, 100),\n    [hasMoreRef.current, commonLoader],\n  )\n\n  useEffect(() => {\n    const tableBody = document.querySelector('.raise-table .ant-table-body')\n    if (tableBody) {\n      tableBodyRef.current = tableBody\n      tableBody.addEventListener('scroll', handleScroll)\n    }\n\n    return () => {\n      if (tableBody) {\n        tableBody.removeEventListener('scroll', handleScroll)\n      }\n    }\n  }, [handleScroll])\n\n  return (\n    <div\n      className=\"db_table raise-table\"\n      style={{ height: heightValue ? '150px' : '349px', overflowY: 'auto' }}\n    >\n      <style>{`\n        .ant-table-body {\n          scrollbar-width: thin;\n        }\n        .db_table .ant-table-wrapper .ant-table-thead > tr > th {\n          color: #313131 !important;\n          font-size: 12px !important;\n          padding: 12px !important;\n        }\n        .db_table .ant-table-cell {\n          font-size: 12px !important;\n          color: #A5A3A4 !important;\n          font-weight: 600;\n        }\n        \n      `}</style>\n      <Table\n        columns={columns}\n        dataSource={displayData}\n        className={`${isNorMore ? 'last-row-table' : ''} db_table_content custom-table`}\n        pagination={false}\n        scroll={{ x: 1300, y: heightValue ? 150 : 290 }}\n        loading={{\n          spinning: commonLoader, // Indicate that the table is loading\n          indicator: <CSpinner color=\"danger\" />, // Use your custom loader component\n        }}\n      />\n    </div>\n  )\n}\nRaisedRequestTable.propTypes = {\n  selectedStatus: PropTypes.any,\n  selectedDate: PropTypes.any,\n  filterType: PropTypes.any,\n  heightValue: PropTypes.bool,\n}\nexport default RaisedRequestTable\n","import { CCard, CCol, CRow } from '@coreui/react'\nimport { DatePicker, Select, Typography } from 'antd'\nimport React, { useEffect, useRef, useState } from 'react'\nimport Downarrowimg from '../../../assets/images/downarrow.png'\nimport Calendarimg from '../../../assets/images/calendar-image.png'\nimport NextArrowSVG from '../DashboardSVG/NextArrowSVG'\nimport RaisedRequestTable from './RaisedRequestTable'\nimport PropTypes from 'prop-types'\nimport dayjs from 'dayjs'\nimport { Link } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\n\nconst RaisedRequest = ({ widgetLength, widgetTableData, title }) => {\n  const statusRef = useRef(null)\n  const dateRef = useRef(null)\n  const filterRef = useRef(false)\n  const [status, setStatus] = useState(null)\n  const [heightValue, setHeightValue] = useState(false)\n  const sidebarShow = useSelector((state) => state.dashboard.sidebarShow)\n\n  const handleStatusFilter = (value) => {\n    setStatus(value)\n    if (value === undefined && dateRef.current === null) {\n      statusRef.current = null\n      filterRef.current = false\n    } else if (dateRef.current !== null && value !== undefined) {\n      filterRef.current = true\n      statusRef.current = value\n    } else if (dateRef.current !== null && value === undefined) {\n      filterRef.current = true\n      statusRef.current = null\n    } else {\n      filterRef.current = true\n      statusRef.current = value\n    }\n  }\n\n  useEffect(() => {\n    if (widgetLength > 2 && widgetTableData === title) {\n      setHeightValue(true)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const handleDateChange = (date, dateString) => {\n    if (date !== null) {\n      filterRef.current = true\n      const parsedDate = dayjs(date, 'DD MMM, YYYY')\n      const formattedDate = parsedDate.format('YYYY-MM-DD')\n      dateRef.current = formattedDate\n    } else if (statusRef.current !== '' && statusRef.current !== null) {\n      dateRef.current = null\n      filterRef.current = true\n    } else {\n      filterRef.current = false\n      dateRef.current = null\n    }\n  }\n\n  return (\n    <div>\n      <CCard\n        style={{\n          height: widgetLength > 2 && widgetTableData === title ? '270px' : '440px',\n          border: 'none',\n          marginBottom: '10px',\n        }}\n      >\n        <div style={{ padding: '30px', paddingBottom: '9px', paddingTop: '12px' }}>\n          <CRow>\n            <CCol xs={12} md={5} lg={6} style={{ display: 'flex', alignItems: 'center' }}>\n              <div>\n                <Typography\n                  style={{ fontSize: '13px', color: '#161C24', fontWeight: '600' }}\n                  className=\"DB_ts_lable\"\n                >\n                  Raised Request\n                </Typography>\n              </div>\n            </CCol>\n            <CCol\n              xs={10}\n              md={6}\n              lg={5}\n              style={{\n                border: '1px solid #F1F1F1',\n                borderRadius: '5px',\n                height: '30px',\n              }}\n            >\n              <CRow>\n                <CCol xs={7} lg={6} style={{ paddingRight: '0px', paddingLeft: '0px' }}>\n                  <DatePicker\n                    style={{\n                      borderRadius: '0',\n                      width: '100%',\n                      marginTop: '1px',\n                    }}\n                    // className=\" datepicker_raised mem_selct\"\n                    onChange={handleDateChange}\n                    placeholder=\"Choose Date\"\n                    allowClear\n                    variant={'borderless'}\n                    suffixIcon={\n                      <img\n                        src={Calendarimg}\n                        alt=\"calendar icon\"\n                        style={{ width: '12px', height: '12px' }}\n                      />\n                    }\n                    disabledDate={(current) => current && current > dayjs().endOf('day')}\n                    format=\"DD MMM,YYYY\"\n                    disabled={sidebarShow === true}\n                  />\n                </CCol>\n                <CCol xs={5} lg={6} style={{ paddingRight: '5px', paddingLeft: '0px' }}>\n                  <Select\n                    suffixIcon={\n                      <img\n                        src={Downarrowimg}\n                        alt=\"Downarrowimg\"\n                        style={{ width: '9px', height: '6px' }}\n                      />\n                    }\n                    placeholder=\"Choose Status\"\n                    className={`input_lg_select ${\n                      statusRef.current === 'Approved'\n                        ? 'present-color'\n                        : status === 'Rejected'\n                        ? 'leave-color'\n                        : 'warnings-color'\n                    }`}\n                    value={statusRef.current}\n                    allowClear={true}\n                    onChange={handleStatusFilter}\n                    disabled={sidebarShow === true}\n                  >\n                    <Select.Option value=\"Approved\" style={{ color: '#00ab55', fontWeight: '600' }}>\n                      Approved\n                    </Select.Option>\n                    <Select.Option value=\"Rejected\" style={{ color: '#e40e2d', fontWeight: '600' }}>\n                      Rejected\n                    </Select.Option>\n                    <Select.Option value=\"Pending\" style={{ color: '#ffaa00', fontWeight: '600' }}>\n                      Pending\n                    </Select.Option>\n                  </Select>\n                </CCol>\n              </CRow>\n            </CCol>\n            <CCol\n              xs={1}\n              style={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'end',\n                paddingRight: '0px',\n                paddingLeft: '3px',\n              }}\n            >\n              <Link\n                className={`DArrow_icon ${sidebarShow === true ? 'disabled-content' : ''}`}\n                to=\"/timesheet?tab=4\"\n              >\n                <NextArrowSVG\n                  fill=\"#AAAAAA\"\n                  viewBox=\"0 0 16 10\"\n                  width=\"15\"\n                  height=\"9\"\n                  stopColor=\"none\"\n                />\n              </Link>\n            </CCol>\n          </CRow>\n        </div>\n\n        <CRow>\n          <CCol style={{ marginTop: '20px' }}>\n            <RaisedRequestTable\n              selectedStatus={statusRef.current}\n              filterType={filterRef.current}\n              selectedDate={dateRef.current}\n              heightValue={heightValue}\n            />\n          </CCol>\n        </CRow>\n      </CCard>\n    </div>\n  )\n}\n\nRaisedRequest.propTypes = {\n  widgetLength: PropTypes.number.isRequired,\n  widgetTableData: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n}\n\nexport default RaisedRequest\n","import React, { useEffect, useRef, useState, useCallback } from 'react'\nimport { Table } from 'antd'\nimport PropTypes from 'prop-types'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getTimesheetStatusBasedType } from 'src/redux/Dashboard/action'\nimport { CSpinner } from '@coreui/react'\nimport debounce from 'lodash.debounce'\n\nconst TimeSheetStatusTable = ({ type, filterValue }) => {\n  const [commonLoader, setCommonLoader] = useState(true)\n  const dispatch = useDispatch()\n  const [data, setData] = useState([])\n  const pageRef = useRef(0)\n  const filterRef = useRef(filterValue)\n  const searchRef = useRef(false)\n  const hasMoreRef = useRef(true)\n  const typeRef = useRef('')\n  const sizeRef = useRef(5)\n  const timesheetStatus = useSelector((state) => state.dashboard?.timesheetStatusRoleBased)\n  const tableBodyRef = useRef(null)\n\n  const addSerialNumbers = (data) => {\n    const startIndex = pageRef.current * sizeRef.current\n    return data.map((item, index) => ({\n      ...item,\n      sno: startIndex + index + 1,\n    }))\n  }\n\n  useEffect(() => {\n    if (timesheetStatus && timesheetStatus.length > 0) {\n      const dataWithSerialNumbers = addSerialNumbers(timesheetStatus)\n      if (dataWithSerialNumbers.length < sizeRef.current) {\n        hasMoreRef.current = false\n      }\n      setData((prevData) => [...prevData, ...dataWithSerialNumbers])\n      pageRef.current += 1\n    }\n    setCommonLoader(false)\n  }, [timesheetStatus])\n\n  const truncateString = (str, num) => {\n    if (!str) {\n      return '' // or you can return str itself, which would be null or undefined\n    }\n    return str.length > num ? `${str.substring(0, num)}...` : str\n  }\n\n  const columns = [\n    {\n      title: 'S.No',\n      dataIndex: 'sno',\n      key: 'sno',\n      width: 50,\n      fixed: 'left',\n    },\n    {\n      title: 'Member',\n      dataIndex: 'member',\n      key: 'member',\n      fixed: 'left',\n      width: 150,\n      render: (text) => truncateString(text, 12),\n    },\n    {\n      title: 'Date',\n      dataIndex: 'date',\n      key: 'date',\n      fixed: 'left',\n      width: 100,\n    },\n    {\n      title: 'Supervisor',\n      dataIndex: 'supervisor',\n      key: 'supervisor',\n      width: 150,\n    },\n    {\n      title: '1st Approval',\n      dataIndex: '1stApproval',\n      key: '1stApproval',\n      width: 100,\n      render: (text) => {\n        let className = 'not-text1'\n        if (text === 'Approved') {\n          className = 'green-text1'\n        } else if (text === 'Reject' || text === 'Rejected') {\n          className = 'red-text1'\n        } else if (text === 'Pending') {\n          className = 'warning-text1'\n        } else if (text === 'Resubmit') {\n          className = 'info-text1'\n        }\n        return <div className={className}>{text === 'Reject' ? 'Rejected' : text}</div>\n      },\n    },\n    {\n      title: '1st Remarks',\n      dataIndex: '1stRemarks',\n      key: '1stRemarks',\n      width: 200,\n      render: (text) => (text === '' ? '--' : truncateString(text, 20)),\n    },\n    {\n      title: '2nd Approval',\n      dataIndex: '2ndApproval',\n      key: '2ndApproval',\n      width: 100,\n      render: (text) => {\n        let className = 'not-text1'\n        if (text === 'Approved') {\n          className = 'green-text1'\n        } else if (text === 'Reject' || text === 'Rejected') {\n          className = 'red-text1'\n        } else if (text === 'Pending') {\n          className = 'warning-text1'\n        } else if (text === 'Resubmit') {\n          className = 'info-text1'\n        }\n        return <div className={className}>{text === 'Reject' ? 'Rejected' : text}</div>\n      },\n    },\n    {\n      title: '2nd Remarks',\n      dataIndex: '2ndRemarks',\n      key: '2ndRemarks',\n      width: 200,\n      render: (text) => (text === '' ? '--' : truncateString(text, 20)),\n    },\n  ]\n\n  const fetchMoreData = () => {\n    if (hasMoreRef.current) {\n      dispatch(\n        getTimesheetStatusBasedType(\n          pageRef.current,\n          searchRef.current,\n          typeRef.current,\n          filterRef.current,\n        ),\n      )\n    }\n  }\n\n  useEffect(() => {\n    setCommonLoader(true)\n    pageRef.current = 0\n    filterRef.current = filterValue\n    searchRef.current = filterValue !== ''\n    hasMoreRef.current = true\n    setData([])\n    typeRef.current = type\n    dispatch(\n      getTimesheetStatusBasedType(pageRef.current, searchRef.current, type, filterRef.current),\n    )\n  }, [type, filterValue, dispatch])\n\n  const handleScroll = useCallback(\n    debounce(() => {\n      if (!tableBodyRef.current) return\n      const { scrollTop, scrollHeight, clientHeight } = tableBodyRef.current\n      if (scrollTop + clientHeight >= scrollHeight - 10 && hasMoreRef.current) {\n        setCommonLoader(true)\n        fetchMoreData()\n      }\n    }, 100),\n    [],\n  )\n\n  useEffect(() => {\n    const tableBody = document.querySelector('.status_table .ant-table-body')\n    if (tableBody) {\n      tableBodyRef.current = tableBody\n      tableBody.addEventListener('scroll', handleScroll)\n    }\n\n    return () => {\n      if (tableBody) {\n        tableBody.removeEventListener('scroll', handleScroll)\n      }\n    }\n  }, [handleScroll])\n\n  return (\n    <div className=\"db_table status_table\" style={{ height: '349px' }} id=\"scrollableDiv\">\n      <style>{`\n        .ant-table-body {\n          scrollbar-width: thin;\n        }\n        // .db_table .ant-table-body::-webkit-scrollbar {\n        //   width: 4px !important;\n        //   background-color: #EDEDEE;\n        // }\n        .db_table .ant-table-wrapper .ant-table-thead > tr > th {\n          color: #313131 !important;\n          font-size: 12px !important;\n          padding: 12px !important;\n        }\n        .db_table .ant-table-cell {\n          font-size: 12px !important;\n          color: #A5A3A4 !important;\n          font-weight: 600;\n        }\n      `}</style>\n      <Table\n        columns={columns}\n        dataSource={data}\n        className=\"db_table_content custom-table\"\n        scroll={{ x: 1300, y: 300 }}\n        pagination={false}\n        loading={{\n          spinning: commonLoader,\n          indicator: <CSpinner color=\"danger\" />,\n        }}\n      />\n      {!hasMoreRef.current && data.length !== 0 && data.length > 5 && (\n        <p style={{ textAlign: 'center' }}>\n          <b style={{ color: '#e40e2d', fontSize: '12px' }}>No more Data to load</b>\n        </p>\n      )}\n    </div>\n  )\n}\n\nTimeSheetStatusTable.propTypes = {\n  type: PropTypes.string,\n  filterValue: PropTypes.string,\n}\n\nexport default TimeSheetStatusTable\n","import React, { useEffect, useRef, useState, useCallback } from 'react'\nimport { Table } from 'antd'\nimport PropTypes from 'prop-types'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getTimesheetStatusBasedType } from 'src/redux/Dashboard/action'\nimport { CSpinner } from '@coreui/react'\nimport debounce from 'lodash.debounce'\n\nconst TimeSheetstatusTableContract = ({ type, filterValue }) => {\n  const [commonLoader, setCommonLoader] = useState(true)\n  const dispatch = useDispatch()\n  const [data, setData] = useState([])\n  const pageRef = useRef(0)\n  const filterRef = useRef(filterValue)\n  const searchRef = useRef(false)\n  const hasMoreRef = useRef(true)\n  const typeRef = useRef('')\n  const sizeRef = useRef(5)\n  const timesheetStatus = useSelector((state) => state.dashboard?.timesheetStatusContract)\n  const tableBodyRef = useRef(null)\n\n  const addSerialNumbers = (data) => {\n    const startIndex = pageRef.current * sizeRef.current\n    return data.map((item, index) => ({\n      ...item,\n      sno: startIndex + index + 1,\n    }))\n  }\n\n  useEffect(() => {\n    if (timesheetStatus && timesheetStatus.length > 0) {\n      const dataWithSerialNumbers = addSerialNumbers(timesheetStatus)\n      console.log(dataWithSerialNumbers)\n      if (dataWithSerialNumbers.length < sizeRef.current) {\n        hasMoreRef.current = false\n      }\n      setData((prevData) => [...prevData, ...dataWithSerialNumbers])\n      pageRef.current += 1\n    }\n    setCommonLoader(false)\n  }, [timesheetStatus])\n\n  const truncateString = (str, num) => {\n    if (!str) {\n      return '' // or you can return str itself, which would be null or undefined\n    }\n    return str.length > num ? `${str.substring(0, num)}...` : str\n  }\n\n  const columns = [\n    {\n      title: 'S.No',\n      dataIndex: 'sno',\n      key: 'sno',\n      width: 50,\n      fixed: 'left',\n    },\n    {\n      title: 'Member',\n      dataIndex: 'member',\n      key: 'member',\n      fixed: 'left',\n      width: 150,\n      render: (text) => truncateString(text, 12),\n    },\n    {\n      title: 'Date',\n      dataIndex: 'date',\n      key: 'date',\n      fixed: 'left',\n      width: 100,\n    },\n    {\n      title: 'Supervisor',\n      dataIndex: 'supervisor',\n      key: 'supervisor',\n      width: 150,\n    },\n    {\n      title: '1st Approval',\n      dataIndex: '1stApproval',\n      key: '1stApproval',\n      width: 100,\n      render: (text) => {\n        let className = 'not-text1'\n        if (text === 'Approved') {\n          className = 'green-text1'\n        } else if (text === 'Reject' || text === 'Rejected') {\n          className = 'red-text1'\n        } else if (text === 'Pending') {\n          className = 'warning-text1'\n        } else if (text === 'Resubmit') {\n          className = 'info-text1'\n        }\n        return <div className={className}>{text === 'Reject' ? 'Rejected' : text}</div>\n      },\n    },\n    {\n      title: '1st Remarks',\n      dataIndex: '1stRemarks',\n      key: '1stRemarks',\n      width: 200,\n      render: (text) => (text === '' ? '--' : truncateString(text, 20)),\n    },\n    {\n      title: '2nd Approval',\n      dataIndex: '2ndApproval',\n      key: '2ndApproval',\n      width: 100,\n      render: (text) => {\n        let className = 'not-text1'\n        if (text === 'Approved') {\n          className = 'green-text1'\n        } else if (text === 'Reject' || text === 'Rejected') {\n          className = 'red-text1'\n        } else if (text === 'Pending') {\n          className = 'warning-text1'\n        } else if (text === 'Resubmit') {\n          className = 'info-text1'\n        }\n        return <div className={className}>{text === 'Reject' ? 'Rejected' : text}</div>\n      },\n    },\n    {\n      title: '2nd Remarks',\n      dataIndex: '2ndRemarks',\n      key: '2ndRemarks',\n      width: 200,\n      render: (text) => (text === '' ? '--' : truncateString(text, 20)),\n    },\n  ]\n\n  const fetchMoreData = () => {\n    if (hasMoreRef.current) {\n      dispatch(\n        getTimesheetStatusBasedType(\n          pageRef.current,\n          searchRef.current,\n          typeRef.current,\n          filterRef.current,\n        ),\n      )\n    }\n  }\n\n  useEffect(() => {\n    setCommonLoader(true)\n    pageRef.current = 0\n    filterRef.current = filterValue\n    searchRef.current = filterValue !== ''\n    hasMoreRef.current = true\n    setData([])\n    typeRef.current = type\n    dispatch(\n      getTimesheetStatusBasedType(pageRef.current, searchRef.current, type, filterRef.current),\n    )\n  }, [type, filterValue, dispatch])\n\n  const handleScroll = useCallback(\n    debounce(() => {\n      if (!tableBodyRef.current) return\n      const { scrollTop, scrollHeight, clientHeight } = tableBodyRef.current\n      if (scrollTop + clientHeight >= scrollHeight - 10 && hasMoreRef.current) {\n        setCommonLoader(true)\n        fetchMoreData()\n      }\n    }, 100),\n    [],\n  )\n\n  useEffect(() => {\n    const tableBody = document.querySelector('.status_table .ant-table-body')\n    if (tableBody) {\n      tableBodyRef.current = tableBody\n      tableBody.addEventListener('scroll', handleScroll)\n    }\n\n    return () => {\n      if (tableBody) {\n        tableBody.removeEventListener('scroll', handleScroll)\n      }\n    }\n  }, [handleScroll])\n\n  return (\n    <div className=\"db_table status_table\" style={{ height: '349px' }} id=\"scrollableDiv\">\n      <style>{`\n        .ant-table-body {\n          scrollbar-width: thin;\n        }\n        // .db_table .ant-table-body::-webkit-scrollbar {\n        //   width: 4px !important;\n        //   background-color: #EDEDEE;\n        // }\n        .db_table .ant-table-wrapper .ant-table-thead > tr > th {\n          color: #313131 !important;\n          font-size: 12px !important;\n          padding: 12px !important;\n        }\n        .db_table .ant-table-cell {\n          font-size: 12px !important;\n          color: #A5A3A4 !important;\n          font-weight: 600;\n        }\n      `}</style>\n      <Table\n        columns={columns}\n        dataSource={data}\n        className=\"db_table_content custom-table\"\n        scroll={{ x: 1300, y: 300 }}\n        pagination={false}\n        loading={{\n          spinning: commonLoader,\n          indicator: <CSpinner color=\"danger\" />,\n        }}\n      />\n      {!hasMoreRef.current && data.length !== 0 && data.length > 5 && (\n        <p style={{ textAlign: 'center' }}>\n          <b style={{ color: '#e40e2d', fontSize: '12px' }}>No more Data to load</b>\n        </p>\n      )}\n    </div>\n  )\n}\n\nTimeSheetstatusTableContract.propTypes = {\n  type: PropTypes.string,\n  filterValue: PropTypes.string,\n}\n\nexport default TimeSheetstatusTableContract\n","import { CCard, CCol, CRow } from '@coreui/react'\nimport { Dropdown, Input, Typography } from 'antd'\nimport React, { useState } from 'react'\nimport searchicon from '../../../assets/images/form/search-Icon.png'\nimport { IoMdArrowDropdown } from 'react-icons/io'\nimport TimeSheetStatusTable from './TimeSheetstatusTable'\nimport PropTypes from 'prop-types'\nimport { useSelector } from 'react-redux'\nimport { useDispatch } from 'react-redux'\nimport TimeSheetstatusTableContract from './TimeSheetstatusTableContract'\n\nfunction TimeSheetStatus({ widgetLength, widgetTableData, title }) {\n  const [selectedItem, setSelectedItem] = useState('1') // Initialize with default selection\n  const [searchValue, setSearchValue] = useState('')\n  const dispatch = useDispatch()\n  const sidebarShow = useSelector((state) => state.dashboard.sidebarShow)\n\n  const items = [\n    {\n      key: '1',\n      label: <div>Contract Member`s</div>,\n    },\n    {\n      key: '2',\n      label: <div>On Role Member`s</div>,\n    },\n  ]\n\n  const handleMenuClick = (e) => {\n    setSelectedItem(e.key)\n  }\n  const handleSearch = (e) => {\n    setSearchValue(e)\n  }\n\n  return (\n    <div>\n      <CCard\n        style={{\n          height: widgetLength > 2 && widgetTableData === title ? '270px' : '440px',\n          border: 'none',\n          marginBottom: '10px',\n        }}\n      >\n        <div\n          style={{\n            paddingTop: '10px',\n            padding: '12px',\n            paddingBottom: '9px',\n          }}\n        >\n          <CRow>\n            <CCol\n              xs={12}\n              md={sidebarShow === true ? 12 : 12}\n              lg={sidebarShow === true ? 9 : 8}\n              style={{ display: 'flex', alignItems: 'center' }}\n            >\n              <div>\n                <div\n                  style={\n                    sidebarShow === true\n                      ? { fontSize: '11px', color: '#161C24', fontWeight: '600' }\n                      : {\n                          fontSize: '14px',\n                          color: '#161C24',\n                          fontWeight: '600',\n                        }\n                  }\n                  className=\"DB_ts_lable\"\n                >\n                  TimeSheet Status <span>- &nbsp;</span>\n                </div>\n              </div>\n              <div\n                className={sidebarShow === true ? 'dashboard_dropdown_side' : 'dashboard_dropdown'}\n              >\n                <Dropdown\n                  style={\n                    sidebarShow === true\n                      ? { fontSize: '11px', color: '#d30000', height: '20px', cursor: 'pointer' }\n                      : {\n                          fontSize: '14px',\n                          color: '#d30000',\n                          height: '20px',\n                          cursor: 'pointer',\n                        }\n                  }\n                  disabled={sidebarShow === true}\n                  menu={{\n                    items,\n                    onClick: handleMenuClick,\n                  }}\n                >\n                  <a onClick={(e) => e.preventDefault()}>\n                    {selectedItem === '1' ? 'Contract Member`s' : 'On Role Member`s'}\n                    <IoMdArrowDropdown\n                      className=\"db_Dropdown_icon\"\n                      style={{ fontSize: '14px', color: '#d30000', cursor: 'pointer' }}\n                    />\n                  </a>\n                </Dropdown>\n              </div>\n            </CCol>\n            <CCol xs={12} md={6} lg={sidebarShow === true ? 3 : 4}>\n              <Input\n                className=\"db_inputbox\"\n                placeholder=\"Search\"\n                style={{ borderBottom: '1px solid #ced4da ', borderRadius: '0px' }}\n                // className=\"border-0 user-select-sec \"\n                disabled={sidebarShow === true}\n                onChange={(e) => handleSearch(e.target.value)}\n                variant={'borderless'}\n                prefix={\n                  <img\n                    src={searchicon}\n                    alt=\"search icon\"\n                    style={{ width: '14px', height: '14px' }}\n                    className=\"search-icon\"\n                  />\n                }\n              />\n            </CCol>\n          </CRow>\n        </div>\n\n        <CRow>\n          <CCol style={{ marginTop: '20px' }}>\n            {selectedItem === '1' ? (\n              <TimeSheetstatusTableContract type=\"Contract\" filterValue={searchValue} />\n            ) : (\n              <TimeSheetStatusTable type=\"On Role\" filterValue={searchValue} />\n            )}\n          </CCol>\n        </CRow>\n      </CCard>\n    </div>\n  )\n}\n\nTimeSheetStatus.propTypes = {\n  widgetLength: PropTypes.number,\n  widgetTableData: PropTypes.string,\n  title: PropTypes.string,\n}\n\nexport default TimeSheetStatus\n","import React, { useState, useEffect, useRef, useCallback } from 'react'\nimport { Button, Table } from 'antd'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport dayjs from 'dayjs'\nimport WarningModal from '../../modal/WarningModal'\nimport WithdrawSvg from 'src/views/svgImages/WithdrawSvg'\nimport { getLeaveHistory, withDrawLeave } from 'src/redux/timesheet/action'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { CSpinner } from '@coreui/react'\nimport PropTypes from 'prop-types'\nimport { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { formatDate } from 'src/TimeUtils'\nimport debounce from 'lodash.debounce'\n\nconst LeaveHistoryTable = ({ selectedDate, heightValue }) => {\n  const dispatch = useDispatch()\n  const [leaveDate, setLeaveDate] = useState(null)\n  const [isModalOpen, setIsModalOpen] = useState(false)\n  const [singleId, setSingleId] = useState()\n  const pageRef = useRef(0)\n  const sizeRef = useRef(5)\n  const dateRef = useRef(selectedDate)\n  const hasMoreRef = useRef(true)\n  const oDataRef = useRef([]) // Added oDataRef\n  const [commonLoader, setCommonLoader] = useState(true)\n  const [data, setData] = useState([])\n  const tableBodyRef = useRef(null)\n  const [isNorMore, setIsNorMore] = useState(false)\n  const leaveHistory = useSelector((state) => state.timesheet?.leaveHistoryList)\n  const sidebarShow = useSelector((state) => state.dashboard.sidebarShow)\n\n  const addSerialNumbers = (data) => {\n    const startIndex = pageRef.current * sizeRef.current\n    return data.map((item, index) => ({\n      ...item,\n      sno: startIndex + index + 1,\n    }))\n  }\n\n  //withdraw the leave\n  const showModal = (id, date) => {\n    setIsModalOpen(true)\n    setSingleId(id)\n    setLeaveDate(dayjs(date).format('DD MMM, YYYY'))\n  }\n\n  const handleWithdrawLeave = async (id) => {\n    try {\n      const response = await dispatch(withDrawLeave(id))\n      if (response && response.status === true) {\n        toast.success(response.message, {\n          position: toast.POSITION.BOTTOM_RIGHT,\n          autoClose: 3000,\n        })\n        pageRef.current = 0\n        setData([])\n        oDataRef.current = []\n        dispatch(getLeaveHistory(pageRef.current, sizeRef.current, dateRef.current))\n        return response\n      } else {\n        throw new Error('Empty response received from the server')\n      }\n    } catch (error) {\n      toast.error(`Error: ${error.message}`, {\n        position: toast.POSITION.BOTTOM_RIGHT,\n        autoClose: 3000,\n      })\n    }\n  }\n\n  const resetFormValues = () => {\n    pageRef.current = 0\n    hasMoreRef.current = true\n    // getLeaveHistory(dayjs(leaveDate).format('YYYY-MM-DD'))\n    setIsModalOpen(false)\n  }\n\n  const handleCancel = () => {\n    setIsModalOpen(false)\n  }\n\n  const truncateString = (str, num) => {\n    if (str.length <= num) {\n      return str\n    }\n    return str.slice(0, num) + '...'\n  }\n  const columns = [\n    {\n      title: 'S.No',\n      dataIndex: 'index',\n      key: 'index',\n      width: 4,\n      align: 'center',\n      render: (text, record, index) => {\n        if (record.key === 'noMoreData') {\n          return {\n            children: null,\n            props: {\n              colSpan: 0, // Adjust this number based on the total number of columns to span\n            },\n          }\n        }\n        return index + 1\n      },\n    },\n    {\n      title: 'Activity Date',\n      dataIndex: 'appliedDate',\n      key: 'appliedDate',\n      width: 8,\n      render: (text, record, index) => {\n        if (record.key === 'noMoreData') {\n          return {\n            children: null,\n            props: {\n              colSpan: 0, // Adjust this number based on the total number of columns to span\n            },\n          }\n        }\n        return formatDate(text)\n      },\n    },\n    {\n      title: 'Remarks',\n      width: 25,\n      dataIndex: 'status',\n      key: 'status',\n      render: (text, record, index) => {\n        if (record.key === 'noMoreData') {\n          setIsNorMore(true)\n          return {\n            children: (\n              <div style={{ textAlign: 'center' }}>\n                <b style={{ color: '#e40e2d', fontSize: '12px' }}>No more Data to load</b>\n              </div>\n            ),\n            props: {\n              colSpan: 4, // Adjust this number based on the total number of columns to span\n            },\n          }\n        }\n        return <div title={text}> {truncateString(text, 30)}</div>\n      },\n    },\n    {\n      title: 'Action',\n      width: 5,\n      dataIndex: 'action',\n      render: (text, row) => {\n        if (row.key === 'noMoreData') {\n          return {\n            children: null,\n            props: {\n              colSpan: 0, // Adjust this number based on the total number of columns to span\n            },\n          }\n        }\n        return (\n          <Button\n            className=\"btn border-0 text-c text-secondary cross-button\"\n            style={{ fontSize: '12px', padding: '4px 8px' }}\n            onClick={() => showModal(row.id, row.appliedDate)}\n            disabled={sidebarShow === true}\n          >\n            <WithdrawSvg width=\"14\" height=\"17\" viewBox=\"0 0 15 18\" fill=\"#A5A1A1\" />\n          </Button>\n        )\n      },\n    },\n  ]\n\n  useEffect(() => {\n    if (leaveHistory && leaveHistory.length >= 0) {\n      const dataWithSerialNumbers = addSerialNumbers(leaveHistory)\n      if (dataWithSerialNumbers.length < sizeRef.current) {\n        hasMoreRef.current = false\n      }\n      pageRef.current += 1\n      setData((prevData) => [...prevData, ...dataWithSerialNumbers])\n      setCommonLoader(false)\n    }\n  }, [leaveHistory])\n\n  const displayData = [\n    ...data.map((row, index) => ({\n      key: row.id,\n      id: row.id,\n      index: index + 1,\n      appliedDate: row.appliedDate,\n      status: row.status,\n    })),\n  ]\n\n  // Append the \"No more Data to load\" message as the last row if noMoreData is true\n  if (!hasMoreRef.current && displayData.length !== 0 && displayData.length > 5) {\n    displayData.push({\n      key: 'noMoreData',\n      index: '',\n      status: 'No more Data to load',\n      appliedDate: '',\n      action: '',\n    })\n  }\n\n  const fetchMoreData = () => {\n    if (hasMoreRef.current) {\n      dispatch(getLeaveHistory(pageRef.current, sizeRef.current, dateRef.current))\n    }\n  }\n\n  useEffect(() => {\n    setCommonLoader(true)\n    dateRef.current = selectedDate\n    setData([]) // Clear current data\n    pageRef.current = 0 // Reset pagination\n    oDataRef.current = [] // Clear cached data\n    hasMoreRef.current = true // Reset hasMore flag\n    dispatch(getLeaveHistory(pageRef.current, sizeRef.current, dateRef.current))\n  }, [selectedDate, dispatch])\n\n  const handleScroll = useCallback(\n    debounce(() => {\n      if (!tableBodyRef.current) return\n\n      const { scrollTop, scrollHeight, clientHeight } = tableBodyRef.current\n      if (scrollTop + clientHeight >= scrollHeight - 10 && hasMoreRef.current) {\n        setCommonLoader(true)\n        fetchMoreData()\n      }\n    }, 100),\n    [hasMoreRef.current, commonLoader],\n  )\n\n  useEffect(() => {\n    const tableBody = document.querySelector('.leave_table .ant-table-body')\n    if (tableBody) {\n      tableBodyRef.current = tableBody\n      tableBody.addEventListener('scroll', handleScroll)\n    }\n\n    return () => {\n      if (tableBody) {\n        tableBody.removeEventListener('scroll', handleScroll)\n      }\n    }\n  }, [handleScroll])\n\n  return (\n    <div\n      className=\"db_table leave_table\"\n      style={{ height: heightValue ? '204px' : '349px', overflowY: 'auto' }}\n    >\n      <style>{`\n        .ant-table-body {\n          scrollbar-width: thin;\n        }\n          .leave_table .ant-table-body::-webkit-scrollbar {\n              display: none !important;\n            }\n        .db_table .ant-table-wrapper .ant-table-thead > tr > th {\n          color: #313131 !important;\n          font-size: 12px !important;\n          padding: 12px !important;\n        }\n        .db_table .ant-table-cell {\n          font-size: 12px !important;\n          color: #A5A3A4 !important;\n          font-weight: 600;\n        }\n      `}</style>\n      <Table\n        columns={columns}\n        dataSource={displayData}\n        className={`${isNorMore ? 'last-row-table' : ''} db_table_content custom-table`}\n        scroll={{ y: 290 }}\n        pagination={false}\n        loading={{\n          spinning: commonLoader,\n          indicator: <CSpinner color=\"danger\" />,\n        }}\n      />\n      {isModalOpen && (\n        <WarningModal\n          isModalOpen={isModalOpen}\n          handleCancel={handleCancel}\n          handleApprove={handleWithdrawLeave}\n          id={singleId}\n          date={leaveDate}\n          headContent=\"Leave Widthraw\"\n          resetFunc={resetFormValues}\n        />\n      )}\n    </div>\n  )\n}\nLeaveHistoryTable.propTypes = {\n  selectedDate: PropTypes.any,\n  heightValue: PropTypes.bool,\n}\nexport default LeaveHistoryTable\n","import { CCard, CCol, CRow } from '@coreui/react'\nimport { DatePicker, Typography } from 'antd'\nimport React, { useEffect, useRef, useState } from 'react'\nimport Calendarimg from '../../../assets/images/calendar-image.png'\nimport PropTypes from 'prop-types'\nimport dayjs from 'dayjs'\nimport LeaveHistoryTable from './LeaveTable'\nimport { useSelector } from 'react-redux'\n\nconst LeaveHistory = ({ widgetLength, widgetTableData, title }) => {\n  const dateRef = useRef(null)\n  const [date, setDate] = useState(null)\n  const heightRef = useRef(false)\n  const sidebarShow = useSelector((state) => state.dashboard.sidebarShow)\n\n  const handleDateChange = (date, dateString) => {\n    if (date) {\n      const formattedDate = dayjs(date).format('YYYY-MM-DD')\n      dateRef.current = formattedDate\n      setDate(date)\n    } else {\n      dateRef.current = null\n      setDate(null)\n    }\n  }\n\n  useEffect(() => {\n    if (widgetLength > 2 && widgetTableData === title) {\n      heightRef.current = true\n    }\n  }, [widgetLength, widgetTableData, title])\n\n  return (\n    <div>\n      <CCard\n        style={{\n          height: widgetLength > 2 && widgetTableData === title ? '270px' : '440px',\n          border: 'none',\n          marginBottom: '10px',\n        }}\n      >\n        <div style={{ padding: '30px', paddingTop: '10px', paddingBottom: '10px' }}>\n          <CRow>\n            <CCol xs={12} md={9} style={{ display: 'flex', alignItems: 'end' }}>\n              <Typography\n                style={{ fontSize: '13px', color: '#161C24', fontWeight: '600' }}\n                className=\"DB_ts_label\"\n              >\n                Leave History\n              </Typography>\n            </CCol>\n            <CCol\n              xs={12}\n              md={3}\n              style={{\n                display: 'flex',\n                border: '1px solid #F1F1F1',\n                alignItems: 'center',\n                borderRadius: '5px',\n              }}\n            >\n              <DatePicker\n                variant=\"borderless\"\n                placeholder=\"Choose Date\"\n                onChange={handleDateChange}\n                allowClear\n                suffixIcon={\n                  <img\n                    src={Calendarimg}\n                    alt=\"Calendarimg\"\n                    style={{ width: '13px', height: '13px' }}\n                  />\n                }\n                disabled={sidebarShow === true}\n                format=\"DD MMM, YYYY\"\n                disabledDate={(current) => current && current > dayjs().endOf('day')}\n              />\n            </CCol>\n          </CRow>\n        </div>\n        <CRow>\n          <CCol style={{ marginTop: '1px' }}>\n            <LeaveHistoryTable selectedDate={dateRef.current} heightValue={heightRef.current} />\n          </CCol>\n        </CRow>\n      </CCard>\n    </div>\n  )\n}\n\nLeaveHistory.propTypes = {\n  widgetLength: PropTypes.number.isRequired,\n  widgetTableData: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n}\n\nexport default LeaveHistory\n","import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { Card, Typography, Table } from 'antd'\nimport multipersonIcon from '../../../assets/images/MultipersonIcon.png'\nimport multigroupIcon from '../../../assets/images/multiGroup.png'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getcontracterAndSupervisor } from 'src/redux/Dashboard/action'\nimport { CCol, CRow, CSpinner } from '@coreui/react'\n\nfunction ContractMembers({ widgetLength, widgetTableData, title }) {\n  const dispatch = useDispatch()\n  const [commonLoader, setCommonLoader] = useState(true)\n  const [data, setData] = useState({})\n  const [contractData, setContractData] = useState([])\n  const contractAndSupervisor = useSelector((state) => state.dashboard?.contractAndSupervisor)\n\n  useEffect(() => {\n    if (contractAndSupervisor.length === 0) {\n      dispatch(getcontracterAndSupervisor())\n    } else {\n      setData(contractAndSupervisor)\n      setContractData(contractAndSupervisor?.usernames)\n    }\n    setCommonLoader(false)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [contractAndSupervisor, dispatch])\n\n  const columns = [\n    {\n      title: 'SI.No',\n      dataIndex: 'index',\n      key: 'index',\n      render: (text, record, index) => index + 1,\n      align: 'center',\n      width: '10%',\n    },\n    {\n      title: 'Contract Members',\n      dataIndex: 'username',\n      key: 'username',\n      width: '25%',\n    },\n    {\n      title: 'Supervisors',\n      dataIndex: 'supervisorName',\n      key: 'supervisorName',\n      width: '25%',\n    },\n  ]\n\n  return (\n    <div>\n      <Card\n        style={{\n          height: widgetLength > 2 && widgetTableData.includes(title) ? '270px' : '440px',\n          border: 'none',\n          marginBottom: '10px',\n          // padding: '25px',\n        }}\n      >\n        <div style={{ display: 'flex', alignItems: 'end' }}>\n          <Typography style={{ fontSize: '14px', color: '#161C24', fontWeight: '600' }}>\n            {title}\n          </Typography>\n        </div>\n        {/* <div style={{ display: 'flex', marginTop: '10px' }}> */}\n        <CRow>\n          <CCol\n            sm={12}\n            md={6}\n            style={{\n              marginRight: '0px',\n            }}\n          >\n            <Card\n              className=\"contract_member_card\"\n              style={{\n                marginY: '20px',\n                paddingBottom: '10px',\n                marginRight: '0px',\n                border: '0px',\n                boxShadow: ' 0px 3.83px 47.86px 0px #0000000D',\n                flex: 1,\n              }}\n            >\n              <div style={{ display: 'flex' }}>\n                <div\n                  className=\"d-flex justify-content-center align-items-center\"\n                  style={{\n                    height: '40px',\n                    width: '40px',\n                    backgroundColor: '#1F65CE1A',\n                    borderRadius: '5px',\n                  }}\n                >\n                  <img src={multipersonIcon} alt=\"icon\" style={{ width: '16px', height: '16px' }} />\n                </div>\n                <div style={{ paddingLeft: '20px' }}>\n                  <div style={{ color: '#797979', fontSize: '12px', fontWeight: '600' }}>\n                    Contract Members\n                  </div>\n                  <div style={{ color: '#000000', fontSize: '15px', fontWeight: '600' }}>\n                    {data.contractMemberCount}\n                  </div>\n                </div>\n              </div>\n            </Card>\n          </CCol>\n          <CCol\n            sm={12}\n            md={6}\n            style={{\n              marginLeft: '0px',\n            }}\n          >\n            <Card\n              className=\"contract_member_card\"\n              style={{\n                marginY: '20px',\n                marginLeft: '0px',\n                paddingBottom: '10px',\n                border: '0px',\n                boxShadow: ' 0px 3.83px 47.86px 0px #0000000D',\n                flex: 1,\n              }}\n            >\n              <div style={{ display: 'flex' }}>\n                <div\n                  className=\"d-flex justify-content-center align-items-center\"\n                  style={{\n                    height: '40px',\n                    width: '40px',\n                    backgroundColor: '#FF56300D',\n                    borderRadius: '5px',\n                  }}\n                >\n                  <img src={multigroupIcon} alt=\"icon\" style={{ width: '20px', height: '20px' }} />\n                </div>\n                <div style={{ paddingLeft: '20px' }}>\n                  <div style={{ color: '#797979', fontSize: '12px', fontWeight: '600' }}>\n                    Supervisors\n                  </div>\n                  <div style={{ color: '#000000', fontSize: '15px', fontWeight: '600' }}>\n                    {data.supervisorCount}\n                  </div>\n                </div>\n              </div>\n            </Card>\n          </CCol>\n        </CRow>\n        {/* </div> */}\n        <div className=\"db_table\" style={{ marginTop: '14px' }}>\n          <style>{`\n        .ant-table-body {\n          scrollbar-width: thin;\n        }\n        .db_table .ant-table-wrapper .ant-table-thead > tr > th {\n          color: #313131 !important;\n          font-size: 12px !important;\n          padding: 12px !important;\n        }\n        .db_table .ant-table-cell {\n          font-size: 12px !important;\n          color: #A5A3A4 !important;\n          font-weight: 600;\n        }\n      `}</style>\n          <Table\n            columns={columns}\n            dataSource={contractData}\n            className=\"db_table_content custom-table\"\n            scroll={{ y: 220 }}\n            pagination={false}\n            loading={{\n              spinning: commonLoader,\n              indicator: <CSpinner color=\"danger\" />,\n            }}\n            rowKey={(record, index) => `${record.id}-${index}`}\n          />\n        </div>\n      </Card>\n    </div>\n  )\n}\n\nContractMembers.propTypes = {\n  widgetLength: PropTypes.number.isRequired,\n  widgetTableData: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n}\n\nexport default ContractMembers\n","import React, { useState, useRef, useEffect } from 'react'\nimport Chart from 'react-apexcharts'\nimport PropTypes from 'prop-types'\nimport dayjs from 'dayjs'\n\nconst WorkingHoursbar = ({ data = [], heightValue }) => {\n  const chartContainerRef = useRef(null)\n\n  const scrollLeft = () => {\n    if (chartContainerRef.current) {\n      chartContainerRef.current.scrollLeft -= 100\n    }\n  }\n\n  const scrollRight = () => {\n    if (chartContainerRef.current) {\n      chartContainerRef.current.scrollLeft += 100\n    }\n  }\n\n  const convertHoursToDecimal = (hours) => {\n    if (!hours) return 0\n    const [h, m] = hours.split(':').map(Number)\n    return h + m / 60\n  }\n\n  const [options, setOptions] = useState({\n    chart: {\n      type: 'bar',\n      id: 'basic-bar',\n      height: heightValue ? '150px' : '204px',\n      width: '100%',\n      zoom: {\n        enabled: true,\n      },\n    },\n    xaxis: {\n      categories: [],\n      labels: {\n        rotate: -45,\n      },\n      title: {\n        text: 'Date', // X-axis name\n        style: {\n          fontSize: '10px',\n          fontWeight: 'bold',\n          color: '#8E8E93',\n        },\n      },\n      tooltip: {\n        enabled: true,\n      },\n    },\n    tooltip: {\n      enabled: false,\n    },\n    yaxis: {\n      min: 0,\n      max: 9,\n      labels: {\n        formatter: (value) => {\n          const hours = Math.floor(value)\n          return `${hours} `\n        },\n      },\n      title: {\n        text: 'Hours', // Y-axis name\n        style: {\n          fontSize: '10px',\n          fontWeight: 'bold',\n          color: '#8E8E93',\n        },\n      },\n    },\n    colors: ['#00AB55B2', '#e90b20'],\n    plotOptions: {\n      bar: {\n        borderRadiusApplication: 'end',\n        columnWidth: '80%', // Adjust this value to decrease the space between bars\n        colors: {\n          backgroundBarOpacity: 0.3,\n        },\n        horizontal: false,\n        borderRadius: 8,\n        borderRadiusWhenStacked: 'last', // 'all', 'last'\n        dataLabels: {\n          // total: {\n          //   enabled: true,\n          //   style: {\n          //     fontSize: '10px',\n          //     fontWeight: 600,\n          //   },\n          //   background: {\n          //     enabled: true,\n          //     color: '#ff0000', // Change this to your desired background color\n          //     opacity: 0.7,\n          //   },\n          // },\n        },\n      },\n    },\n    legend: {\n      show: true,\n      showForSingleSeries: true,\n      position: 'top',\n      horizontalAlign: 'left',\n      markers: {\n        shape: 'circle',\n        radius: 6,\n        width: '9px',\n        height: '9px',\n      },\n      customLegendItems: ['High', 'Low'],\n    },\n    dataLabels: {\n      enabled: true,\n      formatter: (val) => {\n        if (val !== 0) {\n          const hours = Math.floor(val)\n          const minutes = Math.round((val % 1) * 60)\n          return `${hours}:${minutes === 0 ? '00' : minutes}`\n        } else {\n          return ''\n        }\n      },\n      offsetY: 1,\n      style: {\n        colors: ['#f3f4f5'],\n        fontSize: '12px',\n        fontWeight: 'bold',\n        backgroundColor: ['#0000'],\n      },\n      background: {\n        enabled: false, // Disable background for a cleaner look\n      },\n    },\n    grid: {\n      padding: {\n        left: 0,\n        right: 0,\n      },\n    },\n  })\n\n  const [series, setSeries] = useState([])\n\n  useEffect(() => {\n    setOptions((prevOptions) => ({\n      ...prevOptions,\n      // xaxis: {\n      //   ...prevOptions.xaxis,\n      //   categories: data.map((item) => dayjs(item.Date).format('D-MMM')),\n      // },\n      plotOptions: {\n        bar: {\n          ...prevOptions.plotOptions.bar,\n          columnWidth: data.length === 1 ? '10%' : '40%', // Adjust column width to reduce space between bars\n        },\n      },\n    }))\n\n    setSeries([\n      {\n        name: 'Total Hours',\n        data: data.map((item) => ({\n          x: dayjs(item.Date).format('D-MMM'),\n          y: convertHoursToDecimal(item.time),\n          date: dayjs(item.Date).format('D-MMM'),\n          hours: item.time,\n          fillColor: item.color,\n        })),\n      },\n    ])\n  }, [data])\n\n  const chartWidth = Math.max(600, data.length * 50) // Adjust width based on data length\n\n  return (\n    <div>\n      <div\n        className=\"MyTimesheetBarChart\"\n        ref={chartContainerRef}\n        style={{\n          overflowX: 'scroll',\n          // display: 'flex',\n          // justifyContent: 'center',\n          height: heightValue ? '174px' : '341px',\n        }}\n      >\n        <div className=\"row\">\n          <div\n            className=\"mixed-chart\"\n            style={{\n              marginTop: '20px',\n              paddingRight: '20px',\n              overflowX: 'auto', // Enable horizontal scrolling\n              overflowY: 'hidden',\n              minWidth: `${chartWidth}px`,\n              height: heightValue ? '160px' : '312px',\n            }}\n          >\n            <Chart\n              options={options}\n              series={series}\n              type=\"bar\"\n              width={chartWidth}\n              height={heightValue ? '150px' : '300px'}\n            />\n          </div>\n        </div>\n      </div>\n      {/* <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n        <button\n          style={{\n            borderRadius: '80%',\n            border: 'none',\n            backgroundColor: '#d9d9d966',\n          }}\n          onClick={scrollLeft}\n        >\n          <IoIosArrowBack width=\"11px\" />\n        </button>\n        <button\n          style={{\n            borderRadius: '80%',\n            border: 'none',\n            backgroundColor: '#d9d9d966',\n          }}\n          onClick={scrollRight}\n        >\n          <IoIosArrowForward />\n        </button>\n      </div> */}\n    </div>\n  )\n}\n\nWorkingHoursbar.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      time: PropTypes.string.isRequired,\n      Date: PropTypes.string.isRequired,\n      color: PropTypes.string.isRequired,\n    }),\n  ),\n  heightValue: PropTypes.bool,\n}\n\nexport default WorkingHoursbar\n","import React, { useEffect, useRef, useState } from 'react'\nimport { DatePicker, Typography } from 'antd'\nimport { CCard, CCol, CRow } from '@coreui/react'\nimport PropTypes from 'prop-types'\nimport 'react-toastify/dist/ReactToastify.css'\nimport WorkingHoursbar from './barChart'\nimport dayjs from 'dayjs'\nimport weekOfYear from 'dayjs/plugin/weekOfYear'\nimport isoWeek from 'dayjs/plugin/isoWeek'\nimport { useDispatch } from 'react-redux'\nimport { useSelector } from 'react-redux'\nimport { getMyWorkingHours } from 'src/redux/Dashboard/action'\n\ndayjs.extend(weekOfYear)\ndayjs.extend(isoWeek)\n\nconst WorkingHours = ({ widgetLength, widgetTableData, title }) => {\n  const [heightValue, setHeightValue] = useState(false)\n  const startWeek = useRef(null)\n  const endWeek = useRef(null)\n  const weekFormat = 'MM/DD'\n  const dataRef = useRef([])\n  const dispatch = useDispatch()\n  const weeklyTimesheetHours = useSelector((state) => state.dashboard?.weeklyTimesheetHours)\n  const sidebarShow = useSelector((state) => state.dashboard.sidebarShow)\n  const customWeekStartEndFormat = (value) =>\n    `${dayjs(value).startOf('week').format(weekFormat)} ~ ${dayjs(value)\n      .endOf('week')\n      .format(weekFormat)}`\n\n  useEffect(() => {\n    if (widgetLength > 2 && widgetTableData === title) {\n      setHeightValue(true)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const handleWeek = (date, dateString) => {\n    if (date) {\n      const startOfWeek = date.startOf('isoWeek').format('YYYY-MM-DD')\n      const endOfWeek = date.endOf('isoWeek').format('YYYY-MM-DD')\n      startWeek.current = startOfWeek\n      endWeek.current = endOfWeek\n      dispatch(getMyWorkingHours(startOfWeek, endOfWeek))\n    }\n  }\n\n  useEffect(() => {\n    const startOfWeek = dayjs().startOf('isoWeek').format('YYYY-MM-DD')\n    const endOfWeek = dayjs().endOf('isoWeek').format('YYYY-MM-DD')\n    startWeek.current = startOfWeek\n    endWeek.current = endOfWeek\n    if (!weeklyTimesheetHours || weeklyTimesheetHours.length === 0) {\n      dispatch(getMyWorkingHours(startOfWeek, endOfWeek))\n    } else {\n      dataRef.current = weeklyTimesheetHours\n    }\n  }, [dispatch, weeklyTimesheetHours])\n\n  return (\n    <div>\n      <CCard\n        style={{\n          height: widgetLength > 2 && widgetTableData === title ? '270px' : '440px',\n          border: 'none',\n          marginBottom: '10px',\n          padding: '15px',\n          paddingTop: '24px',\n          paddingLeft: '15px',\n        }}\n      >\n        <CRow>\n          <CCol xs={12} md={7} style={{ display: 'flex', alignItems: 'center' }}>\n            <div>\n              <Typography\n                style={{ fontSize: '14px', color: '#161C24', fontWeight: '600' }}\n                className=\"dB_timesheet_lable\"\n              >\n                Working Hours\n              </Typography>\n            </div>\n          </CCol>\n          <CCol xs={12} md={5} style={{ display: 'flex', justifyContent: 'end' }}>\n            <DatePicker\n              defaultValue={dayjs()}\n              format={customWeekStartEndFormat}\n              onChange={handleWeek}\n              picker=\"week\"\n              allowClear={false}\n              style={{ width: '58%' }}\n              disabled={sidebarShow === true}\n              disabledDate={(current) => current && current > dayjs().endOf('week')}\n            />\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol className=\"Dashboard_Tab\">\n            {/* Uncomment and use if needed */}\n            <WorkingHoursbar data={weeklyTimesheetHours} heightValue={heightValue} />\n          </CCol>\n        </CRow>\n      </CCard>\n    </div>\n  )\n}\n\nWorkingHours.propTypes = {\n  title: PropTypes.string.isRequired,\n  widgetLength: PropTypes.number.isRequired,\n  widgetTableData: PropTypes.array.isRequired,\n}\n\nexport default WorkingHours\n","import React, { useState, useEffect, useRef, useCallback } from 'react'\nimport { Checkbox, Table } from 'antd'\nimport { useDispatch, useSelector } from 'react-redux'\nimport CrossSvg from 'src/views/svgImages/CrossSvg'\nimport CheckSvg from 'src/views/svgImages/CheckSvg'\nimport { getMemberActivity, memberStatusChange } from 'src/redux/memberActivity/action'\nimport debounce from 'lodash.debounce'\nimport { CSpinner } from '@coreui/react'\nimport ApprovedConfirmModal from '../../modal/ApprovedConfirmModel'\nimport RejectConfirmModal from '../../modal/RejectConfirmModal'\nimport { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport PropTypes from 'prop-types'\n\nconst PendingTable = ({ startDate, endDate }) => {\n  const dispatch = useDispatch()\n  const [data, setData] = useState([])\n  const tableBodyRef = useRef(null)\n  const pageRef = useRef(0)\n  const sizeRef = useRef(5)\n  const statusRef = useRef(null)\n  const startDateRef = useRef(null)\n  const endDateRef = useRef(null)\n  const categoryRef = useRef('default')\n  const hasMoreRef = useRef(true)\n  const [commonLoader, setCommonLoader] = useState(true)\n  const [selectedRows, setSelectedRows] = useState([])\n  const selectedRef = useRef('')\n  const [isModalOpen, setIsModalOpen] = useState(false)\n\n  const [rejectStatus, setRejectStatus] = useState('')\n  const [singleId, setSingleId] = useState()\n  const [singleApprovedId, setSingleApprovedId] = useState('')\n  const [openSelectAll, setOpenSelectAll] = useState(false)\n  const [openSelectRejectAll, setOpenSelectRejectAll] = useState(false)\n  const [open, setOpen] = useState(false)\n  const [approvedStatusAll, setApprovedStatusAll] = useState('')\n  const [approvedStatus, setApprovedStatus] = useState('')\n  const [headerLabel, setHeaderLabel] = useState('')\n  const sidebarShow = useSelector((state) => state.dashboard.sidebarShow)\n\n  useEffect(() => {\n    if (startDate && endDate) {\n      categoryRef.current = 'date'\n      startDateRef.current = startDate\n      endDateRef.current = endDate\n    } else {\n      categoryRef.current = 'default'\n    }\n    setSelectedRows([])\n    selectedRef.current = ''\n    setHeaderLabel('')\n    pageRef.current = 0\n    hasMoreRef.current = true\n    setCommonLoader(true)\n    setData([])\n    dispatch(\n      getMemberActivity(\n        pageRef.current,\n        sizeRef.current,\n        categoryRef.current,\n        statusRef.current,\n        startDateRef.current,\n        endDateRef.current,\n      ),\n    )\n      .then((data) => {\n        const res = data.data\n        const dataWithSerialNumbers = res.map((item, index) => ({\n          ...item,\n          key: `${pageRef.current}-${index}`,\n        }))\n        if (dataWithSerialNumbers.length < sizeRef.current) {\n          hasMoreRef.current = false\n        }\n        if (!pageRef.current) {\n          setData(dataWithSerialNumbers)\n        } else {\n          setData((prevData) => [...prevData, ...dataWithSerialNumbers])\n        }\n\n        pageRef.current += 1\n        setCommonLoader(false)\n      })\n      .catch((errors) => {\n        setCommonLoader(false)\n      })\n  }, [startDate, endDate, dispatch])\n\n  const showPopconfirm = (status, rowId) => {\n    setOpen(true)\n    setSingleApprovedId(rowId)\n    setApprovedStatus(status)\n  }\n\n  const showPopconfirmAll = (status) => {\n    if (status === 'Approved') {\n      setOpenSelectAll(true)\n      setApprovedStatusAll('Approved')\n    } else if (status === 'Reject') {\n      setOpenSelectRejectAll(true)\n      setApprovedStatusAll('Reject')\n    }\n  }\n\n  const truncateString = (str, num) => {\n    if (!str) {\n      return '' // or you can return str itself, which would be null or undefined\n    }\n    return str.length > num ? `${str.substring(0, num)}...` : str\n  }\n\n  // useEffect(() => {\n  //   if (pendingMemberActivity && pendingMemberActivity.length > 0) {\n  //     const dataWithSerialNumbers = pendingMemberActivity.map((item, index) => ({\n  //       ...item,\n  //       key: `${pageRef.current}-${index}`,\n  //     }))\n  //     if (dataWithSerialNumbers.length < sizeRef.current) {\n  //       hasMoreRef.current = false\n  //     }\n  //     if (!pageRef.current) {\n  //       setData(dataWithSerialNumbers)\n  //     } else {\n  //       setData((prevData) => [...prevData, ...dataWithSerialNumbers])\n  //     }\n\n  //     pageRef.current += 1\n  //     setCommonLoader(false)\n  //   } else {\n  //     setCommonLoader(false)\n  //   }\n  // }, [])\n\n  const handleScroll = useCallback(\n    debounce(() => {\n      if (!tableBodyRef.current) return\n\n      const { scrollTop, scrollHeight, clientHeight } = tableBodyRef.current\n      if (scrollTop + clientHeight >= scrollHeight - 10 && hasMoreRef.current) {\n        setCommonLoader(true)\n        fetchMoreData()\n      }\n    }, 100),\n    [hasMoreRef.current, commonLoader],\n  )\n\n  const fetchMoreData = () => {\n    if (hasMoreRef.current) {\n      dispatch(\n        getMemberActivity(\n          pageRef.current,\n          sizeRef.current,\n          categoryRef.current,\n          statusRef.current,\n          startDateRef.current,\n          endDateRef.current,\n        ),\n      )\n        .then((data) => {\n          const res = data.data\n          const dataWithSerialNumbers = res.map((item, index) => ({\n            ...item,\n            key: `${pageRef.current}-${index}`,\n          }))\n          if (dataWithSerialNumbers.length < sizeRef.current) {\n            hasMoreRef.current = false\n          }\n          if (!pageRef.current) {\n            setData(dataWithSerialNumbers)\n          } else {\n            setData((prevData) => [...prevData, ...dataWithSerialNumbers])\n          }\n\n          pageRef.current += 1\n          setCommonLoader(false)\n        })\n        .catch((errors) => {\n          setCommonLoader(false)\n        })\n    }\n  }\n\n  const columns = [\n    {\n      title: (\n        <div className=\"checkbox-container\">\n          <Checkbox\n            id=\"flexCheckDefault\"\n            disabled={sidebarShow === true || data.length === 0}\n            onChange={(e) => handleHeaderCheck(e.target.checked)}\n            checked={selectedRows.length === data.length && data.length > 0}\n          />\n        </div>\n      ),\n      width: 10,\n      fixed: 'left',\n      render: (text, row) => (\n        <div className=\"checkbox-container\">\n          <Checkbox\n            id=\"flexCheckDefault\"\n            disabled={sidebarShow === true}\n            checked={selectedRows.includes(row.id)}\n            onChange={(e) => handleRowCheck(row.id, e.target.checked)}\n          />\n        </div>\n      ),\n    },\n\n    {\n      title: 'Team member',\n      dataIndex: 'userName',\n      key: 'userName',\n      fixed: 'left',\n      width: 20,\n      render: (text) => truncateString(text, 12),\n    },\n    {\n      title: 'Activity date',\n      width: 18,\n      dataIndex: 'activity_date',\n      key: 'activity_date',\n    },\n    {\n      title: 'Product',\n      dataIndex: 'productName',\n      key: 'productName',\n      width: 25,\n      render: (text, row) => {\n        const truncatedProductName = truncateString(row.productName, 25)\n        return (\n          <div>\n            <span>\n              {row.assignedStatus === true && (\n                <span style={{ fontSize: '16px', color: '#00ab55' }}>&#8226;</span>\n              )}\n              {row.assignedStatus === false && (\n                <span style={{ fontSize: '16px', color: '#ffaa00' }}>&#8226;</span>\n              )}\n              <span style={{ marginLeft: '5px', color: '#000' }}>{truncatedProductName}</span>\n            </span>\n          </div>\n        )\n      },\n    },\n    {\n      title: 'Task',\n      dataIndex: 'taskName',\n      key: 'taskName',\n      width: 22,\n      render: (text) => truncateString(text, 12),\n    },\n    {\n      title: 'Hours',\n      dataIndex: 'hours',\n      key: 'hours',\n      width: 10,\n    },\n    {\n      title: 'Remarks',\n      width: 30,\n      dataIndex: 'description',\n      key: 'description',\n      render: (text) => truncateString(text, 20),\n    },\n    {\n      title: 'Action',\n      width: 10,\n      dataIndex: 'action',\n      fixed: 'right',\n      key: 'action',\n      render: (text, row) => (\n        <div>\n          <button\n            className=\"btn border-0 text-c text-secondary check-button\"\n            style={{ fontSize: '12px', padding: '4px 8px' }}\n            disabled={selectedRows.includes(row.id) || sidebarShow === true}\n            onClick={() => showPopconfirm('Approved', row.id)}\n          >\n            <CheckSvg width=\"11\" height=\"9\" viewBox=\"0 0 14 10\" fill=\"#A5A1A1\" />\n          </button>\n          <button\n            className=\"btn border-0 text-c text-secondary cross-button\"\n            style={{ fontSize: '12px', padding: '4px 8px' }}\n            onClick={() => showModal(row.id, 'Reject')}\n            disabled={selectedRows.includes(row.id) || sidebarShow === true}\n          >\n            <CrossSvg width=\"9\" height=\"11\" viewBox=\"0 0 14 10\" fill=\"#A5A1A1\" />\n          </button>\n        </div>\n      ),\n    },\n  ]\n\n  const handleHeaderCheck = (isChecked) => {\n    if (isChecked) {\n      const allRowIds = data.map((row) => row.id)\n      setSelectedRows(allRowIds)\n      selectedRef.current = ''\n      setHeaderLabel(`${allRowIds.length} Selected`)\n    } else {\n      setSelectedRows([])\n      setHeaderLabel('')\n      selectedRef.current = ''\n    }\n  }\n\n  const handleRowCheck = (id, isChecked) => {\n    if (isChecked) {\n      setSelectedRows((prevSelectedRows) => {\n        const updatedSelectedRows = [...prevSelectedRows, id]\n        selectedRef.current = updatedSelectedRows // Update the ref directly\n        setHeaderLabel(`${selectedRef.current.length} Selected`)\n        return updatedSelectedRows\n      })\n    } else {\n      setSelectedRows((prevSelectedRows) => {\n        const updatedSelectedRows = prevSelectedRows.filter((selectedKey) => selectedKey !== id)\n        selectedRef.current = updatedSelectedRows // Update the ref directly\n        if (updatedSelectedRows.length > 0) {\n          setHeaderLabel(`${selectedRef.current.length} Selected`)\n        } else {\n          setHeaderLabel('')\n        }\n        return updatedSelectedRows\n      })\n    }\n  }\n\n  const showModal = (id, status) => {\n    setIsModalOpen(true)\n    setSingleId(id)\n    setRejectStatus(status)\n  }\n\n  const handleCancel = () => {\n    setIsModalOpen(false)\n  }\n\n  const handleApproveCancel = () => {\n    setOpen(false)\n  }\n\n  const handleApproveCancelAll = () => {\n    setOpenSelectAll(false)\n    setSelectedRows([])\n    setHeaderLabel('')\n  }\n\n  const handleRejectCancelAll = () => {\n    setOpenSelectRejectAll(false)\n  }\n\n  const handleApproveActivity = async (status, id, remarks) => {\n    return await statusChange(rejectStatus, id, remarks)\n  }\n\n  const handleApproved = async (status, singleApprovedId, remarks) => {\n    return await statusChange(approvedStatus, singleApprovedId, remarks)\n  }\n\n  const handleButtonClick = async (status, selectedRows, remarks) => {\n    return await statusChange(status, selectedRows, remarks)\n  }\n\n  const statusChange = async (statusValue, id, remarks) => {\n    try {\n      const response = await dispatch(memberStatusChange(statusValue, id, remarks))\n      if (response && response.status === true) {\n        const message = `Activity ${statusValue} Successfully`\n        toast.success(message, {\n          position: toast.POSITION.BOTTOM_RIGHT,\n          autoClose: 2000,\n        })\n        pageRef.current = 0\n        setData([]) // Clear current data\n        hasMoreRef.current = true\n        dispatch(\n          getMemberActivity(\n            pageRef.current,\n            sizeRef.current,\n            categoryRef.current,\n            statusRef.current,\n            startDateRef.current,\n            endDateRef.current,\n          ),\n        )\n        return response\n      } else {\n        throw new Error('Empty response received from the server')\n      }\n    } catch (error) {\n      toast.error(`Error: ${error.message}`, {\n        position: toast.POSITION.BOTTOM_RIGHT,\n        autoClose: 3000,\n      })\n    }\n  }\n\n  const resetFormValues = () => {\n    setIsModalOpen(false)\n    setOpenSelectRejectAll(false)\n    setOpen(false)\n    setOpenSelectAll(false)\n    setSelectedRows([])\n    setHeaderLabel('')\n    selectedRef.current = ''\n    pageRef.current = 0\n    hasMoreRef.current = true\n    dispatch(\n      getMemberActivity(\n        pageRef.current,\n        sizeRef.current,\n        categoryRef.current,\n        statusRef.current,\n        startDateRef.current,\n        endDateRef.current,\n      ),\n    )\n      .then((data) => {\n        const res = data.data\n        const dataWithSerialNumbers = res.map((item, index) => ({\n          ...item,\n          key: `${pageRef.current}-${index}`,\n        }))\n        if (dataWithSerialNumbers.length < sizeRef.current) {\n          hasMoreRef.current = false\n        }\n        if (!pageRef.current) {\n          setData(dataWithSerialNumbers)\n        } else {\n          setData((prevData) => [...prevData, ...dataWithSerialNumbers])\n        }\n\n        pageRef.current += 1\n        setCommonLoader(false)\n      })\n      .catch((errors) => {\n        setCommonLoader(false)\n      })\n  }\n  useEffect(() => {\n    const tableBody = document.querySelector('.members_table .ant-table-body')\n    if (tableBody) {\n      tableBodyRef.current = tableBody\n      tableBody.addEventListener('scroll', handleScroll)\n    }\n\n    return () => {\n      if (tableBody) {\n        tableBody.removeEventListener('scroll', handleScroll)\n      }\n    }\n  }, [handleScroll])\n  return (\n    <div\n      className=\"db_table members_table\"\n      style={{ height: '349px', overflowY: 'auto' }}\n      id=\"scrollableDiv\"\n    >\n      <style>{`\n        .ant-table-body {\n          scrollbar-width: thin;\n        }\n        .members_table .ant-table-wrapper .ant-table-thead > tr > th {\n          color: #919EAB !important;\n          font-size: 12px !important;\n          padding: 12px !important;\n        }\n        .members_table .ant-table-cell {\n          font-size: 12px !important;\n          color: #A5A3A4 !important;\n          font-weight: 600;\n        }\n      `}</style>\n\n      {headerLabel && (\n        <div\n          className=\"table-header\"\n          style={{ display: 'grid', gridTemplateColumns: '10% 1fr auto', alignItems: 'center' }}\n        >\n          <div className=\"table-head-selected text-center text-c\" style={{ paddingTop: '15px' }}>\n            <Checkbox\n              id=\"flexCheckDefault\"\n              className=\"checkbox_design\"\n              checked={selectedRows.length === data.length && data.length > 0}\n              onChange={(e) => handleHeaderCheck(e.target.checked)}\n            />\n          </div>\n          <div\n            className=\"table-head-selected text-c\"\n            style={{ textAlign: 'center', padding: '17px 0px 4px 0px' }}\n          >\n            <span style={{ color: '#f50505' }}>{headerLabel}</span>\n          </div>\n          <div\n            className=\"table-head-selected\"\n            style={{ display: 'flex', justifyContent: 'center' }}\n          >\n            <button\n              className=\"btn border-0 text-c text-secondary check-button\"\n              style={{ fontSize: '12px', padding: '4px 8px' }}\n              type=\"button\"\n              onClick={() => showPopconfirmAll('Approved')}\n            >\n              <CheckSvg width=\"11\" height=\"9\" viewBox=\"0 0 14 10\" fill=\"#00ab55\" />\n            </button>\n            <button\n              className=\"btn border-0 text-c text-secondary cross-button\"\n              style={{ fontSize: '12px', padding: '4px 8px' }}\n              onClick={() => showPopconfirmAll('Reject')}\n            >\n              <CrossSvg width=\"9\" height=\"11\" viewBox=\"0 0 14 10\" fill=\"#e40e2d\" />\n            </button>\n          </div>\n        </div>\n      )}\n      <Table\n        columns={columns}\n        dataSource={data}\n        className=\"db_table_content custom-table\"\n        scroll={{ x: 1300, y: 300 }}\n        pagination={false}\n        loading={{\n          spinning: commonLoader,\n          indicator: <CSpinner color=\"danger\" />,\n        }}\n      />\n      {!hasMoreRef.current && data.length !== 0 && data.length > 5 && (\n        <p style={{ textAlign: 'center' }}>\n          <b style={{ color: '#e40e2d', fontSize: '12px' }}>No more Data to load</b>\n        </p>\n      )}\n\n      {isModalOpen && (\n        <RejectConfirmModal\n          isModalOpen={isModalOpen}\n          handleCancel={handleCancel}\n          handleApprove={handleApproveActivity}\n          id={singleId}\n          headContent=\"Activity\"\n          resetFunc={resetFormValues}\n        />\n      )}\n      {open && (\n        <ApprovedConfirmModal\n          isModalOpen={open}\n          handleCancel={handleApproveCancel}\n          handleApprove={handleApproved}\n          id={singleApprovedId}\n          headContent=\"Activity\"\n          resetFunc={resetFormValues}\n        />\n      )}\n      {openSelectAll && (\n        <ApprovedConfirmModal\n          isModalOpen={openSelectAll}\n          handleCancel={handleApproveCancelAll}\n          handleApprove={(remarks) => handleButtonClick(approvedStatusAll, selectedRows, remarks)}\n          headContent=\"Activity\"\n          resetFunc={resetFormValues}\n        />\n      )}\n      {openSelectRejectAll && (\n        <RejectConfirmModal\n          isModalOpen={openSelectRejectAll}\n          handleCancel={handleRejectCancelAll}\n          handleApprove={(remarks) => handleButtonClick(approvedStatusAll, selectedRows, remarks)}\n          headContent=\"Activity\"\n          resetFunc={resetFormValues}\n        />\n      )}\n    </div>\n  )\n}\n\nPendingTable.propTypes = {\n  startDate: PropTypes.any,\n  endDate: PropTypes.any,\n}\nexport default PendingTable\n","import React, { useEffect, useRef, useState, useCallback } from 'react'\nimport { Table } from 'antd'\nimport PropTypes from 'prop-types'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getMemberActivity } from 'src/redux/memberActivity/action'\nimport { CSpinner } from '@coreui/react'\nimport debounce from 'lodash.debounce'\n\nconst ApprovalTable = ({ typeValue, startDate, endDate }) => {\n  const [commonLoader, setCommonLoader] = useState(true)\n  const dispatch = useDispatch()\n  const [data, setData] = useState([])\n  const pageRef = useRef(0)\n  const statusRef = useRef(typeValue)\n  const startDateRef = useRef(null)\n  const endDateRef = useRef(null)\n  const categoryRef = useRef('approveddefault')\n  const hasMoreRef = useRef(true)\n  const sizeRef = useRef(5)\n  const tableBodyRef = useRef(null)\n\n  const addSerialNumbers = (data) => {\n    const startIndex = pageRef.current * sizeRef.current\n    return data.map((item, index) => ({\n      ...item,\n      sno: startIndex + index + 1,\n    }))\n  }\n\n  const truncateString = (str, num) => {\n    if (!str) {\n      return '' // or you can return str itself, which would be null or undefined\n    }\n    return str.length > num ? `${str.substring(0, num)}...` : str\n  }\n\n  const columns = [\n    {\n      title: 'SI.No',\n      dataIndex: 'sno',\n      key: 'sno',\n      width: 8,\n      fixed: 'left',\n    },\n    {\n      title: 'Team member',\n      dataIndex: 'userName',\n      key: 'userName',\n      fixed: 'left',\n      width: 18,\n      render: (text) => truncateString(text, 12),\n    },\n    {\n      title: 'Activity date',\n      width: 12,\n      dataIndex: 'activity_date',\n      key: 'activity_date',\n    },\n    {\n      title: 'Product',\n      dataIndex: 'productName',\n      key: 'productName',\n      width: 20,\n      render: (text, row) => {\n        const truncatedProductName = truncateString(row.productName, 16)\n        return (\n          <div>\n            <span>\n              {row.assignedStatus === true && (\n                <span style={{ fontSize: '16px', color: '#00ab55' }}>&#8226;</span>\n              )}\n              {row.assignedStatus === false && (\n                <span style={{ fontSize: '16px', color: '#ffaa00' }}>&#8226;</span>\n              )}\n              <span style={{ marginLeft: '5px', color: '#000' }}>{truncatedProductName}</span>\n            </span>\n          </div>\n        )\n      },\n    },\n    {\n      title: 'Task',\n      dataIndex: 'taskName',\n      key: 'taskName',\n      width: 18,\n      render: (text) => truncateString(text, 15),\n    },\n\n    {\n      title: 'Hours',\n      dataIndex: 'hours',\n      key: 'hours',\n      width: 10,\n    },\n    {\n      title: 'Approver Status',\n      dataIndex: 'supervisorStatus',\n      key: 'supervisorStatus',\n      width: 15,\n\n      render: (text, row) => {\n        let className = 'not-text1'\n        if (text === 'Approved') {\n          className = 'green-text1'\n        } else if (text === 'Reject' || text === 'Rejected') {\n          className = 'red-text1'\n        } else if (text === 'Pending') {\n          className = 'warning-text1'\n        } else if (text === 'Resubmit') {\n          className = 'info-text1'\n        }\n        return <div className={className}>{text === 'Reject' ? 'Rejected' : text}</div>\n      },\n    },\n    {\n      title: 'Remarks',\n      width: 30,\n      dataIndex: 'description',\n      key: 'description',\n      render: (text) => truncateString(text, 20),\n    },\n  ]\n\n  const fetchMoreData = () => {\n    if (hasMoreRef.current) {\n      dispatch(\n        getMemberActivity(\n          pageRef.current,\n          sizeRef.current,\n          categoryRef.current,\n          statusRef.current,\n          startDateRef.current,\n          endDateRef.current,\n        ),\n      )\n        .then((data) => {\n          const res = data.data\n          const dataWithSerialNumbers = addSerialNumbers(res)\n          if (dataWithSerialNumbers.length < sizeRef.current) {\n            hasMoreRef.current = false\n          }\n          if (!pageRef.current) {\n            setData(dataWithSerialNumbers)\n          } else {\n            setData((prevData) => [...prevData, ...dataWithSerialNumbers])\n          }\n\n          pageRef.current += 1\n          setCommonLoader(false)\n        })\n        .catch((errors) => {\n          setCommonLoader(false)\n        })\n    }\n  }\n\n  useEffect(() => {\n    if (startDate && endDate) {\n      categoryRef.current = 'approveddefaultdate'\n      startDateRef.current = startDate\n      endDateRef.current = endDate\n    } else {\n      categoryRef.current = 'approveddefault'\n    }\n    setCommonLoader(true)\n    pageRef.current = 0\n    hasMoreRef.current = true\n    setData([])\n    dispatch(\n      getMemberActivity(\n        pageRef.current,\n        sizeRef.current,\n        categoryRef.current,\n        statusRef.current,\n        startDateRef.current,\n        endDateRef.current,\n      ),\n    )\n      .then((data) => {\n        const res = data.data\n        const dataWithSerialNumbers = addSerialNumbers(res)\n        if (dataWithSerialNumbers.length < sizeRef.current) {\n          hasMoreRef.current = false\n        }\n        if (!pageRef.current) {\n          setData(dataWithSerialNumbers)\n        } else {\n          setData((prevData) => [...prevData, ...dataWithSerialNumbers])\n        }\n\n        pageRef.current += 1\n        setCommonLoader(false)\n      })\n      .catch((errors) => {\n        setCommonLoader(false)\n      })\n  }, [startDate, endDate, dispatch])\n\n  const handleScroll = useCallback(\n    debounce(() => {\n      if (!tableBodyRef.current) return\n\n      const { scrollTop, scrollHeight, clientHeight } = tableBodyRef.current\n      if (scrollTop + clientHeight >= scrollHeight - 10) {\n        fetchMoreData()\n      }\n    }, 100),\n    [hasMoreRef.current, commonLoader],\n  )\n\n  useEffect(() => {\n    const tableBody = document.querySelector('.memberAtable .ant-table-body')\n    if (tableBody) {\n      tableBodyRef.current = tableBody\n      tableBody.addEventListener('scroll', handleScroll)\n    }\n\n    return () => {\n      if (tableBody) {\n        tableBody.removeEventListener('scroll', handleScroll)\n      }\n    }\n  }, [handleScroll])\n\n  return (\n    <div className=\"db_table memberAtable\" style={{ height: '349px ' }}>\n      <style>{`\n        .ant-table-body {\n          scrollbar-width: thin;\n        }\n        .memberAtable .ant-table-wrapper .ant-table-thead > tr > th {\n          color: #919EAB !important;\n          font-size: 12px !important;\n          padding: 12px !important;\n        }\n        .memberAtable .ant-table-wrapper .ant-table-thead > tr > td {\n          color: #A5A3A4 !important;\n        }\n        .memberAtable .ant-table-cell {\n          font-size: 12px !important;\n          color: #A5A3A4 !important;\n          font-weight: 600;\n        }\n      `}</style>\n      <Table\n        columns={columns}\n        dataSource={data}\n        className=\"db_table_content\"\n        scroll={{ x: 1300, y: 290 }}\n        pagination={false}\n        loading={{\n          spinning: commonLoader,\n          indicator: <CSpinner color=\"danger\" />,\n        }}\n      />\n      {!hasMoreRef.current && data.length !== 0 && data.length > 5 && (\n        <p style={{ textAlign: 'center' }}>\n          <b style={{ color: '#e40e2d', fontSize: '12px' }}>No more Data to load</b>\n        </p>\n      )}\n    </div>\n  )\n}\n\nApprovalTable.propTypes = {\n  typeValue: PropTypes.any,\n  startDate: PropTypes.any,\n  endDate: PropTypes.any,\n}\nexport default ApprovalTable\n","import React, { useState, useEffect, useRef, useCallback } from 'react'\nimport { Checkbox, Table } from 'antd'\nimport { useDispatch, useSelector } from 'react-redux'\nimport CrossSvg from 'src/views/svgImages/CrossSvg'\nimport CheckSvg from 'src/views/svgImages/CheckSvg'\nimport {\n  getContractMemberActivity,\n  contractMemberStatusChange,\n} from 'src/redux/memberActivity/action'\nimport debounce from 'lodash.debounce'\nimport { CSpinner } from '@coreui/react'\nimport ApprovedConfirmModal from '../../modal/ApprovedConfirmModel'\nimport RejectConfirmModal from '../../modal/RejectConfirmModal'\nimport { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport PropTypes from 'prop-types'\n\nconst ContractPendingTable = ({ startDate, endDate }) => {\n  const dispatch = useDispatch()\n  const [cdata, setCdata] = useState([])\n  const tableBodyRef = useRef(null)\n  const pageRef = useRef(0)\n  const sizeRef = useRef(5)\n  const statusRef = useRef(null)\n  const startDateRef = useRef(null)\n  const endDateRef = useRef(null)\n  const categoryRef = useRef('default')\n  const hasMoreRef = useRef(true)\n  const [commonLoader, setCommonLoader] = useState(true)\n  const [selectedRows, setSelectedRows] = useState([])\n  const selectedRef = useRef('')\n  const [isModalOpen, setIsModalOpen] = useState(false)\n\n  const [rejectStatus, setRejectStatus] = useState('')\n  const [singleId, setSingleId] = useState()\n  const [singleApprovedId, setSingleApprovedId] = useState('')\n  const [openSelectAll, setOpenSelectAll] = useState(false)\n  const [openSelectRejectAll, setOpenSelectRejectAll] = useState(false)\n  const [open, setOpen] = useState(false)\n  const [approvedStatusAll, setApprovedStatusAll] = useState('')\n  const [approvedStatus, setApprovedStatus] = useState('')\n  const [headerLabel, setHeaderLabel] = useState('')\n  const sidebarShow = useSelector((state) => state.dashboard.sidebarShow)\n  const contractMemberPendingActivity = useSelector(\n    (state) => state.memberactivity?.contractMemberData,\n  )\n\n  // useEffect(() => {\n  //   if (startDate && endDate) {\n  //     categoryRef.current = 'date'\n  //     startDateRef.current = startDate\n  //     endDateRef.current = endDate\n  //   } else {\n  //     categoryRef.current = 'default'\n  //   }\n  //   setSelectedRows([])\n  //   selectedRef.current = ''\n  //   setHeaderLabel('')\n  //   pageRef.current = 0\n  //   hasMoreRef.current = true\n  //   setCommonLoader(true)\n  //   setCdata([])\n  //   dispatch(\n  //     getContractMemberActivity(\n  //       pageRef.current,\n  //       sizeRef.current,\n  //       categoryRef.current,\n  //       statusRef.current,\n  //       startDateRef.current,\n  //       endDateRef.current,\n  //     ),\n  //   )\n  // }, [startDate, endDate])\n\n  const showPopconfirm = (status, rowId) => {\n    setOpen(true)\n    setSingleApprovedId(rowId)\n    setApprovedStatus(status)\n  }\n\n  const showPopconfirmAll = (status) => {\n    if (status === 'Approved') {\n      setOpenSelectAll(true)\n      setApprovedStatusAll('Approved')\n    } else if (status === 'Reject') {\n      setOpenSelectRejectAll(true)\n      setApprovedStatusAll('Reject')\n    }\n  }\n\n  const truncateString = (str, num) => {\n    if (!str) {\n      return '' // or you can return str itself, which would be null or undefined\n    }\n    return str.length > num ? `${str.substring(0, num)}...` : str\n  }\n\n  useEffect(() => {\n    if (contractMemberPendingActivity && contractMemberPendingActivity.length > 0) {\n      const dataWithSerialNumbers = contractMemberPendingActivity.map((item, index) => ({\n        ...item,\n        key: `${pageRef.current}-${index}`,\n      }))\n      if (dataWithSerialNumbers.length < sizeRef.current) {\n        hasMoreRef.current = false\n      }\n      setCdata((prevData) => [...prevData, ...dataWithSerialNumbers])\n      pageRef.current += 1\n      setCommonLoader(false)\n    } else {\n      setCommonLoader(false)\n    }\n  }, [contractMemberPendingActivity])\n\n  const handleScroll = useCallback(\n    debounce(() => {\n      if (!tableBodyRef.current) return\n\n      const { scrollTop, scrollHeight, clientHeight } = tableBodyRef.current\n      if (scrollTop + clientHeight >= scrollHeight - 10) {\n        fetchMoreData()\n      }\n    }, 100),\n    [],\n  )\n\n  const fetchMoreData = () => {\n    if (hasMoreRef.current) {\n      dispatch(\n        getContractMemberActivity(\n          pageRef.current,\n          sizeRef.current,\n          categoryRef.current,\n          statusRef.current,\n          startDateRef.current,\n          endDateRef.current,\n        ),\n      )\n    }\n  }\n\n  useEffect(() => {\n    const tableBody = document.querySelector('.cpt .ant-table-body')\n    if (tableBody) {\n      tableBodyRef.current = tableBody\n      tableBody.addEventListener('scroll', handleScroll)\n    }\n\n    return () => {\n      if (tableBody) {\n        tableBody.removeEventListener('scroll', handleScroll)\n      }\n    }\n  }, [handleScroll])\n\n  useEffect(() => {\n    if (startDate && endDate) {\n      categoryRef.current = 'date'\n      startDateRef.current = startDate\n      endDateRef.current = endDate\n    } else {\n      categoryRef.current = 'default'\n    }\n    setSelectedRows([])\n    selectedRef.current = ''\n    setHeaderLabel('')\n    setCommonLoader(true)\n    pageRef.current = 0 // Reset pagination\n    setCdata([]) // Clear current data\n    hasMoreRef.current = true // Reset hasMore flag\n    dispatch(\n      getContractMemberActivity(\n        pageRef.current,\n        sizeRef.current,\n        categoryRef.current,\n        statusRef.current,\n        startDateRef.current,\n        endDateRef.current,\n      ),\n    )\n  }, [dispatch, startDate, endDate])\n\n  const columns = [\n    {\n      title: (\n        <div className=\"checkbox-container\">\n          <Checkbox\n            id=\"flexCheckDefault\"\n            onChange={(e) => handleHeaderCheck(e.target.checked)}\n            checked={selectedRows.length === cdata.length && cdata.length > 0}\n            disabled={sidebarShow === true || cdata.length === 0}\n          />\n        </div>\n      ),\n      width: 10,\n      fixed: 'left',\n      render: (text, row) => (\n        <div className=\"checkbox-container\">\n          <Checkbox\n            id=\"flexCheckDefault\"\n            checked={selectedRows.includes(row.id)}\n            onChange={(e) => handleRowCheck(row.id, e.target.checked)}\n            disabled={sidebarShow === true}\n          />\n        </div>\n      ),\n    },\n\n    {\n      title: 'Team member',\n      dataIndex: 'userName',\n      key: 'userName',\n      fixed: 'left',\n      width: 20,\n      render: (text) => truncateString(text, 12),\n    },\n    {\n      title: 'Activity date',\n      width: 18,\n      dataIndex: 'activity_date',\n      key: 'activity_date',\n    },\n    {\n      title: 'Product',\n      dataIndex: 'productName',\n      key: 'productName',\n      width: 25,\n      render: (text, row) => {\n        const truncatedProductName = truncateString(row.productName, 12)\n        return (\n          <div>\n            <span>\n              {row.assignedStatus === true && (\n                <span style={{ fontSize: '16px', color: '#00ab55' }}>&#8226;</span>\n              )}\n              {row.assignedStatus === false && (\n                <span style={{ fontSize: '16px', color: '#ffaa00' }}>&#8226;</span>\n              )}\n              <span style={{ marginLeft: '5px', color: '#000' }}>{truncatedProductName}</span>\n            </span>\n          </div>\n        )\n      },\n    },\n    {\n      title: 'Task',\n      dataIndex: 'taskName',\n      key: 'taskName',\n      width: 22,\n      render: (text) => truncateString(text, 12),\n    },\n    {\n      title: 'Hours',\n      dataIndex: 'hours',\n      key: 'hours',\n      width: 10,\n    },\n    {\n      title: 'Remarks',\n      width: 30,\n      dataIndex: 'description',\n      key: 'description',\n      render: (text) => truncateString(text, 20),\n    },\n    {\n      title: 'Action',\n      width: 18,\n      dataIndex: 'action',\n      fixed: 'right',\n      key: 'action',\n      render: (text, row) => (\n        <div>\n          <button\n            className=\"btn border-0 text-c text-secondary check-button\"\n            style={{ fontSize: '12px', padding: '4px 8px' }}\n            disabled={selectedRows.includes(row.id)}\n            onClick={() => showPopconfirm('Approved', row.id)}\n          >\n            <CheckSvg width=\"11\" height=\"9\" viewBox=\"0 0 14 10\" fill=\"#A5A1A1\" />\n          </button>\n          <button\n            className=\"btn border-0 text-c text-secondary cross-button\"\n            style={{ fontSize: '12px', padding: '4px 8px' }}\n            onClick={() => showModal(row.id, 'Reject')}\n            disabled={selectedRows.includes(row.id)}\n          >\n            <CrossSvg width=\"9\" height=\"11\" viewBox=\"0 0 14 10\" fill=\"#A5A1A1\" />\n          </button>\n        </div>\n      ),\n    },\n  ]\n\n  const handleHeaderCheck = (isChecked) => {\n    if (isChecked) {\n      const allRowIds = cdata.map((row) => row.id)\n      setSelectedRows(allRowIds)\n      selectedRef.current = ''\n      setHeaderLabel(`${allRowIds.length} Selected`)\n    } else {\n      setSelectedRows([])\n      setHeaderLabel('')\n      selectedRef.current = ''\n    }\n  }\n\n  const handleRowCheck = (id, isChecked) => {\n    if (isChecked) {\n      setSelectedRows((prevSelectedRows) => {\n        const updatedSelectedRows = [...prevSelectedRows, id]\n        selectedRef.current = updatedSelectedRows // Update the ref directly\n        setHeaderLabel(`${selectedRef.current.length} Selected`)\n        return updatedSelectedRows\n      })\n    } else {\n      setSelectedRows((prevSelectedRows) => {\n        const updatedSelectedRows = prevSelectedRows.filter((selectedKey) => selectedKey !== id)\n        selectedRef.current = updatedSelectedRows // Update the ref directly\n        if (updatedSelectedRows.length > 0) {\n          setHeaderLabel(`${selectedRef.current.length} Selected`)\n        } else {\n          setHeaderLabel('')\n        }\n        return updatedSelectedRows\n      })\n    }\n  }\n\n  const showModal = (id, status) => {\n    setIsModalOpen(true)\n    setSingleId(id)\n    setRejectStatus(status)\n  }\n\n  const handleCancel = () => {\n    setIsModalOpen(false)\n  }\n\n  const handleApproveCancel = () => {\n    setOpen(false)\n  }\n\n  const handleApproveCancelAll = () => {\n    setOpenSelectAll(false)\n    setSelectedRows([])\n    setHeaderLabel('')\n  }\n\n  const handleRejectCancelAll = () => {\n    setOpenSelectRejectAll(false)\n  }\n\n  const handleApproveActivity = async (status, id, remarks) => {\n    return await statusChange(rejectStatus, id, remarks)\n  }\n\n  const handleApproved = async (status, singleApprovedId, remarks) => {\n    return await statusChange(approvedStatus, singleApprovedId, remarks)\n  }\n\n  const handleButtonClick = async (status, selectedRows, remarks) => {\n    return await statusChange(status, selectedRows, remarks)\n  }\n\n  const statusChange = async (statusValue, id, remarks) => {\n    try {\n      const response = await dispatch(contractMemberStatusChange(statusValue, id, remarks))\n      if (response && response.status === true) {\n        const message = `Activity ${statusValue} Successfully`\n        toast.success(message, {\n          position: toast.POSITION.BOTTOM_RIGHT,\n          autoClose: 2000,\n        })\n        pageRef.current = 0\n        setCdata([]) // Clear current data\n        hasMoreRef.current = true\n        dispatch(\n          getContractMemberActivity(\n            pageRef.current,\n            sizeRef.current,\n            categoryRef.current,\n            statusRef.current,\n            startDateRef.current,\n            endDateRef.current,\n          ),\n        )\n        return response\n      } else {\n        throw new Error('Empty response received from the server')\n      }\n    } catch (error) {\n      toast.error(`Error: ${error.message}`, {\n        position: toast.POSITION.BOTTOM_RIGHT,\n        autoClose: 3000,\n      })\n    }\n  }\n\n  const resetFormValues = () => {\n    setIsModalOpen(false)\n    setOpenSelectRejectAll(false)\n    setOpen(false)\n    setOpenSelectAll(false)\n    setSelectedRows([])\n    setHeaderLabel('')\n    selectedRef.current = ''\n    pageRef.current = 0\n    hasMoreRef.current = true\n    dispatch(\n      getContractMemberActivity(\n        pageRef.current,\n        sizeRef.current,\n        categoryRef.current,\n        statusRef.current,\n        startDateRef.current,\n        endDateRef.current,\n      ),\n    )\n  }\n\n  return (\n    <div\n      className=\"db_table contracts\"\n      style={{ height: '349px', overflow: 'auto' }}\n      id=\"scrollableDiv\"\n    >\n      <style>{`\n        .ant-table-body {\n          scrollbar-width: thin;\n        }\n        .contracts .ant-table-wrapper .ant-table-thead > tr > th {\n          color: #919EAB !important;\n          font-size: 12px !important;\n          padding: 12px !important;\n        }\n        .contracts .ant-table-cell {\n          font-size: 12px !important;\n          color: #A5A3A4 !important;\n          font-weight: 600;\n        }\n      `}</style>\n      {headerLabel && (\n        <div\n          className=\"table-header\"\n          style={{ display: 'grid', gridTemplateColumns: '10% 1fr auto', alignItems: 'center' }}\n        >\n          <div className=\"table-head-selected text-center text-c\" style={{ paddingTop: '15px' }}>\n            <Checkbox\n              id=\"flexCheckDefault\"\n              className=\"checkbox_design\"\n              checked={selectedRows.length === cdata.length && cdata.length > 0}\n              onChange={(e) => handleHeaderCheck(e.target.checked)}\n            />\n          </div>\n          <div\n            className=\"table-head-selected text-c\"\n            style={{ textAlign: 'center', padding: '17px 0px 4px 0px' }}\n          >\n            <span style={{ color: '#f50505' }}>{headerLabel}</span>\n          </div>\n          <div\n            className=\"table-head-selected\"\n            style={{ display: 'flex', justifyContent: 'center' }}\n          >\n            <button\n              className=\"btn border-0 text-c text-secondary check-button\"\n              style={{ fontSize: '12px', padding: '4px 8px' }}\n              type=\"button\"\n              onClick={() => showPopconfirmAll('Approved')}\n            >\n              <CheckSvg width=\"11\" height=\"9\" viewBox=\"0 0 14 10\" fill=\"#00ab55\" />\n            </button>\n            <button\n              className=\"btn border-0 text-c text-secondary cross-button\"\n              style={{ fontSize: '12px', padding: '4px 8px' }}\n              onClick={() => showPopconfirmAll('Reject')}\n            >\n              <CrossSvg width=\"9\" height=\"11\" viewBox=\"0 0 14 10\" fill=\"#e40e2d\" />\n            </button>\n          </div>\n        </div>\n      )}\n      <Table\n        columns={columns}\n        dataSource={cdata}\n        className=\"cpt db_table_content\"\n        scroll={{ x: 1000, y: 300 }}\n        pagination={false}\n        loading={{\n          spinning: commonLoader,\n          indicator: <CSpinner color=\"danger\" />,\n        }}\n      />\n      {!hasMoreRef.current && cdata.length !== 0 && cdata.length > 5 && (\n        <p style={{ textAlign: 'center' }}>\n          <b style={{ color: '#e40e2d', fontSize: '12px' }}>No more Data to load</b>\n        </p>\n      )}\n      {isModalOpen && (\n        <RejectConfirmModal\n          isModalOpen={isModalOpen}\n          handleCancel={handleCancel}\n          handleApprove={handleApproveActivity}\n          id={singleId}\n          headContent=\"Activity\"\n          resetFunc={resetFormValues}\n        />\n      )}\n      {open && (\n        <ApprovedConfirmModal\n          isModalOpen={open}\n          handleCancel={handleApproveCancel}\n          handleApprove={handleApproved}\n          id={singleApprovedId}\n          headContent=\"Activity\"\n          resetFunc={resetFormValues}\n        />\n      )}\n      {openSelectAll && (\n        <ApprovedConfirmModal\n          isModalOpen={openSelectAll}\n          handleCancel={handleApproveCancelAll}\n          handleApprove={(remarks) => handleButtonClick(approvedStatusAll, selectedRows, remarks)}\n          headContent=\"Activity\"\n          resetFunc={resetFormValues}\n        />\n      )}\n      {openSelectRejectAll && (\n        <RejectConfirmModal\n          isModalOpen={openSelectRejectAll}\n          handleCancel={handleRejectCancelAll}\n          handleApprove={(remarks) => handleButtonClick(approvedStatusAll, selectedRows, remarks)}\n          headContent=\"Activity\"\n          resetFunc={resetFormValues}\n        />\n      )}\n    </div>\n  )\n}\n\nContractPendingTable.propTypes = {\n  startDate: PropTypes.any,\n  endDate: PropTypes.any,\n}\nexport default ContractPendingTable\n","import React, { useState, useEffect, useRef, useCallback } from 'react'\nimport { Checkbox, Table } from 'antd'\nimport { useDispatch, useSelector } from 'react-redux'\nimport CrossSvg from 'src/views/svgImages/CrossSvg'\nimport CheckSvg from 'src/views/svgImages/CheckSvg'\nimport { getOwnerMemberActivity, ownerMemberStatusUpdate } from 'src/redux/memberActivity/action'\nimport debounce from 'lodash.debounce'\nimport { CSpinner } from '@coreui/react'\nimport ApprovedConfirmModal from '../../modal/ApprovedConfirmModel'\nimport RejectConfirmModal from '../../modal/RejectConfirmModal'\nimport { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport PropTypes from 'prop-types'\n\nconst OwnerPendingTable = ({ startDate, endDate }) => {\n  const dispatch = useDispatch()\n  const [cdata, setCdata] = useState([])\n  const tableBodyRef = useRef(null)\n  const pageRef = useRef(0)\n  const sizeRef = useRef(5)\n  const startDateRef = useRef(null)\n  const endDateRef = useRef(null)\n  const categoryRef = useRef('default')\n  const hasMoreRef = useRef(true)\n  const [commonLoader, setCommonLoader] = useState(true)\n  const [selectedRows, setSelectedRows] = useState([])\n  const selectedRef = useRef('')\n  const [isModalOpen, setIsModalOpen] = useState(false)\n\n  const [rejectStatus, setRejectStatus] = useState('')\n  const [singleId, setSingleId] = useState()\n  const [singleApprovedId, setSingleApprovedId] = useState('')\n  const [openSelectAll, setOpenSelectAll] = useState(false)\n  const [openSelectRejectAll, setOpenSelectRejectAll] = useState(false)\n  const [open, setOpen] = useState(false)\n  const [approvedStatusAll, setApprovedStatusAll] = useState('')\n  const [approvedStatus, setApprovedStatus] = useState('')\n  const [headerLabel, setHeaderLabel] = useState('')\n  const sidebarShow = useSelector((state) => state.dashboard.sidebarShow)\n  const getOwnerMemberData = useSelector((state) => state.memberactivity?.ownerMemberData)\n\n  // useEffect(() => {\n  //   if (startDate && endDate) {\n  //     categoryRef.current = 'date'\n  //     startDateRef.current = startDate\n  //     endDateRef.current = endDate\n  //   } else {\n  //     categoryRef.current = 'default'\n  //   }\n  //   setSelectedRows([])\n  //   selectedRef.current = ''\n  //   setHeaderLabel('')\n  //   pageRef.current = 0\n  //   hasMoreRef.current = true\n  //   setCommonLoader(true)\n  //   setCdata([])\n  //   dispatch(\n  //     getOwnerMemberActivity(\n  //       pageRef.current,\n  //       sizeRef.current,\n  //       categoryRef.current,\n  //       startDateRef.current,\n  //       endDateRef.current,\n  //     ),\n  //   )\n  // }, [startDate, endDate])\n\n  const showPopconfirm = (status, rowId) => {\n    setOpen(true)\n    setSingleApprovedId(rowId)\n    setApprovedStatus(status)\n  }\n\n  const showPopconfirmAll = (status) => {\n    if (status === 'Approved') {\n      setOpenSelectAll(true)\n      setApprovedStatusAll('Approved')\n    } else if (status === 'Reject') {\n      setOpenSelectRejectAll(true)\n      setApprovedStatusAll('Reject')\n    }\n  }\n\n  const truncateString = (str, num) => {\n    if (!str) {\n      return '' // or you can return str itself, which would be null or undefined\n    }\n    return str.length > num ? `${str.substring(0, num)}...` : str\n  }\n\n  useEffect(() => {\n    if (getOwnerMemberData && getOwnerMemberData.length > 0) {\n      const dataWithSerialNumbers = getOwnerMemberData.map((item, index) => ({\n        ...item,\n        key: `${pageRef.current}-${index}`,\n      }))\n      if (dataWithSerialNumbers.length < sizeRef.current) {\n        hasMoreRef.current = false\n      }\n      setCdata((prevData) => [...prevData, ...dataWithSerialNumbers])\n      pageRef.current += 1\n      setCommonLoader(false)\n    } else {\n      setCommonLoader(false)\n    }\n  }, [getOwnerMemberData])\n\n  const handleScroll = useCallback(\n    debounce(() => {\n      if (!tableBodyRef.current) return\n\n      const { scrollTop, scrollHeight, clientHeight } = tableBodyRef.current\n      if (scrollTop + clientHeight >= scrollHeight - 10) {\n        fetchMoreData()\n      }\n    }, 100),\n    [],\n  )\n\n  const fetchMoreData = () => {\n    if (hasMoreRef.current) {\n      dispatch(\n        getOwnerMemberActivity(\n          pageRef.current,\n          sizeRef.current,\n          categoryRef.current,\n          startDateRef.current,\n          endDateRef.current,\n        ),\n      )\n    }\n  }\n\n  useEffect(() => {\n    const tableBody = document.querySelector('.cpt .ant-table-body')\n    if (tableBody) {\n      tableBodyRef.current = tableBody\n      tableBody.addEventListener('scroll', handleScroll)\n    }\n\n    return () => {\n      if (tableBody) {\n        tableBody.removeEventListener('scroll', handleScroll)\n      }\n    }\n  }, [handleScroll])\n\n  useEffect(() => {\n    if (startDate && endDate) {\n      categoryRef.current = 'date'\n      startDateRef.current = startDate\n      endDateRef.current = endDate\n    } else {\n      categoryRef.current = 'default'\n    }\n\n    setSelectedRows([])\n    selectedRef.current = ''\n    setHeaderLabel('')\n    setCommonLoader(true)\n    pageRef.current = 0 // Reset pagination\n    setCdata([]) // Clear current data\n    hasMoreRef.current = true // Reset hasMore flag\n    dispatch(\n      getOwnerMemberActivity(\n        pageRef.current,\n        sizeRef.current,\n        categoryRef.current,\n        startDateRef.current,\n        endDateRef.current,\n      ),\n    )\n  }, [dispatch, startDate, endDate])\n\n  const columns = [\n    {\n      title: (\n        <div className=\"checkbox-container\">\n          <Checkbox\n            id=\"flexCheckDefault\"\n            onChange={(e) => handleHeaderCheck(e.target.checked)}\n            checked={selectedRows.length === cdata.length && cdata.length > 0}\n            disabled={sidebarShow === true || cdata.length === 0}\n          />\n        </div>\n      ),\n      width: 10,\n      fixed: 'left',\n      render: (text, row) => (\n        <div className=\"checkbox-container\">\n          <Checkbox\n            id=\"flexCheckDefault\"\n            checked={selectedRows.includes(row.id)}\n            onChange={(e) => handleRowCheck(row.id, e.target.checked)}\n            disabled={sidebarShow === true}\n          />\n        </div>\n      ),\n    },\n\n    {\n      title: 'Team member',\n      dataIndex: 'userName',\n      key: 'userName',\n      fixed: 'left',\n      width: 20,\n      render: (text) => truncateString(text, 12),\n    },\n    {\n      title: 'Activity date',\n      width: 18,\n      dataIndex: 'activity_date',\n      key: 'activity_date',\n    },\n    {\n      title: 'Product',\n      dataIndex: 'productName',\n      key: 'productName',\n      width: 25,\n      render: (text, row) => {\n        const truncatedProductName = truncateString(row.productName, 12)\n        return (\n          <div>\n            <span>\n              {row.assignedStatus === true && (\n                <span style={{ fontSize: '16px', color: '#00ab55' }}>&#8226;</span>\n              )}\n              {row.assignedStatus === false && (\n                <span style={{ fontSize: '16px', color: '#ffaa00' }}>&#8226;</span>\n              )}\n              <span style={{ marginLeft: '5px', color: '#000' }}>{truncatedProductName}</span>\n            </span>\n          </div>\n        )\n      },\n    },\n    {\n      title: 'Task',\n      dataIndex: 'taskName',\n      key: 'taskName',\n      width: 22,\n      render: (text) => truncateString(text, 12),\n    },\n    {\n      title: 'Hours',\n      dataIndex: 'hours',\n      key: 'hours',\n      width: 10,\n    },\n    {\n      title: 'Remarks',\n      width: 30,\n      dataIndex: 'description',\n      key: 'description',\n      render: (text) => truncateString(text, 20),\n    },\n    {\n      title: 'Action',\n      width: 18,\n      dataIndex: 'action',\n      fixed: 'right',\n      key: 'action',\n      render: (text, row) => (\n        <div>\n          <button\n            className=\"btn border-0 text-c text-secondary check-button\"\n            style={{ fontSize: '12px', padding: '4px 8px' }}\n            disabled={selectedRows.includes(row.id)}\n            onClick={() => showPopconfirm('Approved', row.id)}\n          >\n            <CheckSvg width=\"11\" height=\"9\" viewBox=\"0 0 14 10\" fill=\"#A5A1A1\" />\n          </button>\n          <button\n            className=\"btn border-0 text-c text-secondary cross-button\"\n            style={{ fontSize: '12px', padding: '4px 8px' }}\n            onClick={() => showModal(row.id, 'Reject')}\n            disabled={selectedRows.includes(row.id)}\n          >\n            <CrossSvg width=\"9\" height=\"11\" viewBox=\"0 0 14 10\" fill=\"#A5A1A1\" />\n          </button>\n        </div>\n      ),\n    },\n  ]\n\n  const handleHeaderCheck = (isChecked) => {\n    if (isChecked) {\n      const allRowIds = cdata.map((row) => row.id)\n      setSelectedRows(allRowIds)\n      selectedRef.current = ''\n      setHeaderLabel(`${allRowIds.length} Selected`)\n    } else {\n      setSelectedRows([])\n      setHeaderLabel('')\n      selectedRef.current = ''\n    }\n  }\n\n  const handleRowCheck = (id, isChecked) => {\n    if (isChecked) {\n      setSelectedRows((prevSelectedRows) => {\n        const updatedSelectedRows = [...prevSelectedRows, id]\n        selectedRef.current = updatedSelectedRows // Update the ref directly\n        setHeaderLabel(`${selectedRef.current.length} Selected`)\n        return updatedSelectedRows\n      })\n    } else {\n      setSelectedRows((prevSelectedRows) => {\n        const updatedSelectedRows = prevSelectedRows.filter((selectedKey) => selectedKey !== id)\n        selectedRef.current = updatedSelectedRows // Update the ref directly\n        if (updatedSelectedRows.length > 0) {\n          setHeaderLabel(`${selectedRef.current.length} Selected`)\n        } else {\n          setHeaderLabel('')\n        }\n        return updatedSelectedRows\n      })\n    }\n  }\n\n  const showModal = (id, status) => {\n    setIsModalOpen(true)\n    setSingleId(id)\n    setRejectStatus(status)\n  }\n\n  const handleCancel = () => {\n    setIsModalOpen(false)\n  }\n\n  const handleApproveCancel = () => {\n    setOpen(false)\n  }\n\n  const handleApproveCancelAll = () => {\n    setOpenSelectAll(false)\n    setSelectedRows([])\n    setHeaderLabel('')\n  }\n\n  const handleRejectCancelAll = () => {\n    setOpenSelectRejectAll(false)\n  }\n\n  const handleApproveActivity = async (status, id, remarks) => {\n    return await statusChange(rejectStatus, id, remarks)\n  }\n\n  const handleApproved = async (status, singleApprovedId, remarks) => {\n    return await statusChange(approvedStatus, singleApprovedId, remarks)\n  }\n\n  const handleButtonClick = async (status, selectedRows, remarks) => {\n    return await statusChange(status, selectedRows, remarks)\n  }\n\n  const statusChange = async (statusValue, id, remarks) => {\n    try {\n      const response = await dispatch(ownerMemberStatusUpdate(statusValue, id, remarks))\n      if (response && response.status === true) {\n        const message = `Activity ${statusValue} Successfully`\n        toast.success(message, {\n          position: toast.POSITION.BOTTOM_RIGHT,\n          autoClose: 2000,\n        })\n        pageRef.current = 0\n        setCdata([]) // Clear current data\n        hasMoreRef.current = true\n        dispatch(\n          getOwnerMemberActivity(\n            pageRef.current,\n            sizeRef.current,\n            categoryRef.current,\n            startDateRef.current,\n            endDateRef.current,\n          ),\n        )\n        return response\n      } else {\n        throw new Error('Empty response received from the server')\n      }\n    } catch (error) {\n      toast.error(`Error: ${error.message}`, {\n        position: toast.POSITION.BOTTOM_RIGHT,\n        autoClose: 3000,\n      })\n    }\n  }\n\n  const resetFormValues = () => {\n    setIsModalOpen(false)\n    setOpenSelectRejectAll(false)\n    setOpen(false)\n    setOpenSelectAll(false)\n    setSelectedRows([])\n    setHeaderLabel('')\n    selectedRef.current = ''\n    pageRef.current = 0\n    hasMoreRef.current = true\n    dispatch(\n      getOwnerMemberActivity(\n        pageRef.current,\n        sizeRef.current,\n        categoryRef.current,\n        startDateRef.current,\n        endDateRef.current,\n      ),\n    )\n  }\n\n  return (\n    <div className=\"db_table\" style={{ height: '349px', overflow: 'auto' }} id=\"scrollableDiv\">\n      <style>{`\n        .ant-table-body {\n          scrollbar-width: thin;\n        }\n        .db_table .ant-table-wrapper .ant-table-thead > tr > th {\n          color: #919EAB !important;\n          font-size: 12px !important;\n          padding: 12px !important;\n        }\n        .db_table .ant-table-cell {\n          font-size: 12px !important;\n          color: #A5A3A4 !important;\n          font-weight: 600;\n        }\n      `}</style>\n      {headerLabel && (\n        <div\n          className=\"table-header\"\n          style={{ display: 'grid', gridTemplateColumns: '10% 1fr auto', alignItems: 'center' }}\n        >\n          <div className=\"table-head-selected text-center text-c\" style={{ paddingTop: '15px' }}>\n            <Checkbox\n              id=\"flexCheckDefault\"\n              className=\"checkbox_design\"\n              checked={selectedRows.length === cdata.length && cdata.length > 0}\n              onChange={(e) => handleHeaderCheck(e.target.checked)}\n            />\n          </div>\n          <div\n            className=\"table-head-selected text-c\"\n            style={{ textAlign: 'center', padding: '17px 0px 4px 0px' }}\n          >\n            <span style={{ color: '#f50505' }}>{headerLabel}</span>\n          </div>\n          <div\n            className=\"table-head-selected\"\n            style={{ display: 'flex', justifyContent: 'center' }}\n          >\n            <button\n              className=\"btn border-0 text-c text-secondary check-button\"\n              style={{ fontSize: '12px', padding: '4px 8px' }}\n              type=\"button\"\n              onClick={() => showPopconfirmAll('Approved')}\n            >\n              <CheckSvg width=\"11\" height=\"9\" viewBox=\"0 0 14 10\" fill=\"#00ab55\" />\n            </button>\n            <button\n              className=\"btn border-0 text-c text-secondary cross-button\"\n              style={{ fontSize: '12px', padding: '4px 8px' }}\n              onClick={() => showPopconfirmAll('Reject')}\n            >\n              <CrossSvg width=\"9\" height=\"11\" viewBox=\"0 0 14 10\" fill=\"#e40e2d\" />\n            </button>\n          </div>\n        </div>\n      )}\n      <Table\n        columns={columns}\n        dataSource={cdata}\n        className=\"cpt db_table_content\"\n        scroll={{ x: 1000, y: 300 }}\n        pagination={false}\n        loading={{\n          spinning: commonLoader,\n          indicator: <CSpinner color=\"danger\" />,\n        }}\n      />\n      {!hasMoreRef.current && cdata.length !== 0 && cdata.length > 5 && (\n        <p style={{ textAlign: 'center' }}>\n          <b style={{ color: '#e40e2d', fontSize: '12px' }}>No more Data to load</b>\n        </p>\n      )}\n      {isModalOpen && (\n        <RejectConfirmModal\n          isModalOpen={isModalOpen}\n          handleCancel={handleCancel}\n          handleApprove={handleApproveActivity}\n          id={singleId}\n          headContent=\"Activity\"\n          resetFunc={resetFormValues}\n        />\n      )}\n      {open && (\n        <ApprovedConfirmModal\n          isModalOpen={open}\n          handleCancel={handleApproveCancel}\n          handleApprove={handleApproved}\n          id={singleApprovedId}\n          headContent=\"Activity\"\n          resetFunc={resetFormValues}\n        />\n      )}\n      {openSelectAll && (\n        <ApprovedConfirmModal\n          isModalOpen={openSelectAll}\n          handleCancel={handleApproveCancelAll}\n          handleApprove={(remarks) => handleButtonClick(approvedStatusAll, selectedRows, remarks)}\n          headContent=\"Activity\"\n          resetFunc={resetFormValues}\n        />\n      )}\n      {openSelectRejectAll && (\n        <RejectConfirmModal\n          isModalOpen={openSelectRejectAll}\n          handleCancel={handleRejectCancelAll}\n          handleApprove={(remarks) => handleButtonClick(approvedStatusAll, selectedRows, remarks)}\n          headContent=\"Activity\"\n          resetFunc={resetFormValues}\n        />\n      )}\n    </div>\n  )\n}\n\nOwnerPendingTable.propTypes = {\n  startDate: PropTypes.any,\n  endDate: PropTypes.any,\n}\nexport default OwnerPendingTable\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst DropdownSVG = ({ width, height, fill, viewBox, stopColor }) => (\n  <svg\n    width={width}\n    height={height}\n    viewBox={viewBox}\n    fill={fill}\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M0.683144 0.5H8.31686C8.45198 0.500028 8.58405 0.5387 8.69639 0.611128C8.80873 0.683555 8.89629 0.786487 8.948 0.90691C8.9997 1.02733 9.01323 1.15984 8.98688 1.28768C8.96053 1.41552 8.89547 1.53295 8.79994 1.62513L4.98309 5.30702C4.85495 5.43058 4.68118 5.5 4.5 5.5C4.31882 5.5 4.14505 5.43058 4.01691 5.30702L0.200058 1.62513C0.104528 1.53295 0.0394743 1.41552 0.0131215 1.28768C-0.0132313 1.15984 0.000300048 1.02733 0.0520046 0.90691C0.103709 0.786487 0.191266 0.683555 0.303605 0.611128C0.415945 0.5387 0.548023 0.500028 0.683144 0.5Z\"\n      fill=\"url(#paint0_linear_12154_20110)\"\n    />\n    <defs>\n      <linearGradient\n        id=\"paint0_linear_12154_20110\"\n        x1=\"4.5\"\n        y1=\"0.5\"\n        x2=\"4.5\"\n        y2=\"5.5\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop stopColor=\"#D30000\" />\n        <stop offset=\"0.34\" stopColor=\"#D30000\" />\n        <stop offset=\"1\" stopColor=\"#D30000\" />\n      </linearGradient>\n    </defs>\n  </svg>\n)\n\nDropdownSVG.propTypes = {\n  width: PropTypes.string.isRequired,\n  height: PropTypes.string.isRequired,\n  fill: PropTypes.string.isRequired,\n  viewBox: PropTypes.string.isRequired,\n  stopColor: PropTypes.string.isRequired,\n}\n\nexport default DropdownSVG\n","import React, { useState, useRef, useEffect, useCallback } from 'react'\nimport { Table } from 'antd'\nimport { CSpinner } from '@coreui/react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  getClosedContractMemberActivity,\n  getClosedProductMemberActivity,\n} from 'src/redux/memberActivity/action'\nimport debounce from 'lodash.debounce'\nimport PropTypes from 'prop-types'\n\nconst ClosedActivityTable = ({ selectStatus, closedType }) => {\n  const [commonLoader, setCommonLoader] = useState(true)\n  const dispatch = useDispatch()\n  const [data, setData] = useState([])\n  const pageRef = useRef(0)\n  const sizeRef = useRef(5)\n  const hasMoreRef = useRef(true)\n  const statusRef = useRef(null)\n  const categoryRef = useRef('default')\n  const tableBodyRef = useRef(null)\n  const closedContractMemberActivityData = useSelector(\n    (state) => state.memberactivity?.closedContractMemberData,\n  )\n  const closedProductMemberData = useSelector(\n    (state) => state.memberactivity?.closedProductMemberData,\n  )\n\n  const addSerialNumbers = (data) => {\n    const startIndex = pageRef.current * sizeRef.current\n    return data.map((item, index) => ({\n      ...item,\n      sno: startIndex + index + 1,\n    }))\n  }\n\n  useEffect(() => {\n    if (closedType === 'owner') {\n      if (closedProductMemberData && closedProductMemberData.length > 0) {\n        const dataWithSerialNumbers = addSerialNumbers(closedProductMemberData)\n        if (dataWithSerialNumbers.length < sizeRef.current) {\n          hasMoreRef.current = false\n        }\n        setData((prevData) => [...prevData, ...dataWithSerialNumbers])\n        pageRef.current += 1\n      }\n    } else {\n      if (closedContractMemberActivityData && closedContractMemberActivityData.length > 0) {\n        const dataWithSerialNumbers = addSerialNumbers(closedContractMemberActivityData)\n        if (dataWithSerialNumbers.length < sizeRef.current) {\n          hasMoreRef.current = false\n        }\n        setData((prevData) => [...prevData, ...dataWithSerialNumbers])\n        pageRef.current += 1\n      }\n    }\n    setCommonLoader(false)\n  }, [closedContractMemberActivityData, closedProductMemberData, closedType])\n\n  const truncateString = (str, num) => {\n    if (!str) {\n      return '' // or you can return str itself, which would be null or undefined\n    }\n    return str.length > num ? `${str.substring(0, num)}...` : str\n  }\n\n  const keyType = closedType == 'owner' ? 'task_user_name' : 'userName'\n  const approverStatus = closedType == 'owner' ? 'supervisor_approved' : 'finalApproveStatus'\n\n  const columns = [\n    {\n      title: 'SI.No',\n      dataIndex: 'sno',\n      key: 'sno',\n      width: 8,\n      fixed: 'left',\n    },\n    {\n      title: 'Team member',\n      dataIndex: keyType,\n      key: keyType,\n      fixed: 'left',\n      width: 18,\n      render: (text) => truncateString(text, 12),\n    },\n    {\n      title: 'Activity date',\n      width: 12,\n      dataIndex: 'activity_date',\n      key: 'activity_date',\n    },\n    {\n      title: 'Product',\n      dataIndex: 'productName',\n      key: 'productName',\n      width: 20,\n      render: (text, row) => {\n        const truncatedProductName = truncateString(row.productName, 18)\n        return (\n          <div>\n            <span>\n              {row.assignedStatus === true && (\n                <span style={{ fontSize: '16px', color: '#00ab55' }}>&#8226;</span>\n              )}\n              {row.assignedStatus === false && (\n                <span style={{ fontSize: '16px', color: '#ffaa00' }}>&#8226;</span>\n              )}\n              <span style={{ marginLeft: '5px', color: '#000' }}>{truncatedProductName}</span>\n            </span>\n          </div>\n        )\n      },\n    },\n    {\n      title: 'Task',\n      dataIndex: 'taskName',\n      key: 'taskName',\n      width: 18,\n      render: (text) => truncateString(text, 15),\n    },\n    {\n      title: 'Hours',\n      dataIndex: 'hours',\n      key: 'hours',\n      width: 10,\n    },\n    {\n      title: 'Approver Status',\n      dataIndex: approverStatus,\n      key: approverStatus,\n      width: 15,\n      render: (text) => {\n        let className = 'not-text1'\n        if (text === 'Approved') {\n          className = 'green-text1'\n        } else if (text === 'Reject' || text === 'Rejected') {\n          className = 'red-text1'\n        } else if (text === 'Pending') {\n          className = 'warning-text1'\n        } else if (text === 'Resubmit') {\n          className = 'info-text1'\n        }\n        return <div className={className}>{text}</div>\n      },\n    },\n    {\n      title: 'Remarks',\n      width: 30,\n      dataIndex: 'description',\n      key: 'description',\n      render: (text) => truncateString(text, 20),\n    },\n  ]\n\n  const fetchMoreData = () => {\n    if (hasMoreRef.current) {\n      setCommonLoader(true)\n      if (closedType === 'owner') {\n        dispatch(\n          getClosedProductMemberActivity(\n            pageRef.current,\n            sizeRef.current,\n            categoryRef.current,\n            statusRef.current,\n          ),\n        )\n      } else {\n        dispatch(\n          getClosedContractMemberActivity(\n            pageRef.current,\n            sizeRef.current,\n            categoryRef.current,\n            statusRef.current,\n          ),\n        )\n      }\n    }\n  }\n\n  useEffect(() => {\n    setCommonLoader(true)\n    pageRef.current = 0\n    hasMoreRef.current = true\n    setData([])\n    if (closedType === 'owner') {\n      categoryRef.current = 'default'\n      if (selectStatus !== null && selectStatus !== '') {\n        if (selectStatus == 'Reject') {\n          statusRef.current = 'Rejected'\n        } else {\n          statusRef.current = selectStatus\n        }\n      } else {\n        statusRef.current = 'all'\n      }\n      dispatch(\n        getClosedProductMemberActivity(\n          pageRef.current,\n          sizeRef.current,\n          categoryRef.current,\n          statusRef.current,\n        ),\n      )\n    } else {\n      if (selectStatus !== null && selectStatus !== '') {\n        categoryRef.current = 'status'\n        statusRef.current = selectStatus\n      } else {\n        categoryRef.current = 'default'\n        statusRef.current = ''\n      }\n      dispatch(\n        getClosedContractMemberActivity(\n          pageRef.current,\n          sizeRef.current,\n          categoryRef.current,\n          statusRef.current,\n        ),\n      )\n    }\n  }, [dispatch, selectStatus, closedType])\n\n  const handleScroll = useCallback(\n    debounce(() => {\n      if (!tableBodyRef.current) return\n\n      const { scrollTop, scrollHeight, clientHeight } = tableBodyRef.current\n      if (scrollTop + clientHeight >= scrollHeight - 10) {\n        fetchMoreData()\n      }\n    }, 100),\n    [],\n  )\n\n  useEffect(() => {\n    const tableBody = document.querySelector('.closedTable .ant-table-body')\n    if (tableBody) {\n      tableBodyRef.current = tableBody\n      tableBody.addEventListener('scroll', handleScroll)\n    }\n\n    return () => {\n      if (tableBody) {\n        tableBody.removeEventListener('scroll', handleScroll)\n      }\n    }\n  }, [handleScroll])\n\n  return (\n    <div className=\"db_table closed-table\" style={{ height: '349px ' }}>\n      <style>{`\n        .ant-table-body {\n          scrollbar-width: thin;\n        }\n        .closed-table .ant-table-wrapper .ant-table-thead > tr > th {\n          color: #919EAB !important;\n          font-size: 12px !important;\n          padding: 12px !important;\n        }\n        .closed-table .ant-table-cell {\n          font-size: 12px !important;\n          color: #A5A3A4 !important;\n          font-weight: 600;\n        }\n      `}</style>\n      <Table\n        columns={columns}\n        dataSource={data}\n        className=\"db_table_content closedTable\"\n        scroll={{ x: 1300, y: 290 }}\n        pagination={false}\n        loading={{\n          spinning: commonLoader,\n          indicator: <CSpinner color=\"danger\" />,\n        }}\n      />\n      {!hasMoreRef.current && data.length !== 0 && data.length > 5 && (\n        <p style={{ textAlign: 'center' }}>\n          <b style={{ color: '#e40e2d', fontSize: '12px' }}>No more Data to load</b>\n        </p>\n      )}\n    </div>\n  )\n}\n\nClosedActivityTable.propTypes = {\n  selectStatus: PropTypes.any,\n  closedType: PropTypes.string.isRequired,\n}\n\nexport default ClosedActivityTable\n","import { CCard, CCol, CRow } from '@coreui/react'\nimport { React, useEffect, useState, useRef } from 'react'\nimport dayjs from 'dayjs'\nimport { getDecodeData } from 'src/constant/Global'\nimport { Radio, DatePicker, Typography, Menu, Dropdown, Button, Select } from 'antd'\nimport PendingTable from './PendingTable'\nimport ApprovalTable from './ApprovalTable'\nimport ContractPendingTable from './ContractPendingTable'\nimport OwnerPendingTable from './OwnerPendingTable'\nimport DropdownSVG from '../DashboardSVG/DropdownSVG'\nimport ClosedActivityTable from './ClosedActivityTable'\nimport PropTypes from 'prop-types'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport Downarrowimg from '../../../assets/images/downarrow.png'\nimport { useSelector } from 'react-redux'\nimport { useDispatch } from 'react-redux'\n\nconst { RangePicker } = DatePicker\n\nfunction MemberActivity(widgetLength, widgetTableData, title) {\n  const user = getDecodeData()\n  const dispatch = useDispatch()\n  const [disableContent, setDisableContent] = useState(false)\n  const [status, setStatus] = useState('Pending')\n  const [startDate, setStartDate] = useState('')\n  const [cstatus, setCStatus] = useState('')\n  const [selectedItem, setSelectedItem] = useState('Member’s Activity')\n  const designation = user?.designation\n  const supervisor = user?.superviser\n  const finalApprover = user?.finalApprover\n  const rangePickerRef = useRef()\n  const startDateRef = useRef(null)\n  const endDateRef = useRef(null)\n  const statusRef = useRef(null)\n  const selectedRef = useRef('Member’s Activity')\n  const [dateRange, setDateRange] = useState(null)\n  const sidebarShow = useSelector((state) => state.dashboard.sidebarShow)\n\n  useEffect(() => {\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [disableContent])\n  useEffect(() => {\n    dispatch({ type: 'CLEAR_MEMBER_ACTIVITY' })\n  })\n\n  const handleStatusChange = (e) => {\n    startDateRef.current = null\n    endDateRef.current = null\n    statusRef.current = ''\n    const newStatus = e.target.value\n    dispatch({ type: 'CLEAR_MEMBER_ACTIVITY' })\n    setDateRange(null)\n    setStatus(newStatus)\n  }\n\n  const handleStatus = (val) => {\n    if (val !== '' && val !== 'undefined' && val != null) {\n      statusRef.current = val\n      setCStatus(val)\n    } else {\n      statusRef.current = ''\n      setCStatus('')\n    }\n  }\n\n  const handleStartDateChange = (date) => {\n    if (date !== null) {\n      const formattedFromDate = dayjs(date[0]).format('YYYY-MM-DD')\n      const formattedToDate = dayjs(date[1]).format('YYYY-MM-DD')\n      startDateRef.current = formattedFromDate\n      endDateRef.current = formattedToDate\n      setStartDate(formattedFromDate)\n      setDateRange(date)\n    } else {\n      startDateRef.current = null\n      endDateRef.current = null\n      setStartDate('')\n    }\n  }\n\n  const handleMenuClick = (e) => {\n    const { key } = e\n    let text = 'Member’s Activity'\n    switch (key) {\n      case '2':\n        text = 'Contract Member’s Activity'\n        break\n      case '3':\n        text = 'Product Member’s Activity'\n        break\n      default:\n        break\n    }\n    startDateRef.current = ''\n    endDateRef.current = ''\n    setSelectedItem(text)\n    selectedRef.current = text\n    setDateRange('')\n    setStatus('Pending') // Reset status to \"Pending\" when changing the dropdown selection\n  }\n\n  const menu = (\n    <Menu onClick={handleMenuClick}>\n      {supervisor === 'true' && (\n        <Menu.Item key=\"1\">\n          <div>Member’s Activity</div>\n        </Menu.Item>\n      )}\n      {finalApprover === 'true' && (\n        <Menu.Item key=\"2\">\n          <div>Contract Member’s Activity</div>\n        </Menu.Item>\n      )}\n      {designation.includes('Owner') && (\n        <Menu.Item key=\"3\">\n          <div>Product Member’s activity</div>\n        </Menu.Item>\n      )}\n    </Menu>\n  )\n\n  return (\n    <div>\n      <CCard\n        style={{\n          height: widgetLength > 2 && widgetTableData == title ? '270px' : '440px',\n          border: 'none',\n          marginBottom: '10px',\n        }}\n      >\n        <div style={{ paddingTop: '5px', padding: '10px', paddingBottom: '0px' }}>\n          <CRow>\n            <CCol\n              xs={12}\n              sm={status === 'Pending' ? 12 : 12 || status === 'Closed' ? 12 : 12}\n              md={status === 'Pending' ? 5 : 5 || status === 'Closed' ? 5 : 5}\n              lg={sidebarShow ? 3 : status === 'Pending' ? 3 : 6 || status === 'Closed' ? 3 : 6}\n              style={{ display: 'flex', alignItems: 'center' }}\n            >\n              <div>\n                {supervisor === 'true' &&\n                finalApprover === 'false' &&\n                !designation.includes('Owner') ? (\n                  <div>\n                    <Typography\n                      style={{\n                        fontSize: '14px',\n                        color: '#161C24',\n                        fontWeight: '600',\n                        paddingLeft: '5px',\n                      }}\n                      className=\"DB_ts_lable\"\n                    >\n                      Member’s Activity\n                    </Typography>\n                  </div>\n                ) : (\n                  <div>\n                    <Dropdown\n                      overlay={menu}\n                      className=\"dropdown_box\"\n                      disabled={sidebarShow === true}\n                    >\n                      <Button className=\"dropdown_button\">\n                        <span className=\"dropdown_item\">{selectedItem}</span>\n                        <span>\n                          <DropdownSVG width=\"9px\" height=\"6\" fill=\"#FF2D2D\" stopColor=\"#FF2D2D\" />\n                        </span>\n                      </Button>\n                    </Dropdown>\n                  </div>\n                )}\n              </div>\n            </CCol>\n            <CCol\n              xs={8}\n              sm={status === 'Pending' ? 12 : 12 || status === 'Closed' ? 12 : 12}\n              md={\n                sidebarShow === true\n                  ? 9\n                  : status === 'Pending'\n                  ? 7\n                  : 7 || status === 'Closed'\n                  ? 7\n                  : 7\n              }\n              lg={\n                sidebarShow === true\n                  ? 8\n                  : status === 'Pending'\n                  ? 5\n                  : 6 || status === 'Closed'\n                  ? 5\n                  : 6\n              }\n              style={{\n                display: 'flex',\n                alignItems: 'center',\n                marginTop: '2px',\n              }}\n            >\n              <Radio.Group onChange={handleStatusChange}>\n                {selectedRef.current == 'Member’s Activity' ? (\n                  <>\n                    <Radio.Button\n                      className=\"mem_pending\"\n                      value=\"Pending\"\n                      style={{\n                        backgroundColor: status === 'Pending' ? '#FFAA001A' : 'initial',\n                        borderColor: status === 'Pending' ? '#FFAA001A' : 'none',\n                        color: status === 'Pending' ? '#FFAA00' : '#D1D1D1',\n                        width: '76px',\n                      }}\n                    >\n                      Pending\n                    </Radio.Button>\n                    <Radio.Button\n                      className=\"mem_approved\"\n                      value=\"Approved\"\n                      style={{\n                        backgroundColor: status === 'Approved' ? '#EBF8F2' : 'initial',\n                        borderColor: status === 'Approved' ? '#EBF8F2' : 'none',\n                        color: status === 'Approved' ? '#00ab55' : '#D1D1D1',\n                        width: '84px',\n                      }}\n                    >\n                      Approved\n                    </Radio.Button>\n                    <Radio.Button\n                      className=\"mem_rejected\"\n                      value=\"Rejected\"\n                      style={{\n                        backgroundColor: status === 'Rejected' ? '#E40E2C0D' : 'initial',\n                        borderColor: status === 'Rejected' ? '#E40E2C0D' : 'none',\n                        color: status === 'Rejected' ? '#e40e2d' : '#D1D1D1',\n                        width: '78px',\n                      }}\n                    >\n                      Rejected\n                    </Radio.Button>\n                  </>\n                ) : selectedRef.current == 'Contract Member’s Activity' ? (\n                  <>\n                    <Radio.Button\n                      className=\"mem_pending\"\n                      value=\"Pending\"\n                      style={{\n                        backgroundColor: status === 'Pending' ? '#FFAA001A' : 'initial',\n                        borderColor: status === 'Pending' ? '#FFAA001A' : 'none',\n                        color: status === 'Pending' ? '#FFAA00' : '#D1D1D1',\n                      }}\n                    >\n                      Pending\n                    </Radio.Button>\n                    <Radio.Button\n                      className=\"mem_closed\"\n                      value=\"Closed\"\n                      style={{\n                        backgroundColor: status === 'Closed' ? '#E40E2C0D' : 'initial',\n                        borderColor: status === 'Closed' ? '#E40E2C0D' : 'none',\n                        color: status === 'Closed' ? '#e40e2d' : '#D1D1D1',\n                      }}\n                    >\n                      Closed\n                    </Radio.Button>\n                  </>\n                ) : (\n                  <>\n                    <Radio.Button\n                      className=\"mem_pending\"\n                      value=\"Pending\"\n                      style={{\n                        backgroundColor: status === 'Pending' ? '#FFAA001A' : 'initial',\n                        borderColor: status === 'Pending' ? '#FFAA001A' : 'none',\n                        color: status === 'Pending' ? '#FFAA00' : '#D1D1D1',\n                      }}\n                    >\n                      Pending\n                    </Radio.Button>\n                    <Radio.Button\n                      className=\"mem_closed\"\n                      value=\"Closed\"\n                      style={{\n                        backgroundColor: status === 'Closed' ? '#E40E2C0D' : 'initial',\n                        borderColor: status === 'Closed' ? '#E40E2C0D' : 'none',\n                        color: status === 'Closed' ? '#e40e2d' : '#D1D1D1',\n                      }}\n                    >\n                      Closed\n                    </Radio.Button>\n                  </>\n                )}\n              </Radio.Group>\n            </CCol>\n            {status !== 'Closed' && (\n              <CCol xs={4} sm={6} md={6} lg={sidebarShow === true ? 8 : 4}>\n                <RangePicker\n                  variant={'borderless'}\n                  style={{ width: '90%', borderBottom: ' 1px solid #ced4da ', borderRadius: '0px' }}\n                  ref={rangePickerRef}\n                  value={dateRange}\n                  onChange={handleStartDateChange}\n                  format=\"YYYY/MM/DD\"\n                  allowClear\n                  disabled={sidebarShow === true}\n                  disabledDate={(current) => current && current > dayjs().endOf('day')}\n                />\n              </CCol>\n            )}\n\n            {status === 'Closed' && (\n              <CCol xs={12} md={3}>\n                <Select\n                  suffixIcon={\n                    <img\n                      src={Downarrowimg}\n                      alt=\"Downarrowimg\"\n                      style={{ width: '10px', height: '6px' }}\n                    />\n                  }\n                  className=\"contract_members_activity_select custom-select_closeact con-cls-status\"\n                  allowClear\n                  placeholder=\"Choose Status\"\n                  options={[\n                    {\n                      value: 'Approved',\n                      label: 'Approved',\n                    },\n                    {\n                      value: 'Reject',\n                      label: 'Rejected',\n                    },\n                  ]}\n                  onChange={(value) => handleStatus(value)}\n                />\n              </CCol>\n            )}\n          </CRow>\n        </div>\n\n        <CRow>\n          <CCol style={{ marginTop: '20px' }}>\n            {status === 'Approved' && selectedItem === 'Member’s Activity' && (\n              <ApprovalTable\n                typeValue=\"Approved\"\n                startDate={startDateRef.current}\n                endDate={endDateRef.current}\n              />\n            )}\n            {status === 'Rejected' && selectedItem === 'Member’s Activity' && (\n              <ApprovalTable\n                typeValue=\"Reject\"\n                startDate={startDateRef.current}\n                endDate={endDateRef.current}\n              />\n            )}\n            {status === 'Pending' && selectedItem === 'Member’s Activity' && (\n              <PendingTable startDate={startDateRef.current} endDate={endDateRef.current} />\n            )}\n            {status === 'Pending' && selectedItem === 'Contract Member’s Activity' && (\n              <ContractPendingTable startDate={startDateRef.current} endDate={endDateRef.current} />\n            )}\n            {status === 'Closed' && selectedItem === 'Contract Member’s Activity' && (\n              <ClosedActivityTable selectStatus={statusRef.current} closedType=\"contract\" />\n            )}\n            {status === 'Pending' && selectedItem === 'Product Member’s Activity' && (\n              <OwnerPendingTable startDate={startDateRef.current} endDate={endDateRef.current} />\n            )}\n            {status === 'Closed' && selectedItem === 'Product Member’s Activity' && (\n              <ClosedActivityTable selectStatus={statusRef.current} closedType=\"owner\" />\n            )}\n          </CCol>\n        </CRow>\n      </CCard>\n    </div>\n  )\n}\nMemberActivity.propTypes = {\n  widgetLength: PropTypes.number.isRequired,\n  widgetTableData: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n}\nexport default MemberActivity\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport DashboardTimesheet from './TimeSheet/Timesheet'\nimport SubmitedActivity from './SubmitedActivity'\nimport RaisedRequest from './RaisedRequest/RaisedRequest'\nimport TimeSheetStatus from './TimeSheetStatus/TimeSheetStatus'\nimport LeaveHistory from './LeaveHistory'\nimport ContractMembers from './ContractMembers'\nimport WorkingHours from './WorkingHours'\nimport MemberActivity from './Member Activity'\n\nconst getComponent = (data, widgetTableData, widgetLength) => {\n  const titleRef = data\n  const tableData = widgetTableData\n  const length = widgetLength\n\n  switch (data) {\n    case 'Timesheet Status':\n      return <TimeSheetStatus />\n    case 'Submitted Activity':\n      return <SubmitedActivity widgetTableData={tableData} widgetLength={length} title={titleRef} />\n    case 'My Timesheet':\n      return (\n        <DashboardTimesheet widgetTableData={tableData} widgetLength={length} title={titleRef} />\n      )\n    case 'Raised Request':\n      return (\n        <RaisedRequest widgetTableData={widgetTableData} widgetLength={widgetLength} title={data} />\n      )\n    case \"Memeber's Activity\":\n      return <MemberActivity widgetTableData={tableData} widgetLength={length} title={titleRef} />\n    case 'Leave History':\n      return (\n        <LeaveHistory widgetTableData={widgetTableData} widgetLength={widgetLength} title={data} />\n      )\n    case 'Contract Members and their Supervisor':\n      return <ContractMembers widgetTableData={tableData} widgetLength={length} title={titleRef} />\n    case 'Working Hours':\n      return <WorkingHours widgetTableData={tableData} widgetLength={length} title={titleRef} />\n    default:\n      return null\n  }\n}\n\nconst DashboardTable = ({ data, widgetLength, widgetTableData }) => {\n  return <div>{getComponent(data, widgetTableData, widgetLength)}</div>\n}\n\nDashboardTable.propTypes = {\n  data: PropTypes.string,\n  widgetLength: PropTypes.number,\n  widgetTableData: PropTypes.string,\n}\n\nexport default DashboardTable\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useNavigate } from 'react-router-dom'\nimport { CCard, CCol, CRow } from '@coreui/react'\nimport { Card, Tooltip, Skeleton } from 'antd'\nimport { ToastContainer } from 'react-toastify'\nimport DashboardCard from './DashboardCard/DashboardCard'\nimport { getDecodeData } from 'src/constant/Global'\nimport {\n  countSidebar,\n  getSequenceList,\n  setDefaultData,\n  setDragItem,\n  setLoader,\n  toggleSideBar,\n  updateTitle,\n} from 'src/redux/Dashboard/action'\nimport { DndProvider, useDrag, useDrop } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport image from '../../assets/images/D-Frame.png'\nimport '../Dashboard/style.css'\nimport DashboardTable from './table'\nimport PropTypes from 'prop-types'\n\n// Constants for the draggable types\nconst ItemTypes = {\n  CARD: 'widgetCount',\n  TABLE: 'widgetTable',\n}\n\nconst DraggableCard = ({ id, index, title, children }) => {\n  const dispatch = useDispatch()\n\n  const [{ isDragging }, drag] = useDrag(\n    () => ({\n      type: ItemTypes.CARD,\n      item: { id, index },\n      collect: (monitor) => ({\n        isDragging: monitor.isDragging(),\n      }),\n    }),\n    [id, index, title],\n  )\n\n  useEffect(() => {\n    if (isDragging) {\n      dispatch(setDragItem(ItemTypes.CARD, title, index, true))\n      dispatch(setLoader(true))\n    }\n  }, [isDragging, dispatch, title, index])\n\n  return (\n    <div ref={drag} style={{ opacity: isDragging ? 0.5 : 1 }}>\n      {children}\n    </div>\n  )\n}\n\nDraggableCard.propTypes = {\n  index: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  children: PropTypes.node.isRequired,\n}\n\nconst DraggableTable = ({ id, index, title, children }) => {\n  const dispatch = useDispatch()\n  const [{ isDragging }, drag] = useDrag(\n    () => ({\n      type: ItemTypes.TABLE,\n      item: { id, index, title },\n      collect: (monitor) => ({\n        isDragging: monitor.isDragging(),\n      }),\n    }),\n    [id, index, title],\n  )\n  useEffect(() => {\n    if (isDragging) {\n      dispatch(setDragItem(ItemTypes.TABLE, title, index, true))\n      dispatch(setLoader(true))\n    }\n  }, [isDragging, dispatch, title, index])\n  return (\n    <div ref={drag} style={{ opacity: isDragging ? 0.5 : 1 }}>\n      {children}\n    </div>\n  )\n}\n\nDraggableTable.propTypes = {\n  index: PropTypes.number.isRequired,\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n}\n\nconst DroppableArea = ({ index, children, onDrop, acceptedTypes }) => {\n  const [{ isOver }, drop] = useDrop(\n    () => ({\n      accept: acceptedTypes,\n      drop: (item) => onDrop(item, index, acceptedTypes[0]),\n      collect: (monitor) => ({\n        isOver: monitor.isOver(),\n      }),\n    }),\n    [index, acceptedTypes],\n  )\n  return (\n    <div ref={drop} style={{ background: isOver ? 'lightblue' : 'white', borderRadius: '5px' }}>\n      {children}\n    </div>\n  )\n}\n\nDroppableArea.propTypes = {\n  index: PropTypes.number.isRequired,\n  children: PropTypes.node.isRequired,\n  onDrop: PropTypes.func.isRequired,\n  acceptedTypes: PropTypes.array.isRequired, // New prop for accepted types\n}\n\nconst Dashboard = () => {\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n  const user = getDecodeData()\n  const widgetData = useSelector((state) => state.dashboard.sequenceList)\n  const sidebarShow = useSelector((state) => state.dashboard.sidebarShow)\n  const swapItemList = useSelector((state) => state.dashboard.swapItemList)\n  const dragItem = useSelector((state) => state.dashboard.dragItem)\n  const [widgetCountData, setWidgetCountData] = useState([])\n  const [widgetTableData, setWidgetTableData] = useState([])\n\n  useEffect(() => {\n    if (!user) navigate('/')\n    dispatch(getSequenceList())\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch])\n\n  useEffect(() => {\n    if (widgetData?.[0]?.widgetCount) {\n      setWidgetCountData(widgetData[0].widgetCount)\n    }\n    if (widgetData?.[0]?.widgetTable) {\n      setWidgetTableData(widgetData[0].widgetTable)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [widgetData])\n\n  useEffect(() => {}, [swapItemList])\n\n  const handleSidebarToggle = () => {\n    dispatch(toggleSideBar(!sidebarShow))\n    dispatch(countSidebar())\n  }\n\n  const handleDrop = (item, index, type) => {\n    if (sidebarShow) {\n      dispatch(setLoader(true))\n      let key\n      if (dragItem.status === true) {\n        key = 'inner'\n      } else {\n        key = 'outer'\n      }\n      dispatch(updateTitle(index, dragItem.title, type, widgetData, key)).then((res) => {\n        if (res.status === 200) {\n          dispatch(getSequenceList())\n        }\n      })\n    }\n  }\n\n  const renderWidgetTable = () => {\n    if (widgetTableData?.length === 2) {\n      return widgetTableData.map((item, index) => (\n        <CCol sm={6} key={index + 1}>\n          {sidebarShow === true ? (\n            <DroppableArea index={index} onDrop={handleDrop} acceptedTypes={[ItemTypes.TABLE]}>\n              <DraggableTable id={index} index={index} title={item}>\n                <DashboardTable\n                  data={item}\n                  widgetLength={widgetTableData.length}\n                  widgetTableData={widgetTableData[0]}\n                />\n              </DraggableTable>\n            </DroppableArea>\n          ) : (\n            <DashboardTable\n              data={item}\n              widgetLength={widgetTableData.length}\n              widgetTableData={widgetTableData[0]}\n            />\n          )}\n        </CCol>\n      ))\n    } else {\n      return widgetTableData.slice(1).map((item, index) => (\n        <CCol sm={6} key={index + 1}>\n          {sidebarShow === true ? (\n            <DroppableArea index={index + 1} onDrop={handleDrop} acceptedTypes={[ItemTypes.TABLE]}>\n              <DraggableTable id={index} index={index} title={item}>\n                <DashboardTable\n                  data={item}\n                  widgetLength={widgetTableData.length}\n                  widgetTableData={widgetTableData[0]}\n                />\n              </DraggableTable>\n            </DroppableArea>\n          ) : (\n            <DashboardTable\n              data={item}\n              widgetLength={widgetTableData.length}\n              widgetTableData={widgetTableData[0]}\n            />\n          )}\n        </CCol>\n      ))\n    }\n  }\n\n  const renderWidgetCountData = () => {\n    if (widgetCountData.length >= 3) {\n      return widgetCountData.slice(0, 3).map((item, index) => (\n        <CCol sm={sidebarShow ? 6 : 4} md={6} lg={4} key={index + 1}>\n          {sidebarShow === true ? (\n            <DroppableArea index={index} onDrop={handleDrop} acceptedTypes={[ItemTypes.CARD]}>\n              <DraggableCard id={index} index={index} title={item}>\n                <DashboardCard title={item} widgetLength={widgetCountData.length} index={index} />\n              </DraggableCard>\n            </DroppableArea>\n          ) : (\n            <DashboardCard title={item} widgetLength={widgetCountData.length} index={index} />\n          )}\n        </CCol>\n      ))\n    } else {\n      const widgetCountDataSlice = widgetCountData.slice(0, 2)\n      return (\n        <>\n          {widgetCountDataSlice.map((item, index) => (\n            <CCol\n              sm={sidebarShow ? 6 : 3}\n              md={3}\n              lg={3}\n              key={index + 1}\n              className=\"pr-0\"\n              style={{ paddingRight: '12px' }}\n            >\n              {sidebarShow === true ? (\n                <DroppableArea index={index} onDrop={handleDrop} acceptedTypes={[ItemTypes.CARD]}>\n                  <DraggableCard id={index} index={index} title={item}>\n                    <DashboardCard\n                      title={item}\n                      widgetLength={widgetCountData.length}\n                      index={index}\n                    />\n                  </DraggableCard>\n                </DroppableArea>\n              ) : (\n                <DashboardCard title={item} widgetLength={widgetCountData.length} index={index} />\n              )}\n            </CCol>\n          ))}\n          <CCol sm={6} className=\"pl-2\" style={{ paddingLeft: '10px' }}>\n            {sidebarShow === true ? (\n              <DroppableArea index={0} onDrop={handleDrop} acceptedTypes={[ItemTypes.TABLE]}>\n                <DraggableTable id={2} index={2} title={widgetTableData[0]}>\n                  <DashboardTable\n                    data={widgetTableData[0]}\n                    widgetTableData={widgetTableData[0]}\n                    widgetLength={widgetTableData.length}\n                  />\n                </DraggableTable>\n              </DroppableArea>\n            ) : (\n              <DashboardTable\n                data={widgetTableData[0]}\n                widgetTableData={widgetTableData[0]}\n                widgetLength={widgetTableData.length}\n              />\n            )}\n          </CCol>\n        </>\n      )\n    }\n  }\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <div>\n        <ToastContainer />\n        <CCard className=\"mt-4 dashbord_content\">\n          <CRow>\n            <CCol xs={12} className=\"d-flex justify-content-end mb-3\">\n              <Tooltip placement=\"top\" title=\"Customise\">\n                <button\n                  onClick={handleSidebarToggle}\n                  className=\"border-0\"\n                  style={{ background: 'none' }}\n                >\n                  <img src={image} style={{ width: '44px', height: '38px' }} alt=\"Dashboard\" />\n                </button>\n              </Tooltip>\n            </CCol>\n            {widgetData?.length === 0\n              ? [0, 1, 2].map((index) => (\n                  <CCol sm={4} key={index}>\n                    <Card style={{ height: '250px' }}>\n                      <Skeleton active />\n                    </Card>\n                  </CCol>\n                ))\n              : renderWidgetCountData()}\n          </CRow>\n          <CRow className=\"mt-3\">\n            {widgetData?.length === 0 ? (\n              <>\n                <CCol sm={6}>\n                  <Card style={{ height: '250px' }}>\n                    <Skeleton active />\n                  </Card>\n                </CCol>\n                <CCol sm={6}>\n                  <Card style={{ height: '250px' }}>\n                    <Skeleton active />\n                  </Card>\n                </CCol>\n              </>\n            ) : (\n              renderWidgetTable()\n            )}\n          </CRow>\n        </CCard>\n      </div>\n    </DndProvider>\n  )\n}\n\nexport default Dashboard\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { Input, Modal } from 'antd'\n\nconst { TextArea } = Input\nconst ApprovedConfirmModal = ({\n  isModalOpen,\n  handleCancel,\n  handleApprove,\n  id,\n  headContent,\n  resetFunc,\n}) => {\n  const [remarks, setRemarks] = useState('')\n  const [loading, setLoadings] = useState(false)\n\n  const handleOk = async () => {\n    setLoadings(true)\n    try {\n      const response = await handleApprove('Approved', id, remarks)\n      if (response.status === true) {\n        resetFunc()\n      }\n    } catch (error) {\n    } finally {\n      setLoadings(false)\n    }\n  }\n\n  const handleRemark = (remarks) => {\n    const regex = /^(?!\\s)(?![&@.,()\\s])(?![^a-zA-Z0-9\\s.,()-]+$)[&@a-zA-Z0-9\\s.,()-]*$/\n    if (regex.test(remarks) || remarks === '') {\n      setRemarks(remarks)\n    }\n  }\n\n  return (\n    <Modal\n      title={`Approved ${headContent}`}\n      open={isModalOpen}\n      onOk={handleOk}\n      okText=\"Approved\"\n      onCancel={handleCancel}\n      okButtonProps={{\n        style: { background: '#f54550', borderColor: '#f54550', color: 'white' },\n        loading: loading,\n      }} // Change button color here\n      maskClosable={false}\n    >\n      <p>Do you want to do Approved this {headContent} ?</p>\n\n      <TextArea\n        id=\"Description\"\n        variant={'borderless'}\n        value={remarks}\n        onChange={(e) => handleRemark(e.target.value)}\n        className=\"time-border-bottom\"\n        style={{\n          color: 'black',\n          width: '265px',\n          fontSize: '13px',\n          padding: '0px',\n        }}\n        placeholder=\"Enter Remarks...\"\n        autoSize={{\n          minRows: 0,\n          maxRows: 1,\n        }}\n      />\n      <br />\n    </Modal>\n  )\n}\n\nApprovedConfirmModal.propTypes = {\n  isModalOpen: PropTypes.bool,\n  handleCancel: PropTypes.func,\n  handleApprove: PropTypes.func,\n  id: PropTypes.any,\n  headContent: PropTypes.string,\n  resetFunc: PropTypes.func,\n}\nexport default ApprovedConfirmModal\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { Input, Modal } from 'antd'\n\nconst { TextArea } = Input\nconst RejectConfirmModal = ({\n  isModalOpen,\n  handleCancel,\n  handleApprove,\n  id,\n  headContent,\n  resetFunc,\n}) => {\n  const [remarks, setRemarks] = useState('')\n  const [loadings, setLoadings] = useState(false)\n  const [formErrors, setFormErrors] = useState({\n    remarks: '',\n  })\n\n  const validateForm = () => {\n    const errors = {\n      remarks: '',\n    }\n    if (remarks === '') {\n      errors.remarks = 'Please Enter Remarks'\n    }\n    setFormErrors(errors)\n    const hasErrors = errors.remarks !== ''\n    return !hasErrors\n  }\n\n  const handleOk = async () => {\n    const isFormValid = validateForm()\n    if (isFormValid) {\n      setLoadings(true)\n      try {\n        const response = await handleApprove('Rejected', id, remarks)\n        if (response.status === true) {\n          resetFunc()\n        }\n      } catch (error) {\n      } finally {\n        setLoadings(false)\n      }\n    }\n  }\n\n  const handleRemark = (remarks) => {\n    const regex = /^(?!\\s)(?![&@.,()\\s])(?![^a-zA-Z0-9\\s.,()-]+$)[&@a-zA-Z0-9\\s.,()-]*$/\n    if (regex.test(remarks) || remarks === '') {\n      setRemarks(remarks)\n    }\n  }\n\n  return (\n    <Modal\n      title={`Reject ${headContent}`}\n      open={isModalOpen}\n      onOk={handleOk}\n      okText=\"Reject\"\n      onCancel={handleCancel}\n      okButtonProps={{\n        style: { background: '#f54550', borderColor: '#f54550', color: 'white' },\n        loading: loadings,\n        disabled: remarks.trim() === '',\n      }} // Change button color here\n      maskClosable={false}\n    >\n      <p>Do you want to do reject this {headContent} ?</p>\n\n      <TextArea\n        id=\"Description\"\n        variant={'borderless'}\n        value={remarks}\n        onChange={(e) => handleRemark(e.target.value)}\n        className=\"time-border-bottom\"\n        style={{\n          color: 'black',\n          width: '265px',\n          fontSize: '13px',\n          padding: '0px',\n        }}\n        placeholder=\"Enter Remarks...\"\n        autoSize={{\n          minRows: 0,\n          maxRows: 1,\n        }}\n      />\n      <br />\n      <span className=\"text-danger nameflow-error \">{formErrors.remarks}</span>\n    </Modal>\n  )\n}\n\nRejectConfirmModal.propTypes = {\n  isModalOpen: PropTypes.bool,\n  handleCancel: PropTypes.func,\n  handleApprove: PropTypes.func,\n  id: PropTypes.any,\n  headContent: PropTypes.string,\n  resetFunc: PropTypes.func,\n}\nexport default RejectConfirmModal\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst CheckSvg = ({ width, height, fill, viewBox }) => (\n  <svg\n    width={width}\n    height={height}\n    viewBox={viewBox}\n    fill={fill}\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M4.87459 9.58157C5.2816 9.58171 5.67193 9.41992 5.95949 9.13188L12.9552 2.13716L12.9553 2.13712C13.3482 1.74402 13.3482 1.10682 12.9553 0.713727L12.9552 0.713671C12.5621 0.320704 11.9249 0.320704 11.5318 0.713671L11.5318 0.713699L4.87459 7.37091L2.4682 4.96451L2.46817 4.96448C2.07508 4.57151 1.43788 4.57151 1.04478 4.96448L1.04473 4.96454C0.651758 5.35763 0.651758 5.99483 1.04473 6.38793L1.04479 6.38799L3.7897 9.13188C3.78971 9.1319 3.78972 9.13191 3.78973 9.13192C4.07729 9.41994 4.46761 9.58171 4.87459 9.58157ZM4.87459 9.58157C4.87456 9.58157 4.87453 9.58157 4.87449 9.58157L4.87459 9.33157L4.8747 9.58157C4.87466 9.58157 4.87463 9.58157 4.87459 9.58157Z\"\n      fill={fill}\n      stroke=\"#A5A1A1\"\n      strokeWidth=\"0.5\"\n    />\n  </svg>\n)\nCheckSvg.propTypes = {\n  width: PropTypes.string,\n  height: PropTypes.string,\n  fill: PropTypes.string,\n  viewBox: PropTypes.string,\n}\nexport default CheckSvg\n"],"names":["api","UseAxios","getMemberActivity","page","pageSize","category","status","startDate","endDate","async","size","url","concat","encodeURIComponent","trim","response","get","headers","getHeaders","data","dispatch","type","GET_MEMBER_ACTIVITY","payload","getContractMemberActivity","then","res","GET_CONTRACT_MEMBER_ACTIVITY","catch","error","memberStatusChange","statusValue","id","remarks","formData","FormData","append","put","STATUS_CHANGE_SUCCESS","Error","STATUS_CHANGE_FAILURE","message","contractMemberStatusChange","getClosedContractMemberActivity","GET_CONTRACT_CLOSED_MEMBER_ACTIVITY","getOwnerMemberActivity","GET_OWNER_MEMBER_ACTIVITY","ownerMemberStatusUpdate","getClosedProductMemberActivity","productId","memberId","GET_PRODUCT_MEMBER_CLOSED_ACTIVITY","_ref","chartData","title","widgetLength","totalCountRef","useRef","mapDataRef","labels","setloader","useSelector","state","dashboard","widgetData","sequenceList","widgetCountData","setWidgetCountData","useState","mapData","setMapData","values","color","useDispatch","useEffect","Object","keys","length","current","generateChartData","includes","getTitleType","_widgetData$","widgetCount","setLoader","productKeys","filter","key","activeCount","inactiveCount","employeeCount","approverCount","ownerCount","headCount","map","pendingCount","approvedCount","rejectedCount","assignedCount","unassignedCount","onroleMemberCount","contractMemberCount","_jsx","CRow","children","className","CSpinner","_jsxs","_Fragment","CCol","xs","style","position","PieChart","series","innerRadius","paddingAngle","cornerRadius","highlightScope","faded","highlighted","additionalRadius","value","index","label","width","height","JSON","stringify","top","left","transform","textAlign","pointerEvents","zIndex","dangerouslySetInnerHTML","__html","totalCount","display","alignItems","backgroundColor","fontSize","paddingLeft","overflowY","gridAutoFlow","marginLeft","datasets","Bar","options","indexAxis","plugins","tooltip","enabled","legend","responsive","scales","y","barPercentage","grid","drawTicks","drawOnChartArea","ticks","fontColor","fontFamily","x","tickMarkLength","drawBorder","padding","beginAtZero","callback","scaleLabel","fontStyle","labelString","MonthPicker","DatePicker","DashboardCardStyle","activeTab","setActiveTab","monthRef","dayjs","format","yearRef","navigate","useNavigate","flowData","flowCountData","designationMember","membersAll","productByHead","productAssigned","flowAccess","assignedByOwner","teamMembersCount","membersActivityCount","membersActivitySecLvlCount","productCountByApprover","myActivityCount","timesheetDaysCount","mastersCount","sidebarShow","getFlowsCount","getMembersByDesignation","getMembersAll","getProductByHead","getProductAssigned","getFlowAccess","getProductAssignedByOwner","getMembersActivityBySup","getMembersActivityBySupAndSecLvl","getTeamMemberCount","getProductCountByApprover","getMyActivityCount","getTimesheetSummary","getMastersCount","toggleTab","tabKey","items","DashboardPieChart","DashboardBarChart","mastersData","icon","multipersonIcon","number","userCount","BGcolor","iconbgcolor","briefcase","bussinessCount","personIcon","roleCount","groupicon","taskcategoryCount","CCard","marginBottom","paddingBottom","borderRadius","border","md","Typography","modifiedTitle","getTitleNames","maxLength","arguments","undefined","substring","getTitle","justifyContent","onClick","disabled","PieChartIcon","viewBox","fill","stopColor","BarChartSVG","console","log","nextArrow","NextArrowSVG","placeholder","defaultValue","onChange","allowClear","disabledDate","endOf","marginTop","fontWeight","totalDays","Card","boxShadow","leaveCount","notEnteredCount","item","sm","src","alt","Tabs","defaultActiveKey","activeKey","_ref2","heightValue","chartContainerRef","convertHoursToDecimal","hours","h","m","split","Number","setOptions","chart","zoom","xaxis","categories","rotate","text","yaxis","min","max","formatter","Math","floor","minutes","round","colors","plotOptions","bar","borderRadiusApplication","columnWidth","backgroundBarOpacity","dataLabels","custom","seriesIndex","dataPointIndex","w","globals","initialSeries","product","task","description","right","setSeries","getDescription","getTask","prevOptions","name","chartWidth","ref","overflowX","paddingRight","minWidth","Chart","updateLocale","weekStart","productList","taskList","selectedDate","loader","loadingActiveTask","handleDisableContent","disableContents","disableContent","setDisableContent","dateWise","setDateWise","isSubmitButtonDisabled","setIsSubmitButtonDisabled","isDraftButtonDisabled","setIsDraftButtonDisabled","selectAll","setSelectAll","headerLabel","setHeaderLabel","selectRef","handleDropdownVisibleChange","visible","blur","rows","setRows","activity_date","isChecked","checkUser","hasCheckedRow","some","areAllFieldsFilled","handleInputChange","fieldName","newRows","currentRow","updatedRows","row","idx","activeOptions","inactiveOptions","taskOptions","handleSelectAllChange","count","countCheckedItems","checkedCount","disabledTime","hour","disabledHours","disabledHoursArray","i","push","disabledMinutes","Array","slice","warning","Modal","content","onOk","splice","toast","POSITION","BOTTOM_RIGHT","deleteRow","closable","okCancel","autoFocusButton","centered","okText","cancelText","okButtonProps","background","borderColor","CTable","CTableHead","CTableRow","CTableHeaderCell","scope","Checkbox","checked","colSpan","remainingRows","forEach","$d","submitActivity","success","eventEmitter","emit","handleDraft","FileSvg","errors","handleSubmit","CheckSvg","CTableBody","onMouseEnter","document","getElementById","onMouseLeave","CTableDataCell","cursor","allFieldsFilled","handleCheckboxChange","Select","showSearch","variant","onDropdownVisibleChange","loading","suffixIcon","Downarrowimg","dropdownStyle","selectedOption","Skeleton","paragraph","group","option","Space","filterOption","input","_option$label","_option$label$props","_option$label$props$c","_option$label$props$c2","_option$label$props$c3","props","toLowerCase","find","menuportaltarget","body","styles","control","base","minHeight","maxHeight","menu","getOptionStyle","provided","TimePicker","CaretDownOutlined","hideDisabledOptions","picker","showNow","TextArea","e","target","autoSize","minRows","maxRows","DeleteSvg","addRow","xmlns","d","widgetTableData","setSelectedDate","attendance","setAttendance","raiseButton","setRaiseButton","visibleView","setVisibleView","raiseModal","setRaiseModal","yesterdayCount","_state$timesheet","timesheet","existingDates","setLoading","setLoadingActiveTask","user","getDecodeData","joiningDate","jod","heightRef","tab","today","getToday","_state$timesheet2","approvedProductList","_state$timesheet3","myTimesheetDetails","_state$dashboard","getproductList","getTaskActivityList","checkCondition","resData","date","formattedDate","attendanceStatus","handleStatus208","handleStatus201","getYesterdayCount","MyTimesheetbarchart","TimeSheetTable","currentMonthYear","getExistsDates","getMyTimesheetDetails","closeModalView","handleAttendanceSheet","createAttendanceSheet","handleApiResponse","paddingTop","lg","marginRight","handleProduct","from","_","getPopupContainer","triggerNode","parentNode","dateString","event","handleDateChange","Calendarimg","onPanelChange","mode","cellRender","month","parseInt","year","currentDate","existDate","isCurrentDate","isSame","formatDate","getCommonStyles","isSelected","lineHeight","isSubmitted","SubmittedList","RaisedRequestList","AttendanceList","Permission","isRaised","isAttendance","isPermission","isTodayOrAfter","isAfter","isJoiningDateOrBefore","isBefore","isDisabled","checkDates","datesArray","selectedValue","handleAttendance","Option","Button","FileAddFilled","CModal","backdrop","alignment","onClose","CModalBody","CModalFooter","CButton","handleConfirm","RaiseRequestModal","isOpen","closeModal","setData","pageRef","sizeRef","dateRef","filterRef","hasMoreRef","commonLoader","setCommonLoader","tableBodyRef","submittedList","submittedTimesheetList","isNorMore","setIsNorMore","truncateString","str","num","columns","dataIndex","fixed","align","render","record","productName","assignedStatus","formatTimeDuration","action","approvedStatus","finalApproveStatus","ownerStatus","handleEdit","dataWithSerialNumbers","startIndex","sno","addSerialNumbers","prevData","displayData","taskName","getSubmittedActivity","handleScroll","useCallback","debounce","scrollTop","scrollHeight","clientHeight","tableBody","querySelector","addEventListener","removeEventListener","Table","dataSource","scroll","pagination","spinning","indicator","overflow","textOverflow","active","Link","to","SubmittedActivityTable","selectedStatus","filterType","statusRef","raisedRequestData","raisedRequestList","requestDate","teamName","reason","getRaisedRequest","setStatus","setHeightValue","RaisedRequestTable","filterValue","searchRef","typeRef","timesheetStatus","timesheetStatusRoleBased","getTimesheetStatusBasedType","timesheetStatusContract","selectedItem","setSelectedItem","searchValue","setSearchValue","Dropdown","preventDefault","IoMdArrowDropdown","Input","borderBottom","handleSearch","prefix","searchicon","TimeSheetstatusTableContract","TimeSheetStatusTable","leaveDate","setLeaveDate","isModalOpen","setIsModalOpen","singleId","setSingleId","oDataRef","leaveHistory","leaveHistoryList","showModal","appliedDate","WithdrawSvg","getLeaveHistory","WarningModal","handleCancel","handleApprove","withDrawLeave","autoClose","headContent","resetFunc","resetFormValues","setDate","LeaveHistoryTable","contractData","setContractData","contractAndSupervisor","getcontracterAndSupervisor","usernames","marginY","flex","supervisorCount","rowKey","horizontal","borderRadiusWhenStacked","show","showForSingleSeries","horizontalAlign","markers","shape","radius","customLegendItems","val","offsetY","Date","time","fillColor","weekOfYear","isoWeek","startWeek","endWeek","weekFormat","dataRef","weeklyTimesheetHours","startOfWeek","startOf","endOfWeek","getMyWorkingHours","handleWeek","WorkingHoursbar","startDateRef","endDateRef","categoryRef","selectedRows","setSelectedRows","selectedRef","rejectStatus","setRejectStatus","singleApprovedId","setSingleApprovedId","openSelectAll","setOpenSelectAll","openSelectRejectAll","setOpenSelectRejectAll","open","setOpen","approvedStatusAll","setApprovedStatusAll","setApprovedStatus","showPopconfirmAll","fetchMoreData","handleHeaderCheck","handleRowCheck","truncatedProductName","showPopconfirm","rowId","CrossSvg","allRowIds","prevSelectedRows","updatedSelectedRows","selectedKey","handleButtonClick","statusChange","gridTemplateColumns","RejectConfirmModal","ApprovedConfirmModal","handleApproveCancel","handleApproveCancelAll","handleRejectCancelAll","typeValue","cdata","setCdata","contractMemberPendingActivity","_state$memberactivity","memberactivity","contractMemberData","getOwnerMemberData","ownerMemberData","x1","y1","x2","y2","gradientUnits","offset","selectStatus","closedType","closedContractMemberActivityData","closedContractMemberData","closedProductMemberData","_state$memberactivity2","keyType","approverStatus","RangePicker","setStartDate","cstatus","setCStatus","designation","supervisor","superviser","finalApprover","rangePickerRef","dateRange","setDateRange","Menu","Item","overlay","DropdownSVG","Radio","newStatus","formattedFromDate","formattedToDate","ApprovalTable","PendingTable","ContractPendingTable","ClosedActivityTable","OwnerPendingTable","getComponent","titleRef","tableData","TimeSheetStatus","SubmitedActivity","DashboardTimesheet","RaisedRequest","MemberActivity","LeaveHistory","ContractMembers","WorkingHours","ItemTypes","DraggableCard","isDragging","drag","useDrag","collect","monitor","setDragItem","opacity","DraggableTable","DroppableArea","_ref3","onDrop","acceptedTypes","isOver","drop","useDrop","accept","Dashboard","swapItemList","dragItem","setWidgetTableData","getSequenceList","_widgetData$2","widgetTable","handleDrop","updateTitle","DndProvider","backend","HTML5Backend","ToastContainer","Tooltip","placement","handleSidebarToggle","toggleSideBar","countSidebar","renderWidgetCountData","DashboardCard","widgetCountDataSlice","DashboardTable","setRemarks","setLoadings","onCancel","maskClosable","test","handleRemark","loadings","formErrors","setFormErrors","validateForm","stroke","strokeWidth"],"sourceRoot":""}