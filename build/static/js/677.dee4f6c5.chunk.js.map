{"version":3,"file":"static/js/677.dee4f6c5.chunk.js","mappings":"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","sources":["views/membersActivity/PendingActivity.js","views/membersActivity/RequestList.js","views/membersActivity/SwipeDetails.js","views/membersActivity/MembersActivity.js","views/modal/ApprovedConfirmModel.js","views/modal/RejectConfirmModal.js","views/svgImages/CheckSvg.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react'\nimport CheckSvg from '../svgImages/CheckSvg'\nimport CrossSvg from '../svgImages/CrossSvg'\nimport RejectConfirmModal from '../modal/RejectConfirmModal'\nimport { Checkbox, Select, DatePicker, Breadcrumb, Skeleton, Table } from 'antd'\nimport { CCol, CRow, CSpinner } from '@coreui/react'\nimport dayjs from 'dayjs'\nimport { getHeaders, ImageUrl } from 'src/constant/Global'\nimport profileImage1 from '../../assets/images/avatars/wrapper.png'\nimport { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport PropTypes from 'prop-types'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport useAxios from 'src/constant/UseAxios'\nimport Downarrowimg from '../../assets/images/downarrow.png'\nimport { toPascalCase, formatTimeDuration } from '../../constant/TimeUtils'\nimport ApprovedConfirmModal from '../modal/ApprovedConfirmModel'\nimport { Link } from 'react-router-dom'\nimport debounce from 'lodash.debounce'\nconst { RangePicker } = DatePicker\n\nconst PendingActivity = ({ formatDate, productLists, memberLists, memberLoader, prodLoader }) => {\n  let api = useAxios()\n  const [memberTable, setMemberTable] = useState([])\n  const [selectedRows, setSelectedRows] = useState([])\n  const [productList, setProductList] = useState([])\n  const [memberList, setMemberList] = useState([])\n  const [headerLabel, setHeaderLabel] = useState('')\n  const rangePickerRef = useRef()\n  const [isModalOpen, setIsModalOpen] = useState(false)\n  const [singleId, setSingleId] = useState()\n  const [commonLoader, setCommonLoader] = useState(true)\n  const [rejectStatus, setRejectStatus] = useState('')\n  const [openSelectAll, setOpenSelectAll] = useState(false)\n  const [singleApprovedId, setSingleApprovedId] = useState('')\n  const [approvedStatusAll, setApprovedStatusAll] = useState('')\n  const [openSelectRejectAll, setOpenSelectRejectAll] = useState(false)\n  const [approvedStatus, setApprovedStatus] = useState('')\n  const [open, setOpen] = useState(false)\n  const selectRef = useRef(null)\n  const [mLoader, setMLoader] = useState(false)\n  const [pLoader, setPLoader] = useState(false)\n  const startDateRef = useRef(null)\n  const endDateRef = useRef(null)\n  const pageRef = useRef(0)\n  const productIdRef = useRef(0)\n  const memberIdRef = useRef(0)\n  const filterRef = useRef('default')\n  const hasMoreRef = useRef(true)\n  const [abortController, setAbortController] = useState(new AbortController())\n  const tableBodyRef = useRef(null)\n  const [isNorMore, setIsNorMore] = useState(false)\n\n  const showPopconfirm = (status, rowId) => {\n    setOpen(true)\n    setSingleApprovedId(rowId)\n    setApprovedStatus(status)\n  }\n\n  const showPopconfirmAll = (status) => {\n    if (status === 'Approved') {\n      setOpenSelectAll(true)\n      setApprovedStatusAll('Approved')\n    } else if (status === 'Reject') {\n      setOpenSelectRejectAll(true)\n      setApprovedStatusAll('Reject')\n    }\n  }\n\n  const handleStartDateChange = (date) => {\n    pageRef.current = 0\n    hasMoreRef.current = true\n    setMemberList([])\n    setProductList([])\n    setPLoader(true)\n    setMLoader(true)\n\n    if (date !== null) {\n      const formattedFromDate = dayjs(date[0]).format('YYYY-MM-DD')\n      const formattedToDate = dayjs(date[1]).format('YYYY-MM-DD')\n      startDateRef.current = formattedFromDate\n      endDateRef.current = formattedToDate\n      getProductAndMemberList(formattedFromDate, formattedToDate)\n\n      if (productIdRef.current !== 0 && memberIdRef.current === 0) {\n        filterRef.current = 'dateandproduct'\n      } else if (productIdRef.current === 0 && memberIdRef.current !== 0) {\n        filterRef.current = 'dateandmember'\n      } else if (productIdRef.current === 0 && memberIdRef.current === 0) {\n        filterRef.current = 'date'\n      } else {\n        filterRef.current = 'all'\n      }\n    } else {\n      startDateRef.current = null\n      endDateRef.current = null\n\n      if (productIdRef.current !== 0 && memberIdRef.current === 0) {\n        filterRef.current = 'product'\n      } else if (productIdRef.current === 0 && memberIdRef.current !== 0) {\n        filterRef.current = 'member'\n      } else if (productIdRef.current === 0 && memberIdRef.current === 0) {\n        filterRef.current = 'default'\n      } else {\n        filterRef.current = 'memberandproduct'\n      }\n\n      setMemberList(memberLists)\n      setProductList(productLists)\n      setPLoader(false)\n      setMLoader(false)\n    }\n\n    getMemberActivityall()\n  }\n\n  const getProductAndMemberList = async (start, end) => {\n    const url = `common/timesheet/activity/superviserlist/prouctlist/${start}/${end}`\n    try {\n      const response = await api.get(url, {\n        headers: getHeaders('json'),\n      })\n      const member = response.data.data.memberName\n      const product = response.data.data.productName\n      setProductList(product)\n      setMemberList(member)\n      setMLoader(false)\n      setPLoader(false)\n    } catch (error) {}\n  }\n\n  useEffect(() => {\n    hasMoreRef.current = true\n    getMemberActivityall()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    setMemberList(memberLists)\n    setProductList(productLists)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [productLists, memberLists])\n\n  const handleHeaderCheck = (isChecked) => {\n    if (isChecked) {\n      const allRowIds = memberTable.map((row) => row.id)\n      setSelectedRows(allRowIds)\n      setHeaderLabel(`${allRowIds.length} Selected`)\n    } else {\n      setSelectedRows([])\n      setHeaderLabel('')\n    }\n  }\n\n  const handleMemberCheck = (rowId, isChecked) => {\n    if (isChecked) {\n      setSelectedRows((prevSelectedRows) => [...prevSelectedRows, rowId])\n    } else {\n      setSelectedRows((prevSelectedRows) =>\n        prevSelectedRows.filter((selectedId) => selectedId !== rowId),\n      )\n    }\n\n    // Calculate the new number of selected rows\n    const newSelectedRows = isChecked\n      ? [...selectedRows, rowId]\n      : selectedRows.filter((selectedId) => selectedId !== rowId)\n    const newSelectedRowCount = newSelectedRows.length\n\n    // Update the header label\n    if (newSelectedRowCount < 1) {\n      setHeaderLabel('')\n    } else {\n      setHeaderLabel(`${newSelectedRowCount} Selected`)\n    }\n  }\n\n  const getUrl = () => {\n    let url\n    switch (filterRef.current) {\n      case 'default':\n        url = `common/timesheet/activity/superviserlistall?page=${pageRef.current}&size=10&category=${filterRef.current}&productId=${productIdRef.current}&memberId=${memberIdRef.current}`\n        break\n      case 'all':\n        url = `common/timesheet/activity/superviserlistall?page=${pageRef.current}&size=10&category=${filterRef.current}&productId=${productIdRef.current}&memberId=${memberIdRef.current}&startDate=${startDateRef.current}&endDate=${endDateRef.current}`\n        break\n      case 'product':\n        url = `common/timesheet/activity/superviserlistall?page=${pageRef.current}&size=10&category=${filterRef.current}&productId=${productIdRef.current}`\n        break\n      case 'member':\n        url = `common/timesheet/activity/superviserlistall?page=${pageRef.current}&size=10&category=${filterRef.current}&memberId=${memberIdRef.current}`\n        break\n      case 'date':\n        url = `common/timesheet/activity/superviserlistall?page=${pageRef.current}&size=10&category=${filterRef.current}&startDate=${startDateRef.current}&endDate=${endDateRef.current}`\n        break\n      case 'dateandproduct':\n        url = `common/timesheet/activity/superviserlistall?page=${pageRef.current}&size=10&category=${filterRef.current}&productId=${productIdRef.current}&startDate=${startDateRef.current}&endDate=${endDateRef.current}`\n        break\n      case 'dateandmember':\n        url = `common/timesheet/activity/superviserlistall?page=${pageRef.current}&size=10&category=${filterRef.current}&memberId=${memberIdRef.current}&startDate=${startDateRef.current}&endDate=${endDateRef.current}`\n        break\n      case 'memberandproduct':\n        url = `common/timesheet/activity/superviserlistall?page=${pageRef.current}&size=10&category=${filterRef.current}&memberId=${memberIdRef.current}&productId=${productIdRef.current}`\n        break\n      default:\n        break\n    }\n    return url\n  }\n\n  const getMemberActivityall = async () => {\n    let newAbortController\n    if (pageRef.current === 0) {\n      setCommonLoader(true)\n      setMemberTable([])\n      abortController.abort()\n      newAbortController = new AbortController()\n      setAbortController(newAbortController)\n    }\n\n    try {\n      const response = await api.get(getUrl(), {\n        headers: getHeaders('json'),\n        signal: newAbortController?.signal,\n      })\n      const data = response.data.data\n      if (pageRef.current === 0) {\n        setMemberTable(data)\n      } else {\n        setMemberTable((prevUserData) => {\n          const uniqueSet = new Set(prevUserData.map((user) => user.id))\n          const newData = data.filter((user) => !uniqueSet.has(user.id))\n          return [...prevUserData, ...newData]\n        })\n      }\n      if (data.length < 10) {\n        hasMoreRef.current = false\n      } else {\n        hasMoreRef.current = true\n      }\n      pageRef.current = pageRef.current + 1\n      setCommonLoader(false)\n    } catch (error) {}\n  }\n\n  const statuschange = async (statusValue, id, remarks) => {\n    const url = `common/timesheet/approval/update`\n    const formData = new FormData()\n    formData.append('status', statusValue)\n    formData.append('remarks', remarks)\n    formData.append('id', id)\n    try {\n      const response = await api.put(url, formData, {\n        headers: getHeaders('multi'),\n      })\n      if (response?.data) {\n        const message = `Activity ${statusValue} Successfully`\n        toast.success(message, {\n          position: toast.POSITION.BOTTOM_RIGHT,\n          autoClose: 2000,\n        })\n        return response.data\n      } else {\n        throw new Error('Empty response received from the server')\n      }\n    } catch (error) {\n      toast.error(error.message, {\n        position: toast.POSITION.BOTTOM_RIGHT,\n        autoClose: 3000,\n      })\n      throw error\n    }\n  }\n\n  const handleApproveActivity = async (status, id, remarks) => {\n    return await statuschange(rejectStatus, id, remarks)\n  }\n\n  const handleButtonClick = async (status, id, remarksValue) => {\n    if (approvedStatusAll === 'Reject' && remarksValue === '') {\n      toast.error('Please Enter Remarks!..', {\n        position: toast.POSITION.BOTTOM_RIGHT,\n        autoClose: 3000,\n      })\n    } else {\n      return await statuschange(approvedStatusAll, selectedRows, remarksValue)\n    }\n  }\n\n  const handleApproved = async (status, singleApprovedId, remarks) => {\n    return await statuschange(approvedStatus, singleApprovedId, remarks)\n  }\n\n  const resetFormValues = () => {\n    setIsModalOpen(false)\n    setOpenSelectRejectAll(false)\n    setOpen(false)\n    setOpenSelectAll(false)\n    setSelectedRows([])\n    setHeaderLabel('')\n    pageRef.current = 0\n    hasMoreRef.current = true\n    filterRef.current = 'default'\n    getMemberActivityall()\n  }\n\n  //Product List\n  const options = productList.map((product) => ({\n    value: product.id,\n    label: product.name,\n  }))\n\n  const handleProduct = (product) => {\n    pageRef.current = 0\n    hasMoreRef.current = true\n    setMLoader(true)\n    setMemberList([])\n    setCommonLoader(true)\n    if (product !== undefined) {\n      productIdRef.current = product\n\n      if (startDateRef.current !== null && endDateRef.current !== null)\n        getMemberListByProductId(product)\n      else setMemberList(memberLists)\n      setMLoader(false)\n      if (\n        startDateRef.current === null &&\n        endDateRef.current === null &&\n        memberIdRef.current === 0\n      ) {\n        filterRef.current = 'product'\n      } else if (\n        startDateRef.current === null &&\n        endDateRef.current === null &&\n        memberIdRef.current !== 0\n      ) {\n        filterRef.current = 'memberandproduct'\n      } else if (\n        startDateRef.current !== null &&\n        endDateRef.current !== null &&\n        memberIdRef.current === 0\n      ) {\n        filterRef.current = 'dateandproduct'\n      } else {\n        filterRef.current = 'all'\n      }\n    } else {\n      productIdRef.current = 0\n\n      if (\n        startDateRef.current === null &&\n        endDateRef.current === null &&\n        memberIdRef.current === 0\n      ) {\n        filterRef.current = 'default'\n      } else if (\n        startDateRef.current === null &&\n        endDateRef.current === null &&\n        memberIdRef.current !== 0\n      ) {\n        filterRef.current = 'member'\n      } else if (\n        startDateRef.current !== null &&\n        endDateRef.current !== null &&\n        memberIdRef.current === 0\n      ) {\n        filterRef.current = 'date'\n      } else {\n        filterRef.current = 'dateandmember'\n      }\n      setMLoader(false)\n\n      if (startDateRef.current !== null && endDateRef.current !== null)\n        getProductAndMemberList(startDateRef.current, endDateRef.current)\n      else setMemberList(memberLists)\n    }\n\n    selectRef.current.blur()\n    getMemberActivityall()\n  }\n\n  const getMemberListByProductId = async (productId) => {\n    const url = `common/timesheet/activity/superviserlist/prouct/${startDateRef.current}/${endDateRef.current}/${productId}`\n    try {\n      const response = await api.get(url, {\n        headers: getHeaders('json'),\n      })\n      const member = response.data.data.memberlist\n      setMemberList(member)\n      setMLoader(false)\n    } catch (error) {}\n  }\n\n  // Member List\n  const memberOption = memberList.map((user) => ({\n    value: user.id,\n    label: (\n      <div className=\"select-options1\">\n        <img\n          src={user.profile_pic ? ImageUrl + user.profile_pic : profileImage1}\n          style={user.profile_pic ? { width: '29px' } : { width: '39px' }}\n          alt={user.name}\n          className=\"img-flag\"\n        />\n        <div className=\"node1\" style={user.profile_pic ? { marginLeft: '11px' } : {}}>\n          <p className=\"user-name1\" title={user.name}>\n            {toPascalCase(user.name)}\n          </p>\n          <p className=\"role-text1\">{user.role}</p>\n        </div>\n      </div>\n    ),\n  }))\n\n  const handleMember = (member) => {\n    pageRef.current = 0\n    hasMoreRef.current = true\n    setMemberTable([])\n    setCommonLoader(true)\n    if (member !== undefined) {\n      memberIdRef.current = member\n      if (\n        startDateRef.current === null &&\n        endDateRef.current === null &&\n        productIdRef.current === 0\n      ) {\n        filterRef.current = 'member'\n      } else if (\n        startDateRef.current === null &&\n        endDateRef.current === null &&\n        productIdRef.current !== 0\n      ) {\n        filterRef.current = 'memberandproduct'\n      } else if (\n        startDateRef.current !== null &&\n        endDateRef.current !== null &&\n        productIdRef.current === 0\n      ) {\n        filterRef.current = 'dateandmember'\n      } else {\n        filterRef.current = 'all'\n      }\n    } else {\n      memberIdRef.current = 0\n      if (\n        startDateRef.current === null &&\n        endDateRef.current === null &&\n        productIdRef.current === 0\n      ) {\n        filterRef.current = 'default'\n      } else if (\n        startDateRef.current === null &&\n        endDateRef.current === null &&\n        productIdRef.current !== 0\n      ) {\n        filterRef.current = 'product'\n      } else if (\n        startDateRef.current !== null &&\n        endDateRef.current !== null &&\n        productIdRef.current === 0\n      ) {\n        filterRef.current = 'date'\n      } else {\n        filterRef.current = 'dateandproduct'\n      }\n    }\n    selectRef.current.blur()\n    getMemberActivityall()\n  }\n\n  const showModal = (id, status) => {\n    setIsModalOpen(true)\n    setSingleId(id)\n    setRejectStatus(status)\n  }\n\n  const handleCancel = () => {\n    setIsModalOpen(false)\n  }\n\n  const handleApproveCancel = () => {\n    setOpen(false)\n  }\n\n  const handleApproveCancelAll = () => {\n    setOpenSelectAll(false)\n    setSelectedRows([])\n    setHeaderLabel('')\n  }\n  const handleRejectCancelAll = () => {\n    setOpenSelectRejectAll(false)\n  }\n\n  const truncateString = (str, num) => {\n    if (str.length <= num) {\n      return str\n    }\n    return str.slice(0, num) + '...'\n  }\n\n  const columns = !headerLabel\n    ? [\n        {\n          title: (() => {\n            if (memberTable === null || memberTable.length === 0) {\n              return (\n                <Checkbox onChange={(e) => handleHeaderCheck(e.target.checked)} disabled={true} />\n              )\n            } else {\n              return (\n                <Checkbox\n                  id=\"flexCheckDefault\"\n                  className=\"checkbox_design\"\n                  checked={selectedRows.length === memberTable.length && memberTable.length}\n                  onChange={(e) => handleHeaderCheck(e.target.checked)}\n                />\n              )\n            }\n          })(),\n          dataIndex: 'checkbox',\n          key: 'checkbox',\n          width: '4%',\n          align: 'center',\n          render: (_, record) => {\n            if (record.key === 'noMoreData') {\n              return {\n                children: null,\n                props: { colSpan: 0 },\n              }\n            }\n            return (\n              <Checkbox\n                className=\"checkbox_design\"\n                value={record.id}\n                disabled={['Approved', 'Rejected'].includes(record.status) || record.approved}\n                checked={selectedRows.includes(record.id)}\n                onChange={(e) => handleMemberCheck(record.id, e.target.checked)}\n              />\n            )\n          },\n        },\n        {\n          title: 'SI.No',\n          dataIndex: 'index',\n          key: 'index',\n          width: '5%',\n          align: 'center',\n          render: (text, record, index) => {\n            if (record.key === 'noMoreData') {\n              return {\n                children: null,\n                props: {\n                  colSpan: 0, // Adjust this number based on the total number of columns to span\n                },\n              }\n            }\n            return index + 1\n          },\n        },\n        {\n          title: 'Activity Date',\n          dataIndex: 'activity_date',\n          key: 'activity_date',\n          width: '8%',\n          render: (text, record, index) => {\n            if (record.key === 'noMoreData') {\n              return {\n                children: null,\n                props: {\n                  colSpan: 0, // Adjust this number based on the total number of columns to span\n                },\n              }\n            }\n            return formatDate(text)\n          },\n        },\n        {\n          title: 'Team member',\n          dataIndex: 'userName',\n          key: 'userName',\n          width: '10%',\n          render: (text, record, index) => {\n            if (record.key === 'noMoreData') {\n              return {\n                children: null,\n                props: {\n                  colSpan: 0, // Adjust this number based on the total number of columns to span\n                },\n              }\n            }\n            return <div title={text}> {truncateString(text, 15)}</div>\n          },\n        },\n        {\n          title: 'Product',\n          dataIndex: 'productName',\n          key: 'productName',\n          width: '15%',\n          render: (text, record, index) => {\n            if (record.key === 'noMoreData') {\n              setIsNorMore(true)\n              return {\n                children: (\n                  <div style={{ textAlign: 'center' }}>\n                    <b style={{ color: '#e40e2d', fontSize: '12px' }}>No more Data to load</b>\n                  </div>\n                ),\n                props: {\n                  colSpan: 9, // Adjust this number based on the total number of columns to span\n                },\n              }\n            }\n            return (\n              <span className=\"\" title={record.productName}>\n                {record.assignedStatus === true && (\n                  <span style={{ fontSize: '16px', color: '#00ab55' }}>&#8226;</span>\n                )}\n                {record.assignedStatus === false && (\n                  <span style={{ fontSize: '16px', color: '#ffaa00' }}>&#8226;</span>\n                )}\n                <span style={{ marginLeft: '5px' }}>{truncateString(record.productName, 25)}</span>\n              </span>\n            )\n          },\n        },\n        {\n          title: 'Task',\n          dataIndex: 'taskName',\n          key: 'taskName',\n          width: '15%',\n          render: (text, record, index) => {\n            if (record.key === 'noMoreData') {\n              return {\n                children: null,\n                props: {\n                  colSpan: 0, // Adjust this number based on the total number of columns to span\n                },\n              }\n            }\n            return <div title={text}> {truncateString(text, 25)}</div>\n          },\n        },\n        {\n          title: 'No.of.Hours',\n          dataIndex: 'hours',\n          key: 'hours',\n          width: '7%',\n          render: (text, record, index) => {\n            if (record.key === 'noMoreData') {\n              return {\n                children: null,\n                props: {\n                  colSpan: 0, // Adjust this number based on the total number of columns to span\n                },\n              }\n            }\n            return formatTimeDuration(record.hours)\n          },\n        },\n        {\n          title: 'Remarks',\n          dataIndex: 'description',\n          key: 'description',\n          width: '20%',\n          render: (text, record, index) => {\n            if (record.key === 'noMoreData') {\n              return {\n                children: null,\n                props: {\n                  colSpan: 0, // Adjust this number based on the total number of columns to span\n                },\n              }\n            }\n            return <div title={text}> {truncateString(text, 40)}</div>\n          },\n        },\n        {\n          title: 'Action',\n          dataIndex: 'action',\n          key: 'action',\n          width: '5%',\n          align: 'center',\n          render: (_, record) => {\n            if (record.key === 'noMoreData') {\n              return {\n                children: null,\n                props: {\n                  colSpan: 0, // Adjust this number based on the total number of columns to span\n                },\n              }\n            }\n            return (\n              <div style={{ display: 'flex', justifyContent: 'center' }}>\n                <button\n                  className=\"btn border-0 text-c text-secondary check-button\"\n                  style={{ fontSize: '12px', padding: '4px 8px' }}\n                  disabled={selectedRows.includes(record.id)}\n                  onClick={() => showPopconfirm('Approved', record.id)}\n                >\n                  <CheckSvg width=\"11\" height=\"9\" viewBox=\"0 0 14 10\" fill=\"#A5A1A1\" />\n                </button>\n                {/* </Popconfirm> */}\n                <button\n                  className=\"btn border-0 text-c text-secondary cross-button\"\n                  style={{ fontSize: '12px', padding: '4px 8px' }}\n                  onClick={() => showModal(record.id, 'Reject')}\n                  disabled={selectedRows.includes(record.id)}\n                >\n                  <CrossSvg width=\"9\" height=\"11\" viewBox=\"0 0 14 10\" fill=\"#A5A1A1\" />\n                </button>\n              </div>\n            )\n          },\n        },\n      ]\n    : [\n        {\n          title: (\n            <Checkbox\n              id=\"flexCheckDefault\"\n              className=\"checkbox_design\"\n              checked={selectedRows.length === memberTable.length && memberTable.length}\n              onChange={(e) => handleHeaderCheck(e.target.checked)}\n            />\n          ),\n          dataIndex: 'checkbox',\n          key: 'checkbox',\n          width: '4%',\n          align: 'center',\n          render: (_, record) => {\n            if (record.key === 'noMoreData') {\n              return {\n                children: null,\n                props: { colSpan: 0 },\n              }\n            }\n            return (\n              <Checkbox\n                className=\"checkbox_design\"\n                checked={selectedRows.includes(record.id)}\n                onChange={(e) => handleMemberCheck(record.id, e.target.checked)}\n              />\n            )\n          },\n        },\n        {\n          title: (\n            <span style={{ color: '#f50505', fontSize: '11px', fontWeight: '600' }}>\n              {headerLabel}\n            </span>\n          ),\n          dataIndex: 'index',\n          key: 'index',\n          width: '5%',\n          align: 'center',\n          render: (text, record, index) => {\n            if (record.key === 'noMoreData') {\n              return {\n                children: null,\n                props: {\n                  colSpan: 0, // Adjust this number based on the total number of columns to span\n                },\n              }\n            }\n            return index + 1\n          },\n        },\n        {\n          title: '',\n          dataIndex: 'activity_date',\n          key: 'activity_date',\n          width: '8%',\n          render: (text, record, index) => {\n            if (record.key === 'noMoreData') {\n              return {\n                children: null,\n                props: {\n                  colSpan: 0, // Adjust this number based on the total number of columns to span\n                },\n              }\n            }\n            return formatDate(text)\n          },\n        },\n        {\n          title: '',\n          dataIndex: 'userName',\n          key: 'userName',\n          width: '10%',\n          render: (text, record, index) => {\n            if (record.key === 'noMoreData') {\n              return {\n                children: null,\n                props: {\n                  colSpan: 0, // Adjust this number based on the total number of columns to span\n                },\n              }\n            }\n            return <div title={text}> {truncateString(text, 15)}</div>\n          },\n        },\n        {\n          title: '',\n          dataIndex: 'productName',\n          key: 'productName',\n          width: '15%',\n          render: (text, record, index) => {\n            if (record.key === 'noMoreData') {\n              setIsNorMore(true)\n              return {\n                children: (\n                  <div style={{ textAlign: 'center' }}>\n                    <b style={{ color: '#e40e2d', fontSize: '12px' }}>No more Data to load</b>\n                  </div>\n                ),\n                props: {\n                  colSpan: 9, // Adjust this number based on the total number of columns to span\n                },\n              }\n            }\n            return (\n              <span className=\"\" title={record.productName}>\n                {record.assignedStatus === true && (\n                  <span style={{ fontSize: '16px', color: '#00ab55' }}>&#8226;</span>\n                )}\n                {record.assignedStatus === false && (\n                  <span style={{ fontSize: '16px', color: '#ffaa00' }}>&#8226;</span>\n                )}\n                <span style={{ marginLeft: '5px' }}>{truncateString(record.productName, 13)}</span>\n              </span>\n            )\n          },\n        },\n        {\n          title: '',\n          dataIndex: 'taskName',\n          key: 'taskName',\n          width: '15%',\n          render: (text, record, index) => {\n            if (record.key === 'noMoreData') {\n              return {\n                children: null,\n                props: {\n                  colSpan: 0, // Adjust this number based on the total number of columns to span\n                },\n              }\n            }\n            return <div title={text}> {truncateString(text, 15)}</div>\n          },\n        },\n        {\n          title: '',\n          dataIndex: 'hours',\n          key: 'hours',\n          width: '7%',\n          render: (text, record, index) => {\n            if (record.key === 'noMoreData') {\n              return {\n                children: null,\n                props: {\n                  colSpan: 0, // Adjust this number based on the total number of columns to span\n                },\n              }\n            }\n            return formatTimeDuration(record.hours)\n          },\n        },\n        {\n          title: '',\n          dataIndex: 'description',\n          key: 'description',\n          width: '20%',\n          render: (text, record, index) => {\n            if (record.key === 'noMoreData') {\n              return {\n                children: null,\n                props: {\n                  colSpan: 0, // Adjust this number based on the total number of columns to span\n                },\n              }\n            }\n            return <div title={text}> {truncateString(text, 30)}</div>\n          },\n        },\n        {\n          title: (\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n              <button\n                className=\"btn border-0 text-c text-secondary check-button\"\n                style={{ fontSize: '12px', padding: '4px 8px' }}\n                type=\"button\"\n                onClick={() => showPopconfirmAll('Approved')}\n              >\n                <CheckSvg width=\"11\" height=\"9\" viewBox=\"0 0 14 10\" fill=\"#00ab55\" />\n              </button>\n              {/* </Popconfirm> */}\n              <button\n                className=\"btn border-0 text-c text-secondary cross-button\"\n                style={{ fontSize: '12px', padding: '4px 8px' }}\n                onClick={() => {\n                  showPopconfirmAll('Reject')\n                }}\n              >\n                <CrossSvg width=\"9\" height=\"11\" viewBox=\"0 0 14 10\" fill=\"#e40e2d\" />\n              </button>\n            </div>\n          ),\n          dataIndex: 'action',\n          key: 'action',\n          width: '5%',\n          align: 'center',\n          render: (_, record) => {\n            if (record.key === 'noMoreData') {\n              return {\n                children: null,\n                props: {\n                  colSpan: 0, // Adjust this number based on the total number of columns to span\n                },\n              }\n            }\n            return (\n              <div style={{ display: 'flex', justifyContent: 'center' }}>\n                <button\n                  className=\"btn border-0 text-c text-secondary check-button\"\n                  style={{ fontSize: '12px', padding: '4px 8px' }}\n                  disabled={selectedRows.includes(record.id)}\n                  onClick={() => showPopconfirm('Approved', record.id)}\n                >\n                  <CheckSvg width=\"11\" height=\"9\" viewBox=\"0 0 14 10\" fill=\"#A5A1A1\" />\n                </button>\n                {/* </Popconfirm> */}\n                <button\n                  className=\"btn border-0 text-c text-secondary cross-button\"\n                  style={{ fontSize: '12px', padding: '4px 8px' }}\n                  onClick={() => showModal(record.id, 'Reject')}\n                  disabled={selectedRows.includes(record.id)}\n                >\n                  <CrossSvg width=\"9\" height=\"11\" viewBox=\"0 0 14 10\" fill=\"#A5A1A1\" />\n                </button>\n              </div>\n            )\n          },\n        },\n      ]\n\n  const displayData = [\n    ...memberTable.map((row, index) => ({\n      key: row.id,\n      id: row.id,\n      index: index + 1,\n      activity_date: row.activity_date,\n      productName: row.productName,\n      taskName: row.taskName,\n      hours: row.hours,\n      description: row.description,\n      userName: row.userName,\n      assignedStatus: row.assignedStatus,\n    })),\n  ]\n\n  // Append the \"No more Data to load\" message as the last row if noMoreData is true\n  if (!hasMoreRef.current && displayData.length !== 0 && displayData.length > 10) {\n    displayData.push({\n      key: 'noMoreData',\n      index: '',\n      productName: 'No more Data to load',\n      taskName: '',\n      hours: '',\n      description: '',\n      userName: '',\n      action: '',\n      assignedStatus: '',\n    })\n  }\n\n  const fetchMoreData = () => {\n    if (hasMoreRef.current) {\n      getMemberActivityall()\n    }\n  }\n\n  const rowClassName = (record) => {\n    return selectedRows.includes(record.id) ? 'checked-table-row' : ''\n  }\n\n  const handleScroll = useCallback(\n    debounce(() => {\n      if (!tableBodyRef.current) return\n\n      const { scrollTop, scrollHeight, clientHeight } = tableBodyRef.current\n      if (scrollTop + clientHeight >= scrollHeight - 10) {\n        if (hasMoreRef.current && !commonLoader) {\n          setCommonLoader(true)\n          fetchMoreData()\n        }\n      }\n    }, 100),\n    [hasMoreRef.current, commonLoader],\n  )\n\n  useEffect(() => {\n    const tableBody = document.querySelector('.design_table .ant-table-body')\n    if (tableBody) {\n      tableBodyRef.current = tableBody\n      tableBody.addEventListener('scroll', handleScroll)\n    }\n\n    return () => {\n      if (tableBody) {\n        tableBody.removeEventListener('scroll', handleScroll)\n      }\n    }\n  }, [handleScroll])\n\n  return (\n    <>\n      <CRow className=\"mt-3\">\n        <CCol xs={12} sm={7} md={5}>\n          <b style={{ paddingLeft: '30px' }}>Pending Member&rsquo;s Activity</b>\n          <br />\n          <Breadcrumb\n            style={{ paddingLeft: '30px' }}\n            className=\"bread-tab\"\n            separator={<span className=\"breadcrumb-separator\">|</span>}\n            items={[\n              {\n                title: (\n                  <Link\n                    rel=\"Dashboard\"\n                    to={'/dashboard'}\n                    className=\"bread-items text-decoration-none text-secondary \"\n                  >\n                    Dashboard\n                  </Link>\n                ),\n              },\n              {\n                title: (\n                  <span className=\"text-secondary \" style={{ cursor: 'default' }}>\n                    Pending Member&rsquo;s Activity\n                  </span>\n                ),\n              },\n            ]}\n          />\n        </CCol>\n        <CCol sm={5} md={3}>\n          <RangePicker\n            variant={'borderless'}\n            style={{ width: '90%' }}\n            className=\"rangeField range_picker_box mem_selct\"\n            ref={rangePickerRef}\n            onChange={handleStartDateChange}\n            format=\"YYYY/MM/DD\"\n            allowClear\n            disabledDate={(current) => current && current > dayjs().endOf('day')}\n          />\n        </CCol>\n        <CCol sm={6} md={2}>\n          <Select\n            className=\"members_activity_select custom-select_pending mem_selct\"\n            suffixIcon={\n              <img src={Downarrowimg} alt=\"Downarrowimg\" style={{ width: '10px', height: '6px' }} />\n            }\n            id=\"products\"\n            value={options.find((option) => option.value === productIdRef.current) || undefined}\n            onChange={(value) => handleProduct(value)}\n            showSearch\n            allowClear\n            ref={selectRef}\n            filterOption={(input, option) =>\n              option.label.toLowerCase().indexOf(input.toLowerCase()) >= 0\n            }\n            options={\n              prodLoader || pLoader\n                ? [\n                    {\n                      label: (\n                        <div style={{ textAlign: 'center' }}>\n                          {Array.from({ length: 5 }, (_, index) => (\n                            <Skeleton\n                              key={index}\n                              title={false}\n                              paragraph={{\n                                rows: 1,\n                                width: '100%',\n                                height: '10px',\n                                style: { height: '10px !important' },\n                              }}\n                            />\n                          ))}\n                        </div>\n                      ),\n                      value: 'loading',\n                      disabled: true,\n                    },\n                  ]\n                : options\n            }\n            placeholder=\"Choose Product\"\n            getPopupContainer={(triggerNode) => triggerNode.parentNode}\n          />\n        </CCol>\n\n        <CCol sm={6} md={2}>\n          <Select\n            className=\"members_activity_select member-custom-select mem_selct\"\n            id=\"member-list\"\n            value={memberOption.find((option) => option.value === memberIdRef.current) || undefined}\n            onChange={(value) => handleMember(value)}\n            options={\n              memberLoader || mLoader\n                ? [\n                    {\n                      label: (\n                        <div style={{ textAlign: 'center' }}>\n                          {Array.from({ length: 5 }, (_, index) => (\n                            <Skeleton\n                              key={index}\n                              title={false}\n                              avatar={{\n                                size: '20',\n                              }} // Adjust the width and height here\n                              paragraph={{\n                                rows: 2,\n                                height: '10px',\n                                style: { height: '10px !important' },\n                              }}\n                            />\n                          ))}\n                        </div>\n                      ),\n                      value: 'loading',\n                      disabled: true,\n                    },\n                  ]\n                : memberOption\n            }\n            showSearch\n            ref={selectRef}\n            variant={'borderless'}\n            suffixIcon={\n              <img src={Downarrowimg} alt=\"Downarrowimg\" style={{ width: '10px', height: '6px' }} />\n            }\n            placeholder=\"Choose Member\"\n            allowClear\n            filterOption={(input, option) => {\n              const userNameArray = option.label.props.children[1].props.children[0].props.children\n              const userName = userNameArray\n              const lowerCaseInput = input.toLowerCase()\n              const lowerCaseUserName = userName.toLowerCase()\n              return lowerCaseUserName.includes(lowerCaseInput)\n            }}\n            popupMatchSelectWidth={false}\n            popupClassName=\"custom-dropdown\"\n            getPopupContainer={(triggerNode) => triggerNode.parentNode}\n          />\n        </CCol>\n      </CRow>\n      <div className=\"mt-2 design_table\">\n        <style>\n          {`\n        .design_table .ant-table-body::-webkit-scrollbar {\n          display: none !important;\n        }\n        .design_table .ant-table-wrapper .ant-table-thead > tr > th {\n          background-color: ${headerLabel ? '#ffa5b240 !important' : ''};\n        }\n      `}\n        </style>\n        <Table\n          columns={columns}\n          size={'middle'}\n          dataSource={displayData}\n          rowKey=\"id\"\n          className={`${isNorMore ? 'last-row-table' : ''}`}\n          pagination={false}\n          scroll={{ y: 490 }}\n          loading={{\n            spinning: commonLoader,\n            indicator: <CSpinner color=\"danger\" />,\n          }}\n          rowClassName={rowClassName}\n        />\n      </div>\n      {isModalOpen && (\n        <RejectConfirmModal\n          isModalOpen={isModalOpen}\n          handleCancel={handleCancel}\n          handleApprove={handleApproveActivity}\n          id={singleId}\n          headContent=\"Activity\"\n          resetFunc={resetFormValues}\n        />\n      )}\n      {open && (\n        <ApprovedConfirmModal\n          isModalOpen={open}\n          handleCancel={handleApproveCancel}\n          handleApprove={handleApproved}\n          id={singleApprovedId}\n          headContent=\"Activity\"\n          resetFunc={resetFormValues}\n        />\n      )}\n      {openSelectAll && (\n        <ApprovedConfirmModal\n          isModalOpen={openSelectAll}\n          handleCancel={handleApproveCancelAll}\n          handleApprove={handleButtonClick}\n          headContent=\"Activity\"\n          resetFunc={resetFormValues}\n        />\n      )}\n      {openSelectRejectAll && (\n        <RejectConfirmModal\n          isModalOpen={openSelectRejectAll}\n          handleCancel={handleRejectCancelAll}\n          handleApprove={handleButtonClick}\n          headContent=\"Activity\"\n          resetFunc={resetFormValues}\n        />\n      )}\n    </>\n  )\n}\n\nPendingActivity.propTypes = {\n  formatDate: PropTypes.func,\n  productLists: PropTypes.array,\n  memberLists: PropTypes.array,\n  prodLoader: PropTypes.bool,\n  memberLoader: PropTypes.bool,\n}\nexport default PendingActivity\n","import React, { useState, useEffect, useRef, useCallback } from 'react'\nimport { Checkbox, Select, DatePicker, Breadcrumb, Skeleton, Table } from 'antd'\nimport { CCol, CRow, CSpinner } from '@coreui/react'\nimport { getHeaders, ImageUrl } from 'src/constant/Global'\nimport profileImage1 from '../../assets/images/avatars/wrapper.png'\nimport { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport PropTypes from 'prop-types'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport CrossSvg from '../svgImages/CrossSvg'\nimport CheckSvg from '../svgImages/CheckSvg'\nimport RejectConfirmModal from '../modal/RejectConfirmModal'\nimport useAxios from 'src/constant/UseAxios'\nimport dayjs from 'dayjs'\nimport Downarrowimg from '../../assets/images/downarrow.png'\nimport { toPascalCase } from '../../constant/TimeUtils'\nimport ApprovedConfirmModal from '../modal/ApprovedConfirmModel'\nimport { Link } from 'react-router-dom'\nimport debounce from 'lodash.debounce'\n\nconst RequestList = ({ formatDate, memberLists, memberLoader }) => {\n  let api = useAxios()\n  const [memberTable, setMemberTable] = useState([])\n  const [selectedRows, setSelectedRows] = useState([])\n  const [memberList, setMemberList] = useState([])\n  const [headerLabel, setHeaderLabel] = useState('')\n  const [isModalOpen, setIsModalOpen] = useState(false)\n  const [singleId, setSingleId] = useState()\n  const [commonLoader, setCommonLoader] = useState()\n  const [open, setOpen] = useState(null)\n  const [openSelectAll, setOpenSelectAll] = useState(false)\n  const [singleApprovedId, setSingleApprovedId] = useState('')\n  const [approvedStatus, setApprovedStatus] = useState('')\n  const [approvedStatusAll, setApprovedStatusAll] = useState('')\n  const [openSelectRejectAll, setOpenSelectRejectAll] = useState(false)\n  const dateRef = useRef(null)\n  const pageRef = useRef(0)\n  const memberIdRef = useRef(0)\n  const filterRef = useRef(false)\n  const hasMoreRef = useRef(true)\n  const [abortController, setAbortController] = useState(new AbortController())\n  const tableBodyRef = useRef(null)\n  const [isNorMore, setIsNorMore] = useState(false)\n\n  const showPopconfirm = (status, rowId) => {\n    setOpen(true)\n    setSingleApprovedId(rowId)\n    setApprovedStatus(status)\n  }\n\n  const showPopconfirmAll = (status) => {\n    if (status === 'Approved') {\n      setOpenSelectAll(true)\n      setApprovedStatusAll('Approved')\n    } else if (status === 'Rejected') {\n      setOpenSelectRejectAll(true)\n      setApprovedStatusAll('Rejected')\n    }\n  }\n\n  const handleApproveCancel = () => {\n    setOpen(false)\n  }\n\n  const handleApproveCancelAll = () => {\n    setOpenSelectAll(false)\n    setSelectedRows([])\n    setHeaderLabel('')\n  }\n\n  useEffect(() => {\n    setMemberList(memberLists)\n    hasMoreRef.current = true\n    getMemberRequestall()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const handleDateChange = (date, dateString) => {\n    pageRef.current = 0\n    hasMoreRef.current = true\n    if (date !== null) {\n      const parsedDate = dayjs(date, 'DD MMM, YYYY')\n      const formattedDate = parsedDate.format('YYYY-MM-DD')\n      dateRef.current = formattedDate\n      filterRef.current = true\n    } else if (memberIdRef.current !== 0) {\n      filterRef.current = true\n      dateRef.current = null\n    } else {\n      filterRef.current = false\n      dateRef.current = null\n    }\n    setCommonLoader(true)\n    setMemberTable([])\n    getMemberRequestall()\n  }\n\n  const handleHeaderCheck = (isChecked) => {\n    if (isChecked) {\n      const allRowIds = memberTable.map((row) => row.id)\n      setSelectedRows(allRowIds)\n      setHeaderLabel(`${allRowIds.length} Selected`)\n    } else {\n      setSelectedRows([])\n      setHeaderLabel('')\n    }\n  }\n\n  const handleMemberCheck = (rowId, isChecked) => {\n    if (isChecked) {\n      setSelectedRows((prevSelectedRows) => [...prevSelectedRows, rowId])\n    } else {\n      setSelectedRows((prevSelectedRows) =>\n        prevSelectedRows.filter((selectedId) => selectedId !== rowId),\n      )\n    }\n\n    // Calculate the new number of selected rows\n    const newSelectedRows = isChecked\n      ? [...selectedRows, rowId]\n      : selectedRows.filter((selectedId) => selectedId !== rowId)\n    const newSelectedRowCount = newSelectedRows.length\n\n    // Update the header label\n    if (newSelectedRowCount < 1) {\n      setHeaderLabel('')\n    } else {\n      setHeaderLabel(`${newSelectedRowCount} Selected`)\n    }\n  }\n\n  const getUrl = () => {\n    let url\n    if (filterRef.current === false)\n      url = `activity/raisedRequest/tosupervisor?page=${pageRef.current}&size=10&filter=${filterRef.current}&userid=${memberIdRef.current}`\n    else if (dateRef.current !== null && memberIdRef.current !== 0)\n      url = `activity/raisedRequest/tosupervisor?page=${pageRef.current}&size=10&filter=${filterRef.current}&date=${dateRef.current}&userid=${memberIdRef.current}`\n    else if (dateRef.current !== null && memberIdRef.current === 0)\n      url = `activity/raisedRequest/tosupervisor?page=${pageRef.current}&size=10&filter=${filterRef.current}&date=${dateRef.current}`\n    else if (dateRef.current === null && memberIdRef.current !== 0)\n      url = `activity/raisedRequest/tosupervisor?page=${pageRef.current}&size=10&filter=${filterRef.current}&userid=${memberIdRef.current}`\n    return url\n  }\n\n  const getMemberRequestall = async () => {\n    let newAbortController\n    if (pageRef.current === 0) {\n      setCommonLoader(true)\n      setMemberTable([])\n      abortController.abort()\n      newAbortController = new AbortController()\n      setAbortController(newAbortController)\n    }\n    try {\n      const response = await api.get(getUrl(), {\n        headers: getHeaders('json'),\n        signal: newAbortController?.signal,\n      })\n      const data = response.data.data\n      if (pageRef.current === 0) {\n        setMemberTable(data)\n      } else {\n        setMemberTable((prevUserData) => {\n          const uniqueSet = new Set(prevUserData.map((user) => user.id))\n          const newData = data.filter((user) => !uniqueSet.has(user.id))\n          return [...prevUserData, ...newData]\n        })\n      }\n      if (data.length < 10) {\n        hasMoreRef.current = false\n      } else {\n        hasMoreRef.current = true\n      }\n\n      pageRef.current = pageRef.current + 1\n      setCommonLoader(false)\n    } catch (error) {}\n  }\n\n  const handleBulkApproval = async (status, id, remarksValue) => {\n    if (approvedStatusAll === 'Rejected' && remarksValue === '') {\n      toast.error('Please Enter Remarks!..', {\n        position: toast.POSITION.BOTTOM_RIGHT,\n        autoClose: 3000,\n      })\n    } else {\n      const url = `activity/approve?ids=${selectedRows}`\n      const postData = {\n        status: approvedStatusAll,\n        remarks: remarksValue,\n      }\n      try {\n        const response = await api.put(url, postData, {\n          headers: getHeaders('json'),\n        })\n        if (response?.data) {\n          toast.success(response.data.message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n            autoClose: 3000,\n          })\n          return response.data\n        } else {\n          throw new Error('Empty response received from the server')\n        }\n      } catch (error) {\n        toast.error(error.message, {\n          position: toast.POSITION.BOTTOM_RIGHT,\n          autoClose: 3000,\n        })\n        throw error\n      }\n    }\n  }\n  const handleApproved = async (status, singleApprovedId, remarks) => {\n    return await handleRaiseApprove(approvedStatus, singleApprovedId, remarks)\n  }\n\n  const handleRaiseApprove = async (status, id, remarks) => {\n    const url = 'activity/approve/' + id\n    const postData = {\n      status: status,\n      remarks: remarks,\n    }\n    try {\n      const response = await api.put(url, postData, {\n        headers: getHeaders('json'),\n      })\n\n      if (response?.data) {\n        const message = `Request ${status} Successfully`\n        toast.success(message, {\n          position: toast.POSITION.BOTTOM_RIGHT,\n          autoClose: 2000,\n        })\n        return response.data\n      } else {\n        throw new Error('Empty response received from the server')\n      }\n    } catch (error) {\n      const errorMessage = error.response ? error.response.data.message : error.message\n      toast.error(errorMessage, {\n        position: toast.POSITION.BOTTOM_RIGHT,\n        autoClose: 3000,\n      })\n      throw error\n    }\n  }\n\n  const resetFormValues = () => {\n    setOpen(false)\n    setOpenSelectAll(false)\n    setOpenSelectRejectAll(false)\n    setSelectedRows([])\n    setHeaderLabel('')\n    pageRef.current = 0\n    hasMoreRef.current = true\n    filterRef.current = false\n    getMemberRequestall()\n    setIsModalOpen(false)\n  }\n\n  // Member List\n  const memberOption = memberList.map((user) => ({\n    value: user.id,\n    label: (\n      <div className=\"select-options1\">\n        <img\n          src={user.profile_pic ? ImageUrl + user.profile_pic : profileImage1}\n          style={user.profile_pic ? { width: '29px' } : { width: '39px' }}\n          alt={user.name}\n          className=\"img-flag\"\n        />\n        <div className=\"node1\" style={user.profile_pic ? { marginLeft: '11px' } : {}}>\n          <p className=\"user-name1\" title={user.name}>\n            {toPascalCase(user.name)}\n          </p>\n          <p className=\"role-text1\">{user.role}</p>\n        </div>\n      </div>\n    ),\n  }))\n\n  const handleMember = (member) => {\n    pageRef.current = 0\n    hasMoreRef.current = true\n    if (member !== undefined) {\n      memberIdRef.current = member\n      filterRef.current = true\n    } else if (member === undefined && dateRef.current !== null) {\n      filterRef.current = true\n      memberIdRef.current = 0\n    } else {\n      filterRef.current = false\n      memberIdRef.current = 0\n    }\n    setCommonLoader(true)\n    setMemberTable([])\n    getMemberRequestall()\n  }\n\n  const showModal = (id) => {\n    setIsModalOpen(true)\n    setSingleId(id)\n  }\n\n  const handleCancel = () => {\n    setIsModalOpen(false)\n  }\n  const handleRejectCancelAll = () => {\n    setOpenSelectRejectAll(false)\n  }\n\n  const truncateString = (str, num) => {\n    if (str.length <= num) {\n      return str\n    }\n    return str.slice(0, num) + '...'\n  }\n\n  const columns = !headerLabel\n    ? [\n        {\n          title: (() => {\n            if (memberTable === null || memberTable.length === 0) {\n              return (\n                <Checkbox onChange={(e) => handleHeaderCheck(e.target.checked)} disabled={true} />\n              )\n            } else {\n              return (\n                <Checkbox\n                  id=\"flexCheckDefault\"\n                  className=\"checkbox_design\"\n                  checked={selectedRows.length === memberTable.length && memberTable.length}\n                  onChange={(e) => handleHeaderCheck(e.target.checked)}\n                />\n              )\n            }\n          })(),\n          dataIndex: 'checkbox',\n          key: 'checkbox',\n          width: '3%',\n          align: 'center',\n          render: (_, record) => {\n            if (record.key === 'noMoreData') {\n              return {\n                children: null,\n                props: { colSpan: 0 },\n              }\n            }\n            return (\n              <Checkbox\n                className=\"checkbox_design\"\n                value={record.id}\n                disabled={['Approved', 'Rejected'].includes(record.status) || record.approved}\n                checked={selectedRows.includes(record.id)}\n                onChange={(e) => handleMemberCheck(record.id, e.target.checked)}\n              />\n            )\n          },\n        },\n        {\n          title: 'SI.No',\n          dataIndex: 'index',\n          key: 'index',\n          width: '4%',\n          align: 'center',\n          render: (text, record, index) => {\n            if (record.key === 'noMoreData') {\n              return {\n                children: null,\n                props: {\n                  colSpan: 0, // Adjust this number based on the total number of columns to span\n                },\n              }\n            }\n            return index + 1\n          },\n        },\n        {\n          title: 'Activity Date',\n          dataIndex: 'requestDate',\n          key: 'requestDate',\n          width: '8%',\n          render: (text, record, index) => {\n            if (record.key === 'noMoreData') {\n              return {\n                children: null,\n                props: {\n                  colSpan: 0, // Adjust this number based on the total number of columns to span\n                },\n              }\n            }\n            return formatDate(text)\n          },\n        },\n        {\n          title: 'Team member',\n          dataIndex: 'teamName',\n          key: 'teamName',\n          width: '10%',\n          render: (text, record, index) => {\n            if (record.key === 'noMoreData') {\n              return {\n                children: null,\n                props: {\n                  colSpan: 0, // Adjust this number based on the total number of columns to span\n                },\n              }\n            }\n            return <div title={text}> {truncateString(text, 15)}</div>\n          },\n        },\n        {\n          title: 'Description',\n          dataIndex: 'reason',\n          key: 'reason',\n          width: '25%',\n          render: (text, record, index) => {\n            if (record.key === 'noMoreData') {\n              setIsNorMore(true)\n              return {\n                children: (\n                  <div style={{ textAlign: 'center' }}>\n                    <b style={{ color: '#e40e2d', fontSize: '12px' }}>No more Data to load</b>\n                  </div>\n                ),\n                props: {\n                  colSpan: 6, // Adjust this number based on the total number of columns to span\n                },\n              }\n            }\n            return <div title={text}> {truncateString(text, 40)}</div>\n          },\n        },\n        {\n          title: 'Action',\n          dataIndex: 'action',\n          key: 'action',\n          width: '5%',\n          align: 'center',\n          render: (_, record) => {\n            if (record.key === 'noMoreData') {\n              return {\n                children: null,\n                props: {\n                  colSpan: 0, // Adjust this number based on the total number of columns to span\n                },\n              }\n            }\n            return (\n              <div style={{ display: 'flex', justifyContent: 'center' }}>\n                <button\n                  className=\"btn border-0 text-c text-secondary check-button\"\n                  style={{ fontSize: '12px', padding: '4px 8px' }}\n                  disabled={selectedRows.includes(record.id)}\n                  onClick={() => showPopconfirm('Approved', record.id)}\n                >\n                  <CheckSvg width=\"11\" height=\"9\" viewBox=\"0 0 14 10\" fill=\"#A5A1A1\" />\n                </button>\n                {/* </Popconfirm> */}\n                <button\n                  className=\"btn border-0 text-c text-secondary cross-button\"\n                  style={{ fontSize: '12px', padding: '4px 8px' }}\n                  onClick={() => showModal(record.id, 'Reject')}\n                  disabled={selectedRows.includes(record.id)}\n                >\n                  <CrossSvg width=\"9\" height=\"11\" viewBox=\"0 0 14 10\" fill=\"#A5A1A1\" />\n                </button>\n              </div>\n            )\n          },\n        },\n      ]\n    : [\n        {\n          title: (\n            <Checkbox\n              id=\"flexCheckDefault\"\n              className=\"checkbox_design\"\n              checked={selectedRows.length === memberTable.length && memberTable.length}\n              onChange={(e) => handleHeaderCheck(e.target.checked)}\n            />\n          ),\n          dataIndex: 'checkbox',\n          key: 'checkbox',\n          width: '3%',\n          align: 'center',\n          render: (_, record) => {\n            if (record.key === 'noMoreData') {\n              return {\n                children: null,\n                props: { colSpan: 0 },\n              }\n            }\n            return (\n              <Checkbox\n                className=\"checkbox_design\"\n                checked={selectedRows.includes(record.id)}\n                onChange={(e) => handleMemberCheck(record.id, e.target.checked)}\n              />\n            )\n          },\n        },\n        {\n          title: (\n            <span style={{ color: '#f50505', fontSize: '11px', fontWeight: '600' }}>\n              {headerLabel}\n            </span>\n          ),\n          dataIndex: 'index',\n          key: 'index',\n          width: '4%',\n          align: 'center',\n          render: (text, record, index) => {\n            if (record.key === 'noMoreData') {\n              return {\n                children: null,\n                props: {\n                  colSpan: 0, // Adjust this number based on the total number of columns to span\n                },\n              }\n            }\n            return index + 1\n          },\n        },\n        {\n          title: '',\n          dataIndex: 'requestDate',\n          key: 'requestDate',\n          width: '8%',\n          render: (text, record, index) => {\n            if (record.key === 'noMoreData') {\n              return {\n                children: null,\n                props: {\n                  colSpan: 0, // Adjust this number based on the total number of columns to span\n                },\n              }\n            }\n            return formatDate(text)\n          },\n        },\n        {\n          title: '',\n          dataIndex: 'teamName',\n          key: 'teamName',\n          width: '10%',\n          render: (text, record, index) => {\n            if (record.key === 'noMoreData') {\n              return {\n                children: null,\n                props: {\n                  colSpan: 0, // Adjust this number based on the total number of columns to span\n                },\n              }\n            }\n            return <div title={text}> {truncateString(text, 15)}</div>\n          },\n        },\n        {\n          title: '',\n          dataIndex: 'reason',\n          key: 'reason',\n          width: '25%',\n          render: (text, record, index) => {\n            if (record.key === 'noMoreData') {\n              return {\n                children: (\n                  <div style={{ textAlign: 'center' }}>\n                    <b style={{ color: '#e40e2d', fontSize: '12px' }}>No more Data to load</b>\n                  </div>\n                ),\n                props: {\n                  colSpan: 6, // Adjust this number based on the total number of columns to span\n                },\n              }\n            }\n            return <div title={text}> {truncateString(text, 30)}</div>\n          },\n        },\n        {\n          title: (\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n              <button\n                className=\"btn border-0 text-c text-secondary check-button\"\n                style={{ fontSize: '12px', padding: '4px 8px' }}\n                type=\"button\"\n                onClick={() => showPopconfirmAll('Approved')}\n              >\n                <CheckSvg width=\"11\" height=\"9\" viewBox=\"0 0 14 10\" fill=\"#00ab55\" />\n              </button>\n              {/* </Popconfirm> */}\n              <button\n                className=\"btn border-0 text-c text-secondary cross-button\"\n                style={{ fontSize: '12px', padding: '4px 8px' }}\n                onClick={() => {\n                  showPopconfirmAll('Reject')\n                }}\n              >\n                <CrossSvg width=\"9\" height=\"11\" viewBox=\"0 0 14 10\" fill=\"#e40e2d\" />\n              </button>\n            </div>\n          ),\n          dataIndex: 'action',\n          key: 'action',\n          width: '5%',\n          align: 'center',\n          render: (_, record) => {\n            if (record.key === 'noMoreData') {\n              return {\n                children: null,\n                props: {\n                  colSpan: 0, // Adjust this number based on the total number of columns to span\n                },\n              }\n            }\n            return (\n              <div style={{ display: 'flex', justifyContent: 'center' }}>\n                <button\n                  className=\"btn border-0 text-c text-secondary check-button\"\n                  style={{ fontSize: '12px', padding: '4px 8px' }}\n                  disabled={selectedRows.includes(record.id)}\n                  onClick={() => showPopconfirm('Approved', record.id)}\n                >\n                  <CheckSvg width=\"11\" height=\"9\" viewBox=\"0 0 14 10\" fill=\"#A5A1A1\" />\n                </button>\n                {/* </Popconfirm> */}\n                <button\n                  className=\"btn border-0 text-c text-secondary cross-button\"\n                  style={{ fontSize: '12px', padding: '4px 8px' }}\n                  onClick={() => showModal(record.id, 'Reject')}\n                  disabled={selectedRows.includes(record.id)}\n                >\n                  <CrossSvg width=\"9\" height=\"11\" viewBox=\"0 0 14 10\" fill=\"#A5A1A1\" />\n                </button>\n              </div>\n            )\n          },\n        },\n      ]\n\n  const displayData = [\n    ...memberTable.map((row, index) => ({\n      key: row.id,\n      id: row.id,\n      index: index + 1,\n      requestDate: row.requestDate,\n      reason: row.reason,\n      teamName: row.teamName,\n    })),\n  ]\n\n  // Append the \"No more Data to load\" message as the last row if noMoreData is true\n  if (!hasMoreRef.current && displayData.length !== 0 && displayData.length > 10) {\n    displayData.push({\n      key: 'noMoreData',\n      index: '',\n      reason: 'No more Data to load',\n      teamName: '',\n      action: '',\n    })\n  }\n\n  const fetchMoreData = () => {\n    if (hasMoreRef.current) {\n      getMemberRequestall()\n    }\n  }\n  const rowClassName = (record) => {\n    return selectedRows.includes(record.id) ? 'checked-table-row' : ''\n  }\n\n  const handleScroll = useCallback(\n    debounce(() => {\n      if (!tableBodyRef.current) return\n\n      const { scrollTop, scrollHeight, clientHeight } = tableBodyRef.current\n      if (scrollTop + clientHeight >= scrollHeight - 10) {\n        if (hasMoreRef.current && !commonLoader) {\n          setCommonLoader(true)\n          fetchMoreData()\n        }\n      }\n    }, 100),\n    [hasMoreRef.current, commonLoader],\n  )\n\n  useEffect(() => {\n    const tableBody = document.querySelector('.design_table .ant-table-body')\n    if (tableBody) {\n      tableBodyRef.current = tableBody\n      tableBody.addEventListener('scroll', handleScroll)\n    }\n\n    return () => {\n      if (tableBody) {\n        tableBody.removeEventListener('scroll', handleScroll)\n      }\n    }\n  }, [handleScroll])\n\n  return (\n    <>\n      <CRow className=\"mt-3\">\n        <CCol xs={12} sm={10} md={8}>\n          <b style={{ paddingLeft: '30px' }}>Request List</b>\n          <br />\n          <Breadcrumb\n            style={{ paddingLeft: '30px' }}\n            className=\"bread-tab\"\n            separator={<span className=\"breadcrumb-separator\">|</span>}\n            items={[\n              {\n                title: (\n                  <Link\n                    rel=\"Dashboard\"\n                    to={'/dashboard'}\n                    className=\"bread-items text-decoration-none text-secondary \"\n                  >\n                    Dashboard\n                  </Link>\n                ),\n              },\n              {\n                title: (\n                  <span className=\"text-secondary \" style={{ cursor: 'default' }}>\n                    Request List\n                  </span>\n                ),\n              },\n            ]}\n          />\n        </CCol>\n        <CCol sm={5} md={2}>\n          <DatePicker\n            style={{\n              borderBottom: '1px solid #f1f1f1',\n              borderRadius: '0',\n              width: '90%',\n\n              marginTop: '1px',\n            }}\n            className=\"filter-date membr-req-date mem_selct\"\n            onChange={handleDateChange}\n            placeholder=\"Choose Date\"\n            allowClear={true}\n            variant={'borderless'}\n            format=\"DD MMM,YYYY\"\n          />\n        </CCol>\n        <CCol sm={5} md={2}>\n          <Select\n            className=\"members_activity_select membr-req-mem mem_selct\"\n            id=\"member-list\"\n            value={memberOption.find((option) => option.value === memberIdRef.current) || undefined}\n            onChange={(value) => handleMember(value)}\n            options={\n              memberLoader\n                ? [\n                    {\n                      label: (\n                        <div style={{ textAlign: 'center' }}>\n                          {Array.from({ length: 5 }, (_, index) => (\n                            <Skeleton\n                              key={index}\n                              title={false}\n                              avatar={{\n                                size: '20',\n                              }} // Adjust the width and height here\n                              paragraph={{\n                                rows: 2,\n                                height: '10px',\n                                style: { height: '10px !important' },\n                              }}\n                            />\n                          ))}\n                        </div>\n                      ),\n                      value: 'loading',\n                      disabled: true,\n                    },\n                  ]\n                : memberOption\n            }\n            showSearch\n            variant={'borderless'}\n            placeholder=\"Choose Member\"\n            suffixIcon={\n              <img src={Downarrowimg} alt=\"Downarrowimg\" style={{ width: '10px', height: '6px' }} />\n            }\n            allowClear\n            popupMatchSelectWidth={false}\n            filterOption={(input, option) => {\n              const teamNameArray = option.label.props.children[1].props.children[0].props.children\n              const teamName = teamNameArray[1]\n              const lowerCaseInput = input.toLowerCase()\n              const lowerCaseteamName = teamName.toLowerCase()\n              return lowerCaseteamName.includes(lowerCaseInput)\n            }}\n            popupClassName=\"custom-dropdown\"\n            getPopupContainer={(triggerNode) => triggerNode.parentNode}\n          />\n        </CCol>\n        {/* <CCol sm={5} md={2}>\n          <Select\n            suffixIcon={\n              <img src={Downarrowimg} alt=\"Downarrowimg\" style={{ width: '10px', height: '6px' }} />\n            }\n            className=\"members_activity_select member-custom-select mem_selct\"\n            allowClear\n            placeholder=\"Choose Status\"\n            options={[\n              {\n                value: 'Approved',\n                label: 'Approved',\n              },\n              {\n                value: 'Rejected',\n                label: 'Rejected',\n              },\n              {\n                value: 'Pending',\n                label: 'Pending',\n              },\n            ]}\n            onChange={(value) => setStatusValue(value)}\n          />\n        </CCol> */}\n      </CRow>\n      <div className=\"mt-2 design_table\">\n        <style>\n          {`\n        .design_table .ant-table-body::-webkit-scrollbar {\n          display: none !important;\n        }\n        .design_table .ant-table-wrapper .ant-table-thead > tr > th {\n          background-color: ${headerLabel ? '#ffa5b240 !important' : ''};\n        }\n      `}\n        </style>\n        <Table\n          columns={columns}\n          size={'middle'}\n          dataSource={displayData}\n          rowKey=\"id\"\n          className={`${isNorMore ? 'last-row-table' : ''}`}\n          pagination={false}\n          scroll={{ y: 490 }}\n          loading={{\n            spinning: commonLoader,\n            indicator: <CSpinner color=\"danger\" />,\n          }}\n          rowClassName={rowClassName}\n        />\n      </div>\n      {isModalOpen && (\n        <RejectConfirmModal\n          isModalOpen={isModalOpen}\n          handleCancel={handleCancel}\n          handleApprove={handleRaiseApprove}\n          id={singleId}\n          headContent=\"request\"\n          resetFunc={resetFormValues}\n        />\n      )}\n      {open && (\n        <ApprovedConfirmModal\n          isModalOpen={open}\n          handleCancel={handleApproveCancel}\n          handleApprove={handleApproved}\n          id={singleApprovedId}\n          headContent=\"request\"\n          resetFunc={resetFormValues}\n        />\n      )}\n      {openSelectAll && (\n        <ApprovedConfirmModal\n          isModalOpen={openSelectAll}\n          handleCancel={handleApproveCancelAll}\n          handleApprove={handleBulkApproval}\n          headContent=\"Activity\"\n          resetFunc={resetFormValues}\n        />\n      )}\n      {openSelectRejectAll && (\n        <RejectConfirmModal\n          isModalOpen={openSelectRejectAll}\n          handleCancel={handleRejectCancelAll}\n          handleApprove={handleBulkApproval}\n          headContent=\"Activity\"\n          resetFunc={resetFormValues}\n        />\n      )}\n    </>\n  )\n}\n\nRequestList.propTypes = {\n  formatDate: PropTypes.func,\n  memberLists: PropTypes.array,\n  memberLoader: PropTypes.bool,\n}\nexport default RequestList\n","import React, { useState, useRef, useEffect } from 'react'\nimport { DatePicker, Breadcrumb, Select as AntdSelect } from 'antd'\nimport { CCol, CRow, CSpinner } from '@coreui/react'\nimport { ImageUrl, getDecodeData, getHeaders } from 'src/constant/Global'\nimport 'react-toastify/dist/ReactToastify.css'\nimport PropTypes from 'prop-types'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport useAxios from 'src/constant/UseAxios'\nimport dayjs from 'dayjs'\nimport Downarrowimg from '../../assets/images/downarrow.png'\nimport Calendarimg from '../../assets/images/calendar-image.png'\nimport Chart from 'react-apexcharts'\nimport { IoIosArrowBack, IoIosArrowForward } from 'react-icons/io'\nimport profileImage1 from '../../assets/images/avatars/wrapper.png'\nimport { Checkbox, ListItemText, Autocomplete, TextField } from '@mui/material'\nimport CheckedIcon from '../../assets/images/checked.png'\nimport UncheckIcon from '../../assets/images/check-outlined.png'\nconst processData = (item) => {\n  console.log(item.attendance, 'item.attendance')\n  if (\n    item.attendance !== null &&\n    item.attendance !== undefined &&\n    item.attendance !== 'leave' &&\n    item.attendance !== 'present' &&\n    item.attendance !== 'Leave'\n  ) {\n    const attendance = item.attendance\n    const baseObject = {\n      x: item.name,\n      fillColor: '',\n      name: attendance.username,\n      date: dayjs(attendance.date).format('DD-MM-YYYY'),\n      employeeID: attendance.employeeID,\n      signIn: attendance.signIn,\n      signOut: attendance.signOut,\n      totalWorkHours: attendance.totalWorkHours,\n      actualWorkHours: attendance.acutalWorkHours,\n      shortfallHours: attendance.shortfallHours,\n      excessHours: attendance.excessHours,\n      timesheetEnteredHours: attendance.timesheetHours,\n    }\n\n    if (attendance.shortfallHours !== '00:00') {\n      baseObject.y = attendance.acutalWorkHours\n      baseObject.fillColor = '#ff4c4c'\n    } else if (attendance.regularizationStatus === true) {\n      baseObject.y = attendance.acutalWorkHours\n      baseObject.fillColor = '#FFA657'\n    } else {\n      baseObject.y = attendance.acutalWorkHours\n      baseObject.fillColor = '#357AF6'\n    }\n    return baseObject\n  } else if (item.attendance === 'leave' || item.attendance === 'Leave') {\n    return {\n      x: item.name,\n      y: 12,\n      columnWidth: '60%',\n      fillColor: 'FF7D90',\n    }\n  } else {\n    return {\n      x: item.name,\n      y: 12,\n      fillColor: '#e1e1e1',\n    }\n  }\n}\n\nconst tagRender = (props) => {\n  const { label } = props\n  return <span>{label}</span>\n}\n\ntagRender.propTypes = {\n  label: PropTypes.any.isRequired,\n}\nconst SwipeDetails = ({ memberLists }) => {\n  let api = useAxios()\n  const user = getDecodeData()\n  const jod = user?.jod\n  const [memberList, setMemberList] = useState(memberLists)\n  const dateRef = useRef(dayjs().format('YYYY-MM-DD'))\n  const [data, setData] = useState([])\n  const [chartSeries, setChartSeries] = useState([])\n  const [loader, setLoader] = useState(true)\n  const shortfall = useRef(false)\n  const excess = useRef(false)\n  const page = useRef(0)\n  const size = useRef(10)\n  const hasMore = useRef(true)\n  const [selectedOptions, setSelectedOptions] = useState([])\n\n  useEffect(() => {\n    if (memberLists !== undefined) {\n      setMemberList(memberLists)\n    }\n  }, [memberLists])\n\n  useEffect(() => {\n    getSwipeDetails()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const getSwipeDetails = async (values) => {\n    let url\n    if (values !== undefined && values?.length !== 0) {\n      url = `fetchDataList?date=${dateRef.current}&checkShortfallHours=${shortfall.current}&excessHours=${excess.current}&size=${size.current}&page=${page.current}&empIds=${values}`\n    } else {\n      url = `fetchDataList?date=${dateRef.current}&checkShortfallHours=${shortfall.current}&excessHours=${excess.current}&size=${size.current}&page=${page.current}`\n    }\n    try {\n      const response = await api.get(url, {\n        headers: getHeaders('json'),\n      })\n      const data = response.data.data\n      setData(data.data)\n\n      if (data.data.length < size.current) {\n        hasMore.current = false\n      } else if (page.current === data.totalPages - 1) {\n        hasMore.current = false\n      }\n      setLoader(false)\n    } catch (error) {}\n  }\n\n  const handleDateChange = (date, dateString) => {\n    if (date !== null) {\n      const formattedDate = dayjs(date).format('YYYY-MM-DD')\n      dateRef.current = formattedDate\n      page.current = 0\n      hasMore.current = true\n      setLoader(true)\n      setData([])\n      getSwipeDetails(selectedOptions)\n    }\n  }\n\n  const memberOption = (memberList || []).map((user) => ({\n    value: user.userName,\n    label: user.name,\n    icon: user.profile_pic,\n  }))\n\n  const [options, setOptions] = useState({\n    chart: {\n      type: '',\n      height: 350,\n      width: 300,\n      toolbar: {\n        show: false,\n      },\n    },\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        columnWidth: '45%',\n        barGap: '50%',\n        endingShape: 'rounded',\n        borderRadius: 7,\n        borderRadiusWhenStacked: 'last',\n        borderRadiusApplication: 'end',\n        dataLabels: {\n          position: 'top',\n        },\n        rangeBarOverlap: true,\n        width: '20%',\n      },\n    },\n    states: {\n      hover: {\n        filter: {\n          type: 'none',\n        },\n      },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    legend: {\n      show: true,\n      showForSingleSeries: true,\n      position: 'top',\n      horizontalAlign: 'right',\n      markers: {\n        shape: 'circle',\n        radius: 6,\n        width: '9px',\n        height: '9px',\n      },\n      customLegendItems: [\n        'Shortfall',\n        'Leave',\n        'Actual Work Hours',\n        'TimeSheet Entered',\n        'Regularization',\n      ],\n      onItemClick: {\n        toggleDataSeries: true,\n      },\n      onItemHover: {\n        highlightDataSeries: true,\n      },\n    },\n    colors: ['#ff4c4c', '#FF7D90', '#357AF6', '#5CC8BE', '#FFA657'],\n    stroke: {\n      show: true,\n      width: 2,\n      colors: ['transparent'],\n    },\n    xaxis: {\n      categories: [],\n      style: {\n        width: '50px',\n        color: '#5C5C5C',\n        fontWeight: 600,\n        fontSize: '13px',\n      },\n      title: {\n        text: 'Team Members',\n        style: {\n          color: '#6D6D6D',\n          fontWeight: 600,\n          fontSize: '12px',\n        },\n      },\n    },\n    yaxis: {\n      min: 0,\n      max: 12,\n      title: {\n        text: 'Hours',\n        style: {\n          color: '#6D6D6D',\n          fontWeight: 'bold',\n          fontSize: '12px',\n        },\n      },\n    },\n    fill: {\n      colors: ['#4CAF50', '#FFC107', '#F44336'], // Example colors\n    },\n    tooltip: {\n      style: {\n        background: 'none',\n      },\n      custom: function ({ series, seriesIndex, dataPointIndex, w }) {\n        const data = w.globals.initialSeries[seriesIndex].data[dataPointIndex]\n        if (\n          !data ||\n          data.signIn === undefined ||\n          data.signOut === undefined ||\n          data.shortfallHours === undefined ||\n          data.excessHours === undefined\n        ) {\n          return ''\n        } else {\n          return `<div style=\"width: 275px;\">\n          <div style=\"font-weight: bold; color: #505050; box-shadow: 0px 4.41px 48.5px 0px #0000001A; padding: 10px;height:45px;background:#FFFFFF\">${data.name} <span style=\"font-size:11px;color:#A7A7A7;margin-left:5px\">${dateRef.current}</span></div><br/>\n          <div style=\"padding-left:15px\">\n          <div class=\"row\">\n          <div class=\"col-sm-6\">\n          <span style=\"font-size:11px;color:#505050;\">Swipe in</span></br>\n          <div style=\"height: 25px;width: 100px;background: #F4F4F4;\"><span style=\"font-size:15px;color:#909090;padding-left:5px;padding-top:5px;\">${data.signIn}</span></div></br>\n          </div>\n          <div class=\"col-sm-6\"><span style=\"font-size:11px;color:#505050;\">Swipe out</span></br>\n          <div style=\"height: 25px;width: 100px;background: #F4F4F4;\"><span style=\"font-size:15px;padding-left:5px;padding-top:5px;color:#909090;\">${data.signOut}</span></div></br>\n          </div>\n          </div>\n          <div class=\"row\">\n          <div class=\"col-sm-6\">\n          <span style=\"font-size:11px;color:#505050;\">Total Work Hrs</span></br>\n          <div style=\"height: 25px;width: 100px;background: #F4F4F4;\"><span style=\"font-size:15px;padding-left:5px;padding-top:5px;color:#909090;\">${data.totalWorkHours}</span></div></br>\n          </div>\n          <div class=\"col-sm-6\"><span style=\"font-size:11px;color:#505050;\">Actual Work Hrs</span></br>\n          <div style=\"height: 25px;width: 100px;background: #F4F4F4;\"><span style=\"font-size:15px;padding-left:5px;padding-top:5px;color:#909090;\">${data.actualWorkHours}</span></div></br>\n          </div>\n          </div>\n          <div class=\"row\">\n          <div class=\"col-sm-6\">\n          <span style=\"font-size:11px;color:#505050;\">Shortfall Hrs</span></br>\n          <div style=\"height: 25px;width: 100px;background: #F4F4F4;\"><span style=\"font-size:15px;padding-left:5px;padding-top:5px;color:#909090;\">${data.shortfallHours}</span></div></br>\n          </div>\n          <div class=\"col-sm-6\"><span style=\"font-size:11px;color:#505050;\">Excess Hrs</span></br>\n          <div style=\"height: 25px;width: 100px;background: #F4F4F4;\"><span style=\"font-size:15px;padding-left:5px;padding-top:5px;color:#909090;\">${data.excessHours}</span></div></br>\n          </div>\n          </div>\n          <div class=\"row\">\n          <div class=\"col-sm-6\">\n          <span style=\"font-size:11px;color:#505050;\">Timesheet Entered Hrs</span></br>\n          <div style=\"height: 25px;width: 100px;background: #F4F4F4;\"><span style=\"font-size:15px;padding-left:5px;padding-top:5px;color:#909090;\">${data.timesheetEnteredHours}</span></div></br>\n          </div>\n          </div>\n          </div>\n          </div>`\n        }\n      },\n    },\n  })\n  const getName = (value, maxLength = 16) => {\n    const modifiedTitle = value\n    return modifiedTitle.length > maxLength\n      ? `${modifiedTitle.substring(0, maxLength)}...`\n      : modifiedTitle\n  }\n  useEffect(() => {\n    setOptions((prevOptions) => ({\n      ...prevOptions,\n      xaxis: {\n        ...prevOptions.xaxis,\n        categories: data?.map((c) => getName(c.name)),\n        labels: {\n          style: {\n            colors: [], // Optionally customize the color of the labels\n            fontSize: '12px', // Customize the font size\n          },\n        },\n      },\n      plotOptions: {\n        bar: {\n          ...prevOptions.plotOptions.bar,\n          columnWidth:\n            data?.length === 1\n              ? '5%'\n              : data?.length === 2\n              ? '10%'\n              : data?.length === 3\n              ? '14%'\n              : data?.length === 4\n              ? '18%'\n              : data?.length === 5\n              ? '23%'\n              : data?.length === 6\n              ? '28%'\n              : data?.length === 7\n              ? '32%'\n              : data?.length === 8\n              ? '35%'\n              : data?.length === 9\n              ? '38%'\n              : '45%',\n          barGap: '10%', // Adjust the gap between bars\n          horizontal: false,\n          endingShape: 'rounded',\n          borderRadius: 7,\n          borderRadiusWhenStacked: 'last',\n          borderRadiusApplication: 'end',\n          dataLabels: {\n            position: 'top',\n          },\n        },\n      },\n    }))\n    setChartSeries([\n      {\n        name: 'Shortfall/Actual Work Hours',\n        data: data?.map((item) => {\n          console.log(processData(item))\n          return processData(item)\n        }),\n      },\n      {\n        name: 'Timesheet Entered',\n        data: data?.map((item) => {\n          if (\n            item.attendance !== null &&\n            item.attendance !== undefined &&\n            item.attendance !== 'leave' &&\n            item.attendance !== 'present' &&\n            item.attendance !== 'Leave'\n          ) {\n            const attendance = item.attendance\n            return {\n              x: item.name,\n              y: attendance?.timesheetHours === '00:00 Hrs' ? null : attendance?.timesheetHours,\n              fillColor: '#5CC8BE',\n              name: attendance?.username,\n              date: dayjs(attendance?.date).format('DD-MM-YYYY'),\n              employeeID: attendance?.employeeID,\n              signIn: attendance?.signIn,\n              signOut: attendance?.signOut,\n              totalWorkHours: attendance?.totalWorkHours,\n              actualWorkHours: attendance?.acutalWorkHours,\n              shortfallHours: attendance?.shortfallHours,\n              excessHours: attendance?.excessHours,\n              timesheetEnteredHours: attendance?.timesheetHours,\n            }\n          } else {\n            return {\n              x: item.name,\n              y: null,\n            }\n          }\n        }),\n      },\n    ])\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data])\n\n  const scrollRight = () => {\n    page.current = page.current + 1\n    hasMore.current = true\n    setLoader(true)\n    getSwipeDetails(selectedOptions)\n  }\n\n  const scrollLeft = () => {\n    page.current = page.current - 1\n    hasMore.current = true\n    setLoader(true)\n    getSwipeDetails(selectedOptions)\n  }\n\n  const apiCall = (values) => {\n    if (selectedOptions.length <= 10) {\n      page.current = 0\n    }\n    hasMore.current = true\n    setData([])\n    setLoader(true)\n    getSwipeDetails(values)\n  }\n\n  const handleChange = (event, options) => {\n    const values = options.map((opt) => opt.value)\n    setSelectedOptions(values)\n    apiCall(values)\n  }\n\n  const icon = <img src={UncheckIcon} alt=\"\" width={15} />\n  const checkedIcon = <img src={CheckedIcon} alt=\"\" width={15} />\n\n  return (\n    <>\n      <CRow className=\"mt-2\">\n        <CCol xs={12} sm={6} md={4}>\n          <b style={{ paddingLeft: '30px' }}>Member&apos;s Swipe Details</b>\n          <br />\n          <Breadcrumb\n            style={{ paddingLeft: '30px' }}\n            className=\"bread-tab\"\n            separator={<span className=\"breadcrumb-separator\">|</span>}\n            items={[\n              {\n                title: (\n                  <span href=\"\" className=\"bread-items text-decoration-none text-secondary\">\n                    Dashboard\n                  </span>\n                ),\n              },\n              {\n                title: (\n                  <span className=\"text-secondary \" style={{ cursor: 'default' }}>\n                    Swipe Details\n                  </span>\n                ),\n              },\n            ]}\n          />\n        </CCol>\n        <CCol sm={6} md={3}>\n          <Autocomplete\n            multiple\n            className={`swp-member-select ${selectedOptions.length > 2 ? 'text_wrap_swp' : ''}`}\n            id=\"checkboxes-tags-demo\"\n            options={memberOption}\n            disableCloseOnSelect\n            limitTags={2}\n            disableClearable\n            disableListWrap\n            getOptionLabel={(option) => option.label}\n            renderOption={(props, option, { selected }) => (\n              <li {...props}>\n                <Checkbox\n                  icon={icon}\n                  className=\"check_color\"\n                  checkedIcon={checkedIcon}\n                  style={{ marginRight: 8 }}\n                  checked={selected}\n                />\n                <img\n                  src={option.icon ? ImageUrl + option.icon : profileImage1}\n                  style={option.icon ? { width: '29px' } : { width: '39px' }}\n                  alt={option.name}\n                  className=\"img-flag\"\n                />\n                <ListItemText className=\"text_list mx-2\" primary={option.label} />\n              </li>\n            )}\n            onChange={handleChange}\n            value={memberOption.filter((option) => selectedOptions.includes(option.value))}\n            style={{ width: '90%', fontSize: '14px' }}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                placeholder={`${selectedOptions.length !== 0 ? '' : 'Choose members'}`}\n                variant=\"standard\"\n              />\n            )}\n          />\n        </CCol>\n        <CCol sm={6} md={2}>\n          <DatePicker\n            style={{\n              borderBottom: '1px solid #f1f1f1',\n              borderRadius: '0',\n              width: '90%',\n              marginTop: '1px',\n            }}\n            className=\"filter-date membr-req-date mem_selct\"\n            onChange={handleDateChange}\n            placeholder=\"Choose Date\"\n            allowClear={false}\n            defaultValue={dayjs()}\n            maxDate={dayjs()}\n            minDate={dayjs(jod)}\n            variant={'borderless'}\n            suffixIcon={\n              <img src={Calendarimg} alt=\"Calendarimg\" style={{ width: '13px', height: '13px' }} />\n            }\n            format=\"DD-MM-YYYY\"\n          />\n        </CCol>\n        <CCol sm={6} md={3}>\n          <AntdSelect\n            suffixIcon={\n              <img src={Downarrowimg} alt=\"Downarrowimg\" style={{ width: '10px', height: '6px' }} />\n            }\n            allowClear\n            style={{ borderBottom: '1px solid #ced4da', width: '80%' }}\n            placeholder=\"Choose: Shortfall or Excess\"\n            options={[\n              {\n                value: 'Shortfall',\n                label: 'Shortfall',\n              },\n              {\n                value: 'Excess',\n                label: 'Excess',\n              },\n            ]}\n            onChange={(value) => {\n              if (value !== undefined && value === 'Shortfall') {\n                shortfall.current = true\n                excess.current = false\n              } else if (value !== undefined && value === 'Excess') {\n                excess.current = true\n                shortfall.current = false\n              } else {\n                excess.current = false\n                shortfall.current = false\n              }\n              page.current = 0\n              hasMore.current = true\n              setLoader(true)\n              setData([])\n              getSwipeDetails(selectedOptions)\n            }}\n          />\n        </CCol>\n      </CRow>\n      <CRow className=\"mt-1\">\n        {!loader && (\n          <div>\n            <div style={{ marginLeft: '20px' }}>\n              <Chart options={options} series={chartSeries} type=\"bar\" height={350} />\n            </div>\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n              }}\n            >\n              <button\n                style={{\n                  borderRadius: '80%',\n                  border: 'none',\n                  backgroundColor: '#FFFFFF',\n                  boxShadow: ' 0px 4px 10px 0px #0000001A',\n                  marginLeft: '25px',\n                }}\n                onClick={scrollLeft}\n                disabled={page.current === 0}\n              >\n                <IoIosArrowBack width=\"11px\" />\n              </button>\n              <button\n                style={{\n                  borderRadius: '80%',\n                  border: 'none',\n                  backgroundColor: '#FFFFFF',\n                  boxShadow: ' 0px 4px 10px 0px #0000001A',\n                }}\n                onClick={scrollRight}\n                disabled={hasMore.current === false}\n              >\n                <IoIosArrowForward />\n              </button>\n            </div>\n          </div>\n        )}\n        {loader && (\n          <div className=\"text-c text-center my-3 td-text\">\n            <CSpinner color=\"danger\" />\n          </div>\n        )}\n      </CRow>\n    </>\n  )\n}\n\nSwipeDetails.propTypes = {\n  memberLists: PropTypes.array,\n}\n\nexport default SwipeDetails\n","import React, { useState, useEffect } from 'react'\nimport { CCard, CCol, CRow, CNavItem, CTabContent, CTabPane, CNav, CNavLink } from '@coreui/react'\nimport { getHeaders, getDecodeData } from 'src/constant/Global'\nimport { ToastContainer } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport PendingActivity from './PendingActivity'\nimport RequestList from './RequestList'\nimport useAxios from 'src/constant/UseAxios'\nimport SwipeDetails from './SwipeDetails'\n\nconst MembersActivity = () => {\n  let api = useAxios()\n  const user = getDecodeData()\n  const [productList, setProductList] = useState([])\n  const [memberList, setMemberList] = useState([])\n  const [activeKey, setActiveKey] = useState(1)\n  const [memberLoader, setMemberLoader] = useState(true)\n  const [prodLoader, setProdLoader] = useState(true)\n\n  function getToday() {\n    const today = new Date()\n    const year = today.getFullYear()\n    const month = String(today.getMonth() + 1).padStart(2, '0')\n    const day = String(today.getDate()).padStart(2, '0')\n    return `${year}-${month}-${day}`\n  }\n\n  useEffect(() => {\n    getproductList()\n    getMemberList(user?.id)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  //member List\n  const getMemberList = async (id) => {\n    const url = `user/supervisor/${id}`\n    await api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        const member = response.data.data\n        setMemberList(member)\n        setMemberLoader(false)\n      })\n      .catch((error) => {})\n  }\n\n  const getproductList = async () => {\n    const url = `product/approvedlist`\n    await api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        const product = response.data.data\n        setProductList(product)\n        setProdLoader(false)\n      })\n      .catch((error) => {})\n  }\n\n  const formatDate = (dateString) => {\n    const date = new Date(dateString)\n    const options = { day: 'numeric', month: 'short', year: 'numeric' }\n    let formattedDate = date.toLocaleDateString('en-GB', options)\n    if (!formattedDate.includes(',')) {\n      formattedDate = formattedDate.replace(/(\\w{3}) (\\d{4})/, '$1, $2')\n    }\n    return formattedDate\n  }\n\n  return (\n    <>\n      <ToastContainer />\n      <CRow className=\"my-2\">\n        <CCol xs={12}>\n          <CCard className=\"mt-4 memberact_content\">\n            <div>\n              <CNav variant=\"pills\" role=\"tablist\">\n                <CNavItem role=\"presentation6\">\n                  <CNavLink\n                    className=\"nav-link-lable pen-activity\"\n                    active={activeKey === 1}\n                    component=\"button\"\n                    role=\"tab\"\n                    aria-controls=\"home-tab-pane\"\n                    aria-selected={activeKey === 1}\n                    onClick={() => setActiveKey(1)}\n                  >\n                    Pending Activity\n                  </CNavLink>\n                </CNavItem>\n                <CNavItem role=\"presentation3\">\n                  <CNavLink\n                    active={activeKey === 4}\n                    component=\"button\"\n                    role=\"tab\"\n                    aria-controls=\"contact-tab-pane\"\n                    aria-selected={activeKey === 4}\n                    onClick={() => setActiveKey(4)}\n                  >\n                    Request List\n                  </CNavLink>\n                </CNavItem>\n                <CNavItem role=\"presentation4\">\n                  <CNavLink\n                    active={activeKey === 5}\n                    component=\"button\"\n                    role=\"tab\"\n                    aria-controls=\"contact-tab-pane\"\n                    aria-selected={activeKey === 5}\n                    onClick={() => setActiveKey(5)}\n                  >\n                    Swipe Details\n                  </CNavLink>\n                </CNavItem>\n              </CNav>\n              <CTabContent className={`${activeKey === 5 ? 'swp_tab_height' : ''}`}>\n                <CTabPane\n                  role=\"tabpanel\"\n                  aria-labelledby=\"home-tab-pane\"\n                  visible={activeKey === 1}\n                  className=\"pendingactivity-card tab_height\"\n                >\n                  <CRow>\n                    {activeKey === 1 && (\n                      <PendingActivity\n                        today={getToday()}\n                        formatDate={formatDate}\n                        productLists={productList}\n                        memberLists={memberList}\n                        memberLoader={memberLoader}\n                        prodLoader={prodLoader}\n                      />\n                    )}\n                  </CRow>\n                </CTabPane>\n                <CTabPane\n                  role=\"tabpanel\"\n                  aria-labelledby=\"contact-tab-pane\"\n                  visible={activeKey === 4}\n                  className=\"pendingactivity-card tab_height\"\n                >\n                  <CRow>\n                    {activeKey === 4 && (\n                      <RequestList\n                        today={getToday()}\n                        formatDate={formatDate}\n                        memberLists={memberList}\n                        memberLoader={memberLoader}\n                      />\n                    )}\n                  </CRow>\n                </CTabPane>\n                <CTabPane\n                  role=\"tabpanel\"\n                  aria-labelledby=\"contact-tab-pane\"\n                  visible={activeKey === 5}\n                  className=\"pendingactivity-card swp_height\"\n                >\n                  <CRow>{activeKey === 5 && <SwipeDetails memberLists={memberList} />}</CRow>\n                </CTabPane>\n              </CTabContent>\n            </div>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default MembersActivity\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { Input, Modal } from 'antd'\n\nconst { TextArea } = Input\nconst ApprovedConfirmModal = ({\n  isModalOpen,\n  handleCancel,\n  handleApprove,\n  id,\n  headContent,\n  resetFunc,\n}) => {\n  const [remarks, setRemarks] = useState('')\n  const [loading, setLoadings] = useState(false)\n\n  const handleOk = async () => {\n    setLoadings(true)\n    try {\n      const response = await handleApprove('Approved', id, remarks)\n      if (response.status === true) {\n        resetFunc()\n      }\n    } catch (error) {\n    } finally {\n      setLoadings(false)\n    }\n  }\n\n  const handleRemark = (remarks) => {\n    const regex = /^(?!\\s)(?![&@.,()\\s])(?![^a-zA-Z0-9\\s.,()-]+$)[&@a-zA-Z0-9\\s.,()-]*$/\n    if (regex.test(remarks) || remarks === '') {\n      setRemarks(remarks)\n    }\n  }\n\n  return (\n    <Modal\n      title={`Approved ${headContent}`}\n      open={isModalOpen}\n      onOk={handleOk}\n      okText=\"Approved\"\n      onCancel={handleCancel}\n      okButtonProps={{\n        style: { background: '#f54550', borderColor: '#f54550', color: 'white' },\n        loading: loading,\n      }} // Change button color here\n      maskClosable={false}\n    >\n      <p>Do you want to do Approved this {headContent} ?</p>\n\n      <TextArea\n        id=\"Description\"\n        variant={'borderless'}\n        value={remarks}\n        onChange={(e) => handleRemark(e.target.value)}\n        className=\"time-border-bottom\"\n        style={{\n          color: 'black',\n          width: '265px',\n          fontSize: '13px',\n          padding: '0px',\n        }}\n        placeholder=\"Enter Remarks...\"\n        autoSize={{\n          minRows: 0,\n          maxRows: 1,\n        }}\n      />\n      <br />\n    </Modal>\n  )\n}\n\nApprovedConfirmModal.propTypes = {\n  isModalOpen: PropTypes.bool,\n  handleCancel: PropTypes.func,\n  handleApprove: PropTypes.func,\n  id: PropTypes.any,\n  headContent: PropTypes.string,\n  resetFunc: PropTypes.func,\n}\nexport default ApprovedConfirmModal\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { Input, Modal } from 'antd'\n\nconst { TextArea } = Input\nconst RejectConfirmModal = ({\n  isModalOpen,\n  handleCancel,\n  handleApprove,\n  id,\n  headContent,\n  resetFunc,\n}) => {\n  const [remarks, setRemarks] = useState('')\n  const [loadings, setLoadings] = useState(false)\n  const [formErrors, setFormErrors] = useState({\n    remarks: '',\n  })\n\n  const validateForm = () => {\n    const errors = {\n      remarks: '',\n    }\n    if (remarks === '') {\n      errors.remarks = 'Please Enter Remarks'\n    }\n    setFormErrors(errors)\n    const hasErrors = errors.remarks !== ''\n    return !hasErrors\n  }\n\n  const handleOk = async () => {\n    const isFormValid = validateForm()\n    if (isFormValid) {\n      setLoadings(true)\n      try {\n        const response = await handleApprove('Rejected', id, remarks)\n        if (response.status === true) {\n          resetFunc()\n        }\n      } catch (error) {\n      } finally {\n        setLoadings(false)\n      }\n    }\n  }\n\n  const handleRemark = (remarks) => {\n    const regex = /^(?!\\s)(?![&@.,()\\s])(?![^a-zA-Z0-9\\s.,()-]+$)[&@a-zA-Z0-9\\s.,()-]*$/\n    if (regex.test(remarks) || remarks === '') {\n      setRemarks(remarks)\n    }\n  }\n\n  return (\n    <Modal\n      title={`Reject ${headContent}`}\n      open={isModalOpen}\n      onOk={handleOk}\n      okText=\"Reject\"\n      onCancel={handleCancel}\n      okButtonProps={{\n        style: { background: '#f54550', borderColor: '#f54550', color: 'white' },\n        loading: loadings,\n        disabled: remarks.trim() === '',\n      }} // Change button color here\n      maskClosable={false}\n    >\n      <p>Do you want to do reject this {headContent} ?</p>\n\n      <TextArea\n        id=\"Description\"\n        variant={'borderless'}\n        value={remarks}\n        onChange={(e) => handleRemark(e.target.value)}\n        className=\"time-border-bottom\"\n        style={{\n          color: 'black',\n          width: '265px',\n          fontSize: '13px',\n          padding: '0px',\n        }}\n        placeholder=\"Enter Remarks...\"\n        autoSize={{\n          minRows: 0,\n          maxRows: 1,\n        }}\n      />\n      <br />\n      <span className=\"text-danger nameflow-error \">{formErrors.remarks}</span>\n    </Modal>\n  )\n}\n\nRejectConfirmModal.propTypes = {\n  isModalOpen: PropTypes.bool,\n  handleCancel: PropTypes.func,\n  handleApprove: PropTypes.func,\n  id: PropTypes.any,\n  headContent: PropTypes.string,\n  resetFunc: PropTypes.func,\n}\nexport default RejectConfirmModal\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst CheckSvg = ({ width, height, fill, viewBox }) => (\n  <svg\n    width={width}\n    height={height}\n    viewBox={viewBox}\n    fill={fill}\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M4.87459 9.58157C5.2816 9.58171 5.67193 9.41992 5.95949 9.13188L12.9552 2.13716L12.9553 2.13712C13.3482 1.74402 13.3482 1.10682 12.9553 0.713727L12.9552 0.713671C12.5621 0.320704 11.9249 0.320704 11.5318 0.713671L11.5318 0.713699L4.87459 7.37091L2.4682 4.96451L2.46817 4.96448C2.07508 4.57151 1.43788 4.57151 1.04478 4.96448L1.04473 4.96454C0.651758 5.35763 0.651758 5.99483 1.04473 6.38793L1.04479 6.38799L3.7897 9.13188C3.78971 9.1319 3.78972 9.13191 3.78973 9.13192C4.07729 9.41994 4.46761 9.58171 4.87459 9.58157ZM4.87459 9.58157C4.87456 9.58157 4.87453 9.58157 4.87449 9.58157L4.87459 9.33157L4.8747 9.58157C4.87466 9.58157 4.87463 9.58157 4.87459 9.58157Z\"\n      fill={fill}\n      stroke=\"#A5A1A1\"\n      strokeWidth=\"0.5\"\n    />\n  </svg>\n)\nCheckSvg.propTypes = {\n  width: PropTypes.string,\n  height: PropTypes.string,\n  fill: PropTypes.string,\n  viewBox: PropTypes.string,\n}\nexport default CheckSvg\n"],"names":["RangePicker","DatePicker","_ref","formatDate","productLists","memberLists","memberLoader","prodLoader","api","useAxios","memberTable","setMemberTable","useState","selectedRows","setSelectedRows","productList","setProductList","memberList","setMemberList","headerLabel","setHeaderLabel","rangePickerRef","useRef","isModalOpen","setIsModalOpen","singleId","setSingleId","commonLoader","setCommonLoader","rejectStatus","setRejectStatus","openSelectAll","setOpenSelectAll","singleApprovedId","setSingleApprovedId","approvedStatusAll","setApprovedStatusAll","openSelectRejectAll","setOpenSelectRejectAll","approvedStatus","setApprovedStatus","open","setOpen","selectRef","mLoader","setMLoader","pLoader","setPLoader","startDateRef","endDateRef","pageRef","productIdRef","memberIdRef","filterRef","hasMoreRef","abortController","setAbortController","AbortController","tableBodyRef","isNorMore","setIsNorMore","showPopconfirm","status","rowId","showPopconfirmAll","getProductAndMemberList","async","start","end","url","concat","response","get","headers","getHeaders","member","data","memberName","product","productName","error","useEffect","current","getMemberActivityall","handleHeaderCheck","isChecked","allRowIds","map","row","id","length","handleMemberCheck","prevSelectedRows","filter","selectedId","newSelectedRowCount","newAbortController","abort","_newAbortController","getUrl","signal","prevUserData","uniqueSet","Set","user","newData","has","statuschange","statusValue","remarks","formData","FormData","append","put","message","toast","success","position","POSITION","BOTTOM_RIGHT","autoClose","Error","handleButtonClick","remarksValue","resetFormValues","options","value","label","name","getMemberListByProductId","productId","memberlist","memberOption","_jsxs","className","children","_jsx","src","profile_pic","ImageUrl","profileImage1","style","width","alt","marginLeft","title","toPascalCase","role","showModal","truncateString","str","num","slice","columns","Checkbox","checked","onChange","e","target","dataIndex","key","align","render","_","record","props","colSpan","includes","color","fontSize","fontWeight","text","index","textAlign","assignedStatus","formatTimeDuration","hours","display","justifyContent","padding","type","onClick","CheckSvg","height","viewBox","fill","CrossSvg","disabled","approved","displayData","activity_date","taskName","description","userName","push","action","handleScroll","useCallback","debounce","scrollTop","scrollHeight","clientHeight","tableBody","document","querySelector","addEventListener","removeEventListener","_Fragment","CRow","CCol","xs","sm","md","paddingLeft","Breadcrumb","separator","items","Link","rel","to","cursor","variant","ref","date","formattedFromDate","dayjs","format","formattedToDate","allowClear","disabledDate","endOf","Select","suffixIcon","Downarrowimg","find","option","undefined","handleProduct","blur","showSearch","filterOption","input","toLowerCase","indexOf","Array","from","Skeleton","paragraph","rows","placeholder","getPopupContainer","triggerNode","parentNode","handleMember","avatar","size","lowerCaseInput","popupMatchSelectWidth","popupClassName","Table","dataSource","rowKey","pagination","scroll","y","loading","spinning","indicator","CSpinner","rowClassName","RejectConfirmModal","handleCancel","handleApprove","headContent","resetFunc","ApprovedConfirmModal","handleApproveCancel","handleApproveCancelAll","handleRejectCancelAll","dateRef","getMemberRequestall","handleBulkApproval","postData","handleRaiseApprove","errorMessage","requestDate","reason","teamName","borderBottom","borderRadius","marginTop","handleDateChange","dateString","formattedDate","processData","item","console","log","attendance","baseObject","x","fillColor","username","employeeID","signIn","signOut","totalWorkHours","actualWorkHours","acutalWorkHours","shortfallHours","excessHours","timesheetEnteredHours","timesheetHours","regularizationStatus","columnWidth","getDecodeData","jod","setData","chartSeries","setChartSeries","loader","setLoader","shortfall","excess","page","hasMore","selectedOptions","setSelectedOptions","getSwipeDetails","values","totalPages","icon","setOptions","chart","toolbar","show","plotOptions","bar","horizontal","barGap","endingShape","borderRadiusWhenStacked","borderRadiusApplication","dataLabels","rangeBarOverlap","states","hover","enabled","legend","showForSingleSeries","horizontalAlign","markers","shape","radius","customLegendItems","onItemClick","toggleDataSeries","onItemHover","highlightDataSeries","colors","stroke","xaxis","categories","yaxis","min","max","tooltip","background","custom","_ref2","series","seriesIndex","dataPointIndex","w","globals","initialSeries","prevOptions","c","maxLength","arguments","modifiedTitle","substring","getName","labels","checkedIcon","href","Autocomplete","multiple","disableCloseOnSelect","limitTags","disableClearable","disableListWrap","getOptionLabel","renderOption","_ref3","selected","marginRight","ListItemText","primary","handleChange","event","opt","apiCall","renderInput","params","TextField","defaultValue","maxDate","minDate","Calendarimg","AntdSelect","Chart","alignItems","border","backgroundColor","boxShadow","scrollLeft","IoIosArrowBack","scrollRight","IoIosArrowForward","MembersActivity","activeKey","setActiveKey","setMemberLoader","setProdLoader","getToday","today","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","getproductList","getMemberList","then","catch","toLocaleDateString","replace","ToastContainer","CCard","CNav","CNavItem","CNavLink","active","component","CTabContent","CTabPane","visible","PendingActivity","RequestList","SwipeDetails","TextArea","Input","setRemarks","setLoadings","Modal","onOk","okText","onCancel","okButtonProps","borderColor","maskClosable","test","handleRemark","autoSize","minRows","maxRows","loadings","formErrors","setFormErrors","validateForm","errors","trim","xmlns","d","strokeWidth"],"sourceRoot":""}