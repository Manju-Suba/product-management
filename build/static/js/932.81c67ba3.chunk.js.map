{"version":3,"file":"static/js/932.81c67ba3.chunk.js","mappings":"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","sources":["views/history/ApprovedActivity.js","views/history/RejectedActivity.js","views/history/RaisedRequest.js","views/history/AppliedLeave.js","views/history/History.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport { Select, Skeleton, Breadcrumb } from 'antd'\nimport {\n  CCol,\n  CRow,\n  CSpinner,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport { getHeaders, ImageUrl } from 'src/constant/Global'\nimport profileImage1 from '../../assets/images/avatars/wrapper.png'\nimport 'react-toastify/dist/ReactToastify.css'\nimport PropTypes from 'prop-types'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport useAxios from 'src/constant/UseAxios'\nimport { Link } from 'react-router-dom'\nimport Downarrowimg from '../../assets/images/downarrow.png'\nimport { toPascalCase, formatTimeDuration } from '../../constant/TimeUtils'\nimport InfiniteScroll from 'react-infinite-scroll-component'\nconst ApprovedActivity = ({ memberLoader, formatDate, productLists, memberLists, prodLoader }) => {\n  let api = useAxios()\n  const [memberTable, setMemberTable] = useState([])\n  const [productList, setProductList] = useState([])\n  const [memberList, setMemberList] = useState([])\n  const [commonLoader, setCommonLoader] = useState(true)\n  const selectRef = useRef(null)\n  const pageRef = useRef(0)\n  const productIdRef = useRef(0)\n  const memberIdRef = useRef(0)\n  const filterRef = useRef('approveddefault')\n  const hasMoreRef = useRef(true)\n  const [abortController, setAbortController] = useState(new AbortController())\n\n  useEffect(() => {\n    setMemberList(memberLists)\n    setProductList(productLists)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [productLists])\n\n  useEffect(() => {\n    hasMoreRef.current = true\n    getMemberActivityall()\n    const tableContainer = document.querySelector('.table-container')\n    tableContainer.addEventListener('scroll', handleScroll)\n    return () => {\n      tableContainer.removeEventListener('scroll', handleScroll)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const handleScroll = () => {\n    const tableContainer = document.querySelector('.table-container')\n    if (tableContainer.scrollTop + tableContainer.clientHeight === tableContainer.scrollHeight) {\n      if (hasMoreRef.current === true) {\n        getMemberActivityall()\n      }\n    }\n  }\n\n  const getUrl = () => {\n    let url\n    switch (filterRef.current) {\n      case 'approveddefault':\n        url = `common/timesheet/activity/superviserlistall?page=${pageRef.current}&size=10&category=${filterRef.current}&status=Approved`\n        break\n      case 'approvedall':\n        url = `common/timesheet/activity/superviserlistall?page=${pageRef.current}&size=10&category=${filterRef.current}&productId=${productIdRef.current}&memberId=${memberIdRef.current}&status=Approved`\n        break\n      case 'approvedproduct':\n        url = `common/timesheet/activity/superviserlistall?page=${pageRef.current}&size=10&category=${filterRef.current}&productId=${productIdRef.current}&status=Approved`\n        break\n      case 'approvedmember':\n        url = `common/timesheet/activity/superviserlistall?page=${pageRef.current}&size=10&category=${filterRef.current}&memberId=${memberIdRef.current}&status=Approved`\n        break\n      default:\n        break\n    }\n    return url\n  }\n\n  const getMemberActivityall = async () => {\n    let newAbortController\n    if (pageRef.current === 0) {\n      setCommonLoader(true)\n      setMemberTable([])\n      abortController.abort()\n      newAbortController = new AbortController()\n      setAbortController(newAbortController)\n    }\n    try {\n      const response = await api.get(getUrl(), {\n        headers: getHeaders('json'),\n        signal: newAbortController?.signal,\n      })\n      const data = response.data.data\n      if (pageRef.current === 0) {\n        setMemberTable(data)\n      } else {\n        setMemberTable((prevUserData) => {\n          const uniqueSet = new Set(prevUserData.map((user) => user.id))\n          const newData = data.filter((user) => !uniqueSet.has(user.id))\n          return [...prevUserData, ...newData]\n        })\n      }\n      if (data.length < 10) {\n        hasMoreRef.current = false\n      } else {\n        hasMoreRef.current = true\n      }\n      pageRef.current = pageRef.current + 1\n      setCommonLoader(false)\n    } catch (error) {}\n  }\n\n  //Product List\n  const options = productList.map((product) => ({\n    value: product.id,\n    label: product.name,\n  }))\n  const handleProduct = (value) => {\n    selectRef.current.blur()\n    pageRef.current = 0\n    hasMoreRef.current = true\n    setMemberTable([])\n    setCommonLoader(true)\n    if (value !== undefined && memberIdRef.current === 0) {\n      productIdRef.current = value\n      filterRef.current = 'approvedproduct'\n    } else if (value !== undefined && memberIdRef.current !== 0) {\n      filterRef.current = 'approvedall'\n      productIdRef.current = value\n    } else if (memberIdRef.current !== 0 && value === undefined) {\n      filterRef.current = 'approvedmember'\n      productIdRef.current = 0\n    } else {\n      filterRef.current = 'approveddefault'\n      productIdRef.current = 0\n    }\n    getMemberActivityall()\n  }\n  const handleMember = (value) => {\n    selectRef.current.blur()\n    pageRef.current = 0\n    hasMoreRef.current = true\n    setMemberTable([])\n    setCommonLoader(true)\n    if (value !== undefined && productIdRef.current === 0) {\n      memberIdRef.current = value\n      filterRef.current = 'approvedmember'\n    } else if (value !== undefined && productIdRef.current !== 0) {\n      filterRef.current = 'approvedall'\n      memberIdRef.current = value\n    } else if (productIdRef.current !== 0 && value === undefined) {\n      filterRef.current = 'approvedproduct'\n      memberIdRef.current = 0\n    } else {\n      filterRef.current = 'approveddefault'\n      memberIdRef.current = 0\n    }\n    getMemberActivityall()\n  }\n\n  // Member List\n  const memberOption = memberList.map((user) => ({\n    value: user.id,\n    label: (\n      <div className=\"select-options1\">\n        <img\n          src={user.profile_pic ? ImageUrl + user.profile_pic : profileImage1}\n          style={user.profile_pic ? { width: '29px' } : { width: '39px' }}\n          alt={user.name}\n          className=\"img-flag\"\n        />\n        <div className=\"node1\" style={user.profile_pic ? { marginLeft: '11px' } : {}}>\n          <p className=\"user-name1\" title={user.name}>\n            {toPascalCase(user.name)}\n          </p>\n          <p className=\"role-text1\">{user.role}</p>\n        </div>\n      </div>\n    ),\n  }))\n\n  let loaderContent\n  if (memberTable === null && !commonLoader) {\n    loaderContent = <div className=\"text-c text-center my-3 td-text\">No Data Found</div>\n  } else if (memberTable.length === 0 && !commonLoader) {\n    loaderContent = <div className=\"text-c text-center my-3 td-text\">No Data Found</div>\n  } else if (commonLoader) {\n    loaderContent = (\n      <div className=\"text-c text-center my-3 td-text\">\n        <CSpinner color=\"danger\" />\n      </div>\n    )\n  } else {\n    loaderContent = <div></div>\n  }\n\n  return (\n    <>\n      <CRow className=\"mt-3 \">\n        <CCol xs={12} sm={7} md={8}>\n          <b style={{ paddingLeft: '30px' }}>Approved Member&rsquo;s Activity</b>\n          <br />\n          <Breadcrumb\n            style={{ paddingLeft: '30px' }}\n            className=\"bread-tab\"\n            separator={<span className=\"breadcrumb-separator\">|</span>}\n            items={[\n              {\n                title: (\n                  <Link\n                    to={'/dashboard'}\n                    className=\"bread-items text-decoration-none text-secondary\"\n                  >\n                    Dashboard\n                  </Link>\n                ),\n              },\n              {\n                title: (\n                  <span className=\"text-secondary \" style={{ cursor: 'default' }}>\n                    Approved Member&rsquo;s Activity\n                  </span>\n                ),\n              },\n            ]}\n          />\n        </CCol>\n\n        <CCol sm={5} md={2}>\n          <Select\n            className=\"members_activity_select approved-custom-select mem_selct \"\n            suffixIcon={\n              <img src={Downarrowimg} alt=\"Downarrowimg\" style={{ width: '10px', height: '6px' }} />\n            }\n            variant={'borderless'}\n            id=\"products\"\n            value={options.find((option) => option.value === productIdRef.current) || undefined} // Ant Design uses undefined for no selection\n            onChange={(value) => handleProduct(value)}\n            showSearch // Enable search functionality\n            allowClear\n            ref={selectRef}\n            filterOption={(input, option) =>\n              option.label.toLowerCase().indexOf(input.toLowerCase()) >= 0\n            }\n            options={\n              prodLoader\n                ? [\n                    {\n                      label: (\n                        <div style={{ textAlign: 'center' }}>\n                          {Array.from({ length: 5 }, (_, index) => (\n                            <Skeleton\n                              key={index}\n                              title={false}\n                              paragraph={{\n                                rows: 1,\n                                width: '100%',\n                                height: '10px',\n                                style: { height: '10px !important' },\n                              }}\n                            />\n                          ))}\n                        </div>\n                      ),\n                      value: 'loading',\n                      disabled: true,\n                    },\n                  ]\n                : options\n            }\n            placeholder=\"Choose Product\"\n            getPopupContainer={(triggerNode) => triggerNode.parentNode} // Adjust menu placement\n          />\n        </CCol>\n\n        <CCol sm={6} md={2}>\n          <Select\n            className=\"members_activity_select member-custom-select mem_selct\"\n            id=\"member-list\"\n            value={memberOption.find((option) => option.value === memberIdRef.current) || undefined}\n            onChange={(value) => handleMember(value)}\n            options={\n              memberLoader\n                ? [\n                    {\n                      label: (\n                        <div style={{ textAlign: 'center' }}>\n                          {Array.from({ length: 5 }, (_, index) => (\n                            <Skeleton\n                              key={index}\n                              title={false}\n                              avatar={{\n                                size: '20',\n                              }} // Adjust the width and height here\n                              paragraph={{\n                                rows: 2,\n                                height: '10px',\n                                style: { height: '10px !important' },\n                              }}\n                            />\n                          ))}\n                        </div>\n                      ),\n                      value: 'loading',\n                      disabled: true,\n                    },\n                  ]\n                : memberOption\n            }\n            showSearch\n            ref={selectRef}\n            variant={'borderless'}\n            suffixIcon={\n              <img src={Downarrowimg} alt=\"Downarrowimg\" style={{ width: '10px', height: '6px' }} />\n            }\n            placeholder=\"Choose Member\"\n            allowClear\n            popupMatchSelectWidth={false}\n            filterOption={(input, option) => {\n              const userNameArray = option.label.props.children[1].props.children[0].props.children\n              const userName = userNameArray\n              const lowerCaseInput = input.toLowerCase()\n              const lowerCaseUserName = userName.toLowerCase()\n              return lowerCaseUserName.includes(lowerCaseInput)\n            }}\n            popupClassName=\"custom-dropdown\"\n            getPopupContainer={(triggerNode) => triggerNode.parentNode}\n          />\n        </CCol>\n      </CRow>\n      <div className=\"table-container table_scroll mt-2\" style={{ border: 'none' }}>\n        <InfiniteScroll\n          dataLength={memberTable.length}\n          next={handleScroll}\n          hasMore={hasMoreRef.current}\n          loader={\n            <div className=\"text-c text-center my-3 td-text\">\n              <CSpinner color=\"danger\" />\n            </div>\n          }\n          endMessage={\n            memberTable.length !== 0 && (\n              <p style={{ textAlign: 'center' }}>\n                <b style={{ color: '#e40e2d', fontSize: '12px' }}>No more Data to load</b>\n              </p>\n            )\n          }\n        >\n          <CTable hover>\n            <CTableHead className=\"head-row\">\n              <CTableRow>\n                <CTableHeaderCell\n                  className=\"table-head-draft  text-c grid-cell-header text-center\"\n                  scope=\"col\"\n                  width=\"4%\"\n                >\n                  SI.No\n                </CTableHeaderCell>\n                <CTableHeaderCell\n                  className=\"table-head-draft  text-c grid-cell-header\"\n                  scope=\"col\"\n                  width=\"10%\"\n                >\n                  Activity Date\n                </CTableHeaderCell>\n                <CTableHeaderCell\n                  className=\"table-head-draft  text-c grid-cell-header\"\n                  scope=\"col\"\n                  width=\"12%\"\n                >\n                  Team member\n                </CTableHeaderCell>\n                <CTableHeaderCell\n                  className=\"table-head-draft  text-c grid-cell-header\"\n                  scope=\"col\"\n                  width=\"15%\"\n                >\n                  Product\n                </CTableHeaderCell>\n                <CTableHeaderCell\n                  className=\"table-head-draft  text-c grid-cell-header\"\n                  scope=\"col\"\n                  width=\"10%\"\n                >\n                  Task\n                </CTableHeaderCell>\n                <CTableHeaderCell\n                  className=\"table-head-draft  text-c grid-cell-header\"\n                  scope=\"col\"\n                  width=\"5%\"\n                >\n                  No.of.Hours\n                </CTableHeaderCell>\n                {/* <CTableHeaderCell\n                className=\"table-head-draft  text-c grid-cell-header\"\n                scope=\"col\"\n                width=\"10%\"\n              >\n                User Status\n              </CTableHeaderCell> */}\n                <CTableHeaderCell\n                  className=\"table-head-draft  text-c grid-cell-header\"\n                  scope=\"col\"\n                  width=\"10%\"\n                >\n                  Approver Status\n                </CTableHeaderCell>\n                <CTableHeaderCell\n                  className=\"table-head-draft  text-c grid-cell-header\"\n                  scope=\"col\"\n                  width=\"15%\"\n                >\n                  Remarks\n                </CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {memberTable?.map((row, index) => (\n                <CTableRow key={row.id}>\n                  <CTableDataCell className=\"text-c pd-text1 grid-cell text-center\" width=\"4%\">\n                    {index + 1}\n                  </CTableDataCell>\n                  <CTableDataCell\n                    className=\"text-c pd-text1 grid-cell\"\n                    title={row.activity_date}\n                    width=\"10%\"\n                  >\n                    {formatDate(row.activity_date)}\n                  </CTableDataCell>\n                  <CTableDataCell\n                    className=\"text-c pd-text1 grid-cell\"\n                    title={row.userName}\n                    width=\"12%\"\n                  >\n                    {toPascalCase(row.userName)}\n                  </CTableDataCell>\n                  <CTableDataCell\n                    className=\"text-c pd-text1 grid-cell\"\n                    title={row.productName}\n                    width=\"15%\"\n                  >\n                    <span>\n                      {row.assignedStatus === true && (\n                        <span style={{ fontSize: '16px', color: '#00ab55' }}>&#8226;</span>\n                      )}\n                      {row.assignedStatus === false && (\n                        <span style={{ fontSize: '16px', color: '#ffaa00' }}>&#8226;</span>\n                      )}\n                      <span style={{ marginLeft: '5px' }}>{row.productName}</span>\n                    </span>\n                  </CTableDataCell>\n                  <CTableDataCell\n                    className=\"text-c pd-text1 grid-cell\"\n                    title={row.taskName}\n                    width=\"10%\"\n                  >\n                    {row.taskName}\n                  </CTableDataCell>\n                  <CTableDataCell\n                    className=\"text-c pd-text1  text-center grid-cell\"\n                    title={formatTimeDuration(row.hours)}\n                    width=\"5%\"\n                  >\n                    {formatTimeDuration(row.hours)}\n                  </CTableDataCell>\n                  {/* <CTableDataCell\n                    className={`text-c grid-cell ${\n                      row.status === 'Approved'\n                        ? 'green-text1 '\n                        : row.status === 'Pending'\n                        ? 'warning-text1 '\n                        : row.status === 'Completed'\n                        ? 'green-text1 '\n                        : ''\n                    }`}\n                    width=\"10%\"\n                  >\n                    <span>\n                      {row.status === 'Approved' && (\n                        <span style={{ fontSize: '20px' }}>&#8226;</span>\n                      )}\n                      {row.status === 'Pending' && (\n                        <span style={{ fontSize: '20px' }}>&#8226;</span>\n                      )}\n                      {row.status === 'Completed' && (\n                        <span style={{ fontSize: '20px' }}>&#8226;</span>\n                      )}\n                    </span>\n                    <span style={{ marginLeft: '5px' }}>{row.status}</span>\n                  </CTableDataCell> */}\n                  <CTableDataCell\n                    className={`text-c grid-cell ${\n                      row.supervisorStatus === 'Approved'\n                        ? 'green-text1 '\n                        : row.supervisorStatus === 'Reject'\n                        ? 'red-text1 '\n                        : ''\n                    }`}\n                    width=\"10%\"\n                  >\n                    {row.supervisorStatus === 'Approved' && (\n                      <span>\n                        <span style={{ fontSize: '20px' }}>&#8226;</span>\n                        <span style={{ marginLeft: '5px' }}>Approved</span>\n                      </span>\n                    )}\n                    {row.supervisorStatus === 'Reject' && (\n                      <span>\n                        <span style={{ fontSize: '20px' }}>&#8226;</span>\n                        <span style={{ marginLeft: '5px' }}>Rejected</span>\n                      </span>\n                    )}\n                  </CTableDataCell>\n                  <CTableDataCell\n                    className=\"text-c grid-cell pd-text1\"\n                    title={row.description}\n                    width=\"15%\"\n                  >\n                    {row.description}\n                  </CTableDataCell>\n                </CTableRow>\n              ))}\n            </CTableBody>\n          </CTable>\n          {loaderContent}\n        </InfiniteScroll>\n      </div>\n    </>\n  )\n}\n\nApprovedActivity.propTypes = {\n  memberLoader: PropTypes.bool,\n  formatDate: PropTypes.func,\n  productLists: PropTypes.array,\n  memberLists: PropTypes.array,\n  prodLoader: PropTypes.bool,\n}\nexport default ApprovedActivity\n","import React, { useState, useEffect, useRef } from 'react'\nimport { Select, Skeleton, Breadcrumb } from 'antd'\nimport {\n  CCol,\n  CRow,\n  CSpinner,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport { getHeaders, ImageUrl } from 'src/constant/Global'\nimport profileImage1 from '../../assets/images/avatars/wrapper.png'\nimport 'react-toastify/dist/ReactToastify.css'\nimport PropTypes from 'prop-types'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport useAxios from 'src/constant/UseAxios'\nimport { Link } from 'react-router-dom'\nimport Downarrowimg from '../../assets/images/downarrow.png'\nimport { toPascalCase, formatTimeDuration } from '../../constant/TimeUtils'\nimport InfiniteScroll from 'react-infinite-scroll-component'\nconst RejectedActivity = ({ memberLoader, formatDate, productLists, memberLists, prodLoader }) => {\n  let api = useAxios()\n  const [memberTable, setMemberTable] = useState([])\n  const [productList, setProductList] = useState([])\n  const [memberList, setMemberList] = useState([])\n  const [commonLoader, setCommonLoader] = useState(true)\n  const selectRef = useRef(null)\n  const pageRef = useRef(0)\n  const productIdRef = useRef(0)\n  const memberIdRef = useRef(0)\n  const filterRef = useRef('approveddefault')\n  const hasMoreRef = useRef(true)\n  const [abortController, setAbortController] = useState(new AbortController())\n\n  useEffect(() => {\n    setMemberList(memberLists)\n    setProductList(productLists)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [productLists])\n\n  useEffect(() => {\n    hasMoreRef.current = true\n    getMemberActivityall()\n    const tableContainer = document.querySelector('.table-container')\n    tableContainer.addEventListener('scroll', handleScroll)\n    return () => {\n      tableContainer.removeEventListener('scroll', handleScroll)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const handleScroll = () => {\n    const tableContainer = document.querySelector('.table-container')\n    if (tableContainer.scrollTop + tableContainer.clientHeight === tableContainer.scrollHeight) {\n      if (hasMoreRef.current === true) {\n        getMemberActivityall()\n      }\n    }\n  }\n\n  const getUrl = () => {\n    let url\n    switch (filterRef.current) {\n      case 'approveddefault':\n        url = `common/timesheet/activity/superviserlistall?page=${pageRef.current}&size=10&category=${filterRef.current}&status=Reject`\n        break\n      case 'approvedall':\n        url = `common/timesheet/activity/superviserlistall?page=${pageRef.current}&size=10&category=${filterRef.current}&productId=${productIdRef.current}&memberId=${memberIdRef.current}&status=Reject`\n        break\n      case 'approvedproduct':\n        url = `common/timesheet/activity/superviserlistall?page=${pageRef.current}&size=10&category=${filterRef.current}&productId=${productIdRef.current}&status=Reject`\n        break\n      case 'approvedmember':\n        url = `common/timesheet/activity/superviserlistall?page=${pageRef.current}&size=10&category=${filterRef.current}&memberId=${memberIdRef.current}&status=Reject`\n        break\n      default:\n        break\n    }\n    return url\n  }\n\n  const getMemberActivityall = async () => {\n    let newAbortController\n    if (pageRef.current === 0) {\n      setCommonLoader(true)\n      setMemberTable([])\n      abortController.abort()\n      newAbortController = new AbortController()\n      setAbortController(newAbortController)\n    }\n    try {\n      const response = await api.get(getUrl(), {\n        headers: getHeaders('json'),\n        signal: newAbortController?.signal,\n      })\n      const data = response.data.data\n      if (pageRef.current === 0) {\n        setMemberTable(data)\n      } else {\n        setMemberTable((prevUserData) => {\n          const uniqueSet = new Set(prevUserData.map((user) => user.id))\n          const newData = data.filter((user) => !uniqueSet.has(user.id))\n          return [...prevUserData, ...newData]\n        })\n      }\n      if (data.length < 10) {\n        hasMoreRef.current = false\n      } else {\n        hasMoreRef.current = true\n      }\n      pageRef.current = pageRef.current + 1\n      setCommonLoader(false)\n    } catch (error) {}\n  }\n\n  //Product List\n  const options = productList.map((product) => ({\n    value: product.id,\n    label: product.name,\n  }))\n  const handleProduct = (value) => {\n    selectRef.current.blur()\n    pageRef.current = 0\n    hasMoreRef.current = true\n    setMemberTable([])\n    setCommonLoader(true)\n    if (value !== undefined && memberIdRef.current === 0) {\n      productIdRef.current = value\n      filterRef.current = 'approvedproduct'\n    } else if (value !== undefined && memberIdRef.current !== 0) {\n      filterRef.current = 'approvedall'\n      productIdRef.current = value\n    } else if (memberIdRef.current !== 0 && value === undefined) {\n      filterRef.current = 'approvedmember'\n      productIdRef.current = 0\n    } else {\n      filterRef.current = 'approveddefault'\n      productIdRef.current = 0\n    }\n    getMemberActivityall()\n  }\n  const handleMember = (value) => {\n    selectRef.current.blur()\n    pageRef.current = 0\n    hasMoreRef.current = true\n    setMemberTable([])\n    setCommonLoader(true)\n    if (value !== undefined && productIdRef.current === 0) {\n      memberIdRef.current = value\n      filterRef.current = 'approvedmember'\n    } else if (value !== undefined && productIdRef.current !== 0) {\n      filterRef.current = 'approvedall'\n      memberIdRef.current = value\n    } else if (productIdRef.current !== 0 && value === undefined) {\n      filterRef.current = 'approvedproduct'\n      memberIdRef.current = 0\n    } else {\n      filterRef.current = 'approveddefault'\n      memberIdRef.current = 0\n    }\n    getMemberActivityall()\n  }\n\n  // Member List\n  const memberOption = memberList.map((user) => ({\n    value: user.id,\n    label: (\n      <div className=\"select-options1\">\n        <img\n          src={user.profile_pic ? ImageUrl + user.profile_pic : profileImage1}\n          style={user.profile_pic ? { width: '29px' } : { width: '39px' }}\n          alt={user.name}\n          className=\"img-flag\"\n        />\n        <div className=\"node1\" style={user.profile_pic ? { marginLeft: '11px' } : {}}>\n          <p className=\"user-name1\" title={user.name}>\n            {toPascalCase(user.name)}\n          </p>\n          <p className=\"role-text1\">{user.role}</p>\n        </div>\n      </div>\n    ),\n  }))\n\n  let loaderContent\n  if (memberTable === null && !commonLoader) {\n    loaderContent = <div className=\"text-c text-center my-3 td-text\">No Data Found</div>\n  } else if (memberTable.length === 0 && !commonLoader) {\n    loaderContent = <div className=\"text-c text-center my-3 td-text\">No Data Found</div>\n  } else if (commonLoader) {\n    loaderContent = (\n      <div className=\"text-c text-center my-3 td-text\">\n        <CSpinner color=\"danger\" />\n      </div>\n    )\n  } else {\n    loaderContent = <div></div>\n  }\n\n  return (\n    <>\n      <CRow className=\"mt-3 \">\n        <CCol xs={12} sm={7} md={8}>\n          <b style={{ paddingLeft: '30px' }}>Rejected Member&rsquo;s Activity</b>\n          <br />\n          <Breadcrumb\n            style={{ paddingLeft: '30px' }}\n            className=\"bread-tab\"\n            separator={<span className=\"breadcrumb-separator\">|</span>}\n            items={[\n              {\n                title: (\n                  <Link\n                    to={'/dashboard'}\n                    className=\"bread-items text-decoration-none text-secondary\"\n                  >\n                    Dashboard\n                  </Link>\n                ),\n              },\n              {\n                title: (\n                  <span className=\"text-secondary \" style={{ cursor: 'default' }}>\n                    Rejected Member&rsquo;s Activity\n                  </span>\n                ),\n              },\n            ]}\n          />\n        </CCol>\n\n        <CCol sm={5} md={2}>\n          <Select\n            className=\"members_activity_select approved-custom-select mem_selct \"\n            suffixIcon={\n              <img src={Downarrowimg} alt=\"Downarrowimg\" style={{ width: '10px', height: '6px' }} />\n            }\n            variant={'borderless'}\n            id=\"products\"\n            value={options.find((option) => option.value === productIdRef.current) || undefined} // Ant Design uses undefined for no selection\n            onChange={(value) => handleProduct(value)}\n            showSearch // Enable search functionality\n            allowClear\n            ref={selectRef}\n            filterOption={(input, option) =>\n              option.label.toLowerCase().indexOf(input.toLowerCase()) >= 0\n            }\n            options={\n              prodLoader\n                ? [\n                    {\n                      label: (\n                        <div style={{ textAlign: 'center' }}>\n                          {Array.from({ length: 5 }, (_, index) => (\n                            <Skeleton\n                              key={index}\n                              title={false}\n                              paragraph={{\n                                rows: 1,\n                                width: '100%',\n                                height: '10px',\n                                style: { height: '10px !important' },\n                              }}\n                            />\n                          ))}\n                        </div>\n                      ),\n                      value: 'loading',\n                      disabled: true,\n                    },\n                  ]\n                : options\n            }\n            placeholder=\"Choose Product\"\n            getPopupContainer={(triggerNode) => triggerNode.parentNode} // Adjust menu placement\n          />\n        </CCol>\n\n        <CCol sm={6} md={2}>\n          <Select\n            className=\"members_activity_select member-custom-select mem_selct\"\n            id=\"member-list\"\n            value={memberOption.find((option) => option.value === memberIdRef.current) || undefined}\n            onChange={(value) => handleMember(value)}\n            options={\n              memberLoader\n                ? [\n                    {\n                      label: (\n                        <div style={{ textAlign: 'center' }}>\n                          {Array.from({ length: 5 }, (_, index) => (\n                            <Skeleton\n                              key={index}\n                              title={false}\n                              avatar={{\n                                size: '20',\n                              }} // Adjust the width and height here\n                              paragraph={{\n                                rows: 2,\n                                height: '10px',\n                                style: { height: '10px !important' },\n                              }}\n                            />\n                          ))}\n                        </div>\n                      ),\n                      value: 'loading',\n                      disabled: true,\n                    },\n                  ]\n                : memberOption\n            }\n            showSearch\n            ref={selectRef}\n            variant={'borderless'}\n            suffixIcon={\n              <img src={Downarrowimg} alt=\"Downarrowimg\" style={{ width: '10px', height: '6px' }} />\n            }\n            placeholder=\"Choose Member\"\n            allowClear\n            popupMatchSelectWidth={false}\n            filterOption={(input, option) => {\n              const userNameArray = option.label.props.children[1].props.children[0].props.children\n              const userName = userNameArray\n              const lowerCaseInput = input.toLowerCase()\n              const lowerCaseUserName = userName.toLowerCase()\n              return lowerCaseUserName.includes(lowerCaseInput)\n            }}\n            popupClassName=\"custom-dropdown\"\n            getPopupContainer={(triggerNode) => triggerNode.parentNode}\n          />\n        </CCol>\n      </CRow>\n      <div className=\"table-container table_scroll mt-2\" style={{ border: 'none' }}>\n        <InfiniteScroll\n          dataLength={memberTable.length}\n          next={handleScroll}\n          hasMore={hasMoreRef.current}\n          loader={\n            <div className=\"text-c text-center my-3 td-text\">\n              <CSpinner color=\"danger\" />\n            </div>\n          }\n          endMessage={\n            memberTable.length !== 0 && (\n              <p style={{ textAlign: 'center' }}>\n                <b style={{ color: '#e40e2d', fontSize: '12px' }}>No more Data to load</b>\n              </p>\n            )\n          }\n        >\n          <CTable hover>\n            <CTableHead className=\"head-row\">\n              <CTableRow>\n                <CTableHeaderCell\n                  className=\"table-head-draft  text-c grid-cell-header text-center\"\n                  scope=\"col\"\n                  width=\"4%\"\n                >\n                  SI.No\n                </CTableHeaderCell>\n                <CTableHeaderCell\n                  className=\"table-head-draft  text-c grid-cell-header\"\n                  scope=\"col\"\n                  width=\"10%\"\n                >\n                  Activity Date\n                </CTableHeaderCell>\n                <CTableHeaderCell\n                  className=\"table-head-draft  text-c grid-cell-header\"\n                  scope=\"col\"\n                  width=\"12%\"\n                >\n                  Team member\n                </CTableHeaderCell>\n                <CTableHeaderCell\n                  className=\"table-head-draft  text-c grid-cell-header\"\n                  scope=\"col\"\n                  width=\"15%\"\n                >\n                  Product\n                </CTableHeaderCell>\n                <CTableHeaderCell\n                  className=\"table-head-draft  text-c grid-cell-header\"\n                  scope=\"col\"\n                  width=\"10%\"\n                >\n                  Task\n                </CTableHeaderCell>\n                <CTableHeaderCell\n                  className=\"table-head-draft  text-c grid-cell-header\"\n                  scope=\"col\"\n                  width=\"5%\"\n                >\n                  No.of.Hours\n                </CTableHeaderCell>\n                {/* <CTableHeaderCell\n                className=\"table-head-draft  text-c grid-cell-header\"\n                scope=\"col\"\n                width=\"10%\"\n              >\n                User Status\n              </CTableHeaderCell> */}\n                <CTableHeaderCell\n                  className=\"table-head-draft  text-c grid-cell-header\"\n                  scope=\"col\"\n                  width=\"10%\"\n                >\n                  Approver Status\n                </CTableHeaderCell>\n                <CTableHeaderCell\n                  className=\"table-head-draft  text-c grid-cell-header\"\n                  scope=\"col\"\n                  width=\"15%\"\n                >\n                  Remarks\n                </CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {memberTable?.map((row, index) => (\n                <CTableRow key={row.id}>\n                  <CTableDataCell className=\"text-c pd-text1 grid-cell text-center\" width=\"4%\">\n                    {index + 1}\n                  </CTableDataCell>\n                  <CTableDataCell\n                    className=\"text-c pd-text1 grid-cell\"\n                    title={row.activity_date}\n                    width=\"10%\"\n                  >\n                    {formatDate(row.activity_date)}\n                  </CTableDataCell>\n                  <CTableDataCell\n                    className=\"text-c pd-text1 grid-cell\"\n                    title={row.userName}\n                    width=\"12%\"\n                  >\n                    {toPascalCase(row.userName)}\n                  </CTableDataCell>\n                  <CTableDataCell\n                    className=\"text-c pd-text1 grid-cell\"\n                    title={row.productName}\n                    width=\"15%\"\n                  >\n                    <span>\n                      {row.assignedStatus === true && (\n                        <span style={{ fontSize: '16px', color: '#00ab55' }}>&#8226;</span>\n                      )}\n                      {row.assignedStatus === false && (\n                        <span style={{ fontSize: '16px', color: '#ffaa00' }}>&#8226;</span>\n                      )}\n                      <span style={{ marginLeft: '5px' }}>{row.productName}</span>\n                    </span>\n                  </CTableDataCell>\n                  <CTableDataCell\n                    className=\"text-c pd-text1 grid-cell\"\n                    title={row.taskName}\n                    width=\"10%\"\n                  >\n                    {row.taskName}\n                  </CTableDataCell>\n                  <CTableDataCell\n                    className=\"text-c pd-text1  text-center grid-cell\"\n                    title={formatTimeDuration(row.hours)}\n                    width=\"5%\"\n                  >\n                    {formatTimeDuration(row.hours)}\n                  </CTableDataCell>\n                  {/* <CTableDataCell\n                    className={`text-c grid-cell ${\n                      row.status === 'Approved'\n                        ? 'green-text1 '\n                        : row.status === 'Pending'\n                        ? 'warning-text1 '\n                        : row.status === 'Completed'\n                        ? 'green-text1 '\n                        : ''\n                    }`}\n                    width=\"10%\"\n                  >\n                    <span>\n                      {row.status === 'Approved' && (\n                        <span style={{ fontSize: '20px' }}>&#8226;</span>\n                      )}\n                      {row.status === 'Pending' && (\n                        <span style={{ fontSize: '20px' }}>&#8226;</span>\n                      )}\n                      {row.status === 'Completed' && (\n                        <span style={{ fontSize: '20px' }}>&#8226;</span>\n                      )}\n                    </span>\n                    <span style={{ marginLeft: '5px' }}>{row.status}</span>\n                  </CTableDataCell> */}\n                  <CTableDataCell\n                    className={`text-c grid-cell ${\n                      row.supervisorStatus === 'Approved'\n                        ? 'green-text1 '\n                        : row.supervisorStatus === 'Reject'\n                        ? 'red-text1 '\n                        : ''\n                    }`}\n                    width=\"10%\"\n                  >\n                    {row.supervisorStatus === 'Approved' && (\n                      <span>\n                        <span style={{ fontSize: '20px' }}>&#8226;</span>\n                        <span style={{ marginLeft: '5px' }}>Approved</span>\n                      </span>\n                    )}\n                    {row.supervisorStatus === 'Reject' && (\n                      <span>\n                        <span style={{ fontSize: '20px' }}>&#8226;</span>\n                        <span style={{ marginLeft: '5px' }}>Rejected</span>\n                      </span>\n                    )}\n                  </CTableDataCell>\n                  <CTableDataCell\n                    className=\"text-c grid-cell pd-text1\"\n                    title={row.description}\n                    width=\"15%\"\n                  >\n                    {row.description}\n                  </CTableDataCell>\n                </CTableRow>\n              ))}\n            </CTableBody>\n          </CTable>\n          {loaderContent}\n        </InfiniteScroll>\n      </div>\n    </>\n  )\n}\n\nRejectedActivity.propTypes = {\n  memberLoader: PropTypes.bool,\n  formatDate: PropTypes.func,\n  productLists: PropTypes.array,\n  memberLists: PropTypes.array,\n  prodLoader: PropTypes.bool,\n}\nexport default RejectedActivity\n","import React, { useState, useEffect, useMemo, useRef } from 'react'\nimport { Select, DatePicker, Breadcrumb, Skeleton } from 'antd'\nimport {\n  CCol,\n  CRow,\n  CSpinner,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport { getHeaders, ImageUrl } from 'src/constant/Global'\nimport profileImage1 from '../../assets/images/avatars/wrapper.png'\nimport PropTypes from 'prop-types'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport useAxios from 'src/constant/UseAxios'\nimport Downarrowimg from '../../assets/images/downarrow.png'\nimport dayjs from 'dayjs'\nimport { toPascalCase } from '../../constant/TimeUtils'\nimport InfiniteScroll from 'react-infinite-scroll-component'\nimport { Link } from 'react-router-dom'\n\nconst RaisedRequest = ({ formatDate, memberLists, memberLoader }) => {\n  let api = useAxios()\n  const [memberTable, setMemberTable] = useState([])\n  const [memberList, setMemberList] = useState([])\n  const [commonLoader, setCommonLoader] = useState(true)\n  const dateRef = useRef(null)\n  const pageRef = useRef(0)\n  const memberIdRef = useRef(0)\n  const filterRef = useRef(false)\n  const statusRef = useRef('')\n  const hasMoreRef = useRef(true)\n  const [abortController, setAbortController] = useState(new AbortController())\n\n  useEffect(() => {\n    setMemberList(memberLists)\n    hasMoreRef.current = true\n    getMemberRequestall()\n    const tableContainer = document.querySelector('.table-container')\n    tableContainer.addEventListener('scroll', handleScroll)\n    return () => {\n      tableContainer.removeEventListener('scroll', handleScroll)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const handleScroll = () => {\n    const tableContainer = document.querySelector('.table-container')\n    if (tableContainer.scrollTop + tableContainer.clientHeight === tableContainer.scrollHeight) {\n      if (hasMoreRef.current === true) {\n        getMemberRequestall()\n      }\n    }\n  }\n\n  let loaderContent\n  if (memberTable === null && !commonLoader) {\n    loaderContent = <div className=\"text-c text-center my-3 td-text\">No Data Found</div>\n  } else if (memberTable.length === 0 && !commonLoader) {\n    loaderContent = <div className=\"text-c text-center my-3 td-text\">No Data Found</div>\n  } else if (commonLoader) {\n    loaderContent = (\n      <div className=\"text-c text-center my-3 td-text\">\n        <CSpinner color=\"danger\" />\n      </div>\n    )\n  } else {\n    loaderContent = <div></div>\n  }\n\n  const handleDateChange = (date, dateString) => {\n    pageRef.current = 0\n    hasMoreRef.current = true\n    if (date !== null) {\n      filterRef.current = true\n      const parsedDate = dayjs(date, 'DD MMM, YYYY')\n      const formattedDate = parsedDate.format('YYYY-MM-DD')\n      dateRef.current = formattedDate\n    } else if (memberIdRef.current !== 0 || statusRef.current !== '') {\n      dateRef.current = null\n      filterRef.current = true\n    } else {\n      filterRef.current = false\n      dateRef.current = null\n    }\n    setCommonLoader(true)\n    setMemberTable([])\n    getMemberRequestall()\n  }\n\n  const getUrl = () => {\n    let url\n    if (filterRef.current === false)\n      url = `activity/raisedRequest/tosupervisor/status?page=${pageRef.current}&size=10&filter=${filterRef.current}`\n    else if (dateRef.current !== null && memberIdRef.current !== 0 && statusRef.current !== '')\n      url = `activity/raisedRequest/tosupervisor/status?page=${pageRef.current}&size=10&filter=${filterRef.current}&date=${dateRef.current}&memberId=${memberIdRef.current}&status=${statusRef.current}`\n    else if (dateRef.current !== null && memberIdRef.current === 0 && statusRef.current === '')\n      url = `activity/raisedRequest/tosupervisor/status?page=${pageRef.current}&size=10&filter=${filterRef.current}&date=${dateRef.current}`\n    else if (dateRef.current === null && memberIdRef.current !== 0 && statusRef.current === '')\n      url = `activity/raisedRequest/tosupervisor/status?page=${pageRef.current}&size=10&filter=${filterRef.current}&memberId=${memberIdRef.current}`\n    else if (dateRef.current === null && memberIdRef.current === 0 && statusRef.current !== '')\n      url = `activity/raisedRequest/tosupervisor/status?page=${pageRef.current}&size=10&filter=${filterRef.current}&status=${statusRef.current}`\n    else if (dateRef.current === null && memberIdRef.current !== 0 && statusRef.current !== '')\n      url = `activity/raisedRequest/tosupervisor/status?page=${pageRef.current}&size=10&filter=${filterRef.current}&memberId=${memberIdRef.current}&status=${statusRef.current}`\n    else if (dateRef.current !== null && memberIdRef.current === 0 && statusRef.current !== '')\n      url = `activity/raisedRequest/tosupervisor/status?page=${pageRef.current}&size=10&filter=${filterRef.current}&date=${dateRef.current}&status=${statusRef.current}`\n    else if (dateRef.current !== null && memberIdRef.current !== 0 && statusRef.current === '')\n      url = `activity/raisedRequest/tosupervisor/status?page=${pageRef.current}&size=10&filter=${filterRef.current}&date=${dateRef.current}&memberId=${memberIdRef.current}`\n    return url\n  }\n  const getMemberRequestall = async () => {\n    let newAbortController\n    if (pageRef.current === 0) {\n      setCommonLoader(true)\n      setMemberTable([])\n      abortController.abort()\n      newAbortController = new AbortController()\n      setAbortController(newAbortController)\n    }\n    try {\n      const response = await api.get(getUrl(), {\n        headers: getHeaders('json'),\n        signal: newAbortController?.signal,\n      })\n      const data = response.data.data\n      if (pageRef.current === 0) {\n        setMemberTable(data)\n      } else {\n        setMemberTable((prevUserData) => {\n          const uniqueSet = new Set(prevUserData.map((user) => user.id))\n          const newData = data.filter((user) => !uniqueSet.has(user.id))\n          return [...prevUserData, ...newData]\n        })\n      }\n      if (data.length < 10) {\n        hasMoreRef.current = false\n      } else {\n        hasMoreRef.current = true\n      }\n\n      pageRef.current = pageRef.current + 1\n      setCommonLoader(false)\n    } catch (error) {}\n  }\n\n  // Member List\n  const memberOption = memberList.map((user) => ({\n    value: user.id,\n    label: (\n      <div className=\"select-options1\">\n        <img\n          src={user.profile_pic ? ImageUrl + user.profile_pic : profileImage1}\n          style={user.profile_pic ? { width: '29px' } : { width: '39px' }}\n          alt={user.name}\n          className=\"img-flag\"\n        />\n        <div className=\"node1\" style={user.profile_pic ? { marginLeft: '11px' } : {}}>\n          <p className=\"user-name1\" title={user.name}>\n            {toPascalCase(user.name)}\n          </p>\n          <p className=\"role-text1\">{user.role}</p>\n        </div>\n      </div>\n    ),\n  }))\n\n  const handleMember = (member) => {\n    pageRef.current = 0\n    hasMoreRef.current = true\n    if (member !== undefined) {\n      memberIdRef.current = member\n      filterRef.current = true\n    } else if (dateRef.current !== null || statusRef.current !== '') {\n      memberIdRef.current = 0\n      filterRef.current = true\n    } else {\n      filterRef.current = false\n      memberIdRef.current = 0\n    }\n    setCommonLoader(true)\n    setMemberTable([])\n    getMemberRequestall()\n  }\n\n  const handleStatus = (status) => {\n    pageRef.current = 0\n    hasMoreRef.current = true\n    if (status !== undefined) {\n      statusRef.current = status\n      filterRef.current = true\n    } else if (dateRef.current !== null || memberIdRef.current !== 0) {\n      statusRef.current = ''\n      filterRef.current = true\n    } else {\n      filterRef.current = false\n      statusRef.current = ''\n    }\n    setCommonLoader(true)\n    setMemberTable([])\n    getMemberRequestall()\n  }\n  return (\n    <>\n      <CRow className=\"mt-3\">\n        <CCol xs={12} sm={7} md={6}>\n          <b style={{ paddingLeft: '30px' }}>Raised Request</b>\n          <br />\n          <Breadcrumb\n            style={{ paddingLeft: '30px' }}\n            className=\"bread-tab\"\n            separator={<span className=\"breadcrumb-separator\">|</span>}\n            items={[\n              {\n                title: (\n                  <Link\n                    rel=\"Dashboard\"\n                    to={'/dashboard'}\n                    className=\"bread-items text-decoration-none text-secondary \"\n                  >\n                    Dashboard\n                  </Link>\n                ),\n              },\n              {\n                title: (\n                  <span className=\"text-secondary \" style={{ cursor: 'default' }}>\n                    Raised Request\n                  </span>\n                ),\n              },\n            ]}\n          />\n        </CCol>\n\n        <CCol sm={5} md={2}>\n          <DatePicker\n            style={{\n              borderBottom: '1px solid #f1f1f1',\n              borderRadius: '0',\n              width: '90%',\n\n              marginTop: '1px',\n            }}\n            className=\"filter-date datepicker_raised mem_selct\"\n            onChange={handleDateChange}\n            placeholder=\"Choose Date\"\n            allowClear\n            variant={'borderless'}\n            format=\"DD MMM,YYYY\"\n          />\n        </CCol>\n        <CCol sm={5} md={2}>\n          <Select\n            style={{ width: '90%' }}\n            className=\"members_activity_select custom-select-raised membr-rais-mem mem_selct\"\n            id=\"member-list\"\n            value={memberOption.find((option) => option.value === memberIdRef.current) || undefined}\n            onChange={(value) => handleMember(value)}\n            options={\n              memberLoader\n                ? [\n                    {\n                      label: (\n                        <div style={{ textAlign: 'center' }}>\n                          {Array.from({ length: 5 }, (_, index) => (\n                            <Skeleton\n                              key={index}\n                              title={false}\n                              avatar={{\n                                size: '20',\n                              }} // Adjust the width and height here\n                              paragraph={{\n                                rows: 2,\n                                height: '10px',\n                                style: { height: '10px !important' },\n                              }}\n                            />\n                          ))}\n                        </div>\n                      ),\n                      value: 'loading',\n                      disabled: true,\n                    },\n                  ]\n                : memberOption\n            }\n            showSearch\n            variant={'borderless'}\n            placeholder=\"Choose Member\"\n            suffixIcon={\n              <img src={Downarrowimg} alt=\"Downarrowimg\" style={{ width: '10px', height: '6px' }} />\n            }\n            allowClear\n            filterOption={(input, option) => {\n              const userNameArray = option.label.props.children[1].props.children[0].props.children\n              const userName = userNameArray\n              const lowerCaseInput = input.toLowerCase()\n              const lowerCaseUserName = userName.toLowerCase()\n              return lowerCaseUserName.includes(lowerCaseInput)\n            }}\n            popupMatchSelectWidth={false}\n            popupClassName=\"custom-dropdown\"\n            getPopupContainer={(triggerNode) => triggerNode.parentNode}\n          />\n        </CCol>\n        <CCol sm={5} md={2}>\n          <Select\n            suffixIcon={\n              <img src={Downarrowimg} alt=\"Downarrowimg\" style={{ width: '10px', height: '6px' }} />\n            }\n            className=\"members_activity_select member-custom-select membr-rais-status mem_selct\"\n            allowClear\n            placeholder=\"Choose Status\"\n            options={[\n              {\n                value: 'Approved',\n                label: 'Approved',\n              },\n              {\n                value: 'Rejected',\n                label: 'Rejected',\n              },\n            ]}\n            onChange={(value) => handleStatus(value)}\n          />\n        </CCol>\n      </CRow>\n      <div className=\"table-container table_scroll mt-2\" style={{ border: 'none' }}>\n        <InfiniteScroll\n          dataLength={memberTable.length}\n          next={handleScroll}\n          hasMore={hasMoreRef.current}\n          loader={\n            <div className=\"text-c text-center my-3 td-text\">\n              <CSpinner color=\"danger\" />\n            </div>\n          }\n          endMessage={\n            memberTable.length !== 0 && (\n              <p style={{ textAlign: 'center' }}>\n                <b style={{ color: '#e40e2d', fontSize: '12px' }}>No more Data to load</b>\n              </p>\n            )\n          }\n        >\n          <CTable hover>\n            <CTableHead className=\"head-row\">\n              <CTableRow>\n                <CTableHeaderCell\n                  className=\"table-head-draft  text-c grid-cell-header text-center\"\n                  scope=\"col\"\n                  width=\"3%\"\n                >\n                  SI.No\n                </CTableHeaderCell>\n                <CTableHeaderCell\n                  className=\"table-head-draft  text-c grid-cell-header\"\n                  scope=\"col\"\n                  width=\"5%\"\n                >\n                  Activity Date\n                </CTableHeaderCell>\n                <CTableHeaderCell\n                  className=\"table-head-draft  text-c grid-cell-header\"\n                  scope=\"col\"\n                  width=\"10%\"\n                >\n                  Team member\n                </CTableHeaderCell>\n                <CTableHeaderCell\n                  className=\"table-head-draft  text-c grid-cell-header\"\n                  scope=\"col\"\n                  width=\"20%\"\n                >\n                  Description\n                </CTableHeaderCell>\n                <CTableHeaderCell\n                  className=\"table-head-draft  text-c grid-cell-header\"\n                  scope=\"col\"\n                  width=\"7%\"\n                >\n                  Approver Status\n                </CTableHeaderCell>\n                <CTableHeaderCell\n                  className=\"table-head-draft  text-c grid-cell-header\"\n                  scope=\"col\"\n                  width=\"20%\"\n                >\n                  Approver Remarks\n                </CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {memberTable?.map((row, index) => (\n                <CTableRow key={row.id}>\n                  <CTableDataCell className=\"text-c text-center pd-text1 grid-cell\" width=\"3%\">\n                    {index + 1}\n                  </CTableDataCell>\n                  <CTableDataCell\n                    className=\"text-c pd-text1 grid-cell\"\n                    title={row.requestDate}\n                    width=\"5%\"\n                  >\n                    {formatDate(row.requestDate)}\n                  </CTableDataCell>\n                  <CTableDataCell\n                    className=\"text-c pd-text1 grid-cell\"\n                    title={toPascalCase(row.teamName)}\n                    width=\"10%\"\n                  >\n                    {toPascalCase(row.teamName)}\n                  </CTableDataCell>\n                  <CTableDataCell\n                    className=\"text-c pd-text1 grid-cell\"\n                    title={row.reason}\n                    width=\"20%\"\n                  >\n                    {row.reason}\n                  </CTableDataCell>\n                  <CTableDataCell\n                    className={`text-c grid-cell ${\n                      row.status === 'Approved'\n                        ? 'green-text1 '\n                        : row.status === 'Pending'\n                        ? 'warning-text1 '\n                        : row.status === 'Rejected'\n                        ? 'red-text1 '\n                        : ''\n                    }`}\n                    width=\"6%\"\n                  >\n                    {row.status === 'Approved' && (\n                      <span style={{ fontSize: '20px' }}>&#8226; </span>\n                    )}\n                    {row.status === 'Pending' && <span style={{ fontSize: '20px' }}>&#8226; </span>}\n                    {row.status === 'Rejected' && (\n                      <span style={{ fontSize: '20px' }}>&#8226; </span>\n                    )}\n                    {row.status}\n                  </CTableDataCell>\n                  <CTableDataCell\n                    className=\"text-c pd-text1 grid-cell\"\n                    title={row.remarks}\n                    width=\"20%\"\n                  >\n                    {row.remarks ? row.remarks : '---'}\n                  </CTableDataCell>\n                </CTableRow>\n              ))}\n            </CTableBody>\n          </CTable>\n          {loaderContent}\n        </InfiniteScroll>\n      </div>\n    </>\n  )\n}\n\nRaisedRequest.propTypes = {\n  formatDate: PropTypes.func,\n  memberLists: PropTypes.array,\n  memberLoader: PropTypes.bool,\n}\nexport default RaisedRequest\n","import React, { useState, useEffect, useRef } from 'react'\nimport { Select, DatePicker, Breadcrumb, Skeleton } from 'antd'\nimport {\n  CCol,\n  CRow,\n  CSpinner,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport { getHeaders, ImageUrl } from 'src/constant/Global'\nimport profileImage1 from '../../assets/images/avatars/wrapper.png'\nimport PropTypes from 'prop-types'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport useAxios from 'src/constant/UseAxios'\nimport Downarrowimg from '../../assets/images/downarrow.png'\nimport dayjs from 'dayjs'\nimport { toPascalCase } from '../../constant/TimeUtils'\nimport InfiniteScroll from 'react-infinite-scroll-component'\nimport { Link } from 'react-router-dom'\n\nconst AppliedLeave = ({ formatDate, memberLists, memberLoader }) => {\n  let api = useAxios()\n  const leaveDateRef = useRef(null)\n  const [leaveTable, setLeaveTable] = useState([])\n  const [memberList, setMemberList] = useState([])\n  const memberRef = useRef(0)\n  const [abortController, setAbortController] = useState(new AbortController())\n  const hasMoreRef = useRef(true)\n  const pageRef = useRef(0)\n  const [commonLoader, setCommonLoader] = useState(true)\n\n  useEffect(() => {\n    hasMoreRef.current = true\n    getAppliedLeave(leaveDateRef.current)\n    setMemberList(memberLists)\n    const tableContainer = document.querySelector('.table-container')\n    tableContainer.addEventListener('scroll', handleScroll)\n    return () => {\n      tableContainer.removeEventListener('scroll', handleScroll)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const handleScroll = () => {\n    const tableContainer = document.querySelector('.table-container')\n    if (tableContainer.scrollTop + tableContainer.clientHeight === tableContainer.scrollHeight) {\n      if (hasMoreRef.current === true) {\n        getAppliedLeave(leaveDateRef.current)\n      }\n    }\n  }\n\n  const handleDateChange = (date, dateString) => {\n    hasMoreRef.current = true\n    const newDate = dayjs(date).format('YYYY-MM-DD')\n    pageRef.current = 0\n    setCommonLoader(true)\n    setLeaveTable([])\n    if (date === undefined || date === null) {\n      leaveDateRef.current = null\n      getAppliedLeave(leaveDateRef.current)\n    } else {\n      leaveDateRef.current = newDate\n      getAppliedLeave(newDate)\n    }\n  }\n\n  const getAppliedLeave = async (date) => {\n    let newAbortController\n    if (pageRef.current === 0) {\n      setCommonLoader(true)\n      setLeaveTable([])\n      abortController.abort()\n      newAbortController = new AbortController()\n      setAbortController(newAbortController)\n    }\n    let url\n    if ((date === null || date === undefined) && memberRef.current === 0) {\n      url = `activity/attendanceSheet/bysupervisor?page=${pageRef.current}&size=10`\n    } else if (date !== null && date !== undefined && memberRef.current !== 0) {\n      url = `activity/attendanceSheet/bysupervisor?page=${pageRef.current}&size=10&userid=${memberRef.current}&date=${date}`\n    } else if ((date === null || date === undefined) && memberRef.current !== 0) {\n      url = `activity/attendanceSheet/bysupervisor?page=${pageRef.current}&size=10&userid=${memberRef.current}`\n    } else if (date !== null && date !== undefined && memberRef.current === 0) {\n      url = `activity/attendanceSheet/bysupervisor?page=${pageRef.current}&size=10&date=${date}`\n    }\n    try {\n      const response = await api.get(url, {\n        headers: getHeaders('json'),\n        signal: newAbortController?.signal,\n      })\n      const data = response.data.data\n      if (pageRef.current === 0) {\n        setLeaveTable(data.content)\n      } else {\n        setLeaveTable((prevUserData) => {\n          return [...prevUserData, ...data.content]\n        })\n      }\n      if (data.last === true) {\n        hasMoreRef.current = false\n      } else {\n        hasMoreRef.current = true\n      }\n      pageRef.current = pageRef.current + 1\n      setCommonLoader(false)\n    } catch (error) {}\n  }\n\n  // Member List\n  const memberOption = memberList.map((user) => ({\n    value: user.id,\n    label: (\n      <div className=\"select-options1\">\n        <img\n          src={user.profile_pic ? ImageUrl + user.profile_pic : profileImage1}\n          style={user.profile_pic ? { width: '29px' } : { width: '39px' }}\n          alt={user.name}\n          className=\"img-flag\"\n        />\n        <div className=\"node1\" style={user.profile_pic ? { marginLeft: '11px' } : {}}>\n          <p className=\"user-name1\" title={user.name}>\n            {toPascalCase(user.name)}\n          </p>\n          <p className=\"role-text1\">{user.role}</p>\n        </div>\n      </div>\n    ),\n  }))\n\n  const handleMember = (selectedProductId) => {\n    if (selectedProductId === undefined) {\n      memberRef.current = 0\n    } else {\n      memberRef.current = selectedProductId\n    }\n    hasMoreRef.current = true\n    pageRef.current = 0\n    setCommonLoader(true)\n    setLeaveTable([])\n    getAppliedLeave(leaveDateRef.current)\n  }\n\n  let content\n  if (leaveTable === null && !commonLoader) {\n    content = <div className=\"text-c text-center my-3 td-text\">No Data Found</div>\n  } else if (leaveTable.length === 0 && !commonLoader) {\n    content = <div className=\"text-c text-center my-3 td-text\">No Data Found</div>\n  } else if (commonLoader) {\n    content = (\n      <div className=\"text-c text-center my-3 td-text\">\n        <CSpinner color=\"danger\" />\n      </div>\n    )\n  } else {\n    content = <div></div>\n  }\n\n  return (\n    <>\n      <CRow className=\"mt-3\">\n        <CCol xs={12} sm={7} md={8}>\n          <b style={{ paddingLeft: '30px' }}>Appiled Leave</b>\n          <br />\n          <Breadcrumb\n            style={{ paddingLeft: '30px' }}\n            className=\"bread-tab\"\n            separator={<span className=\"breadcrumb-separator\">|</span>}\n            items={[\n              {\n                title: (\n                  <Link\n                    rel=\"Dashboard\"\n                    to={'/dashboard'}\n                    className=\"bread-items text-decoration-none text-secondary \"\n                  >\n                    Dashboard\n                  </Link>\n                ),\n              },\n              {\n                title: (\n                  <span className=\"text-secondary \" style={{ cursor: 'default' }}>\n                    Appiled Leave\n                  </span>\n                ),\n              },\n            ]}\n          />\n        </CCol>\n\n        <CCol sm={5} md={2}>\n          <DatePicker\n            style={{\n              borderBottom: '1px solid #f1f1f1',\n              borderRadius: '0',\n              width: '90%',\n\n              marginTop: '1px',\n            }}\n            className=\"filter-date datepicker_raised mem_selct\"\n            onChange={handleDateChange}\n            placeholder=\"Choose Date\"\n            allowClear\n            variant={'borderless'}\n            format=\"DD MMM,YYYY\"\n          />\n        </CCol>\n        <CCol sm={5} md={2}>\n          <Select\n            style={{ width: '90%' }}\n            className=\"members_activity_select custom-select-raised membr-rais-mem mem_selct\"\n            id=\"member-list\"\n            onChange={(value) => handleMember(value)}\n            options={\n              memberLoader\n                ? [\n                    {\n                      label: (\n                        <div style={{ textAlign: 'center' }}>\n                          {Array.from({ length: 5 }, (_, index) => (\n                            <Skeleton\n                              key={index}\n                              title={false}\n                              avatar={{\n                                size: '20',\n                              }} // Adjust the width and height here\n                              paragraph={{\n                                rows: 2,\n                                height: '10px',\n                                style: { height: '10px !important' },\n                              }}\n                            />\n                          ))}\n                        </div>\n                      ),\n                      value: 'loading',\n                      disabled: true,\n                    },\n                  ]\n                : memberOption\n            }\n            showSearch\n            variant={'borderless'}\n            placeholder=\"Choose Member\"\n            suffixIcon={\n              <img src={Downarrowimg} alt=\"Downarrowimg\" style={{ width: '10px', height: '6px' }} />\n            }\n            allowClear\n            filterOption={(input, option) => {\n              const userNameArray = option.label.props.children[1].props.children[0].props.children\n              const userName = userNameArray\n              const lowerCaseInput = input.toLowerCase()\n              const lowerCaseUserName = userName.toLowerCase()\n              return lowerCaseUserName.includes(lowerCaseInput)\n            }}\n            popupMatchSelectWidth={false}\n            popupClassName=\"custom-dropdown\"\n            getPopupContainer={(triggerNode) => triggerNode.parentNode}\n          />\n        </CCol>\n      </CRow>\n      <div className=\"table-container table_scroll mt-2\" style={{ border: 'none' }}>\n        <InfiniteScroll\n          dataLength={leaveTable.length}\n          next={handleScroll}\n          hasMore={hasMoreRef.current}\n          loader={\n            <div className=\"text-c text-center my-3 td-text\">\n              <CSpinner color=\"danger\" />\n            </div>\n          }\n          endMessage={\n            leaveTable.length !== 0 && (\n              <p style={{ textAlign: 'center' }}>\n                <b style={{ color: '#e40e2d', fontSize: '12px' }}>No more Data to load</b>\n              </p>\n            )\n          }\n        >\n          <CTable hover>\n            <CTableHead className=\"head-row\">\n              <CTableRow>\n                <CTableHeaderCell\n                  className=\"table-head-draft  text-c grid-cell-header text-center\"\n                  scope=\"col\"\n                  width=\"3%\"\n                >\n                  SI.No\n                </CTableHeaderCell>\n                <CTableHeaderCell\n                  className=\"table-head-draft  text-c grid-cell-header\"\n                  scope=\"col\"\n                  width=\"5%\"\n                >\n                  Activity Date\n                </CTableHeaderCell>\n                <CTableHeaderCell\n                  className=\"table-head-draft  text-c grid-cell-header\"\n                  scope=\"col\"\n                  width=\"10%\"\n                >\n                  Team member\n                </CTableHeaderCell>\n                <CTableHeaderCell\n                  className=\"table-head-draft  text-c grid-cell-header\"\n                  scope=\"col\"\n                  width=\"20%\"\n                >\n                  Member`s Remarks\n                </CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {leaveTable?.map((row, index) => (\n                <CTableRow key={row.id}>\n                  <CTableDataCell className=\"text-c text-center pd-text1 grid-cell\" width=\"3%\">\n                    {index + 1}\n                  </CTableDataCell>\n                  <CTableDataCell\n                    className=\"text-c pd-text1 grid-cell\"\n                    title={row.appliedDate}\n                    width=\"5%\"\n                  >\n                    {formatDate(row.appliedDate)}\n                  </CTableDataCell>\n                  <CTableDataCell\n                    className=\"text-c pd-text1 grid-cell\"\n                    title={toPascalCase(row.userName)}\n                    width=\"10%\"\n                  >\n                    {toPascalCase(row.userName)}\n                  </CTableDataCell>\n                  <CTableDataCell\n                    className=\"text-c pd-text1 grid-cell\"\n                    title={row.status}\n                    width=\"20%\"\n                  >\n                    {row.status}\n                  </CTableDataCell>\n                </CTableRow>\n              ))}\n            </CTableBody>\n          </CTable>\n          {content}\n        </InfiniteScroll>\n      </div>\n    </>\n  )\n}\n\nAppliedLeave.propTypes = {\n  formatDate: PropTypes.func,\n  memberLists: PropTypes.array,\n  memberLoader: PropTypes.bool,\n}\nexport default AppliedLeave\n","import React, { useState, useEffect } from 'react'\nimport { CCard, CCol, CRow, CNavItem, CTabContent, CTabPane, CNav, CNavLink } from '@coreui/react'\nimport { getHeaders, getDecodeData } from 'src/constant/Global'\nimport { ToastContainer } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport ApprovedActivity from './ApprovedActivity'\nimport RejectedActivity from './RejectedActivity'\nimport RaisedRequest from './RaisedRequest'\nimport AppliedLeave from './AppliedLeave'\nimport useAxios from 'src/constant/UseAxios'\n\nconst History = () => {\n  let api = useAxios()\n  const user = getDecodeData()\n  const [productList, setProductList] = useState([])\n  const [memberList, setMemberList] = useState([])\n  const [activeKey, setActiveKey] = useState(2)\n  const [memberLoader, setMemberLoader] = useState(true)\n  const [prodLoader, setProdLoader] = useState(true)\n\n  function getToday() {\n    const today = new Date()\n    const year = today.getFullYear()\n    const month = String(today.getMonth() + 1).padStart(2, '0')\n    const day = String(today.getDate()).padStart(2, '0')\n    return `${year}-${month}-${day}`\n  }\n\n  useEffect(() => {\n    getproductList()\n    getMemberList(user?.id)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  //member List\n  const getMemberList = async (id) => {\n    const url = `user/supervisor/${id}`\n    await api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        const member = response.data.data\n        setMemberList(member)\n        setMemberLoader(false)\n      })\n      .catch((error) => {})\n  }\n\n  const getproductList = async () => {\n    const url = `product/approvedlist`\n    await api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        const product = response.data.data\n        setProductList(product)\n        setProdLoader(false)\n      })\n      .catch((error) => {})\n  }\n\n  const formatDate = (dateString) => {\n    const date = new Date(dateString)\n    const options = { day: 'numeric', month: 'short', year: 'numeric' }\n    let formattedDate = date.toLocaleDateString('en-GB', options)\n    if (!formattedDate.includes(',')) {\n      formattedDate = formattedDate.replace(/(\\w{3}) (\\d{4})/, '$1, $2')\n    }\n    return formattedDate\n  }\n\n  return (\n    <>\n      <ToastContainer />\n      <CRow className=\"my-2\">\n        <CCol xs={12}>\n          <CCard className=\"mt-4 memberact_content\">\n            <div>\n              <CNav variant=\"pills\" role=\"tablist\">\n                <CNavItem role=\"presentation5\">\n                  <CNavLink\n                    active={activeKey === 2}\n                    component=\"button\"\n                    role=\"tab\"\n                    aria-controls=\"profile-tab-pane\"\n                    aria-selected={activeKey === 2}\n                    onClick={() => setActiveKey(2)}\n                  >\n                    Approved Activity\n                  </CNavLink>\n                </CNavItem>\n                <CNavItem role=\"presentation4\">\n                  <CNavLink\n                    active={activeKey === 3}\n                    component=\"button\"\n                    role=\"tab\"\n                    aria-controls=\"contact-tab-pane\"\n                    aria-selected={activeKey === 3}\n                    onClick={() => setActiveKey(3)}\n                  >\n                    Rejected Activity\n                  </CNavLink>\n                </CNavItem>\n                <CNavItem role=\"presentation2\">\n                  <CNavLink\n                    active={activeKey === 5}\n                    component=\"button\"\n                    role=\"tab\"\n                    aria-controls=\"contact-tab-pane\"\n                    aria-selected={activeKey === 5}\n                    onClick={() => setActiveKey(5)}\n                  >\n                    Raised Request\n                  </CNavLink>\n                </CNavItem>\n                <CNavItem role=\"presentation1\">\n                  <CNavLink\n                    active={activeKey === 6}\n                    component=\"button\"\n                    role=\"tab\"\n                    aria-controls=\"contact-tab-pane\"\n                    aria-selected={activeKey === 6}\n                    onClick={() => setActiveKey(6)}\n                  >\n                    Applied Leave\n                  </CNavLink>\n                </CNavItem>\n              </CNav>\n              <CTabContent>\n                <CTabPane\n                  role=\"tabpanel\"\n                  aria-labelledby=\"profile-tab-pane\"\n                  visible={activeKey === 2}\n                  className=\"pendingactivity-card tab_height\"\n                >\n                  <CRow>\n                    {activeKey === 2 && (\n                      <ApprovedActivity\n                        today={getToday()}\n                        formatDate={formatDate}\n                        productLists={productList}\n                        memberLists={memberList}\n                        memberLoader={memberLoader}\n                        prodLoader={prodLoader}\n                      />\n                    )}\n                  </CRow>\n                </CTabPane>\n                <CTabPane\n                  role=\"tabpanel\"\n                  aria-labelledby=\"contact-tab-pane\"\n                  visible={activeKey === 3}\n                  className=\"pendingactivity-card tab_height\"\n                >\n                  <CRow>\n                    {activeKey === 3 && (\n                      <RejectedActivity\n                        formatDate={formatDate}\n                        productLists={productList}\n                        memberLists={memberList}\n                        memberLoader={memberLoader}\n                        prodLoader={prodLoader}\n                      />\n                    )}\n                  </CRow>\n                </CTabPane>\n                <CTabPane\n                  role=\"tabpanel\"\n                  aria-labelledby=\"contact-tab-pane\"\n                  visible={activeKey === 5}\n                  className=\"pendingactivity-card tab_height\"\n                >\n                  <CRow>\n                    {activeKey === 5 && (\n                      <RaisedRequest\n                        formatDate={formatDate}\n                        memberLists={memberList}\n                        memberLoader={memberLoader}\n                      />\n                    )}\n                  </CRow>\n                </CTabPane>\n                <CTabPane\n                  role=\"tabpanel\"\n                  aria-labelledby=\"contact-tab-pane\"\n                  visible={activeKey === 6}\n                  className=\"pendingactivity-card tab_height\"\n                >\n                  <CRow>\n                    {activeKey === 6 && (\n                      <AppliedLeave\n                        formatDate={formatDate}\n                        memberLists={memberList}\n                        memberLoader={memberLoader}\n                      />\n                    )}\n                  </CRow>\n                </CTabPane>\n              </CTabContent>\n            </div>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default History\n"],"names":["_ref","memberLoader","formatDate","productLists","memberLists","prodLoader","api","useAxios","memberTable","setMemberTable","useState","productList","setProductList","memberList","setMemberList","commonLoader","setCommonLoader","selectRef","useRef","pageRef","productIdRef","memberIdRef","filterRef","hasMoreRef","abortController","setAbortController","AbortController","useEffect","current","getMemberActivityall","tableContainer","document","querySelector","addEventListener","handleScroll","removeEventListener","scrollTop","clientHeight","scrollHeight","async","newAbortController","abort","_newAbortController","data","get","getUrl","url","concat","headers","getHeaders","signal","prevUserData","uniqueSet","Set","map","user","id","newData","filter","has","length","error","options","product","value","label","name","memberOption","_jsxs","className","children","_jsx","src","profile_pic","ImageUrl","profileImage1","style","width","alt","marginLeft","title","toPascalCase","role","loaderContent","CSpinner","color","_Fragment","CRow","CCol","xs","sm","md","paddingLeft","Breadcrumb","separator","items","Link","to","cursor","Select","suffixIcon","Downarrowimg","height","variant","find","option","undefined","onChange","blur","handleProduct","showSearch","allowClear","ref","filterOption","input","toLowerCase","indexOf","textAlign","Array","from","_","index","Skeleton","paragraph","rows","disabled","placeholder","getPopupContainer","triggerNode","parentNode","handleMember","avatar","size","popupMatchSelectWidth","userName","props","lowerCaseInput","includes","popupClassName","border","InfiniteScroll","dataLength","next","hasMore","loader","endMessage","fontSize","CTable","hover","CTableHead","CTableRow","CTableHeaderCell","scope","CTableBody","row","CTableDataCell","activity_date","productName","assignedStatus","taskName","formatTimeDuration","hours","supervisorStatus","description","dateRef","statusRef","getMemberRequestall","rel","DatePicker","borderBottom","borderRadius","marginTop","handleDateChange","date","dateString","formattedDate","dayjs","format","member","handleStatus","status","requestDate","teamName","reason","remarks","leaveDateRef","leaveTable","setLeaveTable","memberRef","getAppliedLeave","content","last","newDate","selectedProductId","appliedDate","History","getDecodeData","activeKey","setActiveKey","setMemberLoader","setProdLoader","getproductList","getMemberList","then","response","catch","Date","toLocaleDateString","day","month","year","replace","ToastContainer","CCard","CNav","CNavItem","CNavLink","active","component","onClick","CTabContent","CTabPane","visible","ApprovedActivity","today","getFullYear","String","getMonth","padStart","getDate","getToday","RejectedActivity","RaisedRequest","AppliedLeave"],"sourceRoot":""}