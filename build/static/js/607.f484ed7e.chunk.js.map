{"version":3,"file":"static/js/607.f484ed7e.chunk.js","mappings":"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","sources":["views/svgImages/BackArrowSvg.js","views/svgImages/EditSvg.js","views/timesheet/Pending.js","views/timesheet/Draft.js","views/timesheet/RaisedRequest.js","views/modal/EditActivityModal.js","views/timesheet/SubmitActivity.js","views/timesheet/LeaveHistory.js","assets/images/calendar.svg","views/timesheet/SwipeDetails.js","views/timesheet/TimeSheet.js","../node_modules/antd/es/breadcrumb/BreadcrumbSeparator.js","../node_modules/antd/es/breadcrumb/useItemRender.js","../node_modules/antd/es/breadcrumb/BreadcrumbItem.js","../node_modules/antd/es/breadcrumb/style/index.js","../node_modules/antd/es/breadcrumb/useItems.js","../node_modules/antd/es/breadcrumb/Breadcrumb.js","../node_modules/antd/es/breadcrumb/index.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst BackArrowSvg = ({ width, height, fill, viewBox }) => (\n  <svg\n    width={width}\n    height={height}\n    viewBox={viewBox}\n    fill={fill}\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M16.5824 4.58202H3.41244L6.29244 1.70202C6.47942 1.51504 6.58447 1.26145 6.58447 0.997021C6.58447 0.732594 6.47942 0.478998 6.29244 0.292021C6.10547 0.105043 5.85187 0 5.58744 0C5.32302 0 5.06942 0.105043 4.88244 0.292021L0.292444 4.88202C0.19974 4.97453 0.126193 5.08442 0.0760114 5.2054C0.02583 5.32637 0 5.45605 0 5.58702C0 5.71799 0.02583 5.84767 0.0760114 5.96865C0.126193 6.08962 0.19974 6.19951 0.292444 6.29202L4.88244 10.882C4.97503 10.9746 5.08494 11.048 5.2059 11.0981C5.32687 11.1483 5.45651 11.174 5.58744 11.174C5.71837 11.174 5.84802 11.1483 5.96899 11.0981C6.08995 11.048 6.19986 10.9746 6.29244 10.882C6.38503 10.7894 6.45847 10.6795 6.50857 10.5586C6.55868 10.4376 6.58447 10.308 6.58447 10.177C6.58447 10.0461 6.55868 9.91644 6.50857 9.79548C6.45847 9.67451 6.38503 9.5646 6.29244 9.47202L3.41244 6.58202H16.5824C17.1324 6.58202 17.5824 6.13202 17.5824 5.58202C17.5824 5.03202 17.1324 4.58202 16.5824 4.58202Z\"\n      fill=\"#919EAB\"\n    />\n  </svg>\n)\n\nBackArrowSvg.propTypes = {\n  width: PropTypes.string,\n  height: PropTypes.string,\n  fill: PropTypes.string,\n  viewBox: PropTypes.string,\n}\n\nexport default BackArrowSvg\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst EditSvg = ({ width, height, fill, viewBox, color, clipH, clipW }) => (\n  <svg\n    width={width}\n    height={height}\n    viewBox={viewBox}\n    fill={fill}\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <g clipPath=\"url(#clip0_3212_26864)\">\n      <path\n        d=\"M0 17.4739C0.104004 17.0872 0.213135 16.7019 0.310913 16.3137C0.57312 15.2722 0.827637 14.2285 1.09351 13.1881C1.12097 13.0812 1.18506 12.9702 1.26306 12.8918C4.50146 9.64685 7.74353 6.40552 10.9852 3.16418C11.0178 3.13159 11.053 3.10083 11.072 3.08325C12.3519 4.36279 13.6271 5.63831 14.9172 6.9281C14.9004 6.94641 14.8605 6.99292 14.8169 7.03613C11.5913 10.261 8.36646 13.4862 5.13721 16.707C5.04346 16.8004 4.91089 16.8784 4.78308 16.911C3.38599 17.2677 1.98596 17.6138 0.587036 17.9635C0.554077 17.9719 0.522949 17.988 0.490723 18.0005H0.280151C0.186401 17.9067 0.0930176 17.8134 -0.000732422 17.7196C-0.000732422 17.6376 -0.000732422 17.5559 -0.000732422 17.4739H0Z\"\n        fill=\"#A5A1A1\"\n      />\n      <path\n        d=\"M0 17.7192C0.09375 17.813 0.187134 17.9064 0.280884 18.0001H0C0 17.9064 0 17.813 0 17.7192Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M16.0682 5.78585C14.7806 4.49825 13.5037 3.22201 12.2164 1.93477C12.5629 1.58834 12.9152 1.23202 13.2722 0.880087C13.4344 0.720419 13.5927 0.552694 13.7747 0.418295C14.4921 -0.111613 15.5486 -0.0731604 16.2081 0.527426C16.6571 0.936117 17.0889 1.36788 17.4965 1.81795C18.1018 2.48592 18.1274 3.50362 17.5884 4.22909C17.5188 4.32247 17.4408 4.41073 17.3588 4.49349C16.9274 4.92818 16.4934 5.36068 16.0682 5.78585Z\"\n        fill=\"#A5A1A1\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_3212_26864\">\n        <rect width={clipW} height={clipH} fill={color} />\n      </clipPath>\n    </defs>\n  </svg>\n)\nEditSvg.propTypes = {\n  width: PropTypes.string,\n  height: PropTypes.string,\n  fill: PropTypes.string,\n  viewBox: PropTypes.string,\n  color: PropTypes.string,\n  clipW: PropTypes.string,\n  clipH: PropTypes.string,\n}\nexport default EditSvg\n","import React, { useState, useEffect, useRef } from 'react'\nimport {\n  CButton,\n  CCol,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CModal,\n  CModalBody,\n  CModalFooter,\n} from '@coreui/react'\nimport { getDecodeData, getSubPath } from 'src/constant/Global'\nimport PropTypes from 'prop-types'\nimport eventEmitter from 'src/constant/EventEmitter'\nimport RaiseRequestModal from '../modal/RaiseRequestModal'\nimport Calendarimg from '../../assets/images/calendar-image.png'\nimport FileSvg from '../svgImages/FileSvg'\nimport { Breadcrumb, Checkbox, Space, Select, DatePicker, TimePicker, Skeleton, Modal } from 'antd'\nimport { CaretDownOutlined, PlusOutlined } from '@ant-design/icons'\nimport TextArea from 'antd/es/input/TextArea'\nimport DeleteSvg from '../svgImages/DeleteSvg'\nimport dayjs from 'dayjs'\nimport updateLocale from 'dayjs/plugin/updateLocale'\nimport { toast } from 'react-toastify'\nimport Downarrowimg from '../../assets/images/downarrow.png'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  createAttendanceSheet,\n  getExistsDates,\n  getYesterdayCount,\n  submitActivity,\n} from 'src/redux/timesheet/action'\nimport { Link } from 'react-router-dom'\n\ndayjs.extend(updateLocale)\ndayjs.updateLocale('en', {\n  weekStart: 1,\n})\n\nconst Pending = ({ productList, today, taskList, loader, loadingActiveTask }) => {\n  const dispatch = useDispatch()\n  const yesterdayCount = useSelector((state) => state.timesheet && state.timesheet.yesterdayCount)\n  const user = getDecodeData()\n  const joiningDate = user?.jod\n  const [attendance, setAttendance] = useState('')\n  const [raiseButton, setRaiseButton] = useState(false)\n  const [visibleView, setVisibleView] = useState(false)\n  const [disableContent, setDisableContent] = useState(false)\n  const [dateWise, setDateWise] = useState(dayjs())\n  const [raiseModal, setRaiseModal] = useState(false)\n  const [isSubmitButtonDisabled, setIsSubmitButtonDisabled] = useState(false)\n  const [isDraftButtonDisabled, setIsDraftButtonDisabled] = useState(false)\n  const [selectAll, setSelectAll] = useState(false)\n  const [headerLabel, setHeaderLabel] = useState('')\n  const selectRef = useRef(null)\n  const [loading, setLoading] = useState(true)\n  const monthRef = useRef(null)\n  const yearRef = useRef(null)\n\n  const handleDropdownVisibleChange = (visible) => {\n    if (!visible && selectRef.current) {\n      selectRef.current.blur()\n    }\n  }\n\n  const [rows, setRows] = useState([\n    {\n      activity_date: dateWise,\n      isChecked: false,\n      checkUser: '',\n      product: '',\n      task: '',\n      hours: '',\n      status: '',\n      description: '',\n    },\n  ])\n  const addRow = () => {\n    setRows([\n      ...rows,\n      {\n        activity_date: dateWise,\n        isChecked: false,\n        checkUser: '',\n        product: '',\n        task: '',\n        hours: '',\n        status: '',\n        description: '',\n      },\n    ])\n  }\n\n  const hasCheckedRow = rows.some((value) => value.isChecked)\n\n  const existingDates = useSelector((state) => state.timesheet.existingDates)\n\n  const closeModalView = () => {\n    setVisibleView(false)\n    setDisableContent(false)\n    setAttendance('present')\n  }\n\n  const handleConfirm = (date, status) => {\n    setDisableContent(true)\n    handleAttendanceSheet(date, status)\n  }\n\n  const handleAttendanceSheet = async (date, status) => {\n    dispatch(createAttendanceSheet(date, status))\n      .then((response) => {\n        const data = response.data.data\n        handleApiResponse(response.status, data, date)\n        setVisibleView(false)\n      })\n      .catch((error) => {})\n  }\n\n  const handleApiResponse = (status, data, date) => {\n    if (status === 208) {\n      handleStatus208(data)\n    } else if (status === 201) {\n      handleStatus201(data, date)\n    }\n  }\n\n  const handleStatus208 = (data) => {\n    toast.error('You applied for this date', { position: toast.POSITION.BOTTOM_RIGHT })\n    setDisableContent(data.status === 'leave')\n    setAttendance(data.status)\n  }\n\n  const handleStatus201 = (data, date) => {\n    setAttendance(data.status)\n    toast.success('Successfully applied leave', { position: toast.POSITION.BOTTOM_RIGHT })\n    dispatch(getYesterdayCount(date))\n    checkCondition(yesterdayCount, date)\n  }\n\n  const handleAttendance = (event) => {\n    const selectedValue = event\n    setAttendance(selectedValue)\n    if (selectedValue === 'leave') {\n      setVisibleView(true)\n    } else if (selectedValue === 'present') {\n      setDisableContent(false)\n      // handleAttendanceSheet(dateWise, 'present')\n    } else {\n      setVisibleView(false)\n    }\n  }\n\n  const handleDateChange = (event) => {\n    const selectedDate = event\n    if (selectedDate === today) {\n      setDisableContent(false)\n      setRaiseButton(false)\n    }\n    dispatch(getYesterdayCount(selectedDate))\n    checkCondition(yesterdayCount, selectedDate)\n    setDateWise(selectedDate)\n  }\n\n  const handleCheckboxChange = (index) => {\n    const newRows = [...rows]\n    const currentRow = newRows[index]\n\n    const allFieldsFilled = areAllFieldsFilled(currentRow)\n\n    currentRow.isChecked = allFieldsFilled ? !currentRow.isChecked : false\n    setRows(newRows)\n\n    let count = countCheckedItems(newRows)\n    if (count >= 1) {\n      if (count === rows.length && count === newRows.filter((row) => row.isChecked).length) {\n        // All checkboxes are checked, update Select All checkbox\n        setSelectAll(true)\n        setHeaderLabel(`${count} rows selected`)\n      } else {\n        setSelectAll(false)\n        setHeaderLabel(`${count} rows selected`)\n      }\n    } else {\n      setSelectAll(false)\n      setHeaderLabel('')\n    }\n  }\n\n  const areAllFieldsFilled = (data) => {\n    return (\n      data.product !== 0 &&\n      data.product !== '' &&\n      data.task.trim() !== '' &&\n      data.hours !== '' &&\n      // data.status !== '' &&\n      data.description.trim() !== ''\n    )\n  }\n\n  const handleInputChange = (index, fieldName, value) => {\n    const newRows = [...rows]\n    const currentRow = newRows[index]\n\n    if (fieldName === 'hours') {\n      currentRow.hours = value\n    } else {\n      currentRow[fieldName] = value\n    }\n    currentRow.isChecked = false\n    const updatedRows = newRows.map((row, idx) => ({\n      ...row,\n      isChecked: false, // Update isChecked conditionally\n    }))\n    setSelectAll(false)\n    setHeaderLabel('')\n    setDisableContent(false)\n    setRows(updatedRows)\n  }\n\n  const deleteRow = (index) => {\n    if (rows.length > 1) {\n      const newRows = [...rows]\n      newRows.splice(index, 1)\n      setRows(newRows)\n    } else {\n      toast.error('Deleting last row  Restricted', { position: toast.POSITION.BOTTOM_RIGHT })\n    }\n  }\n\n  const handleSubmit = async (e) => {\n    setIsSubmitButtonDisabled(true)\n    setIsDraftButtonDisabled(true)\n    const remainingRows = rows.filter((value) => !value.isChecked)\n\n    const formData = new FormData()\n    let i = 0\n\n    rows.forEach((value) => {\n      if (value.isChecked) {\n        formData.append(\n          `commonTimeSheetActivities[${i}].activity_date`,\n          dayjs(dateWise).format('YYYY-MM-DD'),\n        )\n        formData.append(`commonTimeSheetActivities[${i}].product`, value.product)\n        formData.append(`commonTimeSheetActivities[${i}].task`, value.task)\n        formData.append(\n          `commonTimeSheetActivities[${i}].hours`,\n          dayjs(value.hours.$d).format('HH:mm'),\n        )\n        // formData.append(`commonTimeSheetActivities[${i}].status`, value.status)\n        formData.append(`commonTimeSheetActivities[${i}].description`, value.description)\n        i++\n      }\n    })\n    formData.append(`status`, 'Created')\n    dispatch(submitActivity(formData))\n      .then((response) => {\n        toast.success(response.data.message, { position: toast.POSITION.BOTTOM_RIGHT })\n        setIsSubmitButtonDisabled(false)\n        setIsDraftButtonDisabled(false)\n        setHeaderLabel('')\n        setRows([])\n        setSelectAll(false)\n        if (remainingRows.length === 0) {\n          setRows([\n            {\n              activity_date: dateWise,\n              isChecked: false,\n              checkUser: '',\n              product: '',\n              task: '',\n              hours: '',\n              // status: 'Choose Status',\n              description: '',\n            },\n          ])\n        } else {\n          setRows(remainingRows)\n        }\n      })\n      .catch((error) => {\n        setIsSubmitButtonDisabled(false)\n        setIsDraftButtonDisabled(false)\n        setSelectAll(false)\n        const updatedRows = rows.map((row) => ({\n          ...row,\n          isChecked: false,\n        }))\n        setRows(updatedRows)\n        setHeaderLabel('')\n        const errors = error.response.data\n        if (errors) {\n          toast.error(errors.message, { position: toast.POSITION.BOTTOM_RIGHT })\n        } else {\n          toast.error(error.message, { position: toast.POSITION.BOTTOM_RIGHT })\n        }\n      })\n  }\n\n  const handleDraft = async () => {\n    setIsSubmitButtonDisabled(true)\n    setIsDraftButtonDisabled(true)\n    // Filter out rows with isChecked set to true\n    const remainingRows = rows.filter((value) => !value.isChecked)\n\n    const formData = new FormData()\n    let i = 0\n\n    rows.forEach((value) => {\n      if (value.isChecked) {\n        formData.append(\n          `commonTimeSheetActivities[${i}].activity_date`,\n          dayjs(dateWise).format('YYYY-MM-DD'),\n        )\n        formData.append(`commonTimeSheetActivities[${i}].product`, value.product)\n        formData.append(`commonTimeSheetActivities[${i}].task`, value.task)\n        formData.append(\n          `commonTimeSheetActivities[${i}].hours`,\n          `${dayjs(value.hours.$d).format('HH:mm')}`,\n        )\n        // formData.append(`commonTimeSheetActivities[${i}].status`, value.status)\n        formData.append(`commonTimeSheetActivities[${i}].description`, value.description)\n        i++\n      }\n    })\n    formData.append(`status`, 'Draft')\n    dispatch(submitActivity(formData))\n      .then((response) => {\n        toast.success(response.data.message, { position: toast.POSITION.BOTTOM_RIGHT })\n        setIsSubmitButtonDisabled(false)\n        setIsDraftButtonDisabled(false)\n        setHeaderLabel('')\n        setSelectAll(false)\n        if (remainingRows.length === 0) {\n          setRows([\n            {\n              activity_date: dateWise,\n              isChecked: false,\n              product: '',\n              task: '',\n              hours: '',\n              // status: '',\n              description: '',\n            },\n          ])\n        } else {\n          setRows(remainingRows)\n        }\n        eventEmitter.emit('callDraft')\n      })\n      .catch((error) => {\n        setIsSubmitButtonDisabled(false)\n        setIsDraftButtonDisabled(false)\n        setSelectAll(!selectAll)\n        const updatedRows = rows.map((row) => ({\n          ...row,\n          isChecked: !selectAll,\n        }))\n        setRows(updatedRows)\n        setHeaderLabel('')\n        toast.error(error.message, { position: toast.POSITION.BOTTOM_RIGHT })\n      })\n  }\n\n  //Product List\n  const options = productList.map((product) => ({\n    value: product.id,\n    label: product.name,\n    status: product.status,\n    color: product.status === 'InActive' ? 'orange' : 'green',\n  }))\n  const activeOptions = options.filter((item) => item.status === 'Active')\n  const inactiveOptions = options.filter((item) => item.status === 'InActive')\n\n  // Task Activity list\n  const taskOptions = taskList.map((task) => ({\n    value: task,\n    label: task,\n  }))\n\n  //\n\n  const handleSelectAllChange = () => {\n    setSelectAll(!selectAll)\n    const updatedRows = rows.map((row) => ({\n      ...row,\n      isChecked: !selectAll,\n    }))\n    setRows(updatedRows)\n    let count = countCheckedItems(updatedRows)\n    if (count >= 1) setHeaderLabel(`${count} rows selected`)\n    else setHeaderLabel('')\n  }\n  function countCheckedItems(data) {\n    let checkedCount = 0\n    for (let item of data) {\n      if (item.isChecked === true) {\n        checkedCount++\n      }\n    }\n    return checkedCount\n  }\n\n  const disabledTime = (current) => {\n    const hour = current.hour()\n\n    return {\n      disabledHours: () => {\n        const disabledHoursArray = []\n        for (let i = 0; i < 24; i++) {\n          if (i < 0 || i > 9) {\n            disabledHoursArray.push(i)\n          }\n        }\n        return disabledHoursArray\n      },\n      disabledMinutes: () => {\n        if (hour === 9) {\n          return [...Array(60).keys()].slice(1)\n        } else if (hour === 0) {\n          return [0]\n        } else {\n          return []\n        }\n      },\n    }\n  }\n\n  const handleRaiseCloseModal = () => {\n    setRaiseModal(false)\n    dispatch(getYesterdayCount(dateWise))\n    checkCondition(yesterdayCount, dateWise)\n  }\n  const warning = (id) => {\n    Modal.warning({\n      title: 'Delete Activity',\n      content: 'Are you sure to delete this activity ?',\n      onOk: () => deleteRow(id),\n      closable: true,\n      okCancel: true,\n      autoFocusButton: true,\n      centered: true,\n      okText: 'Yes',\n      cancelText: 'No',\n      okButtonProps: { style: { background: '#f54550', borderColor: '#f54550', color: 'white' } },\n    })\n  }\n\n  useEffect(() => {\n    if (joiningDate === undefined) {\n      window.localStorage.clear()\n      localStorage.removeItem('userData')\n      localStorage.removeItem('logout')\n      localStorage.removeItem('Pm_tool')\n      localStorage.removeItem('neram')\n      localStorage.clear()\n      window.location.href = getSubPath()\n    }\n    const currentMonthYear = dayjs(dateWise).format('YYYY-MM')\n    monthRef.current = dayjs(dateWise).format('M')\n    yearRef.current = dayjs(dateWise).format('YYYY')\n    dispatch(getExistsDates(currentMonthYear))\n    setLoading(false)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const renderDateCell = (current) => {\n    const month = parseInt(monthRef.current)\n    const year = parseInt(yearRef.current)\n    if (loading) {\n      return (\n        <div style={{ textAlign: 'center' }}>\n          {Array.from({ length: 1 }, (_, index) => (\n            <Skeleton\n              key={index}\n              title={false}\n              paragraph={{\n                rows: 1,\n                width: '100%',\n                height: '10px',\n                style: { height: '10px !important' },\n              }}\n            />\n          ))}\n        </div>\n      )\n    }\n    const existDate = existingDates\n    if (!existDate) {\n      return null // Or handle it according to your use case\n    }\n\n    const raisedDates = existDate.RaisedRequestList || []\n    const attendanceDates = existDate.AttendanceList || []\n    const submittedDates = existDate.SubmittedList || []\n    const PermissionDates = existDate.Permission || []\n\n    const isRaised = raisedDates.includes(current.format('YYYY-MM-DD'))\n    const isAttendance = attendanceDates.includes(current.format('YYYY-MM-DD'))\n    const isSubmitted = submittedDates.includes(current.format('YYYY-MM-DD'))\n    const isSelected = current.isSame(dateWise, 'day')\n    const currentDate = dayjs() // Current date\n    const isTodayOrAfter = current?.isAfter(currentDate, 'day')\n    const isJoiningDateOrBefore = current?.isBefore(joiningDate, 'day')\n    const isPermission = PermissionDates.includes(dayjs(current).format('YYYY-MM-DD'))\n\n    // Check if the current date is included in any of the arrays\n    const isDisabled =\n      isRaised || isAttendance || isSubmitted || isTodayOrAfter || isJoiningDateOrBefore\n\n    let fontWeights\n    if (isDisabled) {\n      fontWeights = 'normal'\n    } else if (isSelected || isPermission) {\n      fontWeights = 'bold'\n    } else {\n      fontWeights = 'normal'\n    }\n    let colorText\n    if (isDisabled) {\n      colorText = 'gray'\n    } else if (isSelected) {\n      colorText = 'white'\n    } else if (isPermission) {\n      colorText = 'black'\n    } else {\n      colorText = '#ffaa00'\n    }\n    const color = colorText\n    const fontWeight = fontWeights\n    const backgroundColor = isSelected ? '#e40e2d' : 'transparent'\n    const borderRadius = isSelected ? '50%' : '0%'\n    const minWidth = isSelected ? '24px' : 'auto'\n    const height = isSelected ? '24px' : 'auto'\n    const display = isSelected ? 'inline-block' : 'initial'\n    const lineHeight = isSelected ? '24px' : 'initial'\n    if (current.month() + 1 === month && current.year() === year) {\n      return (\n        <div\n          style={{\n            color,\n            fontWeight,\n            backgroundColor,\n            borderRadius,\n            minWidth,\n            height,\n            display,\n            lineHeight,\n          }}\n        >\n          {current.date()}\n        </div>\n      )\n    } else {\n      return <div>{current.date()}</div>\n    }\n  }\n\n  const disabledDate = (current) => {\n    const existDate = existingDates\n\n    if (!existDate) {\n      return false\n    }\n\n    const currentDate = dayjs()\n    const raisedDates = existDate.RaisedRequestList || []\n    const attendanceDates = existDate.AttendanceList || []\n    const submittedDates = existDate.SubmittedList || []\n\n    const isTodayOrAfter = current.isAfter(currentDate, 'day')\n    const isRaised = raisedDates.includes(current.format('YYYY-MM-DD'))\n    const isAttendance = attendanceDates.includes(current.format('YYYY-MM-DD'))\n    const isSubmitted = submittedDates.includes(current.format('YYYY-MM-DD'))\n    const isJoiningDateOrBefore = current?.isBefore(joiningDate, 'day')\n\n    const currentYear = current.year()\n    const currentMonth = current.month()\n\n    // Check if the user's joining date month is May\n    const joiningMonthIsMay = joiningDate && dayjs(joiningDate).month() === 4 // month is 0-indexed, so 4 is May\n\n    // Check if the date is in May of the current year\n    const isInMayOfCurrentYear = currentYear === currentDate.year() && currentMonth === 4\n\n    // If the joining month is May, allow all dates in May of the current year\n    if (joiningMonthIsMay && isInMayOfCurrentYear) {\n      return false\n    }\n\n    // Disable the date based on existing conditions\n    const isDisabled =\n      isRaised || isAttendance || isSubmitted || isTodayOrAfter || isJoiningDateOrBefore\n    return isDisabled\n  }\n\n  const handlePanelChange = async (value, mode) => {\n    if (mode === 'date') {\n      setLoading(true)\n\n      const currentMonthYear = dayjs(value).format('YYYY-MM')\n      monthRef.current = dayjs(value).format('M')\n      yearRef.current = dayjs(value).format('YYYY')\n\n      try {\n        await dispatch(getExistsDates(currentMonthYear))\n      } catch (error) {\n      } finally {\n        setTimeout(() => {\n          setLoading(false)\n        }, 1000)\n      }\n    }\n  }\n\n  useEffect(() => {\n    dispatch(getYesterdayCount(dateWise))\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch])\n\n  useEffect(() => {\n    if (yesterdayCount) {\n      checkCondition(yesterdayCount, dateWise)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [yesterdayCount])\n\n  const checkCondition = (resData, date) => {\n    const parsedDate = dayjs(date, 'DD MMM, YYYY')\n    const formattedDate = parsedDate.format('YYYY-MM-DD')\n    const { attendanceStatus, count, status } = resData\n\n    if (attendanceStatus === 'leave') {\n      setAttendance(attendanceStatus)\n    } else {\n      setAttendance('present')\n    }\n\n    if (formattedDate !== today && joiningDate !== today) {\n      if (attendanceStatus === 'leave') {\n        setDisableContent(true)\n        setRaiseButton(false)\n      } else if (status === 'Permission') {\n        setDisableContent(false)\n        setRaiseButton(false)\n      } else if (\n        count === 0 &&\n        status === 'Pending' &&\n        (attendanceStatus === 'present' || attendanceStatus === 'yet')\n      ) {\n        setDisableContent(true)\n        setRaiseButton(false)\n      } else if (\n        count === 0 &&\n        status === '' &&\n        (attendanceStatus === 'present' || attendanceStatus === 'yet')\n      ) {\n        setDisableContent(true)\n        setRaiseButton(true)\n      } else if (\n        count === 0 &&\n        status === 'Approved' &&\n        (attendanceStatus === 'present' || attendanceStatus === 'yet')\n      ) {\n        setDisableContent(false)\n        setRaiseButton(false)\n      } else if (status === 'Rejected') {\n        setDisableContent(true)\n        setRaiseButton(false)\n      } else if (count !== 0) {\n        setDisableContent(true)\n        setRaiseButton(false)\n        toast.error('Already Submitted the Timesheet', { position: toast.POSITION.BOTTOM_RIGHT })\n      }\n    } else {\n      setDisableContent(false)\n      setRaiseButton(false)\n    }\n  }\n\n  return (\n    <>\n      <CRow>\n        <CCol xs={12} sm={12} md={5}>\n          <h6 className=\"timesheet-heading mt-3\" style={{ marginLeft: '30px' }}>\n            Pending - Time Sheet\n          </h6>\n          <Breadcrumb\n            style={{ marginLeft: '30px' }}\n            className=\"bread-tab\"\n            separator={<span className=\"breadcrumb-separator\">|</span>}\n            items={[\n              {\n                title: (\n                  <Link\n                    rel=\"Dashboard\"\n                    to={'/dashboard'}\n                    className=\"bread-items text-decoration-none text-secondary \"\n                  >\n                    Dashboard\n                  </Link>\n                ),\n              },\n              {\n                title: (\n                  <span className=\"text-secondary second-subheading\" style={{ cursor: 'default' }}>\n                    Pending Activity\n                  </span>\n                ),\n              },\n            ]}\n          />\n        </CCol>\n        <CCol\n          xs={9}\n          sm={12}\n          md={6}\n          className=\"draft-sumbit-button \"\n          span={raiseButton ? 6 : undefined}\n        >\n          <CRow>\n            <CCol className=\"draft_rightside_pend\">\n              <div>\n                <DatePicker\n                  variant={'borderless'}\n                  id=\"date\"\n                  type=\"date\"\n                  name=\"fieldName\"\n                  placeholder=\"Choose Date\"\n                  className=\"form-input-draft input-lg date-picker  time-pend-cal date-header\"\n                  onChange={(date, dateString) => handleDateChange(date)}\n                  suffixIcon={\n                    <img\n                      src={Calendarimg}\n                      alt=\"Calendarimg\"\n                      style={{ width: '13px', height: '13px' }}\n                    />\n                  }\n                  format=\"DD MMM, YYYY\"\n                  defaultValue={dayjs()}\n                  max={today}\n                  allowClear={false}\n                  min={joiningDate}\n                  onPanelChange={handlePanelChange}\n                  cellRender={renderDateCell}\n                  disabledDate={disabledDate}\n                />\n              </div>\n              <Select\n                className={`form-input-draft input-lg activity-date times-pen-select ${\n                  attendance === 'present' ? 'present-color' : 'leave-color'\n                }`}\n                suffixIcon={\n                  <img\n                    src={Downarrowimg}\n                    alt={Downarrowimg}\n                    style={{ width: '12px', height: '7px' }}\n                  />\n                }\n                value={attendance}\n                onChange={(value) => handleAttendance(value)}\n              >\n                <Select.Option value=\"present\" style={{ color: '#00ab55', fontWeight: '600' }}>\n                  Present\n                </Select.Option>\n                <Select.Option value=\"leave\" style={{ color: '#e40e2d', fontWeight: '600' }}>\n                  Leave\n                </Select.Option>\n              </Select>\n            </CCol>\n            {raiseButton && (\n              <CCol xs={4} md={4} className=\"draft-sumbit-button \">\n                <CButton\n                  className=\"raise-button raise-timesheet raise_button_content\"\n                  type=\"button\"\n                  style={{ color: 'white' }}\n                  onClick={() => setRaiseModal(true)}\n                >\n                  Raise Request\n                </CButton>\n              </CCol>\n            )}\n          </CRow>\n        </CCol>\n      </CRow>\n      <div className=\"table-container-draft table_scroll-draft\">\n        <CTable>\n          <CTableHead className=\"draft-head-row-ts\">\n            {!headerLabel ? (\n              <CTableRow className={`my-3 ${disableContent ? 'disabled-content' : ''}`}>\n                <CTableHeaderCell\n                  className=\"table-head-draft text-c text-center\"\n                  scope=\"col\"\n                  width=\"4%\"\n                >\n                  <Checkbox\n                    className=\"checkbox_design\"\n                    id=\"selectAllCheckbox\"\n                    checked={selectAll}\n                    onChange={handleSelectAllChange}\n                    disabled={disableContent || rows.some((row) => !areAllFieldsFilled(row))}\n                  />\n                </CTableHeaderCell>\n                <CTableHeaderCell\n                  className=\"table-head-draft text-c text-center\"\n                  scope=\"col\"\n                  width=\"4%\"\n                >\n                  SI.No\n                </CTableHeaderCell>\n                <CTableHeaderCell className=\"table-head-draft text-c \" width=\"15%\" scope=\"col\">\n                  Product\n                </CTableHeaderCell>\n                <CTableHeaderCell className=\"table-head-draft text-c \" scope=\"col\" width=\"20%\">\n                  Task\n                </CTableHeaderCell>\n                <CTableHeaderCell className=\"table-head-draft text-c\" scope=\"col\" width=\"10%\">\n                  No.of.Hours\n                </CTableHeaderCell>\n                {/* <CTableHeaderCell className=\"table-head-draft text-c\" scope=\"col\" width=\"10%\">\n                  Status\n                </CTableHeaderCell> */}\n                <CTableHeaderCell className=\"table-head-draft text-c \" scope=\"col\" width=\"30%\">\n                  Remarks\n                </CTableHeaderCell>\n                <CTableHeaderCell\n                  className=\"table-head-draft text-c text-center\"\n                  scope=\"col\"\n                  width=\"9%\"\n                >\n                  <button\n                    style={{ background: 'transparent' }}\n                    type=\"button\"\n                    className=\"text-decoration-none  border-0  addrow_button \"\n                    onClick={addRow}\n                  >\n                    {' '}\n                    <PlusOutlined\n                      className=\"plus_icon \"\n                      style={{ width: '10px', margin: '2px' }}\n                    />{' '}\n                    <span className=\"row_lable\"> Row</span>\n                  </button>\n                </CTableHeaderCell>\n              </CTableRow>\n            ) : (\n              <CTableRow>\n                <CTableHeaderCell\n                  className=\"table-head-draft table-head-selected  text-c text-center pad_bt\"\n                  scope=\"col\"\n                  width=\"4.3%\"\n                >\n                  <Checkbox\n                    id=\"selectAllCheckbox\"\n                    className=\"checkbox_design\"\n                    checked={selectAll}\n                    onChange={handleSelectAllChange}\n                    disabled={disableContent || rows.some((row) => !areAllFieldsFilled(row))}\n                  />\n                </CTableHeaderCell>\n                <CTableHeaderCell\n                  className=\"table-head-selected  text-c align_con_cen\"\n                  colSpan=\"4\" // Span across all other columns\n                >\n                  <span style={{ color: '#f50505' }}>{headerLabel}</span>\n                </CTableHeaderCell>\n                <CTableHeaderCell\n                  className=\"table-head-selected \"\n                  colSpan=\"5\"\n                  style={{ textAlign: 'right' }}\n                  width=\"39.1%\"\n                >\n                  <div\n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-end' }}\n                  >\n                    <button\n                      className=\" btn border-0  text-secondary save_draft_button\"\n                      disabled={!hasCheckedRow || isDraftButtonDisabled || disableContent}\n                      onClick={() => handleDraft()}\n                      type=\"button\"\n                    >\n                      <FileSvg width=\"17\" height=\"17\" viewBox=\"0 0 18 18\" fill=\"none\" />\n                      <span style={{ marginLeft: '5px', fontSize: '13px', fontWeight: '700' }}>\n                        Save as Draft\n                      </span>\n                    </button>\n                    <div\n                      title={\n                        !hasCheckedRow || isSubmitButtonDisabled\n                          ? 'Please check a row before submitting'\n                          : ''\n                      }\n                    >\n                      <CButton\n                        className=\"submit-button submit-timesheet \"\n                        // disabled={!hasCheckedRow || isSubmitButtonDisabled}\n                        type=\"button\"\n                        onClick={() => handleSubmit()}\n                        disabled={!hasCheckedRow || isSubmitButtonDisabled || disableContent}\n                      >\n                        {/* <CheckOutlined style={{ width: '16px' }} />*/} Submit\n                      </CButton>\n                    </div>\n                  </div>\n                </CTableHeaderCell>\n              </CTableRow>\n            )}\n          </CTableHead>\n          <CTableBody className={`my-3 ${disableContent ? 'disabled-content' : ''}`}>\n            {rows?.map((data, index) => (\n              <CTableRow key={index} className=\"my-3\">\n                <CTableDataCell\n                  className=\"activity-text-radio activity-text-index text-center pad-bottom\"\n                  style={{\n                    cursor: !areAllFieldsFilled(data) ? 'not-allowed' : 'default',\n                    ...(areAllFieldsFilled(data)\n                      ? {} // No hover effect for enabled checkboxes\n                      : { ':hover': { cursor: 'not-allowed' } }), // Hover effect for disabled checkboxes\n                  }}\n                  width=\"4%\"\n                >\n                  <Checkbox\n                    className=\"checkbox_design\"\n                    id={`flexCheckDefault-${index}`}\n                    checked={data.isChecked}\n                    onChange={() => handleCheckboxChange(index)}\n                    disabled={!areAllFieldsFilled(data)}\n                  />\n                </CTableDataCell>\n                <CTableDataCell className=\"activity-text-index pad-bottom text-center  \" width=\"4%\">\n                  {index + 1}\n                </CTableDataCell>\n                <CTableDataCell className=\"activity-text-draft pad-bottom\" width=\"15%\">\n                  <Select\n                    showSearch\n                    placeholder=\"Choose Product\"\n                    variant={'borderless'}\n                    ref={selectRef}\n                    onDropdownVisibleChange={handleDropdownVisibleChange}\n                    className=\"product-select\"\n                    loading\n                    suffixIcon={\n                      <img\n                        src={Downarrowimg}\n                        alt={Downarrowimg}\n                        style={{ width: '12px', height: '7px' }}\n                      />\n                    }\n                    dropdownStyle={{\n                      border: '#ffff', // Setting border: 'none' here to remove border from the dropdown menu\n                    }}\n                    style={{ width: '100%', fontWeight: '600' }}\n                    onChange={(selectedOption) =>\n                      handleInputChange(index, 'product', selectedOption)\n                    }\n                    options={\n                      loader\n                        ? [\n                            // If loading, show loader inside options\n                            {\n                              label: (\n                                <div style={{ textAlign: 'center' }}>\n                                  {/* <Spin /> Loading Options... */}\n                                  <Skeleton\n                                    title={false}\n                                    paragraph={{\n                                      rows: 5, // Adjust the number of rows here\n                                      width: '100%', // Optional: Adjust the width of each line\n                                    }}\n                                  />\n                                </div>\n                              ),\n                              value: 'loading',\n                              disabled: true, // Make loader option disabled\n                            },\n                          ]\n                        : [\n                            {\n                              label: 'Assigned Projects',\n                              options: activeOptions,\n                            },\n                            {\n                              label: 'Other Projects',\n                              options: inactiveOptions,\n                            },\n                          ].map((group) => ({\n                            label: group.label,\n                            options: group.options.map((option) => ({\n                              label: (\n                                <Space>\n                                  <span\n                                    style={{\n                                      backgroundColor: option.color,\n                                      width: 6,\n                                      height: 6,\n                                      borderRadius: '50%',\n                                      display: 'inline-block',\n                                      border: 'none',\n                                    }}\n                                  />\n                                  <span style={{ fontWeight: '600' }}>{option.label}</span>{' '}\n                                  {/* Removed color styling here */}\n                                </Space>\n                              ),\n                              value: option.value,\n                            })),\n                          }))\n                    }\n                    value={data.product || null}\n                    filterOption={(input, option) => {\n                      const label = option.label?.props?.children?.[1]?.props?.children\n                      return label && label.toLowerCase().includes(input.toLowerCase())\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell className=\"activity-text-task pad-bottom\" width=\"20%\">\n                  <Select\n                    showSearch\n                    suffixIcon={\n                      <img\n                        src={Downarrowimg}\n                        alt={Downarrowimg}\n                        style={{ width: '12px', height: '7px' }}\n                      />\n                    }\n                    ref={selectRef}\n                    onDropdownVisibleChange={handleDropdownVisibleChange}\n                    className=\"draft-form-custom-selects choose_task_box\"\n                    id={`task-${index}`}\n                    value={taskOptions.find((task) => task.value === data.task) || null} // Set value to null when no option is selected\n                    onChange={(selectedOption) => handleInputChange(index, 'task', selectedOption)}\n                    menuportaltarget={document.body}\n                    styles={{\n                      control: (base) => ({\n                        ...base,\n                        fontSize: '14px',\n\n                        minWidth: '80px',\n                        minHeight: '46px',\n                        maxHeight: index <= 1 ? '120px' : '80px', // Set maxHeight based on the condition\n                        zIndex: '1', // Adjust the zIndex as needed\n                        border: 'none',\n                        boxShadow: 'none',\n                        fontWeight: 600,\n                      }),\n                      menu: (base) => ({\n                        ...base,\n                        fontSize: '14px',\n                        maxHeight: index <= 1 ? '120px' : '80px',\n                        overflowY: 'auto',\n                        '&::-webkit-scrollbar': {\n                          display: 'none',\n                        },\n                        fontWeight: 600,\n                      }),\n                      getOptionStyle: (provided, state) => ({\n                        ...provided,\n                        height: '40px',\n                        display: 'flex',\n                        alignItems: 'center',\n                        padding: '8px 12px',\n                      }),\n                    }}\n                    options={\n                      loadingActiveTask\n                        ? [\n                            {\n                              label: (\n                                <div style={{ textAlign: 'center' }}>\n                                  <Skeleton\n                                    title={false}\n                                    paragraph={{\n                                      rows: 5, // Adjust the number of rows here\n                                      width: '100%', // Optional: Adjust the width of each line\n                                    }}\n                                  />\n                                </div>\n                              ),\n                              value: 'loading',\n                              disabled: true,\n                            },\n                          ]\n                        : taskOptions\n                    }\n                    placeholder=\"Choose Task\"\n                  />\n                </CTableDataCell>\n                <CTableDataCell\n                  className=\"activity-text activity-text-time pad-bottom \"\n                  width=\"10%\"\n                >\n                  <TimePicker\n                    className=\"date_picker_box\"\n                    variant={'borderless'}\n                    placeholder=\"HH:mm\"\n                    format=\"HH:mm\"\n                    value={data.hours || null}\n                    style={{ border: 'none', fontWeight: 600, fontSize: '13px' }}\n                    suffixIcon={<CaretDownOutlined className=\"caredown-icon\" />}\n                    disabledTime={disabledTime}\n                    hideDisabledOptions\n                    picker=\"time\"\n                    allowClear={false}\n                    showNow={false}\n                    onChange={(value) => handleInputChange(index, 'hours', value)}\n                  />\n                </CTableDataCell>\n                <CTableDataCell\n                  className=\"activity-text activity-text-description pad-bottom\"\n                  width=\"30%\"\n                >\n                  <TextArea\n                    id={`des-${index}`}\n                    variant={'borderless'}\n                    value={data.description}\n                    className=\"description_textarea\"\n                    onChange={(e) => handleInputChange(index, 'description', e.target.value)}\n                    style={{ color: 'black', fontWeight: '600' }} // Adjust '100px' to your desired minimum height\n                    placeholder=\"Enter Remarks...\"\n                    autoSize={{\n                      minRows: 0,\n                      maxRows: 1,\n                    }}\n                  />\n                </CTableDataCell>\n                <CTableDataCell className=\"text-c activity-text-status pad-bottom\" width=\"9%\">\n                  <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                    {/* <Popconfirm\n                        title=\"Delete confirm Modal\"\n                        description=\"Are you sure to delete this activity ?\"\n                        open={open === index}\n                        onConfirm={() => deleteRow(index)}\n                        okButtonProps={{\n                          style: { background: '#f54550', borderColor: '#f54550', color: 'white' },\n                          loading: confirmLoading,\n                        }}\n                        placement=\"left\"\n                        okText=\"Yes\"\n                        cancelText=\"No\"\n                        onCancel={handleDeleteCancel}\n                      > */}\n                    <button\n                      type=\"button\"\n                      className=\"action-view cross-button\"\n                      // onClick={() => showPopconfirm(index)}\n                      onClick={() => warning(index)}\n                      disabled={rows[index].isChecked}\n                      style={{ padding: '4px 8px' }}\n                    >\n                      <DeleteSvg width=\"16\" height=\"15\" viewBox=\"0 0 18 18\" fill=\"#A5A1A1\" />\n                    </button>\n                    {/* </Popconfirm> */}\n                  </div>\n                </CTableDataCell>\n              </CTableRow>\n            ))}\n          </CTableBody>\n        </CTable>\n      </div>\n\n      {visibleView && (\n        <CModal\n          size=\"sm\"\n          backdrop=\"static\"\n          alignment=\"center\"\n          visible={visibleView}\n          onClose={closeModalView}\n          className={`right ${visibleView ? 'modal-visible' : 'modal-hidden'}`}\n        >\n          <CModalBody style={{ fontSize: '15px' }}>\n            Are you sure you want to leave on <b>{dateWise.format('DD MMM YYYY')}</b> ?{' '}\n          </CModalBody>\n          <CModalFooter style={{ border: 'none' }}>\n            <CButton className=\"edit-cancel-btn\" onClick={closeModalView}>\n              Cancel\n            </CButton>\n            <CButton\n              color=\"primary  button-clr\"\n              style={{ fontSize: '15px', fontWeight: '500' }}\n              onClick={() => handleConfirm(dateWise, 'leave')}\n            >\n              Confirm\n            </CButton>\n          </CModalFooter>\n        </CModal>\n      )}\n      {raiseModal && (\n        <RaiseRequestModal\n          isOpen={raiseModal}\n          closeModal={() => handleRaiseCloseModal()}\n          dateWise={dayjs(dateWise, 'DD MMM, YYYY').format('YYYY-MM-DD')}\n        />\n      )}\n    </>\n  )\n}\n\nPending.propTypes = {\n  productList: PropTypes.array,\n  today: PropTypes.string,\n  taskList: PropTypes.array,\n  loadingActiveTask: PropTypes.bool,\n  loader: PropTypes.bool,\n}\nexport default Pending\n","import React, { useState, useEffect, useRef } from 'react'\nimport {\n  Select,\n  Space,\n  Input,\n  Checkbox,\n  TimePicker,\n  Breadcrumb,\n  Modal,\n  Skeleton,\n  DatePicker,\n} from 'antd'\nimport dayjs from 'dayjs'\nimport {\n  CCol,\n  CRow,\n  CSpinner,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport { getHeaders } from 'src/constant/Global'\nimport { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport PropTypes from 'prop-types'\nimport eventEmitter from 'src/constant/EventEmitter'\nimport { CaretDownOutlined } from '@ant-design/icons'\nimport Downarrowimg from '../../assets/images/downarrow.png'\nimport DeleteSvg from '../svgImages/DeleteSvg'\nimport useAxios from 'src/constant/UseAxios'\nimport { ExclamationCircleFilled } from '@ant-design/icons'\nimport Calendarimg from '../../assets/images/calendar-image.png'\nimport { Link } from 'react-router-dom'\nconst { confirm } = Modal\nconst Draft = ({ productList, today, taskList, loader, loadingActiveTask }) => {\n  let api = useAxios()\n  const [rows, setRows] = useState([])\n  const [isSubmitButtonDisabled, setSubmitButtonDisabled] = useState(false)\n  const [selectAll, setSelectAll] = useState(false)\n  const [headerLabel, setHeaderLabel] = useState('')\n  const [taskOptions, setTaskOptions] = useState([])\n  const [commonLoader, setCommonLoader] = useState(true)\n  const hasCheckedRow = rows.some((value) => value.isChecked)\n  const { TextArea } = Input\n  const selectRef = useRef(null)\n  const handleDropdownVisibleChange = (visible) => {\n    if (!visible && selectRef.current) {\n      selectRef.current.blur()\n    }\n  }\n  // Task Activity list\n  // const taskOptions = taskList.map((task) => ({\n  //   value: task,\n  //   label: task,\n  // }))\n\n  useEffect(() => {\n    getdraftList()\n    setTaskOptions(taskList.map((task) => ({ value: task, label: task })))\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    eventEmitter.on('callDraft', callDraft)\n    return () => {\n      eventEmitter.off('callDraft', callDraft)\n    }\n  })\n\n  const handleSelectAllChange = () => {\n    setSelectAll(!selectAll)\n    const updatedRows = rows.map((row) => ({\n      ...row,\n      isChecked: !selectAll,\n      isDelete: !selectAll,\n    }))\n    setRows(updatedRows)\n    let count = countCheckedItems(updatedRows)\n    if (count >= 1) setHeaderLabel(`${count} rows selected`)\n    else setHeaderLabel('')\n  }\n  function countCheckedItems(data) {\n    let checkedCount = 0\n    for (let item of data) {\n      if (item.isChecked === true) {\n        checkedCount++\n      }\n    }\n    return checkedCount\n  }\n  const callDraft = () => {\n    getdraftList()\n  }\n\n  const handleCheckboxChange = (index) => {\n    const newRows = [...rows]\n    const currentRow = newRows[index]\n\n    const allFieldsFilled = areAllFieldsFilled(currentRow)\n\n    currentRow.isChecked = allFieldsFilled ? !currentRow.isChecked : false\n    setRows(newRows)\n\n    let count = countCheckedItems(newRows)\n    if (count >= 1) {\n      if (count === rows.length && count === newRows.filter((row) => row.isChecked).length) {\n        // All checkboxes are checked, update Select All checkbox\n        setSelectAll(true)\n        setHeaderLabel(`${count} rows selected`)\n      } else {\n        setSelectAll(false)\n        setHeaderLabel(`${count} rows selected`)\n      }\n    } else {\n      setSelectAll(false)\n      setHeaderLabel('')\n    }\n  }\n\n  const areAllFieldsFilled = (data) => {\n    return (\n      data.product !== 0 &&\n      data.product !== '' &&\n      data.task.trim() !== '' &&\n      data.hours !== '' &&\n      // data.status !== '' &&\n      data.description.trim() !== ''\n    )\n  }\n\n  const handleInputChange = (index, fieldName, value) => {\n    const newRows = [...rows]\n    const currentRow = newRows[index]\n\n    if (fieldName === 'estimate_hours') {\n      currentRow.hours = value\n    } else {\n      currentRow[fieldName] = value\n    }\n    currentRow.isChecked = false\n    const updatedRows = newRows.map((row, idx) => ({\n      ...row,\n      isChecked: false, // Update isChecked conditionally\n    }))\n    setSelectAll(false)\n    setHeaderLabel('')\n    setRows(updatedRows)\n  }\n\n  const getdraftList = async () => {\n    setCommonLoader(true)\n    const url = `common/timesheet/list/status/` + true\n    await api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        const Data = response.data.data\n\n        const newTaskOptions = new Set(taskOptions.map((option) => option.value)) // Create a Set of existing task values\n\n        Data.forEach((data) => {\n          if (!newTaskOptions.has(data.task)) {\n            newTaskOptions.add(data.task) // Add new task to the Set if it's not already present\n          }\n        })\n\n        taskList.forEach((task) => {\n          if (!newTaskOptions.has(task)) {\n            newTaskOptions.add(task) // Add task from taskList if it's not already present\n          }\n        })\n\n        // Convert the Set back to an array of objects\n        const uniqueTaskOptions = Array.from(newTaskOptions).map((task) => ({\n          value: task,\n          label: task,\n        }))\n\n        const draftdatalist = Data.map((data, index) => {\n          const timeString = data.hours\n          return {\n            id: data.id,\n            activity_date: data.activity_date,\n            product: data.product.id,\n            task: data.task,\n            hours: timeString,\n            // status: data.status,\n            description: data.description,\n            isDelete: false,\n          }\n        })\n        setCommonLoader(false)\n        setRows(draftdatalist)\n        setTaskOptions(uniqueTaskOptions)\n      })\n      .catch((error) => {})\n  }\n\n  const getdraftListDate = async (date) => {\n    setCommonLoader(true)\n    const url = `common/timesheet/list/status/date/` + true + `/${date}`\n    await api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        const Data = response.data.data\n\n        const newTaskOptions = new Set(taskOptions.map((option) => option.value)) // Create a Set of existing task values\n\n        Data.forEach((data) => {\n          if (!newTaskOptions.has(data.task)) {\n            newTaskOptions.add(data.task) // Add new task to the Set if it's not already present\n          }\n        })\n\n        taskList.forEach((task) => {\n          if (!newTaskOptions.has(task)) {\n            newTaskOptions.add(task) // Add task from taskList if it's not already present\n          }\n        })\n\n        // Convert the Set back to an array of objects\n        const uniqueTaskOptions = Array.from(newTaskOptions).map((task) => ({\n          value: task,\n          label: task,\n        }))\n\n        const draftdatalist = Data.map((data, index) => {\n          const timeString = data.hours\n          return {\n            id: data.id,\n            activity_date: data.activity_date,\n            product: data.product.id,\n            task: data.task,\n            hours: timeString,\n            // status: data.status,\n            description: data.description,\n            isDelete: false,\n          }\n        })\n        setCommonLoader(false)\n        setRows(draftdatalist)\n        setTaskOptions(uniqueTaskOptions)\n      })\n      .catch((error) => {})\n  }\n\n  const handleUpdate = async () => {\n    const url = `common/timesheet/activity/update`\n    const checkedRows = rows.filter((value) => value.isChecked)\n    const records = checkedRows.map((activity) => ({\n      activity_date: dayjs(activity.activity_date).format('YYYY-MM-DD'),\n      product: parseInt(activity.product, 10),\n      task: activity.task,\n      hours:\n        typeof activity.hours === 'string'\n          ? activity.hours\n          : dayjs(activity.hours.$d).format('HH:mm'),\n      // status: activity.status,\n      description: activity.description,\n      id: activity.id,\n    }))\n    setSubmitButtonDisabled(true)\n    try {\n      const response = await api.put(url, records, {\n        headers: getHeaders('json'),\n      })\n\n      // Assuming getdraftList and toast.success are functions available in your code\n      getdraftList()\n      setHeaderLabel('')\n      setSelectAll(false)\n      toast.success(response.data.message, {\n        position: toast.POSITION.BOTTOM_RIGHT,\n        autoClose: 3000,\n      })\n      setSubmitButtonDisabled(false)\n    } catch (error) {\n      setSubmitButtonDisabled(false)\n      setSelectAll(false)\n      const updatedRows = rows.map((row) => ({\n        ...row,\n        isChecked: false,\n      }))\n      setRows(updatedRows)\n      setHeaderLabel('')\n      const errors = error.response.data\n      if (error.response.status === 400) {\n        getdraftList()\n      }\n      if (errors) {\n        toast.error(errors.message, { position: toast.POSITION.BOTTOM_RIGHT })\n      } else {\n        toast.error(error.message, { position: toast.POSITION.BOTTOM_RIGHT })\n      }\n    }\n  }\n\n  //delete draft\n  // const handleDelete = () => {\n  //   setOkAllLoading(true)\n  //   const rowsToDelete = rows.filter((row) => row.isChecked).map((row) => row.id)\n  //   deleteFunction(rowsToDelete)\n  // }\n\n  // //single delete\n  // const handleDeleteSingle = async (index, id) => {\n  //   setOkLoading(true)\n  //   const newRows = [...rows]\n  //   newRows.splice(index, 1)\n  //   setRows(newRows)\n  //   deleteFunction(id)\n  // }\n\n  const deleteFunction = async (value, index, selectedIds) => {\n    let id\n    if (value === 'singleDelete') {\n      id = selectedIds\n    } else {\n      const rowsToDelete = rows.filter((row) => row.isChecked).map((row) => row.id)\n      id = rowsToDelete\n    }\n    const url = `common/timesheet/activity/draft/${id}`\n    setSubmitButtonDisabled(true)\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        api\n          .delete(url, {\n            headers: getHeaders('json'),\n          })\n          .then((response) => {\n            getdraftList()\n            setHeaderLabel('')\n            setSelectAll(false)\n            const updatedRows = rows.map((row) => ({\n              ...row,\n              isChecked: false,\n            }))\n            setRows(updatedRows)\n            setSubmitButtonDisabled(false)\n            resolve(response)\n          })\n          .catch((error) => {\n            // Handle error\n            reject(error)\n          })\n      }, 1000) // Timeout after 1 second\n    })\n  }\n  //search\n  const options = productList.map((product) => ({\n    value: product.id,\n    label: product.name,\n    status: product.status,\n    color: product.status === 'InActive' ? 'orange' : 'green',\n  }))\n  const activeOptions = options.filter((item) => item.status === 'Active')\n  const inactiveOptions = options.filter((item) => item.status === 'InActive')\n\n  const disabledTime = (current) => {\n    const hour = current.hour()\n\n    return {\n      disabledHours: () => {\n        const disabledHoursArray = []\n        for (let i = 0; i < 24; i++) {\n          if (i < 0 || i > 9) {\n            disabledHoursArray.push(i)\n          }\n        }\n        return disabledHoursArray\n      },\n      disabledMinutes: () => {\n        if (hour === 9) {\n          return [...Array(60).keys()].slice(1)\n        } else if (hour === 0) {\n          return [0]\n        } else {\n          return []\n        }\n      },\n    }\n  }\n  const handleDeleteCancelAll = () => {\n    setHeaderLabel('')\n    setSelectAll(false)\n    const updatedRows = rows.map((row) => ({\n      ...row,\n      isChecked: false,\n    }))\n    setRows(updatedRows)\n  }\n\n  const warning = (value, index, id) => {\n    confirm({\n      title: 'Delete Draft Activity',\n      content: 'Are you sure to delete this Activity ?',\n      icon: <ExclamationCircleFilled />,\n      okText: 'Yes',\n      okType: 'danger',\n      cancelButtonProps: {\n        style: { borderColor: '#f54550', color: 'black' },\n      },\n      closable: true,\n      okButtonProps: {\n        style: { borderColor: '#f54550', color: 'white', backgroundColor: '#f54550' },\n      },\n      async onOk() {\n        try {\n          await deleteFunction(value, index, id)\n          toast.success('Draft Activity Deleted Successfully', {\n            position: toast.POSITION.BOTTOM_RIGHT,\n            autoClose: 3000,\n          })\n        } catch (error) {\n          toast.error('Deletion failed', {\n            position: toast.POSITION.BOTTOM_RIGHT,\n            autoClose: 3000,\n          })\n        }\n      },\n      onCancel() {\n        return value === 'multiDelete' ? handleDeleteCancelAll() : null\n      },\n      cancelText: 'No',\n    })\n  }\n\n  const handleDateChange = (date, dateString) => {\n    const selectedDate = dayjs(date).format('YYYY-MM-DD')\n    if (date !== null) {\n      setCommonLoader(true)\n      setRows([])\n      getdraftListDate(selectedDate)\n    } else {\n      getdraftList()\n    }\n  }\n\n  return (\n    <>\n      <CRow>\n        <CCol className=\"col-md-8\"></CCol>\n        <CCol className=\"col-md-4\"></CCol>\n      </CRow>\n      <CRow>\n        <CCol xs={9}>\n          <h6 className=\"timesheet-heading mt-3\" style={{ marginLeft: '30px' }}>\n            Draft - Time Sheet\n          </h6>\n          <Breadcrumb\n            style={{ marginLeft: '30px' }}\n            className=\"bread-tab\"\n            separator={<span className=\"breadcrumb-separator\">|</span>}\n            items={[\n              {\n                title: (\n                  <Link\n                    rel=\"Dashboard\"\n                    to={'/dashboard'}\n                    className=\"bread-items text-decoration-none text-secondary \"\n                  >\n                    Dashboard\n                  </Link>\n                ),\n              },\n              {\n                title: (\n                  <span className=\"text-secondary second-subheading\" style={{ cursor: 'default' }}>\n                    Draft Activity\n                  </span>\n                ),\n              },\n            ]}\n          />\n        </CCol>\n        <CCol className=\"draft-sumbit-button \">\n          <CRow>\n            <CCol className=\"draft-rightside-header draft-rs-datepicker submit_datepicker\">\n              <DatePicker\n                variant={'borderless'}\n                id=\"date\"\n                type=\"date\"\n                name=\"fieldName\"\n                placeholder=\"Choose Date\"\n                className=\"form-input-draft input-lg date-picker activity-date \"\n                onChange={handleDateChange}\n                format=\"DD MMM, YYYY\"\n                suffixIcon={\n                  <img\n                    src={Calendarimg}\n                    alt=\"Calendarimg\"\n                    style={{ width: '13px', height: '13px' }}\n                  />\n                }\n                max={dayjs()}\n                active\n                allowClear={true}\n              />\n            </CCol>\n          </CRow>\n        </CCol>\n      </CRow>\n      <div className=\"table-container-draft table_scroll-draft  \">\n        <CTable hover>\n          <CTableHead className=\"draft-head-row-ts\">\n            {!headerLabel ? (\n              <CTableRow>\n                <CTableHeaderCell\n                  className=\"table-head-draft text-c text-center\"\n                  scope=\"col\"\n                  width=\"4%\"\n                >\n                  <Checkbox\n                    className=\"checkbox_design\"\n                    id=\"selectAllCheckbox\"\n                    checked={selectAll}\n                    onChange={handleSelectAllChange}\n                    disabled={rows.some((row) => !areAllFieldsFilled(row))}\n                  />\n                </CTableHeaderCell>\n                <CTableHeaderCell\n                  className=\"table-head-draft text-c text-center\"\n                  scope=\"col\"\n                  width=\"4%\"\n                >\n                  SI.No\n                </CTableHeaderCell>\n                <CTableHeaderCell className=\"table-head-draft text-c \" width=\"10%\" scope=\"col\">\n                  Activity Date\n                </CTableHeaderCell>\n                <CTableHeaderCell className=\"table-head-draft text-c \" width=\"15%\" scope=\"col\">\n                  Product\n                </CTableHeaderCell>\n                <CTableHeaderCell className=\"table-head-draft text-c \" scope=\"col  \" width=\"20%\">\n                  Task\n                </CTableHeaderCell>\n                <CTableHeaderCell className=\"table-head-draft text-c \" scope=\"col\" width=\"10%\">\n                  No.of.Hours\n                </CTableHeaderCell>\n                {/* <CTableHeaderCell className=\"table-head-draft text-c \" scope=\"col\" width=\"10%\">\n                  Status\n                </CTableHeaderCell> */}\n                <CTableHeaderCell className=\"table-head-draft text-c \" scope=\"col\" width=\"30%\">\n                  Remarks\n                </CTableHeaderCell>\n                <CTableHeaderCell\n                  className=\"table-head-draft text-c text-center \"\n                  scope=\"col\"\n                  width=\"6%\"\n                >\n                  Action\n                </CTableHeaderCell>\n              </CTableRow>\n            ) : (\n              <CTableRow>\n                <CTableHeaderCell\n                  className=\"table-head-selected text-center  text-c pad_bt \"\n                  width=\"4.3%\"\n                  // style={{ backgroundColor: '#fff8f9' }}\n                >\n                  <Checkbox\n                    id=\"flexCheckDefault\"\n                    className=\"checkbox_design\"\n                    checked={selectAll}\n                    onChange={handleSelectAllChange}\n                    disabled={rows.some((row) => !areAllFieldsFilled(row))}\n                  />\n                </CTableHeaderCell>\n                <CTableHeaderCell\n                  className=\"table-head-selected  text-c align_con_cen\"\n                  colSpan=\"5\" // Span across all other columns\n                >\n                  <span style={{ color: '#f50505' }}>{headerLabel}</span>\n                </CTableHeaderCell>\n                <CTableHeaderCell\n                  className=\"table-head-selected \"\n                  style={{ textAlign: 'right' }}\n                  width=\"30%\"\n                >\n                  <div\n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-end' }}\n                  >\n                    <button\n                      className=\"btn\"\n                      style={{\n                        fontSize: '13px',\n                        color: 'white',\n                        backgroundColor: '#ee0f1e',\n                        height: '36px',\n                        width: '100px',\n                        // marginRight: '10px',\n                      }}\n                      disabled={!hasCheckedRow || isSubmitButtonDisabled}\n                      onClick={() => handleUpdate('update')}\n                    >\n                      Submit\n                    </button>\n                  </div>\n                </CTableHeaderCell>\n                <CTableHeaderCell\n                  className=\"table-head-selected \"\n                  style={{ textAlign: 'right' }}\n                  width=\"6%\"\n                >\n                  <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                    <div style={{ width: '10%', display: 'flex', justifyContent: 'center' }}>\n                      <button\n                        type=\"button\"\n                        className=\"action-view cross-button\"\n                        onClick={() => warning('multiDelete', 0, 0)}\n                        style={{ padding: '4px 8px' }}\n                      >\n                        <DeleteSvg width=\"16\" height=\"15\" viewBox=\"0 0 18 18\" fill=\"#e40e2d\" />\n                      </button>\n                    </div>\n                  </div>\n                </CTableHeaderCell>\n              </CTableRow>\n            )}\n          </CTableHead>\n          <CTableBody>\n            {rows &&\n              rows.map((data, index) => (\n                <CTableRow key={index} className=\"my-3\">\n                  <CTableDataCell\n                    className=\"activity-text-radio activity-text-index text-center pad-bottom\"\n                    style={{\n                      cursor: !areAllFieldsFilled(data) ? 'not-allowed' : 'default',\n                      ...(areAllFieldsFilled(data)\n                        ? {} // No hover effect for enabled checkboxes\n                        : { ':hover': { cursor: 'not-allowed' } }), // Hover effect for disabled checkboxes\n                    }}\n                    width=\"4%\"\n                  >\n                    <Checkbox\n                      className=\"checkbox_design\"\n                      id={`flexCheckDefault-${index}`}\n                      checked={data.isChecked}\n                      onChange={() => handleCheckboxChange(index)}\n                      disabled={!areAllFieldsFilled(data)}\n                    />\n                  </CTableDataCell>\n                  <CTableDataCell className=\"activity-text-index pad-bottom text-center\" width=\"4%\">\n                    {index + 1}\n                  </CTableDataCell>\n                  <CTableDataCell className=\"activity-text-draft-date pad-bottom\" width=\"10%\">\n                    <DatePicker\n                      variant={'borderless'}\n                      id=\"date\"\n                      type=\"date\"\n                      name=\"fieldName\"\n                      placeholder=\"Choose Date\"\n                      // className=\"form-input-draft input-lg date-picker activity-date \"\n                      className=\"activity-date-draft input-lg pt-1\"\n                      format=\"DD MMM, YYYY\"\n                      onChange={(date, dateString) =>\n                        handleInputChange(index, 'activity_date', date)\n                      }\n                      suffixIcon={\n                        <img\n                          src={Calendarimg}\n                          alt=\"Calendarimg\"\n                          style={{ width: '13px', height: '13px' }}\n                        />\n                      }\n                      style={{ fontWeight: '700' }}\n                      defaultValue={dayjs(data.activity_date)}\n                      max={dayjs()}\n                      active\n                      allowClear={false}\n                    />\n                  </CTableDataCell>\n                  <CTableDataCell className=\"activity-text-draft pad-bottom\" width=\"15%\">\n                    <Select\n                      showSearch\n                      placeholder=\"Choose Product\"\n                      variant={'borderless'}\n                      ref={selectRef}\n                      onDropdownVisibleChange={handleDropdownVisibleChange}\n                      className=\"product-select\"\n                      suffixIcon={\n                        <img\n                          src={Downarrowimg}\n                          alt={Downarrowimg}\n                          style={{ width: '12px', height: '7px' }}\n                        />\n                      }\n                      dropdownStyle={{\n                        border: '#ffff', // Setting border: 'none' here to remove border from the dropdown menu\n                      }}\n                      style={{ width: '100%' }}\n                      onChange={(selectedOption) =>\n                        handleInputChange(index, 'product', selectedOption)\n                      }\n                      options={\n                        loader\n                          ? [\n                              // If loading, show loader inside options\n                              {\n                                label: (\n                                  <div style={{ textAlign: 'center' }}>\n                                    {/* <Spin /> Loading Options... */}\n                                    <Skeleton\n                                      title={false}\n                                      paragraph={{\n                                        rows: 5, // Adjust the number of rows here\n                                        width: '100%', // Optional: Adjust the width of each line\n                                      }}\n                                    />\n                                  </div>\n                                ),\n                                value: 'loading',\n                                disabled: true, // Make loader option disabled\n                              },\n                            ]\n                          : [\n                              {\n                                label: 'Assigned Projects',\n                                options: activeOptions,\n                              },\n                              {\n                                label: 'Other Projects',\n                                options: inactiveOptions,\n                              },\n                            ].map((group) => ({\n                              label: group.label,\n                              options: group.options.map((option) => ({\n                                label: (\n                                  <Space>\n                                    <span\n                                      style={{\n                                        backgroundColor: option.color,\n                                        width: 6,\n                                        height: 6,\n                                        borderRadius: '50%',\n                                        display: 'inline-block',\n                                        border: 'none',\n                                      }}\n                                    />\n                                    <span style={{ fontWeight: '600' }}>{option.label}</span>{' '}\n                                    {/* Removed color styling here */}\n                                  </Space>\n                                ),\n                                value: option.value,\n                              })),\n                            }))\n                      }\n                      value={data.product || null}\n                      filterOption={(input, option) => {\n                        const label = option.label?.props?.children?.[1]?.props?.children\n                        return label && label.toLowerCase().includes(input.toLowerCase())\n                      }}\n                    />\n                  </CTableDataCell>\n\n                  <CTableDataCell className=\"activity-text-task pad-bottom\" width=\"15%\">\n                    <Select\n                      variant={false}\n                      ref={selectRef}\n                      onDropdownVisibleChange={handleDropdownVisibleChange}\n                      suffixIcon={<CaretDownOutlined className=\"caredown-icon\" />}\n                      className=\"draft-form-custom-selects choose_task_box\"\n                      id={`task-${index}`}\n                      value={taskOptions.find((task) => task.value === data.task) || ''}\n                      onChange={(selectedOption) =>\n                        handleInputChange(index, 'task', selectedOption)\n                      }\n                      menuportaltarget={document.body}\n                      styles={{\n                        control: (base) => ({\n                          ...base,\n                          fontSize: '14px',\n                          minWidth: '80px',\n                          minHeight: '46px',\n                          maxHeight: index <= 1 ? '120px' : '80px', // Set maxHeight based on the condition\n                          zIndex: '1', // Adjust the zIndex as needed\n                          border: 'none',\n                          boxShadow: 'none',\n                        }),\n                        menu: (base) => ({\n                          ...base,\n                          fontSize: '14px',\n                          maxHeight: index <= 1 ? '120px' : '80px', // Set maxHeight based on the condition\n                          overflowY: 'auto', // Enable vertical scroll if options exceed maxHeight\n                          '&::-webkit-scrollbar': {\n                            display: 'none', // Hide WebKit scrollbar\n                          },\n                        }),\n                        getOptionStyle: (provided, state) => ({\n                          ...provided,\n                          height: '40px', // Set your fixed height for options\n                          display: 'flex',\n                          alignItems: 'center', // Vertically center the content\n                          padding: '8px 12px', // Adjust padding as needed\n                        }),\n                      }}\n                      options={\n                        loadingActiveTask\n                          ? [\n                              {\n                                label: (\n                                  <div style={{ textAlign: 'center' }}>\n                                    <Skeleton\n                                      title={false}\n                                      paragraph={{\n                                        rows: 5, // Adjust the number of rows here\n                                        width: '100%', // Optional: Adjust the width of each line\n                                      }}\n                                    />\n                                  </div>\n                                ),\n                                value: 'loading',\n                                disabled: true,\n                              },\n                            ]\n                          : taskOptions\n                      }\n                      placeholder=\"Choose Task\"\n                    />\n                  </CTableDataCell>\n                  <CTableDataCell\n                    className=\"activity-text activity-text-time pad-bottom \"\n                    width=\"10%\"\n                  >\n                    {/* {data.hours.estimateHours} */}\n                    <TimePicker\n                      variant={'borderless'}\n                      className=\"date_picker_box\"\n                      placeholder=\"\"\n                      format=\"HH:mm\"\n                      suffixIcon={<CaretDownOutlined className=\"caredown-icon\" />}\n                      defaultValue={dayjs(data.hours, 'HH:mm')}\n                      showNow={false}\n                      disabledTime={disabledTime}\n                      hideDisabledOptions\n                      allowClear={false}\n                      style={{ border: 'none' }}\n                      onChange={(value) => handleInputChange(index, 'estimate_hours', value)}\n                    />\n                  </CTableDataCell>\n                  {/* <CTableDataCell\n                    className=\"activity-text activity-text-status  status-select pad-bottom\"\n                    width=\"10%\"\n                  >\n                    <Radio.Group\n                      defaultValue={data.status}\n                      buttonStyle=\"solid\"\n                      className=\"status_button\"\n                      style={{ margin: '-8px' }}\n                    >\n                      <Radio.Button\n                        value=\"Pending\"\n                        className=\"pending-button\"\n                        checked={true}\n                        onChange={(e) => handleInputChange(index, 'status', e.target.value)}\n                      >\n                        Pending\n                      </Radio.Button>\n                      <Radio.Button\n                        value=\"Completed\"\n                        className=\"completed-button\"\n                        onChange={(e) => handleInputChange(index, 'status', e.target.value)}\n                      >\n                        Completed\n                      </Radio.Button>\n                    </Radio.Group>\n                  </CTableDataCell> */}\n                  <CTableDataCell\n                    className=\"activity-text activity-text-description pad-bottom\"\n                    width=\"30%\"\n                  >\n                    <TextArea\n                      id={`des-${index}`}\n                      variant={'borderless'}\n                      className=\"draft_description\"\n                      value={data.description}\n                      onChange={(e) => handleInputChange(index, 'description', e.target.value)}\n                      style={{ color: 'black', fontWeight: '600' }} // Adjust '100px' to your desired minimum height\n                      placeholder=\"Enter Descriptions...\"\n                      autoSize={{\n                        minRows: 0,\n                        maxRows: 1,\n                      }}\n                    />\n                  </CTableDataCell>\n                  <CTableDataCell\n                    className=\"text-c  text-center activity-text-status pad-bottom\"\n                    width=\"9%\"\n                  >\n                    <div\n                      style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}\n                    >\n                      <button\n                        type=\"button\"\n                        className=\"action-view cross-button\"\n                        onClick={() => {\n                          warning('singleDelete', index, data.id)\n                        }}\n                        disabled={rows[index].isChecked}\n                        style={{ padding: '4px 8px' }}\n                      >\n                        <DeleteSvg width=\"16\" height=\"15\" viewBox=\"0 0 18 18\" fill=\"#A5A1A1\" />\n                      </button>\n                    </div>\n                  </CTableDataCell>\n                </CTableRow>\n              ))}\n          </CTableBody>\n        </CTable>\n        {(rows === null && !commonLoader) || (rows.length === 0 && !commonLoader) ? (\n          <div className=\"text-c text-center my-3 td-text\">No Data Found</div>\n        ) : commonLoader ? (\n          <div className=\"text-c text-center my-3 td-text\">\n            <CSpinner color=\"danger\" />\n          </div>\n        ) : (\n          <div></div>\n        )}\n      </div>\n      <CRow className=\"my-3\">\n        <CCol sm={10}></CCol>\n        <CCol sm={2}>\n          {/* <CButton className=\"submit-button float-end d-flex \"> */}\n          {/* <svg\n              width=\"16\"\n              height=\"13\"\n              viewBox=\"0 0 18 14\"\n              className='check-icon'\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M4.80379 12.5791L4.80343 12.5788L0.685906 8.46278C0.438031 8.21483 0.438031 7.81289 0.685906 7.56494C0.933849 7.3172 1.33566 7.31722 1.58358 7.565C1.5836 7.56501 1.58362 7.56503 1.58363 7.56505L5.45834 11.4398L5.81189 11.7933L6.16545 11.4398L16.4164 1.18884C16.4164 1.18882 16.4164 1.1888 16.4164 1.18878C16.6643 0.940998 17.0662 0.940981 17.3141 1.18872C17.5619 1.43665 17.562 1.83852 17.3142 2.08648C17.3141 2.08651 17.3141 2.08654 17.3141 2.08656L6.82032 12.5788L6.82 12.5791C6.55286 12.8467 6.19023 12.997 5.8121 12.9969H5.81168C5.43356 12.997 5.07093 12.8467 4.80379 12.5791Z\"\n                fill=\"white\"\n                stroke=\"white\"\n              />\n            </svg> Submit */}\n          {/* Submit\n          </CButton> */}\n\n          {/* <CButton\n            className=\"danger-button float-end d-flex \"\n            disabled={!hasCheckedRow || isDeleteButtonDisabled}\n            type=\"button\"\n            onClick={handleDelete}\n          >\n            Delete\n          </CButton> */}\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nDraft.propTypes = {\n  productList: PropTypes.array,\n  today: PropTypes.string,\n  taskList: PropTypes.array,\n  loadingActiveTask: PropTypes.bool,\n  loader: PropTypes.bool,\n}\nexport default Draft\n","import React, { useState, useEffect, useRef, useCallback } from 'react'\nimport { Select, DatePicker, Breadcrumb, Table } from 'antd'\nimport { CCol, CRow, CSpinner } from '@coreui/react'\nimport { getHeaders } from 'src/constant/Global'\nimport PropTypes from 'prop-types'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport useAxios from 'src/constant/UseAxios'\nimport Calendarimg from '../../assets/images/calendar-image.png'\nimport dayjs from 'dayjs'\nimport Downarrowimg from '../../assets/images/downarrow.png'\nimport { Link } from 'react-router-dom'\nimport debounce from 'lodash.debounce'\n\nconst RaisedRequest = ({ formatDate }) => {\n  let api = useAxios()\n  const [memberTable, setMemberTable] = useState([])\n  const [commonLoader, setCommonLoader] = useState(true)\n  const dateRef = useRef(null)\n  const pageRef = useRef(0)\n  const filterRef = useRef(false)\n  const hasMoreRef = useRef(true)\n  const statusRef = useRef(null)\n  const [abortController, setAbortController] = useState(new AbortController())\n  const tableBodyRef = useRef(null)\n  const [isNorMore, setIsNorMore] = useState(false)\n\n  useEffect(() => {\n    hasMoreRef.current = true\n    getMemberRequestall()\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const handleDateChange = (date, dateString) => {\n    pageRef.current = 0\n    hasMoreRef.current = true\n    filterRef.current = true\n    setMemberTable([])\n    setCommonLoader(true)\n    if (date === '' && statusRef.current === null) {\n      dateRef.current = null\n      filterRef.current = false\n    } else if (date === '' && statusRef.current !== null) {\n      dateRef.current = null\n      filterRef.current = true\n    } else if (statusRef.current !== null || date !== '') {\n      filterRef.current = true\n      const parsedDate = dayjs(date, 'DD MMM, YYYY')\n      const formattedDate = parsedDate.format('YYYY-MM-DD')\n      dateRef.current = formattedDate\n    }\n    getMemberRequestall()\n  }\n\n  const getMemberRequestall = async () => {\n    let newAbortController\n    if (pageRef.current === 0) {\n      setCommonLoader(true)\n      setMemberTable([])\n      abortController.abort()\n      newAbortController = new AbortController()\n      setAbortController(newAbortController)\n    }\n    let url\n    if (filterRef.current === false) {\n      url = `activity/raisedRequest/byuser?page=${pageRef.current}&size=10&filter=${filterRef.current}`\n    } else if (\n      filterRef.current === true &&\n      statusRef.current === null &&\n      dateRef.current !== null\n    ) {\n      url = `activity/raisedRequest/byuser?page=${pageRef.current}&size=10&date=${dateRef.current}&filter=${filterRef.current}`\n    } else if (\n      filterRef.current === true &&\n      statusRef.current !== null &&\n      dateRef.current !== null\n    ) {\n      url = `activity/raisedRequest/byuser?page=${pageRef.current}&size=10&date=${dateRef.current}&filter=${filterRef.current}&status=${statusRef.current}`\n    } else {\n      url = `activity/raisedRequest/byuser?page=${pageRef.current}&size=10&filter=${filterRef.current}&status=${statusRef.current}`\n    }\n\n    try {\n      const response = await api.get(url, {\n        headers: getHeaders('json'),\n        signal: newAbortController?.signal,\n      })\n      const data = response.data.data\n      if (pageRef.current === 0) {\n        setMemberTable(data)\n      } else {\n        setMemberTable((prevUserData) => {\n          const uniqueSet = new Set(prevUserData.map((user) => user.id))\n          const newData = data.filter((user) => !uniqueSet.has(user.id))\n          return [...prevUserData, ...newData]\n        })\n      }\n      if (data.length < 10) {\n        hasMoreRef.current = false\n      } else {\n        hasMoreRef.current = true\n      }\n      pageRef.current = pageRef.current + 1\n      setCommonLoader(false)\n    } catch (error) {}\n  }\n\n  const handleStatusFilter = (status) => {\n    pageRef.current = 0\n    hasMoreRef.current = true\n    filterRef.current = true\n    setMemberTable([])\n    setCommonLoader(true)\n    if (status === undefined && dateRef.current === null) {\n      statusRef.current = null\n      filterRef.current = false\n    } else if (dateRef.current !== null && status !== undefined) {\n      filterRef.current = true\n      statusRef.current = status\n    } else if (dateRef.current !== null && status === undefined) {\n      filterRef.current = true\n      statusRef.current = null\n    } else {\n      filterRef.current = true\n      statusRef.current = status\n    }\n    getMemberRequestall()\n  }\n\n  const truncateString = (str, num) => {\n    if (str.length <= num) {\n      return str\n    }\n    return str.slice(0, num) + '...'\n  }\n\n  const columns = [\n    {\n      title: 'SI.No',\n      dataIndex: 'index',\n      key: 'index',\n      width: '4%',\n      align: 'center',\n      render: (text, record, index) => {\n        if (record.key === 'noMoreData') {\n          return {\n            children: null,\n            props: {\n              colSpan: 0, // Adjust this number based on the total number of columns to span\n            },\n          }\n        }\n        return index + 1\n      },\n    },\n    {\n      title: 'Request Date',\n      dataIndex: 'requestDate',\n      key: 'requestDate',\n      width: '7%',\n      render: (text, record, index) => {\n        if (record.key === 'noMoreData') {\n          return {\n            children: null,\n            props: {\n              colSpan: 0, // Adjust this number based on the total number of columns to span\n            },\n          }\n        }\n        return formatDate(text)\n      },\n    },\n    {\n      title: 'Team member',\n      dataIndex: 'teamName',\n      key: 'teamName',\n      width: '10%',\n      render: (text, record, index) => {\n        if (record.key === 'noMoreData') {\n          return {\n            children: null,\n            props: {\n              colSpan: 0, // Adjust this number based on the total number of columns to span\n            },\n          }\n        }\n        return <div title={text}> {truncateString(text, 15)}</div>\n      },\n    },\n    {\n      title: 'Reason',\n      dataIndex: 'reason',\n      key: 'reason',\n      width: '25%',\n      render: (text, record, index) => {\n        if (record.key === 'noMoreData') {\n          setIsNorMore(true)\n          return {\n            children: (\n              <div style={{ textAlign: 'center' }}>\n                <b style={{ color: '#e40e2d', fontSize: '12px' }}>No more Data to load</b>\n              </div>\n            ),\n            props: {\n              colSpan: 6, // Adjust this number based on the total number of columns to span\n            },\n          }\n        }\n        return text\n      },\n    },\n    {\n      title: 'Approver Status',\n      dataIndex: 'status',\n      key: 'status',\n      width: '8%',\n      render: (text, row) => {\n        if (row.key === 'noMoreData') {\n          return {\n            children: null,\n            props: {\n              colSpan: 0, // Adjust this number based on the total number of columns to span\n            },\n          }\n        }\n        let className = ''\n        if (text === 'Approved') {\n          className = 'font-green'\n        } else if (text === 'Reject' || text === 'Rejected') {\n          className = 'font-red'\n        } else if (text === 'Pending') {\n          className = 'font-warning'\n        } else if (text === 'Resubmit') {\n          className = 'font-info'\n        }\n        return (\n          <div className={` ${className}`}>\n            <span style={{ fontSize: '16px' }}>&#8226;</span>{' '}\n            {text === 'Reject' ? 'Rejected' : text}\n          </div>\n        )\n      },\n    },\n    {\n      title: 'Approver Remarks',\n      dataIndex: 'remarks',\n      key: 'remarks',\n      width: '25%',\n      render: (text, record, index) => {\n        if (record.key === 'noMoreData') {\n          return {\n            children: null,\n            props: {\n              colSpan: 0, // Adjust this number based on the total number of columns to span\n            },\n          }\n        }\n        return text ? text : '---'\n      },\n    },\n  ]\n\n  const displayData = [\n    ...memberTable.map((row, index) => ({\n      key: row.id,\n      id: row.id,\n      index: index + 1,\n      requestDate: row.requestDate,\n      teamName: row.teamName,\n      reason: row.reason,\n      status: row.status,\n      remarks: row.remarks,\n    })),\n  ]\n\n  if (!hasMoreRef.current && displayData.length !== 0 && displayData.length > 10) {\n    displayData.push({\n      key: 'noMoreData',\n      index: '',\n      reason: 'No more Data to load',\n      requestDate: '',\n      teamName: '',\n      status: '',\n      remarks: '',\n    })\n  }\n\n  const fetchMoreData = () => {\n    if (hasMoreRef.current) {\n      getMemberRequestall()\n    }\n  }\n\n  const handleScroll = useCallback(\n    debounce(() => {\n      if (!tableBodyRef.current) return\n\n      const { scrollTop, scrollHeight, clientHeight } = tableBodyRef.current\n      if (scrollTop + clientHeight >= scrollHeight - 10) {\n        if (hasMoreRef.current && !commonLoader) {\n          setCommonLoader(true)\n          fetchMoreData()\n        }\n      }\n    }, 100),\n    [hasMoreRef.current, commonLoader],\n  )\n\n  useEffect(() => {\n    const tableBody = document.querySelector('.design_table .ant-table-body')\n    if (tableBody) {\n      tableBodyRef.current = tableBody\n      tableBody.addEventListener('scroll', handleScroll)\n    }\n\n    return () => {\n      if (tableBody) {\n        tableBody.removeEventListener('scroll', handleScroll)\n      }\n    }\n  }, [handleScroll])\n\n  return (\n    <>\n      <CRow>\n        <CCol xs={12} sm={6} md={8}>\n          <h6 className=\"timesheet-heading mt-3\" style={{ marginLeft: '30px' }}>\n            Raised Request - Time Sheet\n          </h6>\n          <Breadcrumb\n            style={{ marginLeft: '30px' }}\n            className=\"bread-tab\"\n            separator={<span className=\"breadcrumb-separator\">|</span>}\n            items={[\n              {\n                title: (\n                  <Link\n                    rel=\"Dashboard\"\n                    to={'/dashboard'}\n                    className=\"bread-items text-decoration-none text-secondary \"\n                  >\n                    Dashboard\n                  </Link>\n                ),\n              },\n              {\n                title: (\n                  <span className=\"text-secondary second-subheading\" style={{ cursor: 'default' }}>\n                    Raised Request\n                  </span>\n                ),\n              },\n            ]}\n          />\n        </CCol>\n        <CCol xs={6} sm={3} md={2}>\n          <div>\n            <DatePicker\n              style={{ marginLeft: '30px' }}\n              variant={'borderless'}\n              id=\"date\"\n              type=\"date\"\n              name=\"fieldName\"\n              placeholder=\"Choose Date\"\n              className=\"form-input-draft input-lg date-picker  raised_selectbox\"\n              suffixIcon={\n                <img\n                  src={Calendarimg}\n                  alt=\"Calendarimg\"\n                  style={{ width: '13px', height: '13px' }}\n                />\n              }\n              onChange={(date, dateString) => handleDateChange(dateString)}\n              format=\"DD MMM, YYYY\"\n              allowClear={true}\n              max={dayjs()}\n              disabledDate={(current) => current && current > dayjs().endOf('day')}\n            />\n          </div>\n        </CCol>\n        <CCol xs={6} sm={3} md={2}>\n          <Select\n            suffixIcon={\n              <img src={Downarrowimg} alt=\"Downarrowimg\" style={{ width: '12px', height: '7px' }} />\n            }\n            placeholder=\"Choose Status\"\n            className={`form-input-draft input-lg  raised_selectbox ${\n              statusRef.current === 'Approved'\n                ? 'present-color'\n                : statusRef.current === 'Rejected'\n                ? 'leave-color'\n                : 'warnings-color'\n            }`}\n            value={statusRef.current}\n            allowClear={true}\n            onChange={handleStatusFilter}\n          >\n            <Select.Option value=\"Approved\" style={{ color: '#00ab55', fontWeight: '600' }}>\n              Approved\n            </Select.Option>\n            <Select.Option value=\"Rejected\" style={{ color: '#e40e2d', fontWeight: '600' }}>\n              Rejected\n            </Select.Option>\n            <Select.Option value=\"Pending\" style={{ color: '#ffaa00', fontWeight: '600' }}>\n              Pending\n            </Select.Option>\n          </Select>\n        </CCol>\n      </CRow>\n      <div className=\"mt-2 design_table\">\n        <style>\n          {`\n            .design_table .ant-table-body::-webkit-scrollbar {\n              display: none !important;\n            }\n          `}\n        </style>\n        <Table\n          columns={columns}\n          dataSource={displayData}\n          pagination={false}\n          size={'middle'}\n          className={`${isNorMore ? 'last-row-table' : ''}`}\n          scroll={{ y: 490 }}\n          loading={{\n            spinning: commonLoader,\n            indicator: <CSpinner color=\"danger\" />,\n          }}\n        />\n      </div>\n    </>\n  )\n}\n\nRaisedRequest.propTypes = {\n  formatDate: PropTypes.func,\n}\nexport default RaisedRequest\n","import React, { useRef, useState, useEffect } from 'react'\nimport { getHeaders } from 'src/constant/Global'\nimport { CCol, CRow, CForm, CFormLabel, CButton } from '@coreui/react'\nimport PropTypes from 'prop-types'\nimport { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { Breadcrumb, Select, TimePicker, Input } from 'antd'\nimport { Link } from 'react-router-dom'\nimport { CaretDownOutlined } from '@ant-design/icons'\nimport dayjs from 'dayjs'\nimport BackArrowSvg from '../svgImages/BackArrowSvg'\nimport useAxios from 'src/constant/UseAxios'\n\nconst { TextArea } = Input\nconst EditActivityModal = ({ isOpen, closeModal, viewActivity, taskList, productList }) => {\n  let api = useAxios()\n  const [description, setDescription] = useState(viewActivity.description)\n  const [taskOptions, setTaskOptions] = useState([])\n  const [product, setProduct] = useState(viewActivity.productId)\n  const [task, setTask] = useState(viewActivity.taskName)\n  const [hours, setHours] = useState()\n  const formRef = useRef(null)\n  const [validated, setValidated] = useState(false)\n  const [buttonDisabled, setButtonDisabled] = useState(false)\n  const [formErrors, setFormErrors] = useState({\n    product: '',\n    tasks: '', // Change from array to object\n    hrs: '',\n    description: '',\n  })\n  const selectRef = useRef(null)\n  const handleDropdownVisibleChange = (visible) => {\n    if (!visible && selectRef.current) {\n      selectRef.current.blur()\n    }\n  }\n\n  useEffect(() => {\n    const hoursValue = viewActivity.hours\n    const [hours1, minutes] = hoursValue.split(':').map(Number)\n    const dateTime = dayjs().set('hour', hours1).set('minute', minutes)\n    setHours(dateTime)\n    const newTaskOptions = new Set(taskOptions.map((option) => option.value))\n    if (!newTaskOptions.has(viewActivity.taskName)) {\n      newTaskOptions.add(viewActivity.taskName)\n    }\n\n    taskList.forEach((task) => {\n      if (!newTaskOptions.has(task)) {\n        newTaskOptions.add(task)\n      }\n    })\n\n    const uniqueTaskOptions = Array.from(newTaskOptions).map((task) => ({\n      value: task,\n      label: task,\n    }))\n    setTaskOptions(uniqueTaskOptions)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [viewActivity])\n\n  const resetModal = () => {\n    closeModal()\n  }\n  const validateForm = () => {\n    const errors = {\n      product: '',\n      tasks: '', // Change from array to object\n      hrs: '',\n      description: '',\n    }\n    if (product === 0 || product === undefined) {\n      errors.product = 'Please Select Product Name'\n    }\n    if (task === undefined) {\n      errors.tasks = 'Please Select Task Name'\n    }\n    if (hours === null) {\n      errors.hrs = 'Please Enter Hours'\n    }\n    if (description === '') {\n      errors.description = 'Please Enter Description'\n    }\n    setFormErrors(errors)\n\n    // Check for any errors in the validation\n    const hasErrors =\n      errors.tasks !== '' || errors.product !== '' || errors.hrs !== '' || errors.description !== ''\n    return !hasErrors\n  }\n  //Product List\n  const options = productList.map((product) => ({\n    value: product.id,\n    label: product.name,\n  }))\n\n  // Task Activity list\n  // const taskOptions = taskList.map((task) => ({\n  //   value: task,\n  //   label: task,\n  // }))\n  const handleSubmit = async (event) => {\n    event.preventDefault()\n    const form = event.currentTarget\n    const isFormValid = validateForm()\n    if (isFormValid) {\n      if (form.checkValidity() === false) {\n        event.preventDefault()\n        event.stopPropagation()\n        setValidated(true)\n      } else {\n        setButtonDisabled(true)\n        const postData = {\n          product: product,\n          task: task,\n          activity_date: viewActivity.activity_date,\n          description: description,\n          hours: dayjs(hours.$d).format('HH:mm'),\n        }\n        const url = 'common/timesheet/activity/update/' + viewActivity.id\n        await api\n          .put(url, postData, {\n            headers: getHeaders('json'),\n          })\n          .then((response) => {\n            setButtonDisabled(false)\n            if (response.status === 208) {\n              toast.error(response.data.message, {\n                position: toast.POSITION.BOTTOM_RIGHT,\n                autoClose: 3000,\n              })\n            } else {\n              toast.success(response.data.message, {\n                position: toast.POSITION.BOTTOM_RIGHT,\n                autoClose: 3000,\n              })\n              if (formRef.current) {\n                formRef.current.reset()\n              }\n              resetModal()\n            }\n          })\n          .catch((error) => {\n            const errors = error.response.data\n            setButtonDisabled(false)\n            if (errors) {\n              toast.error(errors.message, { position: toast.POSITION.BOTTOM_RIGHT })\n            } else {\n              toast.error(error.message, { position: toast.POSITION.BOTTOM_RIGHT })\n            }\n          })\n      }\n    }\n  }\n\n  const disabledHours = () => {\n    const disabledHoursArray = []\n    for (let i = 0; i < 24; i++) {\n      if (i < 0 || i > 9) {\n        disabledHoursArray.push(i)\n      }\n    }\n    return disabledHoursArray\n  }\n\n  const disabledMinutes = (selectedHour) => {\n    if (selectedHour === 9) {\n      return [...Array(60).keys()].slice(1) // Disable all minutes when the hour is 16\n    } else if (selectedHour === 0) {\n      return [0] // Disable all minutes when the hour is 00\n    } else {\n      return []\n    }\n  }\n\n  return (\n    <>\n      <CRow>\n        <CCol sm={1} style={{ width: '20px' }} className=\"cancle-arrow-content\">\n          <span style={{ cursor: 'pointer', marginRight: '2px' }} onClick={closeModal}>\n            <BackArrowSvg width=\"16\" height=\"15\" viewBox=\"0 0 18 18\" fill=\"#A5A1A1\" />\n          </span>\n        </CCol>\n        <CCol>\n          <h6 className=\"draft-heading-edit\" style={{ marginTop: '29px' }}>\n            Edit Rejected Activity - Time Sheet\n          </h6>\n          <Breadcrumb\n            className=\"bread-tab\"\n            separator={<span className=\"breadcrumb-separator\">|</span>}\n            items={[\n              {\n                title: (\n                  <Link\n                    rel=\"Dashboard\"\n                    to={'/dashboard'}\n                    className=\"bread-items text-decoration-none text-secondary first-subheading-edit\"\n                  >\n                    Dashboard\n                  </Link>\n                ),\n              },\n              {\n                title: (\n                  <span\n                    className=\"bread-items text-secondary second-subheading\"\n                    style={{ cursor: 'pointer' }}\n                    onClick={resetModal}\n                  >\n                    Submitted - Time Sheet\n                  </span>\n                ),\n              },\n              {\n                title: (\n                  <span className=\"text-secondary second-subheading\" style={{ cursor: 'default' }}>\n                    Edit Rejected Activity - Time Sheet\n                  </span>\n                ),\n              },\n            ]}\n          />\n\n          {/* <CCol xs={12} className=\"\" style={{ marginLeft: '39px', width: '100%' }}> */}\n          <CForm\n            className=\"mt-4 mx-2 needs-validation\"\n            ref={formRef}\n            validated={validated}\n            onSubmit={handleSubmit}\n          >\n            <CRow>\n              <CCol sm={3}>\n                <div className=\"label-field-container\">\n                  <CFormLabel className=\"form-label text-c\" htmlFor=\"validationCustom01\">\n                    Product <span className=\"red-text1\">*</span>\n                  </CFormLabel>\n                  <Select\n                    className=\"custom-select_submitted\"\n                    suffixIcon={<CaretDownOutlined className=\"caretdownicon\" />}\n                    id=\"products\"\n                    value={options.find((option) => option.value === product) || undefined}\n                    onChange={(value) => setProduct(value)}\n                    showSearch\n                    ref={selectRef}\n                    onDropdownVisibleChange={handleDropdownVisibleChange}\n                    allowClear\n                    filterOption={(input, option) =>\n                      option.label.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    }\n                    dropdownRender={(menu) => (\n                      <div style={{ maxHeight: '120px', overflow: 'auto' }} role=\"listbox\">\n                        {menu}\n                      </div>\n                    )}\n                    options={options}\n                    placeholder=\"Choose Product\"\n                    getPopupContainer={(triggerNode) => triggerNode.parentNode}\n                  />\n                </div>\n                <span className=\"text-danger nameflow-error \">{formErrors.product}</span>\n              </CCol>\n              <CCol sm={3}>\n                <div className=\"label-field-container\">\n                  <CFormLabel className=\"form-label text-c\" htmlFor=\"validationCustom01\">\n                    Task <span className=\"red-text1\">*</span>\n                  </CFormLabel>\n                  <Select\n                    className=\"custom-select_submitted \"\n                    // bordered={false}\n                    suffixIcon={<CaretDownOutlined className=\"caretdownicon\" />}\n                    id=\"task\"\n                    value={taskOptions.find((option) => option.value === task) || undefined} // Ant Design uses undefined for no selection\n                    onChange={(value) => setTask(value)}\n                    showSearch // Enable search functionality\n                    allowClear\n                    ref={selectRef}\n                    onDropdownVisibleChange={handleDropdownVisibleChange}\n                    filterOption={\n                      (input, option) =>\n                        option.label.toLowerCase().indexOf(input.toLowerCase()) >= 0 // Case-insensitive search\n                    }\n                    dropdownRender={(menu) => (\n                      <div\n                        style={{ maxHeight: '120px', overflow: 'auto' }} // Set max height and overflow for the menu\n                        role=\"listbox\"\n                      >\n                        {menu}\n                      </div>\n                    )}\n                    options={taskOptions}\n                    placeholder=\"Choose Task\"\n                    getPopupContainer={(triggerNode) => triggerNode.parentNode} // Adjust menu placement\n                  />\n                </div>\n                <span className=\"text-danger nameflow-error \">{formErrors.tasks}</span>\n              </CCol>\n              <CCol sm={3}>\n                <div className=\"label-field-container\">\n                  <CFormLabel className=\"form-label text-c\" htmlFor=\"validationCustom01\">\n                    Hours <span className=\"red-text1\">*</span>\n                  </CFormLabel>\n                  <TimePicker\n                    variant={'borderless'}\n                    placeholder=\"HH:mm\"\n                    format=\"HH:mm\"\n                    className=\"border-0  time-border-bottom\"\n                    suffixIcon={<CaretDownOutlined className=\"caretdownicon\" />}\n                    value={dayjs(hours, 'HH:mm')}\n                    style={{\n                      width: '90%',\n                      marginTop: '9px',\n                    }}\n                    showNow={false}\n                    disabledHours={disabledHours}\n                    disabledMinutes={disabledMinutes}\n                    hideDisabledOptions\n                    allowClear={false}\n                    onChange={(value) => setHours(value)}\n                  />\n                </div>\n                <span className=\"text-danger nameflow-error \">{formErrors.hrs}</span>\n              </CCol>\n              {/* <CCol sm={3} span={3}>\n                <div className=\"label-field-container\" style={{ marginLeft: '-23px' }}>\n                  <CFormLabel className=\"form-label text-c\" htmlFor=\"validationCustom01\">\n                    Status <span className=\"red-text1\">*</span>\n                  </CFormLabel>\n                  <Select\n                    defaultValue={status}\n                    style={{\n                      width: '90%',\n                    }}\n                    suffixIcon={<CaretDownOutlined className=\"caretdownicon\" />}\n                    className=\" custom-select-status\"\n                    allowClear\n                    options={[\n                      {\n                        value: 'Pending',\n                        label: 'Pending',\n                      },\n                      {\n                        value: 'Completed',\n                        label: 'Completed',\n                      },\n                    ]}\n                    onChange={(value) => setStatus(value)}\n                  />\n                </div>\n                <span className=\"text-danger nameflow-error \">{formErrors.status}</span>\n              </CCol> */}\n              <CCol sm={3}>\n                <div className=\"label-field-container\">\n                  <CFormLabel className=\"form-label text-c\" htmlFor=\"validationCustom01\">\n                    Description <span className=\"red-text1\">*</span>\n                  </CFormLabel>\n                  <TextArea\n                    id=\"Description\"\n                    variant={'borderless'}\n                    value={description}\n                    className=\"des-boder-input\"\n                    onChange={(e) => setDescription(e.target.value)}\n                    style={{ color: 'black', padding: '0px ' }} // Adjust '100px' to your desired minimum height\n                    placeholder=\"Enter Descriptions...\"\n                    autoSize={{\n                      minRows: 0,\n                      maxRows: 2,\n                    }}\n                  />\n                </div>\n                <span className=\"text-danger nameflow-error \">{formErrors.description}</span>\n              </CCol>\n            </CRow>\n            {/* <CRow gutter={12} className=\"mt-4\"> */}\n            {/* <CCol sm={3} span={3}>\n                <div className=\"label-field-container\">\n                  <CFormLabel className=\"form-label text-c\" htmlFor=\"validationCustom01\">\n                    Description <span className=\"red-text1\">*</span>\n                  </CFormLabel>\n                  <TextArea\n                    id=\"Description\"\n                    bordered={false}\n                    value={description}\n                    className=\"des-boder-input\"\n                    onChange={(e) => setDescription(e.target.value)}\n                    style={{ color: 'black', padding: '0px ' }} // Adjust '100px' to your desired minimum height\n                    placeholder=\"Enter Descriptions...\"\n                    autoSize={{\n                      minRows: 0,\n                      maxRows: 2,\n                    }}\n                  />\n                </div>\n                <span className=\"text-danger nameflow-error \">{formErrors.description}</span>\n              </CCol> */}\n            {/* <CCol sm={9} span={9}></CCol> */}\n            {/* </CRow> */}\n            {/* </CCardBody>\n          </CCard> */}\n            <div style={{ position: 'absolute', bottom: '100px', left: 0, right: 0 }}>\n              <CRow className=\"m-3\">\n                <CCol sm={6}></CCol>\n                <CCol sm={6} className=\"d-flex justify-content-end align-items-center\">\n                  <CButton className=\"cancel-btn text-c\" onClick={closeModal}>\n                    Cancel\n                  </CButton>\n                  <CButton\n                    className=\"submit-button submit-timesheet \"\n                    style={{ fontSize: '13px', color: 'white' }}\n                    type=\"submit\"\n                    disabled={buttonDisabled}\n                  >\n                    Update\n                  </CButton>\n                </CCol>\n              </CRow>\n            </div>\n          </CForm>\n        </CCol>\n        {/* </CCol> */}\n      </CRow>\n    </>\n  )\n}\n\nEditActivityModal.propTypes = {\n  isOpen: PropTypes.bool,\n  closeModal: PropTypes.func,\n  viewActivity: PropTypes.array,\n  productList: PropTypes.array,\n  taskList: PropTypes.array,\n  statusApprove: PropTypes.string,\n}\nexport default EditActivityModal\n","import React, { useState, useEffect, useRef, useCallback } from 'react'\nimport { CRow, CCol, CSpinner, CButton } from '@coreui/react'\nimport { getHeaders, getDecodeData } from 'src/constant/Global'\nimport PropTypes from 'prop-types'\nimport EditActivityModal from '../modal/EditActivityModal'\nimport { DatePicker, Breadcrumb, Skeleton, Table } from 'antd'\nimport dayjs from 'dayjs'\nimport { formatDate, formatTimeDuration } from '../../constant/TimeUtils'\nimport useAxios from 'src/constant/UseAxios'\nimport EditSvg from '../svgImages/EditSvg'\nimport Calendarimg from '../../assets/images/calendar-image.png'\nimport { EditSubmittedActivity, getExistsDates } from 'src/redux/timesheet/action'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\nimport debounce from 'lodash.debounce'\n\nconst SubmitActivity = ({ today, taskList, productList }) => {\n  let api = useAxios()\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n  const [dateWise, setDateWise] = useState(dayjs())\n  const [showActivityData, setShowActivityData] = useState([])\n  const [viewActivity, setViewActivity] = useState(null)\n  const [status, setStatus] = useState('')\n  const [editModal, setEditModal] = useState(false)\n  const [visibleSubmit, setVisibleSubmit] = useState(false)\n  const user = getDecodeData()\n  const roleIntake = user?.roleIntake\n  const [commonLoader, setCommonLoader] = useState(true)\n  const [loading, setLoading] = useState(true)\n  const dateRef = useRef(null)\n  const pageRef = useRef(0)\n  const filterRef = useRef(false)\n  const hasMoreRef = useRef(true)\n  const enable = useRef(false)\n  const [abortController, setAbortController] = useState(new AbortController())\n  const existingDates = useSelector((state) => state.timesheet.existingDates)\n  const location = useLocation()\n  const idRef = useRef(null)\n  const tableBodyRef = useRef(null)\n  const [isNorMore, setIsNorMore] = useState(false)\n\n  const handleDateChange = (date, dateString) => {\n    if (date !== null) {\n      const parsedDate = dayjs(date, 'DD MMM, YYYY')\n      const formattedDate = parsedDate.format('YYYY-MM-DD')\n      dateRef.current = formattedDate\n      filterRef.current = true\n    } else {\n      dateRef.current = null\n      filterRef.current = false\n    }\n    setCommonLoader(true)\n    setShowActivityData([])\n    setDateWise(date)\n    pageRef.current = 0\n    getActivityList()\n  }\n\n  useEffect(() => {\n    hasMoreRef.current = true\n    const params = new URLSearchParams(location.search)\n    const id = params.get('id')\n    if (id) {\n      idRef.current = id\n      enable.current = true\n      setCommonLoader(false)\n      getActivityById(id)\n    } else {\n      enable.current = false\n      getActivityList()\n    }\n    const currentMonthYear = dayjs(dateWise).format('YYYY-MM')\n    dispatch(getExistsDates(currentMonthYear))\n    setLoading(false)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const getActivityList = async () => {\n    let newAbortController\n    if (pageRef.current === 0) {\n      setCommonLoader(true)\n      setShowActivityData([])\n      abortController.abort()\n      newAbortController = new AbortController()\n      setAbortController(newAbortController)\n    }\n    let url\n    if (filterRef.current === false) {\n      url = `common/timesheet/activity/submit-list?page=${pageRef.current}&size=10&filter=${filterRef.current}`\n    } else if (dateRef.current !== null) {\n      url = `common/timesheet/activity/submit-list?page=${pageRef.current}&size=10&date=${dateRef.current}&filter=${filterRef.current}`\n    }\n    try {\n      const response = await api.get(url, {\n        headers: getHeaders('json'),\n        signal: newAbortController?.signal,\n      })\n      const data = response.data.data\n      if (pageRef.current === 0) {\n        setShowActivityData(data)\n      } else {\n        setShowActivityData((prevUserData) => {\n          const uniqueSet = new Set(prevUserData.map((user) => user.id))\n          const newData = data.filter((user) => !uniqueSet.has(user.id))\n          return [...prevUserData, ...newData]\n        })\n      }\n      if (data.length < 10) {\n        hasMoreRef.current = false\n      } else {\n        hasMoreRef.current = true\n      }\n      pageRef.current = pageRef.current + 1\n      setCommonLoader(false)\n    } catch (error) {}\n  }\n\n  const getActivityById = async (id) => {\n    const url = `common/timesheet/taskActivitydata?id=${id}`\n    try {\n      const response = await api.get(url, {\n        headers: getHeaders('json'),\n      })\n      const data = response.data.data\n      setShowActivityData(data)\n      setCommonLoader(false)\n    } catch (error) {}\n  }\n\n  const handleEdit = async (id) => {\n    dispatch(EditSubmittedActivity(id))\n      .then((response) => {\n        const data = response.data.data\n        setViewActivity(data)\n        if (data.approvedStatus === 'Reject') {\n          setStatus('supervisor')\n        } else if (data.finalApproveStatus === 'Reject') {\n          setStatus('final_approver')\n        }\n        setVisibleSubmit(true)\n        setEditModal(true)\n      })\n      .catch((error) => {})\n  }\n\n  const handleEditPage = () => {\n    setVisibleSubmit(false)\n    setEditModal(false)\n    hasMoreRef.current = true\n    filterRef.current = false\n    pageRef.current = 0\n    setShowActivityData([])\n    if (enable.current === true) {\n      getActivityById(idRef.current)\n    } else {\n      getActivityList()\n    }\n  }\n  const handlePanelChange = async (value, mode) => {\n    if (mode === 'date') {\n      setLoading(true)\n      const currentMonthYear = dayjs(value).format('YYYY-MM')\n      try {\n        await dispatch(getExistsDates(currentMonthYear))\n      } catch (error) {\n      } finally {\n        setTimeout(() => {\n          setLoading(false)\n        }, 1000)\n      }\n    }\n  }\n\n  const renderDateCell = (current) => {\n    if (loading) {\n      return (\n        <div style={{ textAlign: 'center' }}>\n          {Array.from({ length: 1 }, (_, index) => (\n            <Skeleton\n              key={index}\n              title={false}\n              paragraph={{\n                rows: 1,\n                width: '100%',\n                height: '10px',\n                style: { height: '10px !important' },\n              }}\n            />\n          ))}\n        </div>\n      )\n    }\n    const existDate = existingDates\n    if (!existDate) {\n      return null // Or handle it according to your use case\n    }\n\n    const submittedDates = existDate.SubmittedList || []\n\n    const isSubmitted = submittedDates.includes(current.format('YYYY-MM-DD'))\n    const isSelected = current.isSame(dateWise, 'day')\n\n    const color = isSelected ? 'white' : isSubmitted ? 'green' : 'black'\n    const fontWeight = isSelected ? 'normal' : isSubmitted ? 'bold' : 'normal'\n\n    const backgroundColor = isSelected ? '#e40e2d' : 'transparent'\n    const borderRadius = isSelected ? '50%' : '0%'\n    const minWidth = isSelected ? '24px' : 'auto'\n    const height = isSelected ? '24px' : 'auto'\n    const display = isSelected ? 'inline-block' : 'initial'\n    const lineHeight = isSelected ? '24px' : 'initial'\n    return (\n      <div\n        style={{\n          color,\n          fontWeight,\n          backgroundColor,\n          borderRadius,\n          minWidth,\n          height,\n          display,\n          lineHeight,\n        }}\n      >\n        {current.date()}\n      </div>\n    )\n  }\n\n  const disabledDate = (current) => {\n    const existDate = existingDates\n    if (!existDate) {\n      return true // Or handle it according to your use case\n    }\n\n    const submittedDates = existDate.SubmittedList || []\n\n    const isSubmitted = submittedDates.includes(current.format('YYYY-MM-DD'))\n\n    return !isSubmitted\n  }\n\n  const handleClear = () => {\n    navigate('/timesheet')\n  }\n\n  const truncateString = (str, num) => {\n    if (str.length <= num) {\n      return str\n    }\n    return str.slice(0, num) + '...'\n  }\n\n  const columns = [\n    {\n      title: 'SI.No',\n      dataIndex: 'index',\n      key: 'index',\n      width: '4%',\n      align: 'center',\n      render: (text, record, index) => {\n        if (record.key === 'noMoreData') {\n          return {\n            children: null,\n            props: {\n              colSpan: 0, // Adjust this number based on the total number of columns to span\n            },\n          }\n        }\n        return index + 1\n      },\n    },\n    {\n      title: 'Activity Date',\n      dataIndex: 'activity_date',\n      key: 'activity_date',\n      width: '7%',\n      render: (text, record, index) => {\n        if (record.key === 'noMoreData') {\n          return {\n            children: null,\n            props: {\n              colSpan: 0, // Adjust this number based on the total number of columns to span\n            },\n          }\n        }\n        return formatDate(text)\n      },\n    },\n    {\n      title: 'Product',\n      dataIndex: 'productName',\n      key: 'productName',\n      width: '10%',\n      render: (text, record, index) => {\n        if (record.key === 'noMoreData') {\n          setIsNorMore(true)\n          return {\n            children: (\n              <div style={{ textAlign: 'center' }}>\n                <b style={{ color: '#e40e2d', fontSize: '12px' }}>No more Data to load</b>\n              </div>\n            ),\n            props: {\n              colSpan: 9, // Adjust this number based on the total number of columns to span\n            },\n          }\n        }\n        return (\n          <span className=\"\" title={record.productName}>\n            {record.assignedStatus === true && (\n              <span style={{ fontSize: '16px', color: '#00ab55' }}>&#8226;</span>\n            )}\n            {record.assignedStatus === false && (\n              <span style={{ fontSize: '16px', color: '#ffaa00' }}>&#8226;</span>\n            )}\n            <span style={{ marginLeft: '5px' }}>{truncateString(record.productName, 13)}</span>\n          </span>\n        )\n      },\n    },\n    {\n      title: 'Task',\n      dataIndex: 'taskName',\n      key: 'taskName',\n      width: '10%',\n      render: (text, record, index) => {\n        if (record.key === 'noMoreData') {\n          return {\n            children: null,\n            props: {\n              colSpan: 0, // Adjust this number based on the total number of columns to span\n            },\n          }\n        }\n        return <div title={text}> {truncateString(text, 15)}</div>\n      },\n    },\n    {\n      title: 'No.of.Hours',\n      dataIndex: 'hours',\n      key: 'hours',\n      width: '7%',\n      render: (text, record, index) => {\n        if (record.key === 'noMoreData') {\n          return {\n            children: null,\n            props: {\n              colSpan: 0, // Adjust this number based on the total number of columns to span\n            },\n          }\n        }\n        return formatTimeDuration(record.hours)\n      },\n    },\n    {\n      title: 'Approver Status',\n      dataIndex: 'approvedStatus',\n      key: 'approvedStatus',\n      width: '8%',\n      render: (text, row) => {\n        if (row.key === 'noMoreData') {\n          return {\n            children: null,\n            props: {\n              colSpan: 0, // Adjust this number based on the total number of columns to span\n            },\n          }\n        }\n        let className = ''\n        if (text === 'Approved') {\n          className = 'font-green'\n        } else if (text === 'Reject' || text === 'Rejected') {\n          className = 'font-red'\n        } else if (text === 'Pending') {\n          className = 'font-warning'\n        } else if (text === 'Resubmit') {\n          className = 'font-info'\n        }\n        return (\n          <div className={` ${className}`}>\n            <span style={{ fontSize: '16px' }}>&#8226;</span>{' '}\n            {text === 'Reject' ? 'Rejected' : text}\n          </div>\n        )\n      },\n    },\n    {\n      title: 'Final Status',\n      dataIndex: roleIntake === 'Contract' ? 'finalApproveStatus' : 'ownerStatus',\n      key: roleIntake === 'Contract' ? 'finalApproveStatus' : 'ownerStatus',\n      width: '8%',\n      render: (text, row) => {\n        if (row.key === 'noMoreData') {\n          return {\n            children: null,\n            props: {\n              colSpan: 0, // Adjust this number based on the total number of columns to span\n            },\n          }\n        }\n        let className = ''\n        if (roleIntake === 'Contract') {\n          switch (text) {\n            case 'Approved':\n              className = 'green-text1'\n              break\n            case 'Reject':\n            case 'Rejected':\n              className = 'red-text1'\n              break\n            case 'Not Yet':\n              className = 'info-text1'\n              break\n            case 'TL Approved':\n              className = 'warning-text1'\n              break\n            default:\n              className = 'not-text1'\n              break\n          }\n        } else {\n          switch (text) {\n            case 'Approved':\n              className = 'green-text1'\n              break\n            case 'Reject':\n            case 'Rejected':\n              className = 'red-text1'\n              break\n            case 'Not Yet':\n              className = 'info-text1'\n              break\n            case 'Supervisor Not Approved':\n              className = 'info-text1'\n              break\n            case 'Pending':\n              className = 'warning-text1'\n              break\n            default:\n              className = 'not-text1'\n              break\n          }\n        }\n        return (\n          <div className={` ${className}`}>\n            {text !== null && <span style={{ fontSize: '16px' }}>&#8226;</span>}{' '}\n            {text === 'Reject' ? 'Rejected' : text === null ? '--' : text}\n          </div>\n        )\n      },\n    },\n    {\n      title: 'Remarks',\n      dataIndex: 'description',\n      key: 'description',\n      width: '15%',\n      render: (text, record, index) => {\n        if (record.key === 'noMoreData') {\n          return {\n            children: null,\n            props: {\n              colSpan: 0, // Adjust this number based on the total number of columns to span\n            },\n          }\n        }\n        return <div title={text}> {truncateString(text, 30)}</div>\n      },\n    },\n    {\n      title: 'Action',\n      dataIndex: 'action',\n      key: 'action',\n      width: '5%',\n      align: 'center',\n      render: (_, record) => {\n        if (record.key === 'noMoreData') {\n          return {\n            children: null,\n            props: {\n              colSpan: 0, // Adjust this number based on the total number of columns to span\n            },\n          }\n        }\n        let action\n        if (\n          record.approvedStatus === 'Reject' ||\n          record.finalApproveStatus === 'Reject' ||\n          record.ownerStatus === 'Reject'\n        ) {\n          action = (\n            <button\n              type=\"button\"\n              className=\"action-view edit-button \"\n              onClick={() => handleEdit(record.id)}\n              style={{ padding: '4px 8px' }}\n            >\n              <EditSvg\n                width=\"13\"\n                height=\"13\"\n                viewBox=\"0 0 18 18\"\n                fill=\"none\"\n                color=\"white\"\n                clipH=\"18\"\n                clipW=\"18\"\n              />\n            </button>\n          )\n        } else {\n          action = '--'\n        }\n        return action\n      },\n    },\n  ]\n\n  const displayData = [\n    ...showActivityData.map((row, index) => ({\n      key: row.id,\n      id: row.id,\n      index: index + 1,\n      activity_date: row.activity_date,\n      productName: row.productName,\n      taskName: row.taskName,\n      hours: row.hours,\n      description: row.description,\n      finalApproveStatus: row.finalApproveStatus,\n      approvedStatus: row.approvedStatus,\n      ownerStatus: row.ownerStatus,\n      assignedStatus: row.assignedStatus,\n    })),\n  ]\n\n  // Append the \"No more Data to load\" message as the last row if noMoreData is true\n  if (!hasMoreRef.current && displayData.length !== 0 && displayData.length > 10) {\n    displayData.push({\n      key: 'noMoreData',\n      index: '',\n      productName: 'No more Data to load',\n      taskName: '',\n      hours: '',\n      description: '',\n      action: '',\n      finalApproveStatus: '',\n      approvedStatus: '',\n      ownerStatus: '',\n      assignedStatus: '',\n    })\n  }\n\n  const fetchMoreData = () => {\n    if (hasMoreRef.current) {\n      getActivityList()\n    }\n  }\n\n  const handleScroll = useCallback(\n    debounce(() => {\n      if (!tableBodyRef.current) return\n\n      const { scrollTop, scrollHeight, clientHeight } = tableBodyRef.current\n      if (scrollTop + clientHeight >= scrollHeight - 10) {\n        if (hasMoreRef.current && !commonLoader) {\n          setCommonLoader(true)\n          fetchMoreData()\n        }\n      }\n    }, 100),\n    [hasMoreRef.current, commonLoader],\n  )\n\n  useEffect(() => {\n    const tableBody = document.querySelector('.design_table .ant-table-body')\n    if (tableBody) {\n      tableBodyRef.current = tableBody\n      tableBody.addEventListener('scroll', handleScroll)\n    }\n\n    return () => {\n      if (tableBody) {\n        tableBody.removeEventListener('scroll', handleScroll)\n      }\n    }\n  }, [handleScroll])\n\n  return (\n    <>\n      {visibleSubmit ? (\n        <>\n          {' '}\n          {editModal && (\n            <EditActivityModal\n              isOpen={editModal}\n              closeModal={handleEditPage}\n              viewActivity={viewActivity}\n              taskList={taskList}\n              statusApprove={status}\n              productList={productList}\n            />\n          )}\n        </>\n      ) : (\n        <>\n          <CRow>\n            <CCol xs={12} sm={8} md={enable.current ? 8 : 9}>\n              <h6 className=\"timesheet-heading mt-3\" style={{ marginLeft: '30px' }}>\n                Submitted - Time Sheet\n              </h6>\n              <Breadcrumb\n                style={{ marginLeft: '30px' }}\n                className=\"bread-tab\"\n                separator={<span className=\"breadcrumb-separator\">|</span>}\n                items={[\n                  {\n                    title: (\n                      <Link\n                        rel=\"Dashboard\"\n                        to={'/dashboard'}\n                        className=\"bread-items text-decoration-none text-secondary \"\n                      >\n                        Dashboard\n                      </Link>\n                    ),\n                  },\n                  {\n                    title: (\n                      <span\n                        className=\"text-secondary second-subheading\"\n                        style={{ cursor: 'default' }}\n                      >\n                        Submitted Activity\n                      </span>\n                    ),\n                  },\n                ]}\n              />\n            </CCol>\n            <CCol xs={2} sm={2} className=\"draft-sumbit-button \">\n              <CRow>\n                <CCol className=\"draft-rightside-header draft-rs-datepicker submit_datepicker\">\n                  <DatePicker\n                    variant={'borderless'}\n                    id=\"date\"\n                    type=\"date\"\n                    name=\"fieldName\"\n                    placeholder=\"Choose Date\"\n                    className=\"form-input-draft input-lg date-picker activity-date \"\n                    onChange={handleDateChange}\n                    format=\"DD MMM, YYYY\"\n                    suffixIcon={\n                      <img\n                        src={Calendarimg}\n                        alt=\"Calendarimg\"\n                        style={{ width: '13px', height: '13px' }}\n                      />\n                    }\n                    onPanelChange={handlePanelChange}\n                    max={today}\n                    active\n                    allowClear={true}\n                    cellRender={renderDateCell}\n                    disabled={enable.current}\n                    disabledDate={disabledDate}\n                  />\n                </CCol>\n              </CRow>\n            </CCol>\n            {enable.current && (\n              <CCol xs={3} sm={1}>\n                <div style={{ marginTop: '33%' }}>\n                  <CButton\n                    className=\"submit-button submit-timesheet-share \"\n                    style={{ fontSize: '13px', color: 'white' }}\n                    type=\"button\"\n                    onClick={handleClear}\n                  >\n                    clear\n                  </CButton>\n                </div>\n              </CCol>\n            )}\n          </CRow>\n          <div className=\"mt-2 design_table\">\n            <style>\n              {`\n              .design_table .ant-table-body::-webkit-scrollbar {\n                display: none !important;\n              }\n              `}\n            </style>\n            <Table\n              columns={columns}\n              dataSource={displayData}\n              size={'middle'}\n              className={`${isNorMore ? 'last-row-table' : ''}`}\n              rowKey=\"id\"\n              pagination={false}\n              scroll={{ y: 490 }}\n              loading={{\n                spinning: commonLoader,\n                indicator: <CSpinner color=\"danger\" />,\n              }}\n            />\n          </div>\n        </>\n      )}\n    </>\n  )\n}\n\nSubmitActivity.propTypes = {\n  today: PropTypes.string,\n  productList: PropTypes.array,\n  taskList: PropTypes.array,\n}\nexport default SubmitActivity\n","import React, { useState, useEffect, useRef, useCallback } from 'react'\nimport { DatePicker, Breadcrumb, Button, Table } from 'antd'\nimport { CCol, CRow, CSpinner } from '@coreui/react'\nimport { getHeaders } from 'src/constant/Global'\nimport PropTypes from 'prop-types'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport useAxios from 'src/constant/UseAxios'\nimport Calendarimg from '../../assets/images/calendar-image.png'\nimport dayjs from 'dayjs'\nimport WithdrawSvg from '../svgImages/WithdrawSvg'\nimport WarningModal from '../modal/WarningModal'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\nimport debounce from 'lodash.debounce'\n\nconst LeaveHistory = ({ formatDate }) => {\n  let api = useAxios()\n  const [leaveDate, setLeaveDate] = useState(null)\n  const [leaveTable, setLeaveTable] = useState([])\n  const [isModalOpen, setIsModalOpen] = useState(false)\n  const [singleId, setSingleId] = useState()\n  const [abortController, setAbortController] = useState(new AbortController())\n  const hasMoreRef = useRef(true)\n  const pageRef = useRef(0)\n  const [commonLoader, setCommonLoader] = useState(true)\n  const tableBodyRef = useRef(null)\n  const [isNorMore, setIsNorMore] = useState(false)\n\n  useEffect(() => {\n    hasMoreRef.current = true\n    getLeaveHistory()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const handleDateChange = (date, dateString) => {\n    const newDate = dayjs(date).format('YYYY-MM-DD')\n    pageRef.current = 0\n    hasMoreRef.current = true\n    setCommonLoader(true)\n    setLeaveTable([])\n    if (date === undefined || date === null) {\n      getLeaveHistory()\n    } else {\n      getLeaveHistory(newDate)\n    }\n  }\n\n  const getLeaveHistory = async (date) => {\n    let newAbortController\n    if (pageRef.current === 0) {\n      setCommonLoader(true)\n      setLeaveTable([])\n      abortController.abort()\n      newAbortController = new AbortController()\n      setAbortController(newAbortController)\n    }\n    let url\n    if (date === null || date === undefined) {\n      url = `activity/attendanceSheet/byuser?page=${pageRef.current}&size=10`\n    } else {\n      url = `activity/attendanceSheet/byuser?page=${pageRef.current}&size=10&date=${date}`\n    }\n    try {\n      const response = await api.get(url, {\n        headers: getHeaders('json'),\n        signal: newAbortController?.signal,\n      })\n      const data = response.data.data\n      if (pageRef.current === 0) {\n        setLeaveTable(data.content)\n      } else {\n        setLeaveTable((prevUserData) => {\n          return [...prevUserData, ...data.content]\n        })\n      }\n      if (data.last === true) {\n        hasMoreRef.current = false\n      } else {\n        hasMoreRef.current = true\n      }\n      pageRef.current = pageRef.current + 1\n      setCommonLoader(false)\n    } catch (error) {}\n  }\n\n  //withdraw the leave\n  const showModal = (id, date) => {\n    setIsModalOpen(true)\n    setSingleId(id)\n    setLeaveDate(dayjs(date).format('DD MMM, YYYY'))\n  }\n\n  const handleCancel = () => {\n    setIsModalOpen(false)\n  }\n\n  const handleWithdrawLeave = async (id) => {\n    const url = `activity/attendance/delete?id=${id}`\n    try {\n      const response = await api.put(url, null, {\n        headers: getHeaders('json'),\n      })\n      if (response && response.data) {\n        toast.success(response.data.message, {\n          position: toast.POSITION.BOTTOM_RIGHT,\n          autoClose: 3000,\n        })\n        return response.data\n      } else {\n        throw new Error('Empty response received from the server')\n      }\n    } catch (error) {\n      toast.error(error.message, {\n        position: toast.POSITION.BOTTOM_RIGHT,\n        autoClose: 3000,\n      })\n      throw error\n    }\n  }\n\n  const resetFormValues = () => {\n    pageRef.current = 0\n    setLeaveTable([])\n    setCommonLoader(true)\n    hasMoreRef.current = true\n    getLeaveHistory()\n    setIsModalOpen(false)\n  }\n\n  const columns = [\n    {\n      title: 'SI.No',\n      dataIndex: 'index',\n      key: 'index',\n      width: '4%',\n      align: 'center',\n      render: (text, record, index) => {\n        if (record.key === 'noMoreData') {\n          return {\n            children: null,\n            props: {\n              colSpan: 0, // Adjust this number based on the total number of columns to span\n            },\n          }\n        }\n        return index + 1\n      },\n    },\n    {\n      title: 'Date',\n      dataIndex: 'appliedDate',\n      key: 'appliedDate',\n      width: '7%',\n      render: (text, record, index) => {\n        if (record.key === 'noMoreData') {\n          return {\n            children: null,\n            props: {\n              colSpan: 0, // Adjust this number based on the total number of columns to span\n            },\n          }\n        }\n        return formatDate(text)\n      },\n    },\n    {\n      title: 'Remarks',\n      dataIndex: 'status',\n      key: 'status',\n      width: '45%',\n      render: (text, record, index) => {\n        if (record.key === 'noMoreData') {\n          setIsNorMore(true)\n          return {\n            children: (\n              <div style={{ textAlign: 'center' }}>\n                <b style={{ color: '#e40e2d', fontSize: '12px' }}>No more Data to load</b>\n              </div>\n            ),\n            props: {\n              colSpan: 4, // Adjust this number based on the total number of columns to span\n            },\n          }\n        }\n        return text\n      },\n    },\n    {\n      title: 'Withdraw',\n      dataIndex: 'action',\n      key: 'action',\n      width: '5%',\n      align: 'center',\n      render: (_, record) => {\n        if (record.key === 'noMoreData') {\n          return {\n            children: null,\n            props: {\n              colSpan: 0, // Adjust this number based on the total number of columns to span\n            },\n          }\n        }\n\n        return (\n          <Button\n            className=\"btn border-0 text-c text-secondary cross-button\"\n            style={{ fontSize: '12px', padding: '4px 8px' }}\n            onClick={() => showModal(record.id, record.appliedDate)}\n          >\n            <WithdrawSvg width=\"15\" height=\"18\" viewBox=\"0 0 15 18\" fill=\"#A5A1A1\" />\n          </Button>\n        )\n      },\n    },\n  ]\n\n  const displayData = [\n    ...leaveTable.map((row, index) => ({\n      key: row.id,\n      id: row.id,\n      index: index + 1,\n      appliedDate: row.appliedDate,\n      status: row.status,\n    })),\n  ]\n\n  if (!hasMoreRef.current && displayData.length !== 0 && displayData.length > 10) {\n    displayData.push({\n      key: 'noMoreData',\n      index: '',\n      status: 'No more Data to load',\n      appliedDate: '',\n      action: '',\n    })\n  }\n\n  const fetchMoreData = () => {\n    if (hasMoreRef.current) {\n      getLeaveHistory()\n    }\n  }\n\n  const handleScroll = useCallback(\n    debounce(() => {\n      if (!tableBodyRef.current) return\n\n      const { scrollTop, scrollHeight, clientHeight } = tableBodyRef.current\n      if (scrollTop + clientHeight >= scrollHeight - 10) {\n        if (hasMoreRef.current && !commonLoader) {\n          setCommonLoader(true)\n          fetchMoreData()\n        }\n      }\n    }, 100),\n    [hasMoreRef.current, commonLoader],\n  )\n\n  useEffect(() => {\n    const tableBody = document.querySelector('.design_table .ant-table-body')\n    if (tableBody) {\n      tableBodyRef.current = tableBody\n      tableBody.addEventListener('scroll', handleScroll)\n    }\n\n    return () => {\n      if (tableBody) {\n        tableBody.removeEventListener('scroll', handleScroll)\n      }\n    }\n  }, [handleScroll])\n\n  return (\n    <>\n      <CRow>\n        <CCol xs={12} sm={6} md={9}>\n          <h6 className=\"timesheet-heading mt-3\" style={{ marginLeft: '30px' }}>\n            Leave History - Time Sheet\n          </h6>\n          <Breadcrumb\n            style={{ marginLeft: '30px' }}\n            className=\"bread-tab\"\n            separator={<span className=\"breadcrumb-separator\">|</span>}\n            items={[\n              {\n                title: (\n                  <Link\n                    rel=\"Dashboard\"\n                    to={'/dashboard'}\n                    className=\"bread-items text-decoration-none text-secondary \"\n                  >\n                    Dashboard\n                  </Link>\n                ),\n              },\n              {\n                title: (\n                  <span className=\"text-secondary second-subheading\" style={{ cursor: 'default' }}>\n                    Leave History - Time Sheet\n                  </span>\n                ),\n              },\n            ]}\n          />\n        </CCol>\n        <CCol xs={2} sm={2} className=\"draft-sumbit-button \">\n          <CRow>\n            <CCol className=\"draft-rightside-header draft-rs-datepicker submit_datepicker\">\n              <DatePicker\n                variant={'borderless'}\n                id=\"date\"\n                type=\"date\"\n                name=\"fieldName\"\n                placeholder=\"Choose Date\"\n                className=\"form-input-draft input-lg date-picker activity-date \"\n                onChange={handleDateChange}\n                format=\"DD MMM, YYYY\"\n                suffixIcon={\n                  <img\n                    src={Calendarimg}\n                    alt=\"Calendarimg\"\n                    style={{ width: '13px', height: '13px' }}\n                  />\n                }\n                max={dayjs()}\n                active\n                allowClear={true}\n              />\n            </CCol>\n          </CRow>\n        </CCol>\n      </CRow>\n      <div className=\"mt-2 design_table\">\n        <style>\n          {`\n            .design_table .ant-table-body::-webkit-scrollbar {\n              display: none !important;\n            }\n          `}\n        </style>\n        <Table\n          columns={columns}\n          dataSource={displayData}\n          rowKey=\"id\"\n          size={'middle'}\n          pagination={false}\n          scroll={{ y: 490 }}\n          className={`${isNorMore ? 'last-row-table' : ''}`}\n          loading={{\n            spinning: commonLoader,\n            indicator: <CSpinner color=\"danger\" />,\n          }}\n        />\n      </div>\n      {isModalOpen && (\n        <WarningModal\n          isModalOpen={isModalOpen}\n          handleCancel={handleCancel}\n          handleApprove={handleWithdrawLeave}\n          id={singleId}\n          headContent=\"Leave Widthraw\"\n          date={leaveDate}\n          resetFunc={resetFormValues}\n        />\n      )}\n    </>\n  )\n}\n\nLeaveHistory.propTypes = {\n  formatDate: PropTypes.func,\n}\nexport default LeaveHistory\n","var _g, _defs;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgCalendar(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 15,\n    height: 14,\n    viewBox: \"0 0 15 14\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_717_8974)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0.905273 11.0833C0.9062 11.8565 1.21379 12.5978 1.76057 13.1446C2.30735 13.6914 3.04868 13.999 3.82194 13.9999H11.9886C12.7619 13.999 13.5032 13.6914 14.05 13.1446C14.5968 12.5978 14.9043 11.8565 14.9053 11.0833V5.83325H0.905273V11.0833ZM10.8219 8.45825C10.995 8.45825 11.1642 8.50957 11.3081 8.60572C11.452 8.70186 11.5641 8.83852 11.6303 8.9984C11.6966 9.15829 11.7139 9.33422 11.6801 9.50396C11.6464 9.67369 11.563 9.8296 11.4407 9.95197C11.3183 10.0743 11.1624 10.1577 10.9926 10.1914C10.8229 10.2252 10.647 10.2079 10.4871 10.1416C10.3272 10.0754 10.1905 9.96327 10.0944 9.81938C9.99826 9.67548 9.94694 9.50631 9.94694 9.33325C9.94694 9.10119 10.0391 8.87863 10.2032 8.71453C10.3673 8.55044 10.5899 8.45825 10.8219 8.45825ZM7.90527 8.45825C8.07833 8.45825 8.2475 8.50957 8.3914 8.60572C8.53529 8.70186 8.64744 8.83852 8.71367 8.9984C8.77989 9.15829 8.79722 9.33422 8.76346 9.50396C8.7297 9.67369 8.64636 9.8296 8.52399 9.95197C8.40162 10.0743 8.24571 10.1577 8.07598 10.1914C7.90624 10.2252 7.73031 10.2079 7.57043 10.1416C7.41054 10.0754 7.27388 9.96327 7.17774 9.81938C7.08159 9.67548 7.03027 9.50631 7.03027 9.33325C7.03027 9.10119 7.12246 8.87863 7.28655 8.71453C7.45065 8.55044 7.67321 8.45825 7.90527 8.45825ZM4.98861 8.45825C5.16167 8.45825 5.33084 8.50957 5.47473 8.60572C5.61862 8.70186 5.73077 8.83852 5.797 8.9984C5.86323 9.15829 5.88056 9.33422 5.84679 9.50396C5.81303 9.67369 5.7297 9.8296 5.60733 9.95197C5.48495 10.0743 5.32904 10.1577 5.15931 10.1914C4.98958 10.2252 4.81364 10.2079 4.65376 10.1416C4.49387 10.0754 4.35722 9.96327 4.26107 9.81938C4.16492 9.67548 4.11361 9.50631 4.11361 9.33325C4.11361 9.10119 4.20579 8.87863 4.36989 8.71453C4.53398 8.55044 4.75654 8.45825 4.98861 8.45825Z\",\n    fill: \"#919EAB\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11.9886 1.16667H11.4053V0.583333C11.4053 0.428624 11.3438 0.280251 11.2344 0.170854C11.125 0.0614582 10.9766 0 10.8219 0C10.6672 0 10.5189 0.0614582 10.4095 0.170854C10.3001 0.280251 10.2386 0.428624 10.2386 0.583333V1.16667H5.57194V0.583333C5.57194 0.428624 5.51048 0.280251 5.40109 0.170854C5.29169 0.0614582 5.14332 0 4.98861 0C4.8339 0 4.68552 0.0614582 4.57613 0.170854C4.46673 0.280251 4.40527 0.428624 4.40527 0.583333V1.16667H3.82194C3.04868 1.16759 2.30735 1.47518 1.76057 2.02196C1.21379 2.56874 0.9062 3.31007 0.905273 4.08333L0.905273 4.66667H14.9053V4.08333C14.9043 3.31007 14.5968 2.56874 14.05 2.02196C13.5032 1.47518 12.7619 1.16759 11.9886 1.16667Z\",\n    fill: \"#919EAB\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_717_8974\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 14,\n    height: 14,\n    fill: \"white\",\n    transform: \"translate(0.905273)\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCalendar);\nexport default __webpack_public_path__ + \"static/media/calendar.e9b813aeff5fc6a2b0e5d153cba810b0.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState, useRef, useEffect } from 'react'\nimport { DatePicker, Breadcrumb, Select } from 'antd'\nimport { CCol, CRow, CSpinner } from '@coreui/react'\nimport { getDecodeData, getHeaders } from 'src/constant/Global'\nimport 'react-toastify/dist/ReactToastify.css'\nimport PropTypes from 'prop-types'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport useAxios from 'src/constant/UseAxios'\nimport dayjs from 'dayjs'\nimport Downarrowimg from '../../assets/images/downarrow.png'\nimport Calendarimg from '../../assets/images/calendar.svg'\nimport Chart from 'react-apexcharts'\nimport arrow from '../../assets/images/arrows.png'\nimport { IoIosArrowBack, IoIosArrowForward } from 'react-icons/io'\nconst { MonthPicker } = DatePicker\nconst processData = (item) => {\n  console.log(item.attendance, 'item.attendance')\n  if (item.attendance !== null && item.attendance !== 'Leave' && item.attendance !== 'leave') {\n    const attendance = item.attendance\n    const baseObject = {\n      x: item.date,\n      fillColor: '',\n      name: attendance.username,\n      date: dayjs(item.date).format('DD-MM-YYYY'),\n      employeeID: attendance.employeeID,\n      signIn: attendance.signIn,\n      signOut: attendance.signOut,\n      totalWorkHours: attendance.totalWorkHours,\n      actualWorkHours: attendance.acutalWorkHours,\n      shortfallHours: attendance.shortfallHours,\n      excessHours: attendance.excessHours,\n      timesheetEnteredHours: attendance.timesheetHours,\n    }\n\n    if (attendance.shortfallHours !== '00:00') {\n      baseObject.y = attendance.acutalWorkHours\n      baseObject.fillColor = '#ff4c4c'\n    } else if (attendance.regularizationStatus === true) {\n      baseObject.y = attendance.acutalWorkHours\n      baseObject.fillColor = '#FFA657'\n    } else {\n      baseObject.y = attendance.acutalWorkHours\n      baseObject.fillColor = '#357AF6'\n    }\n    return baseObject\n  } else if (item.attendance === 'Leave' || item.attendance === 'leave') {\n    return {\n      x: item.date,\n      y: 12,\n      columnWidth: '60%',\n      fillColor: '#FF7D90',\n    }\n  } else {\n    return {\n      x: item.date,\n      y: 12,\n      columnWidth: '60%',\n      fillColor: '#e1e1e1',\n    }\n  }\n}\n\nconst SwipeDetails = ({ formatDate }) => {\n  let api = useAxios()\n  const user = getDecodeData()\n  const jod = user?.jod\n  const dateRef = useRef()\n  const shortfall = useRef(false)\n  const excess = useRef(false)\n  const page = useRef(0)\n  const size = useRef(10)\n  const monthRef = useRef(dayjs().format('MM'))\n  const yearRef = useRef(dayjs().format('YYYY'))\n  const [selectedMonth, setSelectedMonth] = useState(dayjs())\n  const [selectedDate, setSelectedDate] = useState(null)\n  const [data, setData] = useState([])\n  const [chartSeries, setChartSeries] = useState([])\n  const [loader, setLoader] = useState(true)\n  const hasMore = useRef(true)\n\n  useEffect(() => {\n    getSwipeDetails(selectedDate)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n  const getSwipeDetails = async (date) => {\n    let url\n    if (date !== null) {\n      url = `userbased?month=${monthRef.current}&year=${yearRef.current}&checkShortfallHours=${shortfall.current}&excesshours=${excess.current}&size=${size.current}&page=${page.current}&date=${date}`\n    } else {\n      url = `userbased?month=${monthRef.current}&year=${yearRef.current}&checkShortfallHours=${shortfall.current}&excesshours=${excess.current}&size=${size.current}&page=${page.current}`\n    }\n    try {\n      const response = await api.get(url, {\n        headers: getHeaders('json'),\n      })\n      const data = response.data.data\n      setData(data.data)\n\n      if (data.data.length < size.current) {\n        hasMore.current = false\n      } else if (page.current === data.totalPages - 1) {\n        hasMore.current = false\n      }\n      setLoader(false)\n    } catch (error) {}\n  }\n\n  const handleDateChange = (date, dateString) => {\n    setLoader(true)\n    hasMore.current = true\n    page.current = 0\n    if (date !== null) {\n      const formattedDate = dayjs(date).format('YYYY-MM-DD')\n      dateRef.current = formattedDate\n      monthRef.current = dayjs(date).format('MM')\n      yearRef.current = dayjs(date).format('YYYY')\n      getSwipeDetails(formattedDate)\n      setSelectedMonth(dayjs(date))\n      setSelectedDate(formattedDate) // Store the selected date\n    } else {\n      setSelectedDate(null)\n      getSwipeDetails(null)\n    }\n  }\n\n  const [options, setOptions] = useState({\n    chart: {\n      type: '',\n      height: 350,\n      width: 300,\n      toolbar: {\n        show: false,\n      },\n    },\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        columnWidth: '45%',\n        barGap: '50%',\n        endingShape: 'rounded',\n        borderRadius: 7,\n        borderRadiusWhenStacked: 'last',\n        borderRadiusApplication: 'end',\n        dataLabels: {\n          position: 'top',\n        },\n        rangeBarOverlap: true,\n        width: '20%',\n      },\n    },\n    states: {\n      hover: {\n        filter: {\n          type: 'none',\n        },\n      },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    legend: {\n      show: true,\n      showForSingleSeries: true,\n      position: 'top',\n      horizontalAlign: 'right',\n      markers: {\n        shape: 'circle',\n        radius: 6,\n        width: '9px',\n        height: '9px',\n      },\n      customLegendItems: [\n        'Shortfall',\n        'Leave',\n        'Actual Work Hours',\n        'TimeSheet Entered',\n        'Regularization',\n      ],\n      onItemClick: {\n        toggleDataSeries: true,\n      },\n      onItemHover: {\n        highlightDataSeries: true,\n      },\n    },\n    colors: ['#ff4c4c', '#FF7D90', '#357AF6', '#5CC8BE', '#FFA657'],\n    stroke: {\n      show: true,\n      width: 2,\n      colors: ['transparent'],\n    },\n    xaxis: {\n      categories: [],\n      style: {\n        width: '50px',\n        color: '#5C5C5C',\n        fontWeight: 600,\n        fontSize: '13px',\n      },\n      title: {\n        text: 'Date & Day',\n        style: {\n          color: '#6D6D6D',\n          fontWeight: 600,\n          fontSize: '12px',\n        },\n      },\n    },\n    yaxis: {\n      min: 0,\n      max: 12,\n      title: {\n        text: 'Hours',\n        style: {\n          color: '#6D6D6D',\n          fontWeight: 600,\n          fontSize: '12px',\n        },\n      },\n    },\n    fill: {\n      colors: ['#4CAF50', '#FF7D90', '#FFC107', '#F44336'], // Example colors\n    },\n    tooltip: {\n      style: {\n        background: 'none',\n      },\n      custom: function ({ series, seriesIndex, dataPointIndex, w }) {\n        const data = w.globals.initialSeries[seriesIndex].data[dataPointIndex]\n        if (\n          !data ||\n          data.signIn === undefined ||\n          data.signOut === undefined ||\n          data.shortfallHours === undefined ||\n          data.excessHours === undefined\n        ) {\n          return ''\n        } else {\n          return `<div style=\"width: 275px;\">\n          <div style=\"font-weight: bold; color: #505050; box-shadow: 0px 4.41px 48.5px 0px #0000001A; padding: 10px;height:45px;background:#FFFFFF\">${data.name} <span style=\"font-size:11px;color:#A7A7A7;margin-left:5px\">${data.date}</span></div><br/>\n          <div style=\"padding-left:15px\">\n          <div class=\"row\">\n          <div class=\"col-sm-6\">\n          <span style=\"font-size:11px;color:#505050;\">Swipe in</span></br>\n          <div style=\"height: 25px;width: 100px;background: #F4F4F4;\"><span style=\"font-size:15px;color:#909090;padding-left:5px;padding-top:5px;\">${data.signIn}</span></div></br>\n          </div>\n          <div class=\"col-sm-6\"><span style=\"font-size:11px;color:#505050;\">Swipe out</span></br>\n          <div style=\"height: 25px;width: 100px;background: #F4F4F4;\"><span style=\"font-size:15px;padding-left:5px;padding-top:5px;color:#909090;\">${data.signOut}</span></div></br>\n          </div>\n          </div>\n          <div class=\"row\">\n          <div class=\"col-sm-6\">\n          <span style=\"font-size:11px;color:#505050;\">Total Work Hrs</span></br>\n          <div style=\"height: 25px;width: 100px;background: #F4F4F4;\"><span style=\"font-size:15px;padding-left:5px;padding-top:5px;color:#909090;\">${data.totalWorkHours}</span></div></br>\n          </div>\n          <div class=\"col-sm-6\"><span style=\"font-size:11px;color:#505050;\">Actual Work Hrs</span></br>\n          <div style=\"height: 25px;width: 100px;background: #F4F4F4;\"><span style=\"font-size:15px;padding-left:5px;padding-top:5px;color:#909090;\">${data.actualWorkHours}</span></div></br>\n          </div>\n          </div>\n          <div class=\"row\">\n          <div class=\"col-sm-6\">\n          <span style=\"font-size:11px;color:#505050;\">Shortfall Hrs</span></br>\n          <div style=\"height: 25px;width: 100px;background: #F4F4F4;\"><span style=\"font-size:15px;padding-left:5px;padding-top:5px;color:#909090;\">${data.shortfallHours}</span></div></br>\n          </div>\n          <div class=\"col-sm-6\"><span style=\"font-size:11px;color:#505050;\">Excess Hrs</span></br>\n          <div style=\"height: 25px;width: 100px;background: #F4F4F4;\"><span style=\"font-size:15px;padding-left:5px;padding-top:5px;color:#909090;\">${data.excessHours}</span></div></br>\n          </div>\n          </div>\n          <div class=\"row\">\n          <div class=\"col-sm-6\">\n          <span style=\"font-size:11px;color:#505050;\">Timesheet Entered Hrs</span></br>\n          <div style=\"height: 25px;width: 100px;background: #F4F4F4;\"><span style=\"font-size:15px;padding-left:5px;padding-top:5px;color:#909090;\">${data.timesheetEnteredHours}</span></div></br>\n          </div>\n          </div>\n          </div>\n          </div>`\n        }\n      },\n    },\n  })\n  useEffect(() => {\n    const categories = data?.map((item) => {\n      const date = dayjs(item.date)\n      const dayOfWeek = date.format('ddd')\n      const formattedDate = date.format('D MMM')\n      return { formattedDate, dayOfWeek }\n    })\n\n    setOptions((prevOptions) => ({\n      ...prevOptions,\n      xaxis: {\n        ...prevOptions.xaxis,\n        categories: categories.map((c) => `${c.formattedDate}\\n${c.dayOfWeek}`),\n        labels: {\n          style: {\n            colors: [], // Optionally customize the color of the labels\n            fontSize: '12px', // Customize the font size\n          },\n        },\n      },\n      plotOptions: {\n        bar: {\n          ...prevOptions.plotOptions.bar,\n          columnWidth:\n            data?.length === 1\n              ? '5%'\n              : data?.length === 2\n              ? '10%'\n              : data?.length === 3\n              ? '14%'\n              : data?.length === 4\n              ? '18%'\n              : data?.length === 5\n              ? '23%'\n              : data?.length === 6\n              ? '28%'\n              : data?.length === 7\n              ? '32%'\n              : data?.length === 8\n              ? '35%'\n              : data?.length === 9\n              ? '38%'\n              : '45%',\n          barGap: '10%', // Adjust the gap between bars\n          horizontal: false,\n          endingShape: 'rounded',\n          borderRadius: 7,\n          borderRadiusWhenStacked: 'last',\n          borderRadiusApplication: 'end',\n          dataLabels: {\n            position: 'top',\n          },\n        },\n      },\n    }))\n    setChartSeries([\n      {\n        name: 'Shortfall/Actual Work Hours',\n        data: data?.map((item) => processData(item)),\n      },\n      {\n        name: 'Timesheet Entered',\n        data: data?.map((item) => {\n          if (\n            item.attendance !== null &&\n            item.attendance !== 'Leave' &&\n            item.attendance !== 'leave'\n          ) {\n            const attendance = item.attendance\n            return {\n              x: item.date,\n              y: attendance?.timesheetHours === '00:00 Hrs' ? null : attendance?.timesheetHours,\n              fillColor: '#5CC8BE',\n              name: attendance?.username,\n              date: dayjs(item.date).format('DD-MM-YYYY'),\n              employeeID: attendance?.employeeID,\n              signIn: attendance?.signIn,\n              signOut: attendance?.signOut,\n              totalWorkHours: attendance?.totalWorkHours,\n              actualWorkHours: attendance?.acutalWorkHours,\n              shortfallHours: attendance?.shortfallHours,\n              excessHours: attendance?.excessHours,\n              timesheetEnteredHours: attendance?.timesheetHours,\n            }\n          } else {\n            return {\n              x: item.date,\n              y: null,\n            }\n          }\n        }),\n      },\n    ])\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data])\n\n  const scrollRight = () => {\n    page.current = page.current + 1\n    hasMore.current = true\n    setLoader(true)\n    getSwipeDetails(selectedDate)\n  }\n\n  const scrollLeft = () => {\n    page.current = page.current - 1\n    hasMore.current = true\n    setLoader(true)\n    getSwipeDetails(selectedDate)\n  }\n\n  return (\n    <>\n      <CRow className=\"mt-3\">\n        <CCol xs={12} sm={6} md={8}>\n          <h6 className=\"timesheet-heading mt-4\" style={{ marginLeft: '30px' }}>\n            Swipe Details for{' '}\n            <MonthPicker\n              style={{ width: '10%' }}\n              variant=\"borderless\"\n              defaultValue={dayjs()}\n              value={selectedMonth}\n              format=\"MMM\"\n              allowClear={false}\n              className=\"swipe-month\"\n              suffixIcon={<img src={arrow} alt=\"Calendarimg\" />}\n              onChange={(value) => {\n                page.current = 0\n                hasMore.current = true\n                monthRef.current = value.format('MM')\n                yearRef.current = value.format('YYYY')\n                setSelectedMonth(value)\n                setLoader(true)\n                getSwipeDetails(selectedDate)\n              }}\n            />\n          </h6>\n          <Breadcrumb\n            style={{ marginLeft: '30px' }}\n            className=\"bread-tab\"\n            separator={<span className=\"breadcrumb-separator\">|</span>}\n            items={[\n              {\n                title: (\n                  <span\n                    className=\"text-secondary text-decoration-none\"\n                    style={{ cursor: 'default' }}\n                  >\n                    Dashboard\n                  </span>\n                ),\n              },\n              {\n                title: (\n                  <span className=\"text-secondary second-subheading\" style={{ cursor: 'default' }}>\n                    Swipe Details\n                  </span>\n                ),\n              },\n            ]}\n          />\n        </CCol>\n        <CCol xs={6} sm={3} md={2}>\n          <DatePicker\n            id=\"date\"\n            type=\"date\"\n            name=\"fieldName\"\n            className=\"form-input-draft input-lg date-picker swipe-date  raised_selectbox\"\n            onChange={handleDateChange}\n            placeholder=\"Choose Date\"\n            allowClear={true}\n            maxDate={dayjs()}\n            minDate={dayjs(jod)}\n            variant={'borderless'}\n            suffixIcon={\n              <img src={Calendarimg} alt=\"Calendarimg\" style={{ width: '13px', height: '13px' }} />\n            }\n            format=\"DD-MM-YYYY\"\n          />\n        </CCol>\n        <CCol sm={6} md={2}>\n          <Select\n            suffixIcon={\n              <img src={Downarrowimg} alt=\"Downarrowimg\" style={{ width: '10px', height: '6px' }} />\n            }\n            allowClear\n            className=\"form-input-draft input-lg swipe-select  raised_selectbox\"\n            style={{ borderBottom: '1px solid #ced4da', width: '100px' }}\n            placeholder=\"Choose: Shortfall or Excess\"\n            options={[\n              {\n                value: 'Shortfall',\n                label: 'Shortfall',\n              },\n              {\n                value: 'Excess',\n                label: 'Excess',\n              },\n            ]}\n            onChange={(value) => {\n              if (value !== undefined && value === 'Shortfall') {\n                shortfall.current = true\n                excess.current = false\n              } else if (value !== undefined && value === 'Excess') {\n                excess.current = true\n                shortfall.current = false\n              } else {\n                excess.current = false\n                shortfall.current = false\n              }\n              page.current = 0\n              hasMore.current = true\n              setLoader(true)\n              getSwipeDetails(selectedDate)\n            }}\n          />\n        </CCol>\n      </CRow>\n      <CRow className=\"mt-1\">\n        {!loader && (\n          <div>\n            <div style={{ marginLeft: '20px' }}>\n              <Chart type=\"bar\" options={options} series={chartSeries} height={350} />\n            </div>\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n              }}\n            >\n              <button\n                style={{\n                  borderRadius: '80%',\n                  border: 'none',\n                  backgroundColor: '#FFFFFF',\n                  boxShadow: ' 0px 4px 10px 0px #0000001A',\n                  marginLeft: '55px',\n                }}\n                disabled={page.current === 0}\n                onClick={scrollLeft}\n              >\n                <IoIosArrowBack width=\"11px\" />\n              </button>\n              <button\n                style={{\n                  borderRadius: '80%',\n                  border: 'none',\n                  backgroundColor: '#FFFFFF',\n                  boxShadow: ' 0px 4px 10px 0px #0000001A',\n                  marginRight: '37px',\n                }}\n                disabled={hasMore.current === false}\n                onClick={scrollRight}\n              >\n                <IoIosArrowForward />\n              </button>\n            </div>\n          </div>\n        )}\n        {loader && (\n          <div className=\"text-c text-center my-3 td-text\">\n            <CSpinner color=\"danger\" />\n          </div>\n        )}\n      </CRow>\n    </>\n  )\n}\n\nSwipeDetails.propTypes = {\n  formatDate: PropTypes.func,\n}\n\nexport default SwipeDetails\n","import React, { useState, useEffect } from 'react'\nimport { CCard, CCol, CRow, CNavItem, CTabContent, CTabPane, CNav, CNavLink } from '@coreui/react'\nimport { ToastContainer } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport Pending from './Pending'\nimport Draft from './Draft'\nimport RaiseList from './RaisedRequest'\nimport SubmitActivity from './SubmitActivity'\nimport LeaveHistory from './LeaveHistory'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getTaskActivityList, getproductList } from '../../redux/timesheet/action'\nimport { formatDate, getToday } from 'src/TimeUtils'\nimport SwipeDetails from './SwipeDetails'\nimport { useLocation } from 'react-router-dom'\n\nconst TimeSheet = () => {\n  const dispatch = useDispatch()\n  const location = useLocation()\n  const [activeKey, setActiveKey] = useState(1)\n  const [loading, setLoading] = useState(true)\n  const [loadingActiveTask, setLoadingActiveTask] = useState(true)\n  const productList = useSelector((state) => state.timesheet.approvedProductList)\n  const taskList = useSelector((state) => state.timesheet.taskList)\n\n  useEffect(() => {\n    dispatch(getproductList())\n    dispatch(getTaskActivityList())\n    setLoading(false)\n    setLoadingActiveTask(false)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    const params = new URLSearchParams(location.search)\n    const tab = params.get('tab')\n    if (tab) {\n      setActiveKey(parseInt(tab, 10))\n    }\n  }, [location])\n\n  return (\n    <>\n      <ToastContainer />\n      <CRow className=\"my-2\">\n        <CCol xs={12}>\n          <CCard className=\"mt-4 timesheet-content\">\n            <div className=\"timesheetfull-card\">\n              <CNav className=\"navbar-list nav_bar_scroll \" variant=\"pills\" role=\"tablist\">\n                <CNavItem role=\"presentation5\">\n                  <CNavLink\n                    className=\"nav-link-lable time-sheert-navbar\"\n                    active={activeKey === 1}\n                    aria-selected={activeKey === 1}\n                    onClick={() => setActiveKey(1)}\n                    component=\"button\"\n                    role=\"tab\"\n                    aria-controls=\"home-tab-pane\"\n                  >\n                    Pending Activity\n                  </CNavLink>\n                </CNavItem>\n                <CNavItem role=\"presentation4\">\n                  <CNavLink\n                    active={activeKey === 2}\n                    component=\"button\"\n                    role=\"tab\"\n                    aria-controls=\"profile-tab-pane\"\n                    aria-selected={activeKey === 2}\n                    onClick={() => setActiveKey(2)}\n                  >\n                    Draft Activity\n                  </CNavLink>\n                </CNavItem>\n                <CNavItem role=\"presentation3\">\n                  <CNavLink\n                    active={activeKey === 3}\n                    component=\"button\"\n                    role=\"tab\"\n                    aria-controls=\"contact-tab-pane\"\n                    aria-selected={activeKey === 3}\n                    onClick={() => setActiveKey(3)}\n                  >\n                    Submitted Activity\n                  </CNavLink>\n                </CNavItem>\n                <CNavItem role=\"presentation2\">\n                  <CNavLink\n                    active={activeKey === 4}\n                    component=\"button\"\n                    role=\"tab\"\n                    aria-controls=\"contact-tab-pane\"\n                    aria-selected={activeKey === 4}\n                    onClick={() => setActiveKey(4)}\n                  >\n                    Raised Request\n                  </CNavLink>\n                </CNavItem>\n                <CNavItem role=\"presentation1\">\n                  <CNavLink\n                    active={activeKey === 5}\n                    component=\"button\"\n                    role=\"tab\"\n                    aria-controls=\"contact-tab-pane\"\n                    aria-selected={activeKey === 5}\n                    onClick={() => setActiveKey(5)}\n                  >\n                    Leave History\n                  </CNavLink>\n                </CNavItem>\n                <CNavItem role=\"presentation6\">\n                  <CNavLink\n                    active={activeKey === 6}\n                    component=\"button\"\n                    role=\"tab\"\n                    aria-controls=\"contact-tab-pane\"\n                    aria-selected={activeKey === 6}\n                    onClick={() => setActiveKey(6)}\n                  >\n                    Swipe Details\n                  </CNavLink>\n                </CNavItem>\n              </CNav>\n              <CTabContent className={`${activeKey === 6 ? 'swp_tab_height' : ''}`}>\n                <CTabPane\n                  role=\"tabpanel\"\n                  aria-labelledby=\"profile-tab-pane\"\n                  visible={activeKey === 1}\n                  className=\"tab-content-overflow  tab_height_submit\"\n                >\n                  {activeKey === 1 && (\n                    <Pending\n                      productList={productList}\n                      taskList={taskList}\n                      today={getToday()}\n                      loader={loading}\n                      loadingActiveTask={loadingActiveTask}\n                    />\n                  )}\n                </CTabPane>\n                <CTabPane\n                  role=\"tabpanel\"\n                  aria-labelledby=\"profile-tab-pane\"\n                  visible={activeKey === 2}\n                  className=\"tab-content-overflow tab_height_submit\"\n                >\n                  {activeKey === 2 && (\n                    <Draft\n                      productList={productList}\n                      taskList={taskList}\n                      loader={loading}\n                      loadingActiveTask={loadingActiveTask}\n                      today={getToday()}\n                    />\n                  )}\n                </CTabPane>\n                <CTabPane\n                  role=\"tabpanel\"\n                  aria-labelledby=\"contact-tab-pane\"\n                  visible={activeKey === 3}\n                  className=\"tab-content-overflow tab_height_submit\"\n                >\n                  {activeKey === 3 && (\n                    <SubmitActivity\n                      today={getToday()}\n                      productList={productList}\n                      taskList={taskList}\n                      className=\"tab-content-overflow\"\n                    />\n                  )}\n                </CTabPane>\n                <CTabPane\n                  role=\"tabpanel\"\n                  aria-labelledby=\"contact-tab-pane\"\n                  visible={activeKey === 4}\n                  className=\"tab-content-overflow tab_height_raised\"\n                >\n                  {activeKey === 4 && <RaiseList formatDate={formatDate} />}\n                </CTabPane>\n                <CTabPane\n                  role=\"tabpanel\"\n                  aria-labelledby=\"contact-tab-pane\"\n                  visible={activeKey === 5}\n                  className=\"tab-content-overflow tab_height_raised\"\n                >\n                  {activeKey === 5 && <LeaveHistory formatDate={formatDate} />}\n                </CTabPane>\n                <CTabPane\n                  role=\"tabpanel\"\n                  aria-labelledby=\"contact-tab-pane\"\n                  visible={activeKey === 6}\n                  className=\"tab-content-overflow tab_height_raised\"\n                >\n                  {activeKey === 6 && <SwipeDetails formatDate={formatDate} />}\n                </CTabPane>\n              </CTabContent>\n            </div>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default TimeSheet\n","\"use client\";\n\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nconst BreadcrumbSeparator = _ref => {\n  let {\n    children\n  } = _ref;\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('breadcrumb');\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: `${prefixCls}-separator`,\n    \"aria-hidden\": \"true\"\n  }, children === '' ? children : children || '/');\n};\nBreadcrumbSeparator.__ANT_BREADCRUMB_SEPARATOR = true;\nexport default BreadcrumbSeparator;","\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport classNames from 'classnames';\nimport pickAttrs from \"rc-util/es/pickAttrs\";\nimport * as React from 'react';\nfunction getBreadcrumbName(route, params) {\n  if (route.title === undefined || route.title === null) {\n    return null;\n  }\n  const paramsKeys = Object.keys(params).join('|');\n  return typeof route.title === 'object' ? route.title : String(route.title).replace(new RegExp(`:(${paramsKeys})`, 'g'), (replacement, key) => params[key] || replacement);\n}\nexport function renderItem(prefixCls, item, children, href) {\n  if (children === null || children === undefined) {\n    return null;\n  }\n  const {\n      className,\n      onClick\n    } = item,\n    restItem = __rest(item, [\"className\", \"onClick\"]);\n  const passedProps = Object.assign(Object.assign({}, pickAttrs(restItem, {\n    data: true,\n    aria: true\n  })), {\n    onClick\n  });\n  if (href !== undefined) {\n    return /*#__PURE__*/React.createElement(\"a\", Object.assign({}, passedProps, {\n      className: classNames(`${prefixCls}-link`, className),\n      href: href\n    }), children);\n  }\n  return /*#__PURE__*/React.createElement(\"span\", Object.assign({}, passedProps, {\n    className: classNames(`${prefixCls}-link`, className)\n  }), children);\n}\nexport default function useItemRender(prefixCls, itemRender) {\n  const mergedItemRender = (item, params, routes, path, href) => {\n    if (itemRender) {\n      return itemRender(item, params, routes, path);\n    }\n    const name = getBreadcrumbName(item, params);\n    return renderItem(prefixCls, item, name, href);\n  };\n  return mergedItemRender;\n}","\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport DownOutlined from \"@ant-design/icons/es/icons/DownOutlined\";\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport Dropdown from '../dropdown/dropdown';\nimport BreadcrumbSeparator from './BreadcrumbSeparator';\nimport { renderItem } from './useItemRender';\nimport { devUseWarning } from '../_util/warning';\nexport const InternalBreadcrumbItem = props => {\n  const {\n    prefixCls,\n    separator = '/',\n    children,\n    menu,\n    overlay,\n    dropdownProps,\n    href\n  } = props;\n  // Warning for deprecated usage\n  if (process.env.NODE_ENV !== 'production') {\n    const warning = devUseWarning('Breadcrumb.Item');\n    warning.deprecated(!('overlay' in props), 'overlay', 'menu');\n  }\n  /** If overlay is have Wrap a Dropdown */\n  const renderBreadcrumbNode = breadcrumbItem => {\n    if (menu || overlay) {\n      const mergeDropDownProps = Object.assign({}, dropdownProps);\n      if (menu) {\n        const _a = menu || {},\n          {\n            items\n          } = _a,\n          menuProps = __rest(_a, [\"items\"]);\n        mergeDropDownProps.menu = Object.assign(Object.assign({}, menuProps), {\n          items: items === null || items === void 0 ? void 0 : items.map((_a, index) => {\n            var {\n                key,\n                title,\n                label,\n                path\n              } = _a,\n              itemProps = __rest(_a, [\"key\", \"title\", \"label\", \"path\"]);\n            let mergedLabel = label !== null && label !== void 0 ? label : title;\n            if (path) {\n              mergedLabel = /*#__PURE__*/React.createElement(\"a\", {\n                href: `${href}${path}`\n              }, mergedLabel);\n            }\n            return Object.assign(Object.assign({}, itemProps), {\n              key: key !== null && key !== void 0 ? key : index,\n              label: mergedLabel\n            });\n          })\n        });\n      } else if (overlay) {\n        mergeDropDownProps.overlay = overlay;\n      }\n      return /*#__PURE__*/React.createElement(Dropdown, Object.assign({\n        placement: \"bottom\"\n      }, mergeDropDownProps), /*#__PURE__*/React.createElement(\"span\", {\n        className: `${prefixCls}-overlay-link`\n      }, breadcrumbItem, /*#__PURE__*/React.createElement(DownOutlined, null)));\n    }\n    return breadcrumbItem;\n  };\n  // wrap to dropDown\n  const link = renderBreadcrumbNode(children);\n  if (link !== undefined && link !== null) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"li\", null, link), separator && /*#__PURE__*/React.createElement(BreadcrumbSeparator, null, separator));\n  }\n  return null;\n};\nconst BreadcrumbItem = props => {\n  const {\n      prefixCls: customizePrefixCls,\n      children,\n      href\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"children\", \"href\"]);\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('breadcrumb', customizePrefixCls);\n  return /*#__PURE__*/React.createElement(InternalBreadcrumbItem, Object.assign({}, restProps, {\n    prefixCls: prefixCls\n  }), renderItem(prefixCls, restProps, children, href));\n};\nBreadcrumbItem.__ANT_BREADCRUMB_ITEM = true;\nexport default BreadcrumbItem;","import { unit } from '@ant-design/cssinjs';\nimport { genFocusStyle, resetComponent } from '../../style';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\nconst genBreadcrumbStyle = token => {\n  const {\n    componentCls,\n    iconCls,\n    calc\n  } = token;\n  return {\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      color: token.itemColor,\n      fontSize: token.fontSize,\n      [iconCls]: {\n        fontSize: token.iconFontSize\n      },\n      ol: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        margin: 0,\n        padding: 0,\n        listStyle: 'none'\n      },\n      a: Object.assign({\n        color: token.linkColor,\n        transition: `color ${token.motionDurationMid}`,\n        padding: `0 ${unit(token.paddingXXS)}`,\n        borderRadius: token.borderRadiusSM,\n        height: token.fontHeight,\n        display: 'inline-block',\n        marginInline: calc(token.marginXXS).mul(-1).equal(),\n        '&:hover': {\n          color: token.linkHoverColor,\n          backgroundColor: token.colorBgTextHover\n        }\n      }, genFocusStyle(token)),\n      [`li:last-child`]: {\n        color: token.lastItemColor\n      },\n      [`${componentCls}-separator`]: {\n        marginInline: token.separatorMargin,\n        color: token.separatorColor\n      },\n      [`${componentCls}-link`]: {\n        [`\n          > ${iconCls} + span,\n          > ${iconCls} + a\n        `]: {\n          marginInlineStart: token.marginXXS\n        }\n      },\n      [`${componentCls}-overlay-link`]: {\n        borderRadius: token.borderRadiusSM,\n        height: token.fontHeight,\n        display: 'inline-block',\n        padding: `0 ${unit(token.paddingXXS)}`,\n        marginInline: calc(token.marginXXS).mul(-1).equal(),\n        [`> ${iconCls}`]: {\n          marginInlineStart: token.marginXXS,\n          fontSize: token.fontSizeIcon\n        },\n        '&:hover': {\n          color: token.linkHoverColor,\n          backgroundColor: token.colorBgTextHover,\n          a: {\n            color: token.linkHoverColor\n          }\n        },\n        a: {\n          '&:hover': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      // rtl style\n      [`&${token.componentCls}-rtl`]: {\n        direction: 'rtl'\n      }\n    })\n  };\n};\nexport const prepareComponentToken = token => ({\n  itemColor: token.colorTextDescription,\n  lastItemColor: token.colorText,\n  iconFontSize: token.fontSize,\n  linkColor: token.colorTextDescription,\n  linkHoverColor: token.colorText,\n  separatorColor: token.colorTextDescription,\n  separatorMargin: token.marginXS\n});\n// ============================== Export ==============================\nexport default genStyleHooks('Breadcrumb', token => {\n  const breadcrumbToken = mergeToken(token, {});\n  return genBreadcrumbStyle(breadcrumbToken);\n}, prepareComponentToken);","var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { useMemo } from 'react';\nfunction route2item(route) {\n  const {\n      breadcrumbName,\n      children\n    } = route,\n    rest = __rest(route, [\"breadcrumbName\", \"children\"]);\n  const clone = Object.assign({\n    title: breadcrumbName\n  }, rest);\n  if (children) {\n    clone.menu = {\n      items: children.map(_a => {\n        var {\n            breadcrumbName: itemBreadcrumbName\n          } = _a,\n          itemProps = __rest(_a, [\"breadcrumbName\"]);\n        return Object.assign(Object.assign({}, itemProps), {\n          title: itemBreadcrumbName\n        });\n      })\n    };\n  }\n  return clone;\n}\nexport default function useItems(items, routes) {\n  return useMemo(() => {\n    if (items) {\n      return items;\n    }\n    if (routes) {\n      return routes.map(route2item);\n    }\n    return null;\n  }, [items, routes]);\n}","\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport pickAttrs from \"rc-util/es/pickAttrs\";\nimport { cloneElement } from '../_util/reactNode';\nimport { devUseWarning } from '../_util/warning';\nimport { ConfigContext } from '../config-provider';\nimport BreadcrumbItem, { InternalBreadcrumbItem } from './BreadcrumbItem';\nimport BreadcrumbSeparator from './BreadcrumbSeparator';\nimport useStyle from './style';\nimport useItemRender from './useItemRender';\nimport useItems from './useItems';\nconst getPath = (params, path) => {\n  if (path === undefined) {\n    return path;\n  }\n  let mergedPath = (path || '').replace(/^\\//, '');\n  Object.keys(params).forEach(key => {\n    mergedPath = mergedPath.replace(`:${key}`, params[key]);\n  });\n  return mergedPath;\n};\nconst Breadcrumb = props => {\n  const {\n      prefixCls: customizePrefixCls,\n      separator = '/',\n      style,\n      className,\n      rootClassName,\n      routes: legacyRoutes,\n      items,\n      children,\n      itemRender,\n      params = {}\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"separator\", \"style\", \"className\", \"rootClassName\", \"routes\", \"items\", \"children\", \"itemRender\", \"params\"]);\n  const {\n    getPrefixCls,\n    direction,\n    breadcrumb\n  } = React.useContext(ConfigContext);\n  let crumbs;\n  const prefixCls = getPrefixCls('breadcrumb', customizePrefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls);\n  const mergedItems = useItems(items, legacyRoutes);\n  if (process.env.NODE_ENV !== 'production') {\n    const warning = devUseWarning('Breadcrumb');\n    warning.deprecated(!legacyRoutes, 'routes', 'items');\n    // Deprecated warning for breadcrumb children\n    if (!mergedItems || mergedItems.length === 0) {\n      const childList = toArray(children);\n      warning.deprecated(childList.length === 0, 'Breadcrumb.Item and Breadcrumb.Separator', 'items');\n      childList.forEach(element => {\n        if (element) {\n          process.env.NODE_ENV !== \"production\" ? warning(element.type && (element.type.__ANT_BREADCRUMB_ITEM === true || element.type.__ANT_BREADCRUMB_SEPARATOR === true), 'usage', \"Only accepts Breadcrumb.Item and Breadcrumb.Separator as it's children\") : void 0;\n        }\n      });\n    }\n  }\n  const mergedItemRender = useItemRender(prefixCls, itemRender);\n  if (mergedItems && mergedItems.length > 0) {\n    // generated by route\n    const paths = [];\n    const itemRenderRoutes = items || legacyRoutes;\n    crumbs = mergedItems.map((item, index) => {\n      const {\n        path,\n        key,\n        type,\n        menu,\n        overlay,\n        onClick,\n        className: itemClassName,\n        separator: itemSeparator,\n        dropdownProps\n      } = item;\n      const mergedPath = getPath(params, path);\n      if (mergedPath !== undefined) {\n        paths.push(mergedPath);\n      }\n      const mergedKey = key !== null && key !== void 0 ? key : index;\n      if (type === 'separator') {\n        return /*#__PURE__*/React.createElement(BreadcrumbSeparator, {\n          key: mergedKey\n        }, itemSeparator);\n      }\n      const itemProps = {};\n      const isLastItem = index === mergedItems.length - 1;\n      if (menu) {\n        itemProps.menu = menu;\n      } else if (overlay) {\n        itemProps.overlay = overlay;\n      }\n      let {\n        href\n      } = item;\n      if (paths.length && mergedPath !== undefined) {\n        href = `#/${paths.join('/')}`;\n      }\n      return /*#__PURE__*/React.createElement(InternalBreadcrumbItem, Object.assign({\n        key: mergedKey\n      }, itemProps, pickAttrs(item, {\n        data: true,\n        aria: true\n      }), {\n        className: itemClassName,\n        dropdownProps: dropdownProps,\n        href: href,\n        separator: isLastItem ? '' : separator,\n        onClick: onClick,\n        prefixCls: prefixCls\n      }), mergedItemRender(item, params, itemRenderRoutes, paths, href));\n    });\n  } else if (children) {\n    const childrenLength = toArray(children).length;\n    crumbs = toArray(children).map((element, index) => {\n      if (!element) {\n        return element;\n      }\n      const isLastItem = index === childrenLength - 1;\n      return cloneElement(element, {\n        separator: isLastItem ? '' : separator,\n        key: index\n      });\n    });\n  }\n  const breadcrumbClassName = classNames(prefixCls, breadcrumb === null || breadcrumb === void 0 ? void 0 : breadcrumb.className, {\n    [`${prefixCls}-rtl`]: direction === 'rtl'\n  }, className, rootClassName, hashId, cssVarCls);\n  const mergedStyle = Object.assign(Object.assign({}, breadcrumb === null || breadcrumb === void 0 ? void 0 : breadcrumb.style), style);\n  return wrapCSSVar( /*#__PURE__*/React.createElement(\"nav\", Object.assign({\n    className: breadcrumbClassName,\n    style: mergedStyle\n  }, restProps), /*#__PURE__*/React.createElement(\"ol\", null, crumbs)));\n};\nBreadcrumb.Item = BreadcrumbItem;\nBreadcrumb.Separator = BreadcrumbSeparator;\nif (process.env.NODE_ENV !== 'production') {\n  Breadcrumb.displayName = 'Breadcrumb';\n}\nexport default Breadcrumb;","\"use client\";\n\nimport Breadcrumb from './Breadcrumb';\nexport default Breadcrumb;"],"names":["_ref","width","height","fill","viewBox","_jsx","xmlns","children","d","color","clipH","clipW","_jsxs","clipPath","id","dayjs","updateLocale","weekStart","productList","today","taskList","loader","loadingActiveTask","dispatch","useDispatch","yesterdayCount","useSelector","state","timesheet","user","getDecodeData","joiningDate","jod","attendance","setAttendance","useState","raiseButton","setRaiseButton","visibleView","setVisibleView","disableContent","setDisableContent","dateWise","setDateWise","raiseModal","setRaiseModal","isSubmitButtonDisabled","setIsSubmitButtonDisabled","isDraftButtonDisabled","setIsDraftButtonDisabled","selectAll","setSelectAll","headerLabel","setHeaderLabel","selectRef","useRef","loading","setLoading","monthRef","yearRef","handleDropdownVisibleChange","visible","current","blur","rows","setRows","activity_date","isChecked","checkUser","product","task","hours","status","description","hasCheckedRow","some","value","existingDates","closeModalView","handleAttendanceSheet","async","date","createAttendanceSheet","then","response","data","handleApiResponse","catch","error","handleStatus208","handleStatus201","toast","position","POSITION","BOTTOM_RIGHT","success","getYesterdayCount","checkCondition","areAllFieldsFilled","trim","handleInputChange","index","fieldName","newRows","currentRow","updatedRows","map","row","idx","options","label","name","activeOptions","filter","item","inactiveOptions","taskOptions","handleSelectAllChange","count","countCheckedItems","concat","checkedCount","disabledTime","hour","disabledHours","disabledHoursArray","i","push","disabledMinutes","Array","keys","slice","warning","Modal","title","content","onOk","length","splice","deleteRow","closable","okCancel","autoFocusButton","centered","okText","cancelText","okButtonProps","style","background","borderColor","useEffect","undefined","window","localStorage","clear","removeItem","location","href","getSubPath","currentMonthYear","format","getExistsDates","resData","formattedDate","attendanceStatus","_Fragment","CRow","CCol","xs","sm","md","className","marginLeft","Breadcrumb","separator","items","Link","rel","to","cursor","span","DatePicker","variant","type","placeholder","onChange","dateString","event","selectedDate","handleDateChange","suffixIcon","src","Calendarimg","alt","defaultValue","max","allowClear","min","onPanelChange","mode","setTimeout","cellRender","month","parseInt","year","textAlign","from","_","Skeleton","paragraph","existDate","raisedDates","RaisedRequestList","attendanceDates","AttendanceList","submittedDates","SubmittedList","PermissionDates","Permission","isRaised","includes","isAttendance","isSubmitted","isSelected","isSame","currentDate","isTodayOrAfter","isAfter","isJoiningDateOrBefore","isBefore","isPermission","isDisabled","fontWeights","colorText","fontWeight","backgroundColor","borderRadius","minWidth","display","lineHeight","disabledDate","currentYear","currentMonth","joiningMonthIsMay","isInMayOfCurrentYear","Select","Downarrowimg","selectedValue","handleAttendance","Option","CButton","onClick","CTable","CTableHead","CTableRow","CTableHeaderCell","scope","Checkbox","checked","disabled","colSpan","alignItems","justifyContent","remainingRows","formData","FormData","forEach","append","$d","submitActivity","message","eventEmitter","emit","handleDraft","FileSvg","fontSize","errors","handleSubmit","addRow","PlusOutlined","margin","CTableBody","CTableDataCell","allFieldsFilled","handleCheckboxChange","showSearch","ref","onDropdownVisibleChange","dropdownStyle","border","selectedOption","group","option","Space","filterOption","input","_option$label","_option$label$props","_option$label$props$c","_option$label$props$c2","_option$label$props$c3","props","toLowerCase","find","menuportaltarget","document","body","styles","control","base","minHeight","maxHeight","zIndex","boxShadow","menu","overflowY","getOptionStyle","provided","padding","TimePicker","CaretDownOutlined","hideDisabledOptions","picker","showNow","TextArea","e","target","autoSize","minRows","maxRows","DeleteSvg","CModal","size","backdrop","alignment","onClose","CModalBody","CModalFooter","handleConfirm","RaiseRequestModal","isOpen","closeModal","confirm","api","useAxios","setSubmitButtonDisabled","setTaskOptions","commonLoader","setCommonLoader","Input","getdraftList","on","callDraft","off","isDelete","get","headers","getHeaders","Data","newTaskOptions","Set","has","add","uniqueTaskOptions","draftdatalist","timeString","icon","ExclamationCircleFilled","okType","cancelButtonProps","selectedIds","url","Promise","resolve","reject","delete","deleteFunction","autoClose","onCancel","handleDeleteCancelAll","getdraftListDate","active","hover","records","activity","put","handleUpdate","CSpinner","formatDate","memberTable","setMemberTable","dateRef","pageRef","filterRef","hasMoreRef","statusRef","abortController","setAbortController","AbortController","tableBodyRef","isNorMore","setIsNorMore","getMemberRequestall","newAbortController","abort","_newAbortController","signal","prevUserData","uniqueSet","newData","columns","dataIndex","key","align","render","text","record","str","num","truncateString","displayData","requestDate","teamName","reason","remarks","handleScroll","useCallback","debounce","scrollTop","scrollHeight","clientHeight","tableBody","querySelector","addEventListener","removeEventListener","endOf","Table","dataSource","pagination","scroll","y","spinning","indicator","viewActivity","setDescription","setProduct","productId","setTask","taskName","setHours","formRef","validated","setValidated","buttonDisabled","setButtonDisabled","formErrors","setFormErrors","tasks","hrs","hoursValue","hours1","minutes","split","Number","dateTime","set","resetModal","marginRight","BackArrowSvg","marginTop","CForm","onSubmit","preventDefault","form","currentTarget","validateForm","checkValidity","stopPropagation","postData","reset","CFormLabel","htmlFor","indexOf","dropdownRender","overflow","role","getPopupContainer","triggerNode","parentNode","selectedHour","bottom","left","right","navigate","useNavigate","showActivityData","setShowActivityData","setViewActivity","setStatus","editModal","setEditModal","visibleSubmit","setVisibleSubmit","roleIntake","enable","useLocation","idRef","URLSearchParams","search","getActivityById","getActivityList","handleEdit","EditSubmittedActivity","approvedStatus","finalApproveStatus","productName","assignedStatus","formatTimeDuration","action","ownerStatus","EditSvg","EditActivityModal","handleEditPage","statusApprove","handleClear","rowKey","leaveDate","setLeaveDate","leaveTable","setLeaveTable","isModalOpen","setIsModalOpen","singleId","setSingleId","getLeaveHistory","last","Button","showModal","appliedDate","WithdrawSvg","newDate","WarningModal","handleCancel","handleApprove","Error","headContent","resetFunc","resetFormValues","MonthPicker","shortfall","excess","page","selectedMonth","setSelectedMonth","setSelectedDate","setData","chartSeries","setChartSeries","setLoader","hasMore","getSwipeDetails","totalPages","setOptions","chart","toolbar","show","plotOptions","bar","horizontal","columnWidth","barGap","endingShape","borderRadiusWhenStacked","borderRadiusApplication","dataLabels","rangeBarOverlap","states","enabled","legend","showForSingleSeries","horizontalAlign","markers","shape","radius","customLegendItems","onItemClick","toggleDataSeries","onItemHover","highlightDataSeries","colors","stroke","xaxis","categories","yaxis","tooltip","custom","_ref2","series","seriesIndex","dataPointIndex","w","globals","initialSeries","signIn","signOut","shortfallHours","excessHours","totalWorkHours","actualWorkHours","timesheetEnteredHours","dayOfWeek","prevOptions","c","labels","console","log","baseObject","x","fillColor","username","employeeID","acutalWorkHours","timesheetHours","regularizationStatus","processData","maxDate","minDate","borderBottom","Chart","scrollLeft","IoIosArrowBack","scrollRight","IoIosArrowForward","TimeSheet","activeKey","setActiveKey","setLoadingActiveTask","approvedProductList","getproductList","getTaskActivityList","tab","ToastContainer","CCard","CNav","CNavItem","CNavLink","component","CTabContent","CTabPane","Pending","getToday","Draft","SubmitActivity","RaiseList","LeaveHistory","SwipeDetails","BreadcrumbSeparator","getPrefixCls","React","ConfigContext","prefixCls","__ANT_BREADCRUMB_SEPARATOR","__rest","s","t","p","Object","prototype","hasOwnProperty","call","getOwnPropertySymbols","propertyIsEnumerable","renderItem","restItem","passedProps","assign","pickAttrs","aria","classNames","useItemRender","itemRender","mergedItemRender","params","routes","path","route","paramsKeys","join","String","replace","RegExp","replacement","getBreadcrumbName","InternalBreadcrumbItem","overlay","dropdownProps","link","breadcrumbItem","mergeDropDownProps","_a","menuProps","itemProps","mergedLabel","Dropdown","placement","DownOutlined","renderBreadcrumbNode","BreadcrumbItem","customizePrefixCls","restProps","__ANT_BREADCRUMB_ITEM","genStyleHooks","token","componentCls","iconCls","calc","resetComponent","itemColor","iconFontSize","ol","flexWrap","listStyle","a","linkColor","transition","motionDurationMid","unit","paddingXXS","borderRadiusSM","fontHeight","marginInline","marginXXS","mul","equal","linkHoverColor","colorBgTextHover","genFocusStyle","lastItemColor","separatorMargin","separatorColor","marginInlineStart","fontSizeIcon","direction","genBreadcrumbStyle","mergeToken","colorTextDescription","marginXS","route2item","breadcrumbName","rest","clone","itemBreadcrumbName","rootClassName","legacyRoutes","breadcrumb","crumbs","wrapCSSVar","hashId","cssVarCls","useStyle","mergedItems","useMemo","useItems","paths","itemRenderRoutes","itemClassName","itemSeparator","mergedPath","getPath","mergedKey","isLastItem","childrenLength","toArray","element","cloneElement","breadcrumbClassName","mergedStyle","Item","Separator"],"sourceRoot":""}