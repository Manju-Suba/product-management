{"version":3,"file":"static/js/299.618a90ca.chunk.js","mappings":"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","sources":["constant/EventEmitter.js","views/master/Designation/AddDesignation.js","views/master/Designation/EditDesignation.js","views/master/Designation/Designation.js","views/master/Business/AddBusiness.js","views/master/Business/EditBusiness.js","views/master/Business/Business.js","views/master/taskActivity/AddTaskActivity.js","views/master/taskActivity/EditTaskActivity.js","views/master/taskActivity/DesignationMapping.js","views/master/taskActivity/TaskActivity.js","views/svgImages/Circle.js","views/master/User/canvasPreview.js","views/master/User/BannerModal.js","views/master/User/useDebounceEffect.js","views/master/User/AddUser.js","views/master/User/EditUser.js","views/master/User/User.js","views/master/Product/Product.js","views/master/Masters.js"],"sourcesContent":["import { EventEmitter } from 'eventemitter3'\n\nconst eventEmitter = new EventEmitter()\n\nexport default eventEmitter\n","import React, { useRef, useState, useEffect } from 'react'\nimport { getHeaders } from 'src/constant/Global'\nimport { CCol, CRow, CButton, CForm, CFormLabel } from '@coreui/react'\nimport PropTypes from 'prop-types'\nimport { Breadcrumb, Input, Button } from 'antd'\nimport { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport BackArrowSvg from 'src/views/svgImages/BackArrowSvg'\nimport useAxios from 'src/constant/UseAxios'\nimport { Link } from 'react-router-dom'\n\nconst AddDesignation = ({ close }) => {\n  let api = useAxios()\n  const [validated, setValidated] = useState(false)\n  const [designation, setDesignation] = useState('')\n  const [loadings, setLoadings] = useState(false)\n  const formRef = useRef(null)\n  const [formErrors, setFormErrors] = useState({\n    designation: '',\n  })\n  const handleInputChange = (e) => {\n    const { value } = e.target\n    const regex = /^(?!^\\s)[A-Za-z\\s-]*[A-Za-z][A-Za-z\\s-]*$/\n\n    if (regex.test(value) || value === '') {\n      setDesignation(value)\n    }\n  }\n\n  useEffect(() => {}, [])\n  const validateForm = () => {\n    const errors = {\n      designation: '',\n    }\n    if (designation === '') {\n      errors.designation = 'Please Enter Designation'\n    }\n    setFormErrors(errors)\n\n    // Check for any errors in the validation\n    const hasErrors = errors.designation !== ''\n    return !hasErrors\n  }\n\n  const handleSubmit = async (event, values) => {\n    event.preventDefault()\n    const form = event.currentTarget\n    const isFormValid = validateForm()\n    if (isFormValid) {\n      if (form.checkValidity() === false) {\n        event.preventDefault()\n        event.stopPropagation()\n        setValidated(true)\n      } else {\n        setLoadings(true)\n        const formData = new FormData()\n        formData.append('name', designation)\n\n        const url = 'master/role/create'\n        await api\n          .post(url, formData, {\n            headers: getHeaders('multi'),\n          })\n          .then((response) => {\n            setLoadings(false)\n            if (response.status === 208) {\n              toast.error(response.data.message, {\n                position: toast.POSITION.BOTTOM_RIGHT,\n                autoClose: 3000,\n              })\n            } else {\n              toast.success(response.data.message, {\n                position: toast.POSITION.BOTTOM_RIGHT,\n                autoClose: 3000,\n              })\n              if (formRef.current) {\n                formRef.current.reset()\n              }\n              resetComponent()\n            }\n          })\n          .catch((error) => {\n            setLoadings(false)\n            const errorMesssage = error.response.data\n            if (errorMesssage) {\n              toast.error(errorMesssage.message, {\n                position: toast.POSITION.BOTTOM_RIGHT,\n                autoClose: 3000,\n              })\n            } else {\n              toast.error(error, {\n                position: toast.POSITION.BOTTOM_RIGHT,\n                autoClose: 3000,\n              })\n            }\n          })\n      }\n    }\n  }\n  const resetComponent = () => {\n    setDesignation('')\n    // eventEmitter.emit('callDesignationList')\n    close()\n  }\n\n  return (\n    <>\n      <CRow>\n        <CCol sm={2} style={{ width: '26px', display: 'flex' }}>\n          <span\n            style={{ cursor: 'pointer', marginLeft: '17px', marginTop: '40px' }}\n            onClick={close}\n          >\n            <BackArrowSvg width=\"16\" height=\"15\" viewBox=\"0 0 18 18\" fill=\"#A5A1A1\" />\n          </span>\n        </CCol>\n        <CCol style={{ marginLeft: '12px' }}>\n          <h6 className=\"draft-heading\" style={{ marginTop: '29px' }}>\n            Add Designation\n          </h6>\n          <Breadcrumb\n            // style={{ marginLeft: '12px' }}\n            className=\"bread-tab\"\n            separator={<span className=\"breadcrumb-separator\">|</span>}\n            items={[\n              {\n                title: (\n                  <Link\n                    rel=\"Dashboard\"\n                    to={'/dashboard'}\n                    className=\"bread-items text-decoration-none text-secondary first-subheading\"\n                  >\n                    Dashboard\n                  </Link>\n                ),\n              },\n              {\n                title: (\n                  <span\n                    className=\"bread-items text-secondary second-subheading\"\n                    style={{ cursor: 'pointer' }}\n                    onClick={resetComponent}\n                  >\n                    Designation Master\n                  </span>\n                ),\n              },\n              {\n                title: (\n                  <span className=\"text-secondary second-subheading\" style={{ cursor: 'default' }}>\n                    Add Designation\n                  </span>\n                ),\n              },\n            ]}\n          />\n          {/* </CCol>\n      </CRow> */}\n          {/* <CRow> */}\n          {/* <CCol xs={12} className=\"\" style={{ marginLeft: '39px', width: '100%' }}> */}\n          <CForm\n            className=\"mt-4  needs-validation\"\n            ref={formRef}\n            validated={validated}\n            onSubmit={handleSubmit}\n            style={{ marginLeft: '24px', width: '100%' }}\n          >\n            <CRow gutter={16}>\n              <CCol sm={3} span={6}>\n                <div className=\"label-field-container\">\n                  <CFormLabel className=\"form-label text-c\" htmlFor=\"validationCustom01\">\n                    Designation\n                    <span className=\"red-text1\" style={{ marginLeft: '5px' }}>\n                      *\n                    </span>\n                  </CFormLabel>\n                  <Input\n                    style={{ marginTop: '10px' }}\n                    variant={'borderless'}\n                    maxLength={48}\n                    className=\"border-0 time-border-bottom des-box \"\n                    placeholder=\"Enter Designation\"\n                    value={designation}\n                    onChange={handleInputChange}\n                  ></Input>\n                </div>\n                <span className=\"text-danger nameflow-error \">{formErrors.designation}</span>\n              </CCol>\n            </CRow>\n            {/* </CCardBody>\n          </CCard> */}\n            <div style={{ position: 'absolute', left: 0, right: '17px' }}>\n              <CRow className=\"m-3\">\n                <CCol sm={6}></CCol>\n                <CCol sm={6} className=\"d-flex justify-content-end align-items-center\">\n                  <CButton className=\"cancel-btn text-c\" onClick={close}>\n                    Cancel\n                  </CButton>\n\n                  <Button\n                    className=\" Edit_save_changes\"\n                    style={{ fontSize: '13px', color: 'white' }}\n                    htmlType=\"submit\"\n                    loading={loadings}\n                  >\n                    Submit\n                  </Button>\n                </CCol>\n              </CRow>\n            </div>\n          </CForm>\n          {/* </CCol> */}\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nAddDesignation.propTypes = {\n  close: PropTypes.func,\n}\nexport default AddDesignation\n","import React, { useRef, useState, useEffect } from 'react'\nimport { getHeaders } from 'src/constant/Global'\nimport { CCol, CRow, CForm, CFormLabel, CButton } from '@coreui/react'\nimport PropTypes from 'prop-types'\nimport { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { Breadcrumb, Input, Button } from 'antd'\nimport BackArrowSvg from 'src/views/svgImages/BackArrowSvg'\nimport { Link } from 'react-router-dom'\nimport useAxios from 'src/constant/UseAxios'\nimport eventEmitter from 'src/constant/EventEmitter'\n\nconst EditDesignation = ({ close, viewDesignation }) => {\n  let api = useAxios()\n  const [designation, setDesignation] = useState(viewDesignation.name)\n  const formRef = useRef(null)\n  const [validated, setValidated] = useState(false)\n  const [loadings, setLoadings] = useState(false)\n  const [formErrors, setFormErrors] = useState({\n    designation: '',\n  })\n  const onInputChange = (e) => {\n    const { value } = e.target\n    const regex = /^(?!^\\s)[A-Za-z\\s-]*[A-Za-z][A-Za-z\\s-]*$/ // Regex to allow alphabets, hyphen, and space\n\n    if (regex.test(value) || value === '') {\n      setDesignation(value)\n    }\n  }\n\n  useEffect(() => {}, [])\n\n  const resetComponent = () => {\n    eventEmitter.emit('callDesignationList')\n    close()\n  }\n  const validateForm = () => {\n    const errors = {\n      designation: '',\n    }\n    if (designation === '') {\n      errors.designation = 'Please Enter Designation'\n    }\n    setFormErrors(errors)\n\n    // Check for any errors in the validation\n    const hasErrors = errors.designation !== ''\n    return !hasErrors\n  }\n  const handleSubmit = async (event, values) => {\n    event.preventDefault()\n    const form = event.currentTarget\n    const isFormValid = validateForm()\n    if (isFormValid) {\n      if (form.checkValidity() === false) {\n        event.preventDefault()\n        event.stopPropagation()\n        setValidated(true)\n      } else {\n        setLoadings(true)\n        const formData = new FormData()\n        formData.append('name', designation)\n\n        const url = 'master/role/update/' + viewDesignation.id\n        await api\n          .put(url, formData, {\n            headers: getHeaders('multi'),\n          })\n          .then((response) => {\n            setLoadings(false)\n            if (response.status === 208) {\n              toast.error(response.data.message, {\n                position: toast.POSITION.BOTTOM_RIGHT,\n                autoClose: 3000,\n              })\n            } else {\n              toast.success(response.data.message, {\n                position: toast.POSITION.BOTTOM_RIGHT,\n                autoClose: 3000,\n              })\n              if (formRef.current) {\n                formRef.current.reset()\n              }\n              resetComponent()\n            }\n          })\n          .catch((error) => {\n            setLoadings(false)\n            const errorMesssage = error.response.data\n            if (errorMesssage) {\n              toast.error(errorMesssage.message, {\n                position: toast.POSITION.BOTTOM_RIGHT,\n                autoClose: 3000,\n              })\n            } else {\n              toast.error(error, {\n                position: toast.POSITION.BOTTOM_RIGHT,\n                autoClose: 3000,\n              })\n            }\n          })\n      }\n    }\n  }\n\n  return (\n    <>\n      <CRow>\n        <CCol\n          sm={2}\n          style={{ width: '26px', display: 'flex', marginLeft: '17px', marginTop: '40px' }}\n        >\n          <span style={{ cursor: 'pointer' }} onClick={close}>\n            <BackArrowSvg width=\"16\" height=\"15\" viewBox=\"0 0 18 18\" fill=\"#A5A1A1\" />\n          </span>\n        </CCol>\n        <CCol>\n          <h6 className=\"draft-heading\" style={{ marginTop: '29px' }}>\n            Edit Designation\n          </h6>\n          <Breadcrumb\n            // style={{ marginLeft: '12px' }}\n            className=\"bread-tab\"\n            separator={<span className=\"breadcrumb-separator\">|</span>}\n            items={[\n              {\n                title: (\n                  <Link\n                    rel=\"Dashboard\"\n                    to={'/dashboard'}\n                    className=\"bread-items text-decoration-none text-secondary first-subheading\"\n                  >\n                    Dashboard\n                  </Link>\n                ),\n              },\n              {\n                title: (\n                  <span\n                    className=\"bread-items text-secondary second-subheading\"\n                    style={{ cursor: 'pointer' }}\n                    onClick={resetComponent}\n                  >\n                    Desigination Master\n                  </span>\n                ),\n              },\n              {\n                title: (\n                  <span className=\"text-secondary second-subheading\" style={{ cursor: 'default' }}>\n                    Edit Designation\n                  </span>\n                ),\n              },\n            ]}\n          />\n          {/* </CCol>\n      </CRow>\n      <CRow> */}\n          <CCol xs={12} className=\"\" style={{ marginLeft: '22px', width: '100%' }}>\n            <CForm\n              className=\"mt-4  needs-validation\"\n              ref={formRef}\n              validated={validated}\n              onSubmit={handleSubmit}\n            >\n              <CRow gutter={16}>\n                <CCol sm={3} span={6}>\n                  <div className=\"label-field-container\">\n                    <CFormLabel className=\"form-label text-c\" htmlFor=\"validationCustom01\">\n                      Designation <span className=\"red-text1\">*</span>\n                    </CFormLabel>\n                    <Input\n                      variant={'borderless'}\n                      maxLength={48}\n                      type=\"text\"\n                      className=\"border-0 time-border-bottom user-input  \"\n                      placeholder=\"Enter Designation\"\n                      value={designation}\n                      onChange={onInputChange}\n                    ></Input>\n                  </div>\n                  <span className=\"text-danger nameflow-error \">{formErrors.designation}</span>\n                </CCol>\n              </CRow>\n\n              {/* </CCardBody>\n          </CCard> */}\n              <div style={{ position: 'absolute', left: 0, right: '17px' }}>\n                <CRow className=\"m-3\">\n                  <CCol sm={6}></CCol>\n                  <CCol sm={6} className=\"d-flex justify-content-end align-items-center\">\n                    <CButton className=\"cancel-btn text-c\" onClick={close}>\n                      Cancel\n                    </CButton>\n                    <Button\n                      className=\"Edit_update_changes \"\n                      style={{ fontSize: '13px', color: 'white' }}\n                      htmlType=\"submit\"\n                      loading={loadings}\n                    >\n                      {' '}\n                      Update\n                    </Button>\n                  </CCol>\n                </CRow>\n              </div>\n            </CForm>\n          </CCol>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nEditDesignation.propTypes = {\n  close: PropTypes.func,\n  viewDesignation: PropTypes.object,\n}\nexport default EditDesignation\n","import React, { useState, useEffect, useRef, useCallback } from 'react'\nimport { CCol, CRow, CSpinner } from '@coreui/react'\nimport { getHeaders } from 'src/constant/Global'\nimport 'react-toastify/dist/ReactToastify.css'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport { Breadcrumb, Checkbox, Input, Modal, Table } from 'antd'\nimport EditSvg from '../../svgImages/EditSvg'\nimport DeleteSvg from '../../svgImages/DeleteSvg'\nimport AddDesignation from './AddDesignation'\nimport EditDesignation from './EditDesignation'\nimport useAxios from 'src/constant/UseAxios'\nimport { toast } from 'react-toastify'\nimport searchIcon from '../../../assets/images/form/search-Icon.png'\nimport { ExclamationCircleFilled } from '@ant-design/icons'\nimport { Link } from 'react-router-dom'\nimport debounce from 'lodash.debounce'\nconst { confirm } = Modal\nconst Designation = () => {\n  let api = useAxios()\n  const [designationTable, setDesignationTable] = useState([])\n  const [selectedRows, setSelectedRows] = useState([])\n  const [headerLabel, setHeaderLabel] = useState('')\n  const [designationVisible, setDesignationVisible] = useState(false)\n  const [designationVisibleEdit, setDesignationVisibleEdit] = useState(false)\n  const [viewDesignationData, setViewDesignationData] = useState(null)\n  const searchValueRef = useRef('')\n  const [commonLoader, setCommonLoader] = useState(true)\n  const [abortController, setAbortController] = useState(new AbortController())\n  const tableBodyRef = useRef(null)\n  const hasMoreRef = useRef(true)\n  const pageRef = useRef(0)\n  const searchRef = useRef(false)\n  const [isNorMore, setIsNorMore] = useState(false)\n\n  useEffect(() => {\n    if (!designationVisible && !designationVisibleEdit) {\n      hasMoreRef.current = true\n      getDesignationList()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [designationVisible, designationVisibleEdit])\n\n  const handleHeaderCheck = (isChecked) => {\n    if (isChecked) {\n      const allRowIds = designationTable.map((row) => row.id)\n      setSelectedRows(allRowIds)\n      setHeaderLabel(`${allRowIds.length} Selected`)\n    } else {\n      setSelectedRows([])\n      setHeaderLabel('')\n    }\n  }\n\n  const handleSearch = (value) => {\n    pageRef.current = 0\n    hasMoreRef.current = true\n    searchValueRef.current = value\n    searchRef.current = true\n    if (value === '') searchRef.current = false\n\n    getDesignationList()\n  }\n\n  const handleMemberCheck = (rowId, isChecked) => {\n    if (isChecked) {\n      setSelectedRows((prevSelectedRows) => {\n        const newSelectedRows = [...prevSelectedRows, rowId]\n        setHeaderLabel(`${newSelectedRows.length} Selected`)\n        return newSelectedRows\n      })\n    } else {\n      setSelectedRows((prevSelectedRows) => {\n        const newSelectedRows = prevSelectedRows.filter((selectedId) => selectedId !== rowId)\n        setHeaderLabel(newSelectedRows.length > 0 ? `${newSelectedRows.length} Selected` : '')\n        return newSelectedRows\n      })\n    }\n  }\n\n  const resetEditComponent = () => {\n    setDesignationVisibleEdit(false)\n    pageRef.current = 0\n    searchValueRef.current = ''\n    searchRef.current = false\n  }\n  const resetAddComponent = () => {\n    setDesignationVisible(false)\n    pageRef.current = 0\n    searchValueRef.current = ''\n    searchRef.current = false\n  }\n  const getDesignationList = async () => {\n    let newAbortController\n    if (pageRef.current === 0) {\n      setCommonLoader(true)\n      setDesignationTable([])\n      abortController.abort()\n      newAbortController = new AbortController()\n      setAbortController(newAbortController)\n    }\n\n    const url = `master/role/list?page=${pageRef.current}&size=10&search=${searchRef.current}&value=${searchValueRef.current}`\n    await api\n      .get(url, {\n        headers: getHeaders('json'),\n        signal: newAbortController?.signal,\n      })\n      .then((response) => {\n        const data = response.data.data.content\n\n        if (pageRef.current === 0) {\n          setDesignationTable(data)\n        } else {\n          setDesignationTable((prevUserData) => {\n            const uniqueSet = new Set(prevUserData.map((user) => user.id))\n            const newData = data.filter((user) => !uniqueSet.has(user.id))\n            return [...prevUserData, ...newData]\n          })\n        }\n        if (data.length < 10) {\n          hasMoreRef.current = false\n        }\n        pageRef.current = pageRef.current + 1\n        setCommonLoader(false)\n      })\n      .catch((error) => {})\n  }\n\n  const openDesignationModal = () => {\n    setDesignationVisible(true)\n  }\n  const handleDesignationEditClick = async (id) => {\n    const url = `master/role/byid/` + id\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        const data = response.data.data\n        setViewDesignationData(data)\n        setDesignationVisibleEdit(true)\n      })\n      .catch((error) => {})\n  }\n\n  const deletefun = async (ids) => {\n    const url = `master/role/delete/` + ids\n\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        api\n          .delete(url, {\n            headers: getHeaders('json'),\n          })\n          .then((response) => {\n            // Handle success\n            pageRef.current = 0\n            searchValueRef.current = ''\n            searchRef.current = false\n            getDesignationList()\n            setHeaderLabel('')\n            setSelectedRows([])\n            resolve(response)\n          })\n          .catch((error) => {\n            // Handle error\n            reject(error)\n          })\n      }, 1000) // Timeout after 1 second\n    })\n  }\n\n  const warning = (id) => {\n    confirm({\n      title: 'Delete Designation',\n      content: 'Are you sure to delete this Designation ?',\n      icon: <ExclamationCircleFilled />,\n      okText: 'Yes',\n      okType: 'danger',\n      cancelButtonProps: {\n        style: { borderColor: '#f54550', color: 'black' },\n      },\n      closable: true,\n      okButtonProps: {\n        style: { borderColor: '#f54550', color: 'white', backgroundColor: '#f54550' },\n      },\n      cancelText: 'No',\n      async onOk() {\n        try {\n          await deletefun(id)\n          toast.success('Designation Deleted Successfully', {\n            position: toast.POSITION.BOTTOM_RIGHT,\n            autoClose: 3000,\n          })\n        } catch (error) {\n          toast.error('Deletion failed', {\n            position: toast.POSITION.BOTTOM_RIGHT,\n            autoClose: 3000,\n          })\n        }\n      },\n      onCancel() {\n        resetValues()\n      },\n    })\n  }\n\n  const resetValues = () => {\n    setSelectedRows([])\n    setHeaderLabel('')\n  }\n\n  const columns = !headerLabel\n    ? [\n        {\n          title: <Checkbox onChange={(e) => handleHeaderCheck(e.target.checked)} />,\n          dataIndex: 'checkbox',\n          key: 'checkbox',\n          width: '3%',\n          align: 'center',\n          render: (_, record) => {\n            if (record.key === 'noMoreData') {\n              return {\n                children: null,\n                props: {\n                  colSpan: 0, // Adjust this number based on the total number of columns to span\n                },\n              }\n            }\n            return (\n              <Checkbox\n                className=\"checkbox_design\"\n                checked={selectedRows.includes(record.id)}\n                onChange={(e) => handleMemberCheck(record.id, e.target.checked)}\n              />\n            )\n          },\n        },\n        {\n          title: 'SI.No',\n          dataIndex: 'index',\n          key: 'index',\n          width: '5%',\n          align: 'center',\n          render: (text, record, index) => {\n            if (record.key === 'noMoreData') {\n              return {\n                children: null,\n                props: {\n                  colSpan: 0, // Adjust this number based on the total number of columns to span\n                },\n              }\n            }\n            return index + 1\n          },\n        },\n        {\n          title: 'Designation',\n          dataIndex: 'name',\n          key: 'name',\n          width: '35%',\n          render: (text, record, index) => {\n            if (record.key === 'noMoreData') {\n              setIsNorMore(true)\n              return {\n                children: (\n                  <div style={{ textAlign: 'center' }}>\n                    <b style={{ color: '#e40e2d', fontSize: '12px' }}>No more Data to load</b>\n                  </div>\n                ),\n                props: {\n                  colSpan: 4, // Adjust this number based on the total number of columns to span\n                },\n              }\n            }\n            return <span className=\"designation-row-name\">{text}</span>\n          },\n        },\n        {\n          title: 'Action',\n          dataIndex: 'action',\n          key: 'action',\n          width: '5%',\n          align: 'center',\n          render: (_, record) => {\n            if (record.key === 'noMoreData') {\n              return {\n                children: null,\n                props: {\n                  colSpan: 0, // Adjust this number based on the total number of columns to span\n                },\n              }\n            }\n            return (\n              <div style={{ display: 'flex', justifyContent: 'center' }}>\n                <button\n                  type=\"button\"\n                  className=\"action-view  edit-button mx-1\"\n                  style={{ padding: '4px 8px' }}\n                  onClick={() => handleDesignationEditClick(record.id)}\n                >\n                  <EditSvg\n                    width=\"13\"\n                    height=\"13\"\n                    viewBox=\"0 0 18 18\"\n                    fill=\"none\"\n                    color=\"white\"\n                    clipH=\"18\"\n                    clipW=\"18\"\n                  />\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"action-view cross-button mx-1\"\n                  style={{ padding: '4px 8px' }}\n                  onClick={!headerLabel ? () => warning(record.id) : null}\n                >\n                  <DeleteSvg width=\"14\" height=\"13\" viewBox=\"0 0 18 18\" fill=\"#A5A1A1\" />\n                </button>\n              </div>\n            )\n          },\n        },\n      ]\n    : [\n        {\n          title: (\n            <Checkbox\n              className=\"checkbox_design\"\n              checked={selectedRows.length === designationTable.length && designationTable.length}\n              onChange={(e) => handleHeaderCheck(e.target.checked)}\n            />\n          ),\n          dataIndex: 'checkbox',\n          key: 'checkbox',\n          width: '3%',\n          align: 'center',\n          render: (_, record) => {\n            if (record.key === 'noMoreData') {\n              return {\n                children: null,\n                props: {\n                  colSpan: 0, // Adjust this number based on the total number of columns to span\n                },\n              }\n            }\n            return (\n              <Checkbox\n                className=\"checkbox_design\"\n                checked={selectedRows.includes(record.id)}\n                onChange={(e) => handleMemberCheck(record.id, e.target.checked)}\n              />\n            )\n          },\n        },\n        {\n          title: <span style={{ color: '#f50505' }}>{headerLabel}</span>,\n          dataIndex: 'index',\n          key: 'index',\n          width: '5%',\n          align: 'center',\n          render: (text, record, index) => {\n            if (record.key === 'noMoreData') {\n              return {\n                children: null,\n                props: {\n                  colSpan: 0, // Adjust this number based on the total number of columns to span\n                },\n              }\n            }\n            return index + 1\n          },\n        },\n        {\n          title: '',\n          dataIndex: 'name',\n          key: 'name',\n          width: '35%',\n          render: (text, record, index) => {\n            if (record.key === 'noMoreData') {\n              setIsNorMore(true)\n              return {\n                children: (\n                  <div style={{ textAlign: 'center' }}>\n                    <b style={{ color: '#e40e2d', fontSize: '12px' }}>No more Data to load</b>\n                  </div>\n                ),\n                props: {\n                  colSpan: 4, // Adjust this number based on the total number of columns to span\n                },\n              }\n            }\n            return <span className=\"designation-row-name\">{text}</span>\n          },\n        },\n        {\n          title: (\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n              <button\n                type=\"button\"\n                className=\"action-view cross-button\"\n                onClick={() => warning(selectedRows)}\n                style={{ padding: '4px 8px' }}\n              >\n                <DeleteSvg width=\"16\" height=\"15\" viewBox=\"0 0 18 18\" fill=\"#e40e2d\" />\n              </button>\n            </div>\n          ),\n          dataIndex: 'action',\n          key: 'action',\n          width: '5%',\n          align: 'center',\n          render: (_, record) => {\n            if (record.key === 'noMoreData') {\n              return {\n                children: null,\n                props: {\n                  colSpan: 0, // Adjust this number based on the total number of columns to span\n                },\n              }\n            }\n            return (\n              <div style={{ display: 'flex', justifyContent: 'center' }}>\n                <button\n                  type=\"button\"\n                  className=\"action-view  edit-button mx-1\"\n                  style={{ padding: '4px 8px' }}\n                  onClick={() => handleDesignationEditClick(record.id)}\n                >\n                  <EditSvg\n                    width=\"13\"\n                    height=\"13\"\n                    viewBox=\"0 0 18 18\"\n                    fill=\"none\"\n                    color=\"white\"\n                    clipH=\"18\"\n                    clipW=\"18\"\n                  />\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"action-view cross-button mx-1\"\n                  style={{ padding: '4px 8px' }}\n                  onClick={!headerLabel ? () => warning(record.id) : null}\n                >\n                  <DeleteSvg width=\"14\" height=\"13\" viewBox=\"0 0 18 18\" fill=\"#A5A1A1\" />\n                </button>\n              </div>\n            )\n          },\n        },\n      ]\n\n  const displayData = [\n    ...designationTable.map((row, index) => ({\n      key: row.id,\n      id: row.id,\n      index: index + 1,\n      name: row.name,\n    })),\n  ]\n\n  // Append the \"No more Data to load\" message as the last row if noMoreData is true\n  if (!hasMoreRef.current && displayData.length !== 0 && displayData.length > 10) {\n    displayData.push({\n      key: 'noMoreData',\n      index: '',\n      name: 'No more Data to load',\n      checkbox: '',\n      action: '',\n    })\n  }\n\n  let designationComponent\n  if (designationVisible) {\n    designationComponent = <AddDesignation close={resetAddComponent} />\n  } else if (designationVisibleEdit) {\n    designationComponent = (\n      <EditDesignation close={resetEditComponent} viewDesignation={viewDesignationData} />\n    )\n  } else {\n    designationComponent = (\n      <>\n        <CRow className=\"mt-3 user-master-header\">\n          <CCol sm={8}>\n            <b style={{ paddingLeft: '30px' }}>Designation Master</b>\n            <br />\n            <Breadcrumb\n              style={{ paddingLeft: '30px' }}\n              className=\"bread-tab\"\n              separator={<span className=\"breadcrumb-separator\">|</span>}\n              items={[\n                {\n                  title: (\n                    <Link\n                      rel=\"Dashboard\"\n                      to={'/dashboard'}\n                      className=\"bread-items text-decoration-none text-secondary \"\n                    >\n                      Dashboard\n                    </Link>\n                  ),\n                },\n                {\n                  title: (\n                    <span className=\"text-secondary \" style={{ cursor: 'default' }}>\n                      Designation Master\n                    </span>\n                  ),\n                },\n              ]}\n            />\n          </CCol>\n\n          <CCol sm={2}>\n            {' '}\n            <div style={{ width: '90%', marginRight: '20px' }} className=\"mt-1 des-mas\">\n              <Input\n                placeholder=\"Search\"\n                variant={'borderless'}\n                className=\"border-0 time-border-bottom \"\n                onChange={(e) => handleSearch(e.target.value)}\n                prefix={\n                  <img\n                    src={searchIcon}\n                    alt=\"Search\"\n                    className=\"search-icon\"\n                    style={{ width: '14px', height: '14px' }}\n                  />\n                }\n              />\n            </div>\n          </CCol>\n          <CCol sm={2}>\n            <div style={{ width: '100%' }}>\n              <button\n                className=\"createdesignation-button button-clr\"\n                type=\"button\"\n                onClick={openDesignationModal}\n              >\n                <span className=\"plus-lable\">+</span> Add Designation\n              </button>\n            </div>\n          </CCol>\n        </CRow>\n\n        <div className=\"mt-2 design_table\">\n          <style>\n            {`\n            .design_table .ant-table-wrapper .ant-table-thead > tr > th {\n              background-color: ${headerLabel ? '#ffa5b240 !important' : ''};\n            }\n          `}\n          </style>\n\n          <Table\n            columns={columns}\n            dataSource={displayData}\n            size={'middle'}\n            className={`${isNorMore ? 'last-row-table' : ''}`}\n            rowKey=\"id\"\n            pagination={false}\n            scroll={{ y: 490 }}\n            loading={{\n              spinning: commonLoader,\n              indicator: <CSpinner color=\"danger\" />,\n            }}\n          />\n        </div>\n      </>\n    )\n  }\n\n  const fetchMoreData = () => {\n    if (hasMoreRef.current) {\n      getDesignationList()\n    }\n  }\n\n  const handleScroll = useCallback(\n    debounce(() => {\n      if (!tableBodyRef.current) return\n\n      const { scrollTop, scrollHeight, clientHeight } = tableBodyRef.current\n      if (scrollTop + clientHeight >= scrollHeight - 10) {\n        if (hasMoreRef.current && !commonLoader) {\n          setCommonLoader(true)\n          fetchMoreData()\n        }\n      }\n    }, 100),\n    [hasMoreRef.current, commonLoader],\n  )\n\n  useEffect(() => {\n    const tableBody = document.querySelector('.design_table .ant-table-body')\n    if (tableBody) {\n      tableBodyRef.current = tableBody\n      tableBody.addEventListener('scroll', handleScroll)\n    }\n\n    return () => {\n      if (tableBody) {\n        tableBody.removeEventListener('scroll', handleScroll)\n      }\n    }\n  }, [handleScroll])\n\n  return designationComponent\n}\n\nexport default Designation\n","import React, { useRef, useState, useEffect } from 'react'\nimport { getHeaders } from 'src/constant/Global'\nimport { CCol, CRow, CButton, CForm, CFormLabel } from '@coreui/react'\nimport PropTypes from 'prop-types'\nimport { Breadcrumb, Button, Input } from 'antd'\nimport { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport BackArrowSvg from 'src/views/svgImages/BackArrowSvg'\nimport useAxios from 'src/constant/UseAxios'\nimport { Link } from 'react-router-dom'\n\nconst AddBusiness = ({ close }) => {\n  let api = useAxios()\n  const [validated, setValidated] = useState(false)\n  const [business, setBusiness] = useState('')\n  const [loadings, setLoadings] = useState(false)\n  const formRef = useRef(null)\n  const [formErrors, setFormErrors] = useState({\n    business: '',\n  })\n  const onInputChange = (e) => {\n    const { value } = e.target\n    const regex = /^(?!^\\s)[A-Za-z\\s-]*[A-Za-z][A-Za-z\\s-]*$/ // Regex to allow alphabets, hyphen, and space\n\n    if (regex.test(value) || value === '') {\n      setBusiness(value)\n    }\n  }\n  useEffect(() => {}, [])\n  const validateForm = () => {\n    const errors = {\n      business: '',\n    }\n    if (business === '') {\n      errors.business = 'Please Enter Business'\n    }\n    setFormErrors(errors)\n    const hasErrors = errors.business !== ''\n    return !hasErrors\n  }\n  const handleSubmit = async (event, values) => {\n    event.preventDefault()\n    const form = event.currentTarget\n    const isFormValid = validateForm()\n    if (isFormValid) {\n      if (form.checkValidity() === false) {\n        event.preventDefault()\n        event.stopPropagation()\n        setValidated(true)\n      } else {\n        const formData = new FormData()\n        formData.append('name', business)\n        setLoadings(true)\n        const url = 'master/bussiness/create'\n        await api\n          .post(url, formData, {\n            headers: getHeaders('multi'),\n          })\n          .then((response) => {\n            setLoadings(false)\n            if (response.status === 208) {\n              toast.error(response.data.message, {\n                position: toast.POSITION.BOTTOM_RIGHT,\n                autoClose: 3000,\n              })\n            } else {\n              toast.success(response.data.message, {\n                position: toast.POSITION.BOTTOM_RIGHT,\n                autoClose: 3000,\n              })\n              if (formRef.current) {\n                formRef.current.reset()\n              }\n              resetComponent()\n            }\n          })\n          .catch((error) => {\n            setLoadings(false)\n            const errorMesssage = error.response.data\n            if (errorMesssage) {\n              toast.error(errorMesssage.message, {\n                position: toast.POSITION.BOTTOM_RIGHT,\n                autoClose: 3000,\n              })\n            } else {\n              toast.error(error, {\n                position: toast.POSITION.BOTTOM_RIGHT,\n                autoClose: 3000,\n              })\n            }\n          })\n      }\n    }\n  }\n  const resetComponent = () => {\n    setBusiness('')\n    close()\n  }\n\n  return (\n    <>\n      <CRow>\n        <CCol sm={1} style={{ width: '20px' }} className=\"cancle-arrow-content\">\n          <span style={{ cursor: 'pointer', marginRight: '2px' }} onClick={close}>\n            <BackArrowSvg width=\"16\" height=\"15\" viewBox=\"0 0 18 18\" fill=\"#A5A1A1\" />\n          </span>\n        </CCol>\n        <CCol>\n          <h6 className=\"draft-heading\" style={{ marginTop: '29px' }}>\n            Add Business\n          </h6>\n          <Breadcrumb\n            className=\"bread-tab\"\n            separator={<span className=\"breadcrumb-separator\">|</span>}\n            items={[\n              {\n                title: (\n                  <Link\n                    rel=\"Dashboard\"\n                    to={'/dashboard'}\n                    style={{ marginLeft: '17px' }}\n                    className=\"bread-items text-decoration-none text-secondary \"\n                  >\n                    Dashboard\n                  </Link>\n                ),\n              },\n              {\n                title: (\n                  <span\n                    className=\"bread-items text-secondary second-subheading\"\n                    style={{ cursor: 'pointer' }}\n                    onClick={resetComponent}\n                  >\n                    Business Master\n                  </span>\n                ),\n              },\n              {\n                title: (\n                  <span className=\"text-secondary second-subheading\" style={{ cursor: 'default' }}>\n                    Add Business\n                  </span>\n                ),\n              },\n            ]}\n          />\n          {/* </CCol>\n      </CRow> */}\n          {/* <CRow> */}\n          <CCol xs={12} className=\"\" style={{ marginLeft: '22px', width: '100%' }}>\n            <CForm\n              className=\"mt-4  needs-validation\"\n              ref={formRef}\n              validated={validated}\n              onSubmit={handleSubmit}\n            >\n              <CRow gutter={16}>\n                <CCol sm={3} span={6}>\n                  <div className=\"label-field-container\">\n                    <CFormLabel className=\"form-label text-c\" htmlFor=\"validationCustom01\">\n                      Business{' '}\n                      <span className=\"red-text1\" style={{ marginLeft: '5px' }}>\n                        *\n                      </span>\n                    </CFormLabel>\n                    <Input\n                      style={{ marginTop: '10px' }}\n                      variant={'borderless'}\n                      maxLength={48}\n                      className=\"border-0 time-border-bottom  des-box  \"\n                      placeholder=\"Enter Business\"\n                      value={business}\n                      onChange={onInputChange}\n                    ></Input>\n                  </div>\n                  <span className=\"text-danger nameflow-error \">{formErrors.business}</span>\n                </CCol>\n              </CRow>\n              <div style={{ position: 'absolute', left: 0, right: '17px' }}>\n                <CRow className=\"m-3\">\n                  <CCol sm={6}></CCol>\n                  <CCol sm={6} className=\"d-flex justify-content-end align-items-center\">\n                    <CButton className=\"cancel-btn text-c\" onClick={close}>\n                      Cancel\n                    </CButton>\n                    <Button\n                      className=\" Edit_save_changes\"\n                      style={{ fontSize: '13px', color: 'white' }}\n                      htmlType=\"submit\"\n                      loading={loadings}\n                    >\n                      Submit\n                    </Button>\n                  </CCol>\n                </CRow>\n              </div>\n            </CForm>\n          </CCol>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nAddBusiness.propTypes = {\n  close: PropTypes.func,\n}\nexport default AddBusiness\n","import React, { useRef, useState, useEffect } from 'react'\nimport { getHeaders } from 'src/constant/Global'\nimport { CCol, CRow, CForm, CFormLabel, CButton } from '@coreui/react'\nimport PropTypes from 'prop-types'\nimport { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { Breadcrumb, Input, Button } from 'antd'\nimport BackArrowSvg from 'src/views/svgImages/BackArrowSvg'\nimport useAxios from 'src/constant/UseAxios'\nimport { Link } from 'react-router-dom'\n\nconst EditBusiness = ({ close, viewBusiness }) => {\n  let api = useAxios()\n  const [business, setBusiness] = useState(viewBusiness.name)\n  const [loadings, setLoadings] = useState(false)\n  const formRef = useRef(null)\n  const [validated, setValidated] = useState(false)\n  const [formErrors, setFormErrors] = useState({\n    business: '',\n  })\n  const onInputChange = (e) => {\n    const { value } = e.target\n    const regex = /^(?!^\\s)[A-Za-z\\s-]*[A-Za-z][A-Za-z\\s-]*$/ // Regex to allow alphabets, hyphen, and space\n\n    if (regex.test(value) || value === '') {\n      setBusiness(value)\n    }\n  }\n\n  useEffect(() => {}, [])\n\n  const resetComponent = () => {\n    close()\n  }\n  const validateForm = () => {\n    const errors = {\n      business: '',\n    }\n    if (business === '') {\n      errors.business = 'Please Enter Designation'\n    }\n    setFormErrors(errors)\n    const hasErrors = errors.business !== ''\n    return !hasErrors\n  }\n  const handleSubmit = async (event, values) => {\n    event.preventDefault()\n    const form = event.currentTarget\n    const isFormValid = validateForm()\n    if (isFormValid) {\n      if (form.checkValidity() === false) {\n        event.preventDefault()\n        event.stopPropagation()\n        setValidated(true)\n      } else {\n        const formData = new FormData()\n        formData.append('name', business)\n        setLoadings(true)\n        const url = 'master/bussiness/update/' + viewBusiness.id\n        await api\n          .put(url, formData, {\n            headers: getHeaders('multi'),\n          })\n          .then((response) => {\n            setLoadings(false)\n            if (response.status === 208) {\n              toast.error(response.data.message, {\n                position: toast.POSITION.BOTTOM_RIGHT,\n                autoClose: 3000,\n              })\n            } else {\n              toast.success(response.data.message, {\n                position: toast.POSITION.BOTTOM_RIGHT,\n                autoClose: 3000,\n              })\n              if (formRef.current) {\n                formRef.current.reset()\n              }\n              resetComponent()\n            }\n          })\n          .catch((error) => {\n            setLoadings(false)\n            const errors = error.response\n            if (errors) {\n              if (errors) {\n                toast.error(errors.data.message, {\n                  position: toast.POSITION.BOTTOM_RIGHT,\n                  autoClose: 3000,\n                })\n              } else {\n                toast.error(error, {\n                  position: toast.POSITION.BOTTOM_RIGHT,\n                  autoClose: 3000,\n                })\n              }\n            }\n          })\n      }\n    }\n  }\n\n  return (\n    <>\n      <CRow>\n        <CCol\n          sm={2}\n          style={{ width: '26px', display: 'flex', marginLeft: '17px', marginTop: '40px' }}\n        >\n          <span style={{ cursor: 'pointer' }} onClick={close}>\n            <BackArrowSvg width=\"16\" height=\"15\" viewBox=\"0 0 18 18\" fill=\"#A5A1A1\" />\n          </span>\n        </CCol>\n        <CCol>\n          <h6 className=\"draft-heading\" style={{ marginTop: '29px' }}>\n            Edit Business\n          </h6>\n          <Breadcrumb\n            className=\"bread-tab\"\n            separator={<span className=\"breadcrumb-separator\">|</span>}\n            items={[\n              {\n                title: (\n                  <Link\n                    rel=\"Dashboard\"\n                    to={'/dashboard'}\n                    className=\"bread-items text-decoration-none text-secondary first-subheading\"\n                  >\n                    Dashboard\n                  </Link>\n                ),\n              },\n              {\n                title: (\n                  <span\n                    className=\"bread-items text-secondary second-subheading\"\n                    style={{ cursor: 'pointer' }}\n                    onClick={resetComponent}\n                  >\n                    Business Master\n                  </span>\n                ),\n              },\n              {\n                title: (\n                  <span className=\"text-secondary second-subheading\" style={{ cursor: 'default' }}>\n                    Edit Business\n                  </span>\n                ),\n              },\n            ]}\n          />\n          {/* </CCol>\n      </CRow> */}\n          {/* <CRow> */}\n          <CCol xs={12} className=\"\" style={{ marginLeft: '22px', width: '100%' }}>\n            <CForm\n              className=\"mt-4  needs-validation\"\n              ref={formRef}\n              validated={validated}\n              onSubmit={handleSubmit}\n            >\n              <CRow gutter={16}>\n                <CCol sm={3} span={6}>\n                  <div className=\"label-field-container\">\n                    <CFormLabel className=\"form-label text-c\" htmlFor=\"validationCustom01\">\n                      Business\n                      <span className=\"red-text1\" style={{ marginLeft: '5px' }}>\n                        *\n                      </span>\n                    </CFormLabel>\n                    <Input\n                      variant={'borderless'}\n                      maxLength={48}\n                      type=\"text\"\n                      className=\"border-0 time-border-bottom  des-box  \"\n                      placeholder=\"Enter Designation\"\n                      value={business}\n                      onChange={onInputChange}\n                    ></Input>\n                  </div>\n                  <span className=\"text-danger nameflow-error \">{formErrors.business}</span>\n                </CCol>\n              </CRow>\n\n              <div style={{ position: 'absolute', left: 0, right: '17px' }}>\n                <CRow className=\"m-3\">\n                  <CCol sm={6}></CCol>\n                  <CCol sm={6} className=\"d-flex justify-content-end align-items-center\">\n                    <CButton className=\"cancel-btn text-c\" onClick={close}>\n                      Cancel\n                    </CButton>\n                    <Button\n                      className=\"Edit_update_changes \"\n                      style={{ fontSize: '13px', color: 'white' }}\n                      htmlType=\"submit\"\n                      loading={loadings}\n                    >\n                      Update\n                    </Button>\n                  </CCol>\n                </CRow>\n              </div>\n            </CForm>\n          </CCol>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nEditBusiness.propTypes = {\n  close: PropTypes.func,\n  viewBusiness: PropTypes.object,\n}\nexport default EditBusiness\n","import React, { useState, useEffect, useRef, useCallback } from 'react'\nimport { CCol, CRow, CSpinner } from '@coreui/react'\nimport { getHeaders } from 'src/constant/Global'\nimport 'react-toastify/dist/ReactToastify.css'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport { Breadcrumb, Checkbox, Input, Modal, Table } from 'antd'\nimport EditSvg from '../../svgImages/EditSvg'\nimport DeleteSvg from '../../svgImages/DeleteSvg'\nimport useAxios from 'src/constant/UseAxios'\nimport { toast } from 'react-toastify'\nimport searchIcon from '../../../assets/images/form/search-Icon.png'\nimport { ExclamationCircleFilled } from '@ant-design/icons'\nimport { Link } from 'react-router-dom'\nimport debounce from 'lodash.debounce'\nimport AddBusiness from './AddBusiness'\nimport EditBusiness from './EditBusiness'\nconst { confirm } = Modal\nconst Business = () => {\n  let api = useAxios()\n  const [businessTable, setBusinessTable] = useState([])\n  const [selectedRows, setSelectedRows] = useState([])\n  const [headerLabel, setHeaderLabel] = useState('')\n  const [businessVisible, setBusinessVisible] = useState(false)\n  const [businessVisibleEdit, setBusinessVisibleEdit] = useState(false)\n  const [viewBusinessData, setViewBusinessData] = useState(null)\n  const searchValueRef = useRef('')\n  const [commonLoader, setCommonLoader] = useState(true)\n  const [abortController, setAbortController] = useState(new AbortController())\n  const tableBodyRef = useRef(null)\n  const hasMoreRef = useRef(true)\n  const pageRef = useRef(0)\n  const searchRef = useRef(false)\n  const [isNorMore, setIsNorMore] = useState(false)\n\n  useEffect(() => {\n    if (!businessVisible && !businessVisibleEdit) {\n      hasMoreRef.current = true\n      getBusinessList()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [businessVisible, businessVisibleEdit])\n\n  const handleHeaderCheck = (isChecked) => {\n    if (isChecked) {\n      const allRowIds = businessTable.map((row) => row.id)\n      setSelectedRows(allRowIds)\n      setHeaderLabel(`${allRowIds.length} Selected`)\n    } else {\n      setSelectedRows([])\n      setHeaderLabel('')\n    }\n  }\n\n  const handleSearch = (value) => {\n    pageRef.current = 0\n    hasMoreRef.current = true\n    searchValueRef.current = value\n    searchRef.current = true\n    if (value === '') searchRef.current = false\n\n    getBusinessList()\n  }\n\n  const handleMemberCheck = (rowId, isChecked) => {\n    if (isChecked) {\n      setSelectedRows((prevSelectedRows) => {\n        const newSelectedRows = [...prevSelectedRows, rowId]\n        setHeaderLabel(`${newSelectedRows.length} Selected`)\n        return newSelectedRows\n      })\n    } else {\n      setSelectedRows((prevSelectedRows) => {\n        const newSelectedRows = prevSelectedRows.filter((selectedId) => selectedId !== rowId)\n        setHeaderLabel(newSelectedRows.length > 0 ? `${newSelectedRows.length} Selected` : '')\n        return newSelectedRows\n      })\n    }\n  }\n\n  const closeEditComponent = () => {\n    pageRef.current = 0\n    searchValueRef.current = ''\n    searchRef.current = false\n    setBusinessVisibleEdit(false)\n  }\n  const closeAddComponent = () => {\n    pageRef.current = 0\n    searchValueRef.current = ''\n    searchRef.current = false\n    setBusinessVisible(false)\n  }\n\n  const getBusinessList = async () => {\n    let newAbortController\n    if (pageRef.current === 0) {\n      setCommonLoader(true)\n      setBusinessTable([])\n      abortController.abort()\n      newAbortController = new AbortController()\n      setAbortController(newAbortController)\n    }\n\n    const url = `master/bussiness/list?page=${pageRef.current}&size=10&search=${searchRef.current}&value=${searchValueRef.current}`\n    await api\n      .get(url, {\n        headers: getHeaders('json'),\n        signal: newAbortController?.signal,\n      })\n      .then((response) => {\n        const data = response.data.data.content\n\n        if (pageRef.current === 0) {\n          setBusinessTable(data)\n        } else {\n          setBusinessTable((prevUserData) => {\n            const uniqueSet = new Set(prevUserData.map((user) => user.id))\n            const newData = data.filter((user) => !uniqueSet.has(user.id))\n            return [...prevUserData, ...newData]\n          })\n        }\n        if (data.length < 10) {\n          hasMoreRef.current = false\n        }\n        pageRef.current = pageRef.current + 1\n        setCommonLoader(false)\n      })\n      .catch((error) => {})\n  }\n\n  const openBusinessModal = () => {\n    setBusinessVisible(true)\n  }\n\n  const handleBusinessEditClick = async (id) => {\n    const url = `master/bussiness/byid/` + id\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        const data = response.data.data\n        setViewBusinessData(data)\n        setBusinessVisibleEdit(true)\n      })\n      .catch((error) => {})\n  }\n\n  const deletefun = async (ids) => {\n    const url = `master/bussiness/delete/` + ids\n\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        api\n          .delete(url, {\n            headers: getHeaders('json'),\n          })\n          .then((response) => {\n            // Handle success\n            pageRef.current = 0\n            searchValueRef.current = ''\n            searchRef.current = false\n            getBusinessList()\n            setHeaderLabel('')\n            setSelectedRows([])\n            resolve(response)\n          })\n          .catch((error) => {\n            // Handle error\n            reject(error)\n          })\n      }, 1000) // Timeout after 1 second\n    })\n  }\n\n  const warning = (id) => {\n    confirm({\n      title: 'Delete Business',\n      content: 'Are you sure to delete this Business ?',\n      icon: <ExclamationCircleFilled />,\n      okText: 'Yes',\n      okType: 'danger',\n      cancelButtonProps: {\n        style: { borderColor: '#f54550', color: 'black' },\n      },\n      closable: true,\n      okButtonProps: {\n        style: { borderColor: '#f54550', color: 'white', backgroundColor: '#f54550' },\n      },\n      cancelText: 'No',\n      async onOk() {\n        try {\n          await deletefun(id)\n          toast.success('Business Deleted Successfully', {\n            position: toast.POSITION.BOTTOM_RIGHT,\n            autoClose: 3000,\n          })\n        } catch (error) {\n          toast.error('Deletion failed', {\n            position: toast.POSITION.BOTTOM_RIGHT,\n            autoClose: 3000,\n          })\n        }\n      },\n      onCancel() {\n        resetValues()\n      },\n    })\n  }\n\n  const resetValues = () => {\n    setSelectedRows([])\n    setHeaderLabel('')\n  }\n\n  const columns = !headerLabel\n    ? [\n        {\n          title: <Checkbox onChange={(e) => handleHeaderCheck(e.target.checked)} />,\n          dataIndex: 'checkbox',\n          key: 'checkbox',\n          width: '3%',\n          align: 'center',\n          render: (_, record) => {\n            if (record.key === 'noMoreData') {\n              return {\n                children: null,\n                props: {\n                  colSpan: 0, // Adjust this number based on the total number of columns to span\n                },\n              }\n            }\n            return (\n              <Checkbox\n                className=\"checkbox_design\"\n                checked={selectedRows.includes(record.id)}\n                onChange={(e) => handleMemberCheck(record.id, e.target.checked)}\n              />\n            )\n          },\n        },\n        {\n          title: 'SI.No',\n          dataIndex: 'index',\n          key: 'index',\n          width: '5%',\n          align: 'center',\n          render: (text, record, index) => {\n            if (record.key === 'noMoreData') {\n              return {\n                children: null,\n                props: {\n                  colSpan: 0, // Adjust this number based on the total number of columns to span\n                },\n              }\n            }\n            return index + 1\n          },\n        },\n        {\n          title: 'Business',\n          dataIndex: 'name',\n          key: 'name',\n          width: '35%',\n          render: (text, record, index) => {\n            console.log(record.key, 'record.key')\n            if (record.key === 'noMoreData') {\n              setIsNorMore(true)\n              return {\n                children: (\n                  <div style={{ textAlign: 'center' }}>\n                    <b style={{ color: '#e40e2d', fontSize: '12px' }}>No more Data to load</b>\n                  </div>\n                ),\n                props: {\n                  colSpan: 4, // Adjust this number based on the total number of columns to span\n                },\n              }\n            }\n            return <span className=\"designation-row-name\">{text}</span>\n          },\n        },\n        {\n          title: 'Action',\n          dataIndex: 'action',\n          key: 'action',\n          width: '5%',\n          align: 'center',\n          render: (_, record) => {\n            if (record.key === 'noMoreData') {\n              return {\n                children: null,\n                props: {\n                  colSpan: 0, // Adjust this number based on the total number of columns to span\n                },\n              }\n            }\n            return (\n              <div style={{ display: 'flex', justifyContent: 'center' }}>\n                <button\n                  type=\"button\"\n                  className=\"action-view  edit-button mx-1\"\n                  style={{ padding: '4px 8px' }}\n                  onClick={() => handleBusinessEditClick(record.id)}\n                >\n                  <EditSvg\n                    width=\"13\"\n                    height=\"13\"\n                    viewBox=\"0 0 18 18\"\n                    fill=\"none\"\n                    color=\"white\"\n                    clipH=\"18\"\n                    clipW=\"18\"\n                  />\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"action-view cross-button mx-1\"\n                  style={{ padding: '4px 8px' }}\n                  onClick={!headerLabel ? () => warning(record.id) : null}\n                >\n                  <DeleteSvg width=\"14\" height=\"13\" viewBox=\"0 0 18 18\" fill=\"#A5A1A1\" />\n                </button>\n              </div>\n            )\n          },\n        },\n      ]\n    : [\n        {\n          title: (\n            <Checkbox\n              className=\"checkbox_design\"\n              checked={selectedRows.length === businessTable.length && businessTable.length}\n              onChange={(e) => handleHeaderCheck(e.target.checked)}\n            />\n          ),\n          dataIndex: 'checkbox',\n          key: 'checkbox',\n          width: '3%',\n          align: 'center',\n          render: (_, record) => {\n            if (record.key === 'noMoreData') {\n              return {\n                children: null,\n                props: {\n                  colSpan: 0, // Adjust this number based on the total number of columns to span\n                },\n              }\n            }\n            return (\n              <Checkbox\n                className=\"checkbox_design\"\n                checked={selectedRows.includes(record.id)}\n                onChange={(e) => handleMemberCheck(record.id, e.target.checked)}\n              />\n            )\n          },\n        },\n        {\n          title: <span style={{ color: '#f50505' }}>{headerLabel}</span>,\n          dataIndex: 'index',\n          key: 'index',\n          width: '5%',\n          align: 'center',\n          render: (text, record, index) => {\n            if (record.key === 'noMoreData') {\n              return {\n                children: null,\n                props: {\n                  colSpan: 0, // Adjust this number based on the total number of columns to span\n                },\n              }\n            }\n            return index + 1\n          },\n        },\n        {\n          title: '',\n          dataIndex: 'name',\n          key: 'name',\n          width: '35%',\n          render: (text, record, index) => {\n            if (record.key === 'noMoreData') {\n              setIsNorMore(true)\n              return {\n                children: (\n                  <div style={{ textAlign: 'center' }}>\n                    <b style={{ color: '#e40e2d', fontSize: '12px' }}>No more Data to load</b>\n                  </div>\n                ),\n                props: {\n                  colSpan: 4, // Adjust this number based on the total number of columns to span\n                },\n              }\n            }\n            return <span className=\"designation-row-name\">{text}</span>\n          },\n        },\n        {\n          title: (\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n              <button\n                type=\"button\"\n                className=\"action-view cross-button\"\n                onClick={() => warning(selectedRows)}\n                style={{ padding: '4px 8px' }}\n              >\n                <DeleteSvg width=\"16\" height=\"15\" viewBox=\"0 0 18 18\" fill=\"#e40e2d\" />\n              </button>\n            </div>\n          ),\n          dataIndex: 'action',\n          key: 'action',\n          width: '5%',\n          align: 'center',\n          render: (_, record) => {\n            if (record.key === 'noMoreData') {\n              return {\n                children: null,\n                props: {\n                  colSpan: 0, // Adjust this number based on the total number of columns to span\n                },\n              }\n            }\n            return (\n              <div style={{ display: 'flex', justifyContent: 'center' }}>\n                <button\n                  type=\"button\"\n                  className=\"action-view  edit-button mx-1\"\n                  style={{ padding: '4px 8px' }}\n                  onClick={() => handleBusinessEditClick(record.id)}\n                >\n                  <EditSvg\n                    width=\"13\"\n                    height=\"13\"\n                    viewBox=\"0 0 18 18\"\n                    fill=\"none\"\n                    color=\"white\"\n                    clipH=\"18\"\n                    clipW=\"18\"\n                  />\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"action-view cross-button mx-1\"\n                  style={{ padding: '4px 8px' }}\n                  onClick={!headerLabel ? () => warning(record.id) : null}\n                >\n                  <DeleteSvg width=\"14\" height=\"13\" viewBox=\"0 0 18 18\" fill=\"#A5A1A1\" />\n                </button>\n              </div>\n            )\n          },\n        },\n      ]\n\n  const displayData = [\n    ...businessTable.map((row, index) => ({\n      key: row.id,\n      id: row.id,\n      index: index + 1,\n      name: row.name,\n    })),\n  ]\n\n  // Append the \"No more Data to load\" message as the last row if noMoreData is true\n  if (!hasMoreRef.current && displayData.length !== 0 && displayData.length > 10) {\n    displayData.push({\n      key: 'noMoreData',\n      index: '',\n      name: 'No more Data to load',\n      checkbox: '',\n      action: '',\n    })\n  }\n\n  let businessComponent\n  if (businessVisible) {\n    businessComponent = <AddBusiness close={closeAddComponent} />\n  } else if (businessVisibleEdit) {\n    businessComponent = <EditBusiness close={closeEditComponent} viewBusiness={viewBusinessData} />\n  } else {\n    businessComponent = (\n      <>\n        <CRow className=\"mt-3 user-master-header\">\n          <CCol sm={8}>\n            <b style={{ paddingLeft: '30px' }}>Business Master</b>\n            <br />\n            <Breadcrumb\n              style={{ paddingLeft: '30px' }}\n              className=\"bread-tab\"\n              separator={<span className=\"breadcrumb-separator\">|</span>}\n              items={[\n                {\n                  title: (\n                    <Link\n                      rel=\"Dashboard\"\n                      to={'/dashboard'}\n                      className=\"bread-items text-decoration-none text-secondary \"\n                    >\n                      Dashboard\n                    </Link>\n                  ),\n                },\n                {\n                  title: (\n                    <span className=\"text-secondary \" style={{ cursor: 'default' }}>\n                      Business Master\n                    </span>\n                  ),\n                },\n              ]}\n            />\n          </CCol>\n\n          <CCol sm={2}>\n            {' '}\n            <div style={{ width: '90%', marginRight: '20px' }} className=\"mt-1 des-mas\">\n              <Input\n                placeholder=\"Search\"\n                variant={'borderless'}\n                className=\"border-0 time-border-bottom \"\n                onChange={(e) => handleSearch(e.target.value)}\n                prefix={\n                  <img\n                    src={searchIcon}\n                    alt=\"Search\"\n                    className=\"search-icon\"\n                    style={{ width: '14px', height: '14px' }}\n                  />\n                }\n              />\n            </div>\n          </CCol>\n          <CCol sm={2}>\n            <button\n              className=\"bus-createflow-button button-clr\"\n              type=\"button\"\n              onClick={openBusinessModal}\n            >\n              <span className=\"plus-lable\">+</span> Add Business\n            </button>\n          </CCol>\n        </CRow>\n\n        <div className=\"mt-2 design_table\">\n          <style>\n            {`\n            .design_table .ant-table-wrapper .ant-table-thead > tr > th {\n              background-color: ${headerLabel ? '#ffa5b240 !important' : ''};\n            }\n          `}\n          </style>\n\n          <Table\n            columns={columns}\n            dataSource={displayData}\n            className={`${isNorMore ? 'last-row-table' : ''}`}\n            size={'middle'}\n            rowKey=\"id\"\n            pagination={false}\n            scroll={{ y: 490 }}\n            loading={{\n              spinning: commonLoader,\n              indicator: <CSpinner color=\"danger\" />,\n            }}\n          />\n        </div>\n      </>\n    )\n  }\n\n  const fetchMoreData = () => {\n    if (hasMoreRef.current) {\n      getBusinessList()\n    }\n  }\n\n  const handleScroll = useCallback(\n    debounce(() => {\n      if (!tableBodyRef.current) return\n\n      const { scrollTop, scrollHeight, clientHeight } = tableBodyRef.current\n      if (scrollTop + clientHeight >= scrollHeight - 10) {\n        if (hasMoreRef.current && !commonLoader) {\n          setCommonLoader(true)\n          fetchMoreData()\n        }\n      }\n    }, 100),\n    [hasMoreRef.current, commonLoader],\n  )\n\n  useEffect(() => {\n    const tableBody = document.querySelector('.design_table .ant-table-body')\n    if (tableBody) {\n      tableBodyRef.current = tableBody\n      tableBody.addEventListener('scroll', handleScroll)\n    }\n\n    return () => {\n      if (tableBody) {\n        tableBody.removeEventListener('scroll', handleScroll)\n      }\n    }\n  }, [handleScroll])\n\n  return businessComponent\n}\n\nexport default Business\n","import React, { useRef, useState, useEffect } from 'react'\nimport { getHeaders } from 'src/constant/Global'\nimport { CCol, CRow, CButton, CForm, CFormLabel } from '@coreui/react'\nimport PropTypes from 'prop-types'\nimport { Breadcrumb, Button, Input } from 'antd'\nimport { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport BackArrowSvg from 'src/views/svgImages/BackArrowSvg'\nimport { Link } from 'react-router-dom'\nimport PlusSvg from 'src/views/svgImages/PlusSvg'\nimport DeleteSvg from 'src/views/svgImages/DeleteSvg'\nimport useAxios from 'src/constant/UseAxios'\n\nconst AddTaskActivity = ({ close }) => {\n  let api = useAxios()\n  const [validated, setValidated] = useState(false)\n  const [task, setTask] = useState('')\n  const [activity, setActivity] = useState([{}])\n  const [taskValues, setTaskValues] = useState([''])\n  const formRef = useRef(null)\n  const [errors, setErrors] = useState({ task: '', activity: [] })\n  const [loadings, setLoadings] = useState(false)\n  const [showAddButton, setShowAddButton] = useState([true])\n  const [showAddButtonpre, setShowAddButtonpre] = useState([true])\n\n  useEffect(() => {\n    const newShowAddButton = Array.from({ length: taskValues.length }, () => true)\n    setShowAddButtonpre(newShowAddButton)\n  }, [taskValues])\n\n  const onInputChange = (e) => {\n    const { value } = e.target\n    const regex = /^(?!^\\s)[A-Za-z\\s\\-&/]*[A-Za-z][A-Za-z\\s\\-&/]*$/\n\n    if (regex.test(value) || value === '') {\n      setTask(value)\n    }\n  }\n  useEffect(() => {}, [])\n  //    useEffect(() => {\n  //      window.addEventListener('keydown', handleKeyDown)\n  //      return () => {\n  //        window.removeEventListener('keydown', handleKeyDown)\n  //      }\n  //    }, [])\n  const validateForm = () => {\n    const errors = {\n      task: '',\n      activity: Array.from({ length: activity.length }, () => ''),\n    }\n\n    if (task === '') {\n      errors.task = 'Please Enter Task'\n    }\n    taskValues.forEach((value, index) => {\n      if (value === '') {\n        errors.activity[index] = 'Please Enter Activity'\n      }\n    })\n    setErrors(errors)\n\n    // Check if any errors exist\n    const hasErrors =\n      Object.values(errors.activity).some((value) => value !== '') || errors.task !== ''\n    return !hasErrors\n  }\n  //   const handleKeyDown = (event) => {\n  //     if (event.key === 'r') {\n  //       event.preventDefault()\n  //       addActivity()\n  //     }\n  //   }\n  const handleSubmit = async (event, values) => {\n    event.preventDefault()\n    const form = event.currentTarget\n    const isFormValid = validateForm()\n    if (isFormValid) {\n      if (form.checkValidity() === false) {\n        event.preventDefault()\n        event.stopPropagation()\n        setValidated(true)\n      } else {\n        const formData = new FormData()\n        formData.append('groupName', task)\n        formData.append('category', taskValues)\n        setLoadings(true)\n\n        const url = 'master/taskcategory/create'\n        await api\n          .post(url, formData, {\n            headers: getHeaders('multi'),\n          })\n          .then((response) => {\n            setLoadings(false)\n            if (response.status === 208) {\n              toast.error(response.data.message, {\n                position: toast.POSITION.BOTTOM_RIGHT,\n                autoClose: 3000,\n              })\n            } else {\n              toast.success(response.data.message, {\n                position: toast.POSITION.BOTTOM_RIGHT,\n                autoClose: 3000,\n              })\n              if (formRef.current) {\n                formRef.current.reset()\n              }\n              resetComponent()\n            }\n          })\n          .catch((error) => {\n            setLoadings(false)\n            const errorMesssage = error.response.data\n            if (errorMesssage) {\n              toast.error(errorMesssage.message, {\n                position: toast.POSITION.BOTTOM_RIGHT,\n                autoClose: 3000,\n              })\n            } else {\n              toast.error(error, {\n                position: toast.POSITION.BOTTOM_RIGHT,\n                autoClose: 3000,\n              })\n            }\n          })\n      }\n    }\n  }\n  const resetComponent = () => {\n    setTask('')\n    setTaskValues([''])\n    close()\n  }\n  const addActivity = (index) => {\n    setActivity([...activity, {}])\n    setTaskValues([...taskValues, ''])\n    setErrors((prevErrors) => ({ ...prevErrors, activity: [...prevErrors.activity, ''] }))\n    setShowAddButton(() => {\n      const newShowAddButton = showAddButtonpre.map((value, i) => (i === index ? false : false))\n      return newShowAddButton\n    })\n  }\n  const removeActivity = (index) => {\n    if (index !== 0) {\n      setActivity((prevActivity) => {\n        const updatedActivity = [...prevActivity]\n        updatedActivity.splice(index, 1)\n        return updatedActivity\n      })\n\n      setTaskValues((prevTaskValues) => {\n        const updatedTaskValues = [...prevTaskValues]\n        updatedTaskValues.splice(index, 1)\n        return updatedTaskValues\n      })\n      setErrors((prevErrors) => {\n        const updatedErrors = { ...prevErrors }\n        updatedErrors.activity.splice(index, 1)\n        return updatedErrors\n      })\n    }\n    setShowAddButton((prevShowAddButton) => {\n      const newShowAddButton = [...prevShowAddButton] // Make a copy of the original array\n      newShowAddButton[index - 1] = true // Set the last index to true\n      return newShowAddButton\n    })\n  }\n  return (\n    <>\n      <CRow>\n        <CCol\n          sm={2}\n          style={{ width: '26px', display: 'flex', marginLeft: '17px', marginTop: '40px' }}\n        >\n          <span style={{ cursor: 'pointer' }} onClick={close}>\n            <BackArrowSvg width=\"16\" height=\"15\" viewBox=\"0 0 18 18\" fill=\"#A5A1A1\" />\n          </span>\n        </CCol>\n        <CCol>\n          <h6 className=\"Add_draft-heading\" style={{ marginTop: '29px' }}>\n            Add Task Activity\n          </h6>\n          <Breadcrumb\n            className=\"bread-tab\"\n            separator={<span className=\"breadcrumb-separator\">|</span>}\n            items={[\n              {\n                title: (\n                  <Link\n                    rel=\"Dashboard\"\n                    to={'/dashboard'}\n                    className=\"bread-items text-decoration-none text-secondary \"\n                  >\n                    Dashboard\n                  </Link>\n                ),\n              },\n              {\n                title: (\n                  <span\n                    className=\"bread-items text-secondary second-subheading\"\n                    style={{ cursor: 'pointer' }}\n                    onClick={resetComponent}\n                  >\n                    Task Activity Master\n                  </span>\n                ),\n              },\n              {\n                title: (\n                  <span className=\"text-secondary second-subheading\" style={{ cursor: 'default' }}>\n                    Add Task Activity\n                  </span>\n                ),\n              },\n            ]}\n          />\n          {/* </CCol>\n      </CRow>\n\n      <CRow> */}\n          <CCol xs={8} className=\"\" style={{ width: '100%' }}>\n            <CForm\n              className=\"mt-4  needs-validation\"\n              ref={formRef}\n              validated={validated}\n              onSubmit={handleSubmit}\n            >\n              <div className=\"activity_overflow\">\n                <CRow>\n                  <CCol sm={3}>\n                    <div className=\"label-field-container\">\n                      <CFormLabel className=\"form-label text-c\" htmlFor=\"validationCustom01\">\n                        Group Name{' '}\n                        <span className=\"red-text1\" style={{ marginLeft: '5px' }}>\n                          *\n                        </span>\n                      </CFormLabel>\n                      <Input\n                        style={{ marginTop: '10px', width: '90%' }}\n                        variant={'borderless'}\n                        maxLength={48}\n                        className=\"border-0 time-border-bottom  \"\n                        placeholder=\"Enter Task\"\n                        value={task}\n                        onChange={onInputChange}\n                      ></Input>\n                    </div>\n                    <span className=\"text-danger nameflow-error\">{errors.task}</span>{' '}\n                  </CCol>\n                  {activity.map((flow, index) => (\n                    <React.Fragment key={index}>\n                      <CCol sm={2}>\n                        <div className=\"label-field-container\">\n                          <CFormLabel className=\"form-label text-c\" htmlFor=\"validationCustom01\">\n                            Activity{' '}\n                            <span className=\"red-text1\" style={{ marginLeft: '5px' }}>\n                              *\n                            </span>\n                          </CFormLabel>\n\n                          <Input\n                            style={{ marginTop: '10px' }}\n                            variant={'borderless'}\n                            className=\"border-0 time-border-bottom  \"\n                            type=\"text\"\n                            maxLength={48}\n                            id={`validationCustom${index + 1}`}\n                            placeholder=\"Enter Activity\"\n                            value={taskValues[index]}\n                            onChange={(event) => {\n                              const selectedValue = event ? event.target.value : ''\n                              const regex = /^(?!^\\s)[A-Za-z\\s\\-&/]*[A-Za-z][A-Za-z\\s\\-&/]*$/ // Regex to allow alphabets, hyphen, and space\n\n                              if (regex.test(selectedValue) || selectedValue === '') {\n                                const updatedValues = [...taskValues]\n                                updatedValues[index] = selectedValue\n                                setTaskValues(updatedValues)\n                              }\n                            }}\n                          />\n                        </div>\n                        <span className=\"text-danger nameflow-error\">{errors.activity[index]}</span>{' '}\n                      </CCol>\n                      <CCol sm={1} className=\"my-4\">\n                        <div className=\"label-field-container\">\n                          {index !== 0 ? (\n                            <div\n                              style={{\n                                display: 'flex',\n                                width: '60px',\n                                justifyContent: 'space-around',\n                              }}\n                            >\n                              {' '}\n                              {showAddButton[index] === false ? (\n                                <>\n                                  <button\n                                    style={{ marginRight: '40px' }}\n                                    className=\"text-decoration-none border-0  delete_svg\"\n                                    type=\"button\"\n                                    // className=\"text-decoration-none add-row float-end\"\n                                    onClick={() => removeActivity(index)}\n                                  >\n                                    <DeleteSvg\n                                      width=\"15\"\n                                      height=\"15\"\n                                      viewBox=\"0 0 18 18\"\n                                      fill=\"#A5A1A1\"\n                                    />\n                                  </button>\n                                </>\n                              ) : (\n                                <>\n                                  <button\n                                    className=\"text-decoration-none border-0 plus_svg\"\n                                    onClick={() => addActivity(index)}\n                                    type=\"button\"\n                                  >\n                                    {' '}\n                                    <PlusSvg\n                                      width=\"8\"\n                                      height=\"12\"\n                                      viewBox=\"0 0 18 18\"\n                                      fill=\"#A5A1A1\"\n                                    />\n                                  </button>\n                                  <button\n                                    className=\"text-decoration-none border-0  delete_svg\"\n                                    type=\"button\"\n                                    // className=\"text-decoration-none add-row float-end\"\n                                    onClick={() => removeActivity(index)}\n                                  >\n                                    <DeleteSvg\n                                      width=\"12\"\n                                      height=\"15\"\n                                      viewBox=\"0 0 18 18\"\n                                      fill=\"#A5A1A1\"\n                                    />\n                                  </button>\n                                </>\n                              )}\n                            </div>\n                          ) : (\n                            <>\n                              {showAddButton[0] ? (\n                                <button\n                                  className=\"text-decoration-none border-0 plus_svg\"\n                                  onClick={() => addActivity(index)}\n                                  type=\"button\"\n                                >\n                                  {' '}\n                                  <PlusSvg\n                                    width=\"8\"\n                                    height=\"12\"\n                                    viewBox=\"0 0 18 18\"\n                                    fill=\"#A5A1A1\"\n                                  />\n                                </button>\n                              ) : (\n                                ''\n                              )}\n                            </>\n                          )}\n                        </div>\n                      </CCol>\n                    </React.Fragment>\n                  ))}\n                </CRow>\n              </div>\n              <div style={{ position: 'absolute', left: 0, right: '17px' }}>\n                <CRow className=\"m-3\">\n                  <CCol sm={6}></CCol>\n                  <CCol sm={6} className=\"d-flex justify-content-end align-items-center\">\n                    <CButton className=\"cancel-btn text-c\" onClick={close}>\n                      Cancel\n                    </CButton>\n                    <Button\n                      className=\" Edit_save_changes\"\n                      style={{ fontSize: '13px', color: 'white' }}\n                      htmlType=\"submit\"\n                      loading={loadings}\n                    >\n                      Submit\n                    </Button>\n                  </CCol>\n                </CRow>\n              </div>\n            </CForm>\n          </CCol>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nAddTaskActivity.propTypes = {\n  close: PropTypes.func,\n}\nexport default AddTaskActivity\n","import React, { useRef, useState, useEffect } from 'react'\nimport { getHeaders } from 'src/constant/Global'\nimport { CCol, CRow, CButton, CForm, CFormLabel } from '@coreui/react'\nimport PropTypes from 'prop-types'\nimport { Breadcrumb, Button, Input } from 'antd'\nimport { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport BackArrowSvg from 'src/views/svgImages/BackArrowSvg'\nimport { Link } from 'react-router-dom'\nimport PlusSvg from 'src/views/svgImages/PlusSvg'\nimport DeleteSvg from 'src/views/svgImages/DeleteSvg'\nimport useAxios from 'src/constant/UseAxios'\n\nconst EditTaskActivity = ({ close, viewTask }) => {\n  let api = useAxios()\n  const [validated, setValidated] = useState(false)\n  const [task, setTask] = useState(viewTask.groupName)\n  const [activity, setActivity] = useState(viewTask.categories)\n  const [taskValues, setTaskValues] = useState(viewTask.categories)\n  const formRef = useRef(null)\n  const [errors, setErrors] = useState({ task: '', activity: [] }) // State for managing errors\n  const [loadings, setLoadings] = useState(false)\n  const [showAddButton, setShowAddButton] = useState([false])\n  const [showAddButtonpre, setShowAddButtonpre] = useState([true])\n\n  useEffect(() => {\n    const newShowAddButton = Array.from({ length: taskValues.length }, () => true)\n    const newShowAddButtonArray = Array.from({ length: taskValues.length }, () => false)\n    setShowAddButtonpre(newShowAddButton)\n    if (taskValues.length > 0) {\n      newShowAddButtonArray[taskValues.length - 1] = true\n    }\n    setShowAddButton(newShowAddButtonArray)\n  }, [taskValues])\n\n  const onInputChange = (e) => {\n    const { value } = e.target\n    const regex = /^(?!^\\s)[A-Za-z\\s\\-&/]*[A-Za-z][A-Za-z\\s\\-&/]*$/ // Regex to allow alphabets, hyphen, and space\n\n    if (regex.test(value) || value === '') {\n      setTask(value)\n    }\n  }\n  useEffect(() => {}, [])\n\n  const validateForm = () => {\n    const errors = {\n      task: '',\n      activity: Array.from({ length: activity.length }, () => ''),\n    }\n\n    if (task === '') {\n      errors.task = 'Please Enter Task'\n    }\n    taskValues.forEach((value, index) => {\n      if (value === '') {\n        errors.activity[index] = 'Please Enter Activity'\n      }\n    })\n    setErrors(errors)\n\n    // Check if any errors exist\n    const hasErrors =\n      Object.values(errors.activity).some((value) => value !== '') || errors.task !== ''\n    return !hasErrors\n  }\n  const handleSubmit = async (event, values) => {\n    event.preventDefault()\n    const form = event.currentTarget\n    const isFormValid = validateForm()\n    if (isFormValid) {\n      if (form.checkValidity() === false) {\n        event.preventDefault()\n        event.stopPropagation()\n        setValidated(true)\n      } else {\n        const formData = new FormData()\n        formData.append('groupName', task)\n        formData.append('category', taskValues)\n        setLoadings(true)\n\n        const url = 'master/taskcategory/update/' + viewTask.id\n        await api\n          .put(url, formData, {\n            headers: getHeaders('multi'),\n          })\n          .then((response) => {\n            setLoadings(false)\n            if (response.status === 208) {\n              toast.error(response.data.message, {\n                position: toast.POSITION.BOTTOM_RIGHT,\n                autoClose: 3000,\n              })\n            } else {\n              toast.success(response.data.message, {\n                position: toast.POSITION.BOTTOM_RIGHT,\n                autoClose: 3000,\n              })\n              if (formRef.current) {\n                formRef.current.reset()\n              }\n              resetComponent()\n            }\n          })\n          .catch((error) => {\n            setLoadings(false)\n            const errorMesssage = error.response.data\n            if (errorMesssage) {\n              toast.error(errorMesssage.message, {\n                position: toast.POSITION.BOTTOM_RIGHT,\n                autoClose: 3000,\n              })\n            } else {\n              toast.error(error, {\n                position: toast.POSITION.BOTTOM_RIGHT,\n                autoClose: 3000,\n              })\n            }\n          })\n      }\n    }\n  }\n  const resetComponent = () => {\n    setTask('')\n    setTaskValues([''])\n    close()\n  }\n  const addActivity = (index) => {\n    setActivity([...activity, {}])\n    setTaskValues([...taskValues, ''])\n    setErrors((prevErrors) => ({ ...prevErrors, activity: [...prevErrors.activity, ''] }))\n    setShowAddButton(() => {\n      const newShowAddButton = showAddButtonpre.map((value, i) => (i === index ? false : false))\n      return newShowAddButton\n    })\n  }\n  const removeActivity = (index) => {\n    if (index !== 0) {\n      setActivity((prevActivity) => {\n        const updatedActivity = [...prevActivity]\n        updatedActivity.splice(index, 1)\n        return updatedActivity\n      })\n\n      setTaskValues((prevTaskValues) => {\n        const updatedTaskValues = [...prevTaskValues]\n        updatedTaskValues.splice(index, 1)\n        return updatedTaskValues\n      })\n      setErrors((prevErrors) => {\n        const updatedErrors = { ...prevErrors }\n        updatedErrors.activity.splice(index, 1)\n        return updatedErrors\n      })\n    }\n    setShowAddButton((prevShowAddButton) => {\n      const newShowAddButton = [...prevShowAddButton] // Make a copy of the original array\n      newShowAddButton[index - 1] = true // Set the last index to true\n      return newShowAddButton\n    })\n  }\n  return (\n    <>\n      <CRow>\n        <CCol\n          sm={2}\n          style={{ width: '26px', display: 'flex', marginLeft: '17px', marginTop: '40px' }}\n        >\n          <span style={{ cursor: 'pointer' }} onClick={close}>\n            <BackArrowSvg width=\"16\" height=\"15\" viewBox=\"0 0 18 18\" fill=\"#A5A1A1\" />\n          </span>\n        </CCol>\n        <CCol>\n          <h6 className=\"draft-heading\" style={{ marginTop: '29px' }}>\n            Edit Task Activity\n          </h6>\n          <Breadcrumb\n            className=\"bread-tab\"\n            separator={<span className=\"breadcrumb-separator\">|</span>}\n            items={[\n              {\n                title: (\n                  <Link\n                    rel=\"Dashboard\"\n                    to={'/dashboard'}\n                    className=\"bread-items text-decoration-none text-secondary first-subheading\"\n                  >\n                    Dashboard\n                  </Link>\n                ),\n              },\n              {\n                title: (\n                  <span\n                    className=\"bread-items text-secondary second-subheading\"\n                    style={{ cursor: 'pointer' }}\n                    onClick={resetComponent}\n                  >\n                    Task Activity Master\n                  </span>\n                ),\n              },\n              {\n                title: (\n                  <span className=\"text-secondary second-subheading\" style={{ cursor: 'default' }}>\n                    Edit Task Activity\n                  </span>\n                ),\n              },\n            ]}\n          />\n\n          <CCol xs={12} className=\"\" style={{ marginLeft: '22px', width: '100%' }}>\n            <CForm\n              className=\"mt-4  needs-validation\"\n              ref={formRef}\n              validated={validated}\n              onSubmit={handleSubmit}\n            >\n              <div className=\"activity_overflow\">\n                <CRow gutter={16}>\n                  <CCol sm={3} span={6}>\n                    <div className=\"label-field-container\">\n                      <CFormLabel className=\"form-label text-c\" htmlFor=\"validationCustom01\">\n                        GroupName{' '}\n                        <span className=\"red-text1\" style={{ marginLeft: '5px' }}>\n                          *\n                        </span>\n                      </CFormLabel>\n                      <Input\n                        style={{ width: '95%' }}\n                        variant={'borderless'}\n                        maxLength={48}\n                        className=\"border-0 time-border-bottom\"\n                        placeholder=\"Enter Task\"\n                        value={task}\n                        onChange={onInputChange}\n                      ></Input>\n                    </div>\n                    <span className=\"text-danger nameflow-error\">{errors.task}</span>{' '}\n                    {/* Display task error */}\n                  </CCol>\n                  {activity.map((flow, index) => (\n                    <React.Fragment key={index}>\n                      <CCol sm={2}>\n                        <div className=\"label-field-container\">\n                          <CFormLabel className=\"form-label text-c\" htmlFor=\"validationCustom01\">\n                            Activity{' '}\n                            <span className=\"red-text1\" style={{ marginLeft: '5px' }}>\n                              *\n                            </span>\n                          </CFormLabel>\n\n                          <Input\n                            variant={'borderless'}\n                            className=\"border-0 time-border-bottom\"\n                            type=\"text\"\n                            maxLength={48}\n                            id={`validationCustom${index + 1}`}\n                            placeholder=\"Enter Activity\"\n                            value={taskValues[index]}\n                            onChange={(event) => {\n                              // const selectedValue = event ? event.target.value : ''\n                              // const re = /^[A-Za-z\\s]*$/ // Allow alphabetical characters and whitespace\n\n                              // if (re.test(selectedValue)) {\n                              //   const updatedValues = [...taskValues]\n                              //   updatedValues[index] = selectedValue\n                              //   setTaskValues(updatedValues)\n                              // }\n                              const selectedValue = event ? event.target.value : ''\n                              const regex = /^(?!^\\s)[A-Za-z\\s\\-&/]*[A-Za-z][A-Za-z\\s\\-&/]*$/ // Regex to allow alphabets, hyphen, and space\n\n                              if (regex.test(selectedValue) || selectedValue === '') {\n                                const updatedValues = [...taskValues]\n                                updatedValues[index] = selectedValue\n                                setTaskValues(updatedValues)\n                              }\n                            }}\n                          />\n                        </div>\n                        <span className=\"text-danger nameflow-error\">{errors.activity[index]}</span>{' '}\n                        {/* Display activity error */}\n                      </CCol>\n                      <CCol sm={1} className=\"my-4\">\n                        <div className=\"label-field-container\">\n                          {index !== 0 ? (\n                            <div style={{ display: 'flex', width: '20px' }}>\n                              {' '}\n                              {showAddButton[index] === false ? (\n                                <>\n                                  <button\n                                    className=\"text-decoration-none border-0  d-flex delete_svg\"\n                                    type=\"button\"\n                                    onClick={() => removeActivity(index)}\n                                  >\n                                    <DeleteSvg\n                                      width=\"12\"\n                                      height=\"15\"\n                                      viewBox=\"0 0 18 18\"\n                                      fill=\"#A5A1A1\"\n                                    />\n                                  </button>\n                                </>\n                              ) : (\n                                <>\n                                  <button\n                                    className=\"text-decoration-none border-0  d-flex plus_svg\"\n                                    type=\"button\"\n                                    onClick={() => addActivity(index)}\n                                  >\n                                    {' '}\n                                    <PlusSvg\n                                      width=\"8\"\n                                      height=\"12\"\n                                      viewBox=\"0 0 18 18\"\n                                      fill=\"#A5A1A1\"\n                                    />\n                                  </button>\n                                  <button\n                                    className=\"text-decoration-none border-0  d-flex delete_svg\"\n                                    type=\"button\"\n                                    onClick={() => removeActivity(index)}\n                                  >\n                                    <DeleteSvg\n                                      width=\"12\"\n                                      height=\"15\"\n                                      viewBox=\"0 0 18 18\"\n                                      fill=\"#A5A1A1\"\n                                    />\n                                  </button>\n                                </>\n                              )}\n                            </div>\n                          ) : (\n                            <>\n                              {showAddButton[0] ? (\n                                <button\n                                  className=\"text-decoration-none border-0  d-flex plus_svg\"\n                                  type=\"button\"\n                                  onClick={() => addActivity(index)}\n                                >\n                                  {' '}\n                                  <PlusSvg\n                                    width=\"8\"\n                                    height=\"12\"\n                                    viewBox=\"0 0 18 18\"\n                                    fill=\"#A5A1A1\"\n                                  />\n                                </button>\n                              ) : (\n                                ''\n                              )}\n                            </>\n                          )}\n                        </div>\n                      </CCol>\n                    </React.Fragment>\n                  ))}\n                </CRow>\n              </div>\n              <div style={{ position: 'absolute', left: 0, right: '17px' }}>\n                <CRow className=\"m-3\">\n                  <CCol sm={6}></CCol>\n                  <CCol sm={6} className=\"d-flex justify-content-end align-items-center\">\n                    <CButton className=\"cancel-btn text-c\" onClick={close}>\n                      Cancel\n                    </CButton>\n                    <Button\n                      className=\" Edit_save_changes\"\n                      style={{ fontSize: '13px', color: 'white' }}\n                      htmlType=\"submit\"\n                      loading={loadings}\n                    >\n                      Update\n                    </Button>\n                  </CCol>\n                </CRow>\n              </div>\n            </CForm>\n          </CCol>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nEditTaskActivity.propTypes = {\n  close: PropTypes.func,\n  viewTask: PropTypes.object,\n}\nexport default EditTaskActivity\n","import React, { useRef, useState, useEffect } from 'react'\nimport { getHeaders } from 'src/constant/Global'\nimport { CCol, CRow, CButton, CForm, CFormLabel } from '@coreui/react'\nimport PropTypes from 'prop-types'\nimport { Breadcrumb, Button, Select } from 'antd'\nimport { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport BackArrowSvg from 'src/views/svgImages/BackArrowSvg'\nimport { Link } from 'react-router-dom'\nimport useAxios from 'src/constant/UseAxios'\nimport Downarrowimg from '../../../assets/images/downarrow.png'\nconst DesignationMapping = ({ close, viewDesignation, viewTask }) => {\n  let api = useAxios()\n  const formRef = useRef(null)\n  const [selectedDesignation, setSelectedDesignation] = useState([])\n  const [loadings, setLoadings] = useState(false)\n  const [errors, setErrors] = useState({ designationError: '' })\n  useEffect(() => {\n    if (viewTask) {\n      const value = viewTask.designations\n      if (value) {\n        const designation = value.map((data) => ({\n          value: data,\n          label: viewDesignation.find((role) => role.id === data)?.name || '',\n        }))\n        setSelectedDesignation(designation)\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [viewTask])\n  const validateForm = () => {\n    const errors = {\n      designationError: '',\n    }\n    if (selectedDesignation.length === 0) {\n      errors.designationError = 'Please Select Designation'\n    }\n    setErrors(errors)\n\n    // Check if any errors exist\n    const hasErrors = errors.designationError !== ''\n    return !hasErrors\n  }\n  const resetComponent = () => {\n    close()\n  }\n  const options1 = [\n    // Include an empty option\n    ...viewDesignation.map((roles) => ({\n      value: roles.id,\n      label: roles.name,\n    })),\n  ]\n\n  const handleDesignation = (selectedValues) => {\n    setSelectedDesignation(selectedValues)\n  }\n\n  const handleSubmit = async () => {\n    // const idsString = selectedDesignation.map((item) => item.value).join(',')\n    const isFormValid = validateForm()\n    if (isFormValid) {\n      setLoadings(true)\n      const url = `master/taskcategory/map/designation?groupId=${viewTask.id}&roleId=${selectedDesignation}`\n      api\n        .post(url, null, {\n          headers: getHeaders('json'),\n        })\n        .then((response) => {\n          // setViewtaskData(response.data.data)\n          // setTaskVisibleView(true)\n          if (response.data.status === true) {\n            toast.success('Designation Mapped SuccesFully', {\n              position: toast.POSITION.BOTTOM_RIGHT,\n              autoClose: 3000,\n            })\n            setLoadings(false)\n            resetComponent()\n          }\n        })\n        .catch((error) => {\n          setLoadings(false)\n          toast.error('Error fetching data', {\n            position: toast.POSITION.BOTTOM_RIGHT,\n            autoClose: 3000,\n          })\n        })\n    }\n  }\n  return (\n    <>\n      <CRow>\n        <CCol\n          sm={2}\n          style={{ width: '26px', display: 'flex', marginLeft: '17px', marginTop: '40px' }}\n        >\n          <span style={{ cursor: 'pointer' }} onClick={close}>\n            <BackArrowSvg width=\"16\" height=\"15\" viewBox=\"0 0 18 18\" fill=\"#A5A1A1\" />\n          </span>\n        </CCol>\n        <CCol>\n          <h6 className=\"draft-heading\" style={{ marginTop: '29px' }}>\n            Designation Mapping\n          </h6>\n          <Breadcrumb\n            className=\"bread-tab\"\n            separator={<span className=\"breadcrumb-separator\">|</span>}\n            items={[\n              {\n                title: (\n                  <Link\n                    rel=\"Dashboard\"\n                    to={'/dashboard'}\n                    className=\"bread-items text-decoration-none text-secondary first-subheading\"\n                  >\n                    Dashboard\n                  </Link>\n                ),\n              },\n              {\n                title: (\n                  <span\n                    className=\"bread-items text-secondary second-subheading\"\n                    style={{ cursor: 'pointer' }}\n                    onClick={resetComponent}\n                  >\n                    Task Activity Master\n                  </span>\n                ),\n              },\n              {\n                title: (\n                  <span className=\"text-secondary second-subheading\" style={{ cursor: 'default' }}>\n                    Designation Mapping\n                  </span>\n                ),\n              },\n            ]}\n          />\n        </CCol>\n      </CRow>\n\n      <CRow>\n        <CCol xs={12} className=\"\" style={{ marginLeft: '63px', width: '100%' }}>\n          <CForm className=\"mt-4  needs-validation\" ref={formRef} onSubmit={handleSubmit}>\n            <div className=\"activity_overflow\">\n              <CRow gutter={16}>\n                <CCol sm={3} span={6}>\n                  <div className=\"label-field-container\">\n                    <CFormLabel className=\"form-label text-c\" htmlFor=\"validationCustom01\">\n                      Designation\n                    </CFormLabel>\n                    <Select\n                      suffixIcon={\n                        <img\n                          src={Downarrowimg}\n                          alt=\"Downarrowimg\"\n                          style={{ width: '12px', height: '7px' }}\n                        />\n                      }\n                      className=\"form-custom-selects\"\n                      value={selectedDesignation}\n                      onChange={handleDesignation}\n                      showSearch\n                      placeholder=\"Choose Designation\"\n                      mode=\"multiple\"\n                      allowClear\n                      options={options1}\n                      filterOption={(input, option) =>\n                        option.label.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                      }\n                    />\n                  </div>\n                  <span className=\"text-danger nameflow-error\">{errors.designationError}</span>\n                </CCol>\n              </CRow>\n            </div>\n            <div style={{ position: 'absolute', left: 0, right: '17px' }}>\n              <CRow className=\"m-3\">\n                <CCol sm={6}></CCol>\n                <CCol sm={6} className=\"d-flex justify-content-end align-items-center\">\n                  <CButton className=\"cancel-btn text-c\" onClick={close}>\n                    Cancel\n                  </CButton>\n                  <Button\n                    className=\"Edit_save_changes\"\n                    style={{ fontSize: '13px', color: 'white' }}\n                    htmlType=\"submit\"\n                    loading={loadings}\n                  >\n                    Submit\n                  </Button>\n                </CCol>\n              </CRow>\n            </div>\n          </CForm>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nDesignationMapping.propTypes = {\n  close: PropTypes.func,\n  viewDesignation: PropTypes.array,\n  viewTask: PropTypes.object,\n}\nexport default DesignationMapping\n","import React, { useState, useEffect, useRef, useCallback } from 'react'\nimport { CCol, CRow, CSpinner } from '@coreui/react'\nimport { getHeaders } from 'src/constant/Global'\nimport 'react-toastify/dist/ReactToastify.css'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport { Breadcrumb, Checkbox, Input, Modal, Table } from 'antd'\nimport EditSvg from '../../svgImages/EditSvg'\nimport DeleteSvg from '../../svgImages/DeleteSvg'\nimport useAxios from 'src/constant/UseAxios'\nimport { toast } from 'react-toastify'\nimport searchIcon from '../../../assets/images/form/search-Icon.png'\nimport { ExclamationCircleFilled } from '@ant-design/icons'\nimport { Link } from 'react-router-dom'\nimport debounce from 'lodash.debounce'\nimport PlusSvg from 'src/views/svgImages/PlusSvg'\nimport AddTaskActivity from './AddTaskActivity'\nimport EditTaskActivity from './EditTaskActivity'\nimport DesignationMapping from './DesignationMapping'\nconst { confirm } = Modal\nconst TaskActivity = () => {\n  let api = useAxios()\n  const [taskTable, setTaskTable] = useState([])\n  const [selectedRows, setSelectedRows] = useState([])\n  const [headerLabel, setHeaderLabel] = useState('')\n  const [taskVisible, setTaskVisible] = useState(false)\n  const [taskVisibleEdit, setTaskVisibleEdit] = useState(false)\n  const [viewTaskData, setViewTaskData] = useState(null)\n  const [taskDesignationView, setTaskDesignationView] = useState(false)\n  const [designationValue, setDesignationValue] = useState([])\n  const searchValueRef = useRef('')\n  const [commonLoader, setCommonLoader] = useState(true)\n  const [abortController, setAbortController] = useState(new AbortController())\n  const tableBodyRef = useRef(null)\n  const hasMoreRef = useRef(true)\n  const pageRef = useRef(0)\n  const searchRef = useRef(false)\n  const [isNorMore, setIsNorMore] = useState(false)\n\n  useEffect(() => {\n    if (!taskVisible && !taskVisibleEdit) {\n      hasMoreRef.current = true\n      getTaskList()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [taskVisible, taskVisibleEdit])\n\n  const handleHeaderCheck = (isChecked) => {\n    if (isChecked) {\n      const allRowIds = taskTable.map((row) => row.id)\n      setSelectedRows(allRowIds)\n      setHeaderLabel(`${allRowIds.length} Selected`)\n    } else {\n      setSelectedRows([])\n      setHeaderLabel('')\n    }\n  }\n\n  const handleSearch = (value) => {\n    pageRef.current = 0\n    hasMoreRef.current = true\n    searchValueRef.current = value\n    searchRef.current = true\n    if (value === '') searchRef.current = false\n\n    getTaskList()\n  }\n\n  const handleMemberCheck = (rowId, isChecked) => {\n    if (isChecked) {\n      setSelectedRows((prevSelectedRows) => {\n        const newSelectedRows = [...prevSelectedRows, rowId]\n        setHeaderLabel(`${newSelectedRows.length} Selected`)\n        return newSelectedRows\n      })\n    } else {\n      setSelectedRows((prevSelectedRows) => {\n        const newSelectedRows = prevSelectedRows.filter((selectedId) => selectedId !== rowId)\n        setHeaderLabel(newSelectedRows.length > 0 ? `${newSelectedRows.length} Selected` : '')\n        return newSelectedRows\n      })\n    }\n  }\n\n  const resetEditComponent = () => {\n    setTaskVisibleEdit(false)\n    pageRef.current = 0\n    searchValueRef.current = ''\n    searchRef.current = false\n  }\n\n  const resetAddComponent = () => {\n    setTaskVisible(false)\n    pageRef.current = 0\n    searchValueRef.current = ''\n    searchRef.current = false\n  }\n  const resetDesignationComponent = () => {\n    pageRef.current = 0\n    searchValueRef.current = ''\n    searchRef.current = false\n    setTaskDesignationView(false)\n    // getTaskList()\n  }\n  const getTaskList = async () => {\n    let newAbortController\n    if (pageRef.current === 0) {\n      setCommonLoader(true)\n      setTaskTable([])\n      abortController.abort()\n      newAbortController = new AbortController()\n      setAbortController(newAbortController)\n    }\n\n    const url = `master/taskcategory/list?page=${pageRef.current}&size=10&search=${searchRef.current}&value=${searchValueRef.current}`\n    await api\n      .get(url, {\n        headers: getHeaders('json'),\n        signal: newAbortController?.signal,\n      })\n      .then((response) => {\n        const data = response.data.data.content\n\n        if (pageRef.current === 0) {\n          setTaskTable(data)\n        } else {\n          setTaskTable((prevUserData) => {\n            const uniqueSet = new Set(prevUserData.map((user) => user.id))\n            const newData = data.filter((user) => !uniqueSet.has(user.id))\n            return [...prevUserData, ...newData]\n          })\n        }\n        if (data.length < 10) {\n          hasMoreRef.current = false\n        }\n        pageRef.current = pageRef.current + 1\n        setCommonLoader(false)\n      })\n      .catch((error) => {})\n  }\n\n  const openTaskModal = () => {\n    setTaskVisible(true)\n  }\n  const handleDesignation = async (id) => {\n    const url = `master/taskcategory/roles/` + id\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        const data = response.data.data\n        setDesignationValue(data)\n        setTaskDesignationView(true)\n      })\n      .catch((error) => {})\n  }\n  const designationClick = async (id) => {\n    const url = `master/taskcategory/byid/` + id\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        setViewTaskData(response.data.data)\n        // setTaskVisibleView(true)\n      })\n      .catch((error) => {})\n  }\n  const handleTaskEditClick = async (id) => {\n    const url = `master/taskcategory/byid/` + id\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        const data = response.data.data\n        setViewTaskData(data)\n        setTaskVisibleEdit(true)\n      })\n      .catch((error) => {})\n  }\n\n  const deletefun = async (ids) => {\n    const url = `master/taskcategory/delete/` + ids\n\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        api\n          .delete(url, {\n            headers: getHeaders('json'),\n          })\n          .then((response) => {\n            // Handle success\n            pageRef.current = 0\n            searchValueRef.current = ''\n            searchRef.current = false\n            getTaskList()\n            setHeaderLabel('')\n            setSelectedRows([])\n            resolve(response)\n          })\n          .catch((error) => {\n            // Handle error\n            reject(error)\n          })\n      }, 1000) // Timeout after 1 second\n    })\n  }\n\n  const warning = (id) => {\n    confirm({\n      title: 'Delete Task Activity',\n      content: 'Are you sure to delete this Task Activity ?',\n      icon: <ExclamationCircleFilled />,\n      okText: 'Yes',\n      okType: 'danger',\n      cancelButtonProps: {\n        style: { borderColor: '#f54550', color: 'black' },\n      },\n      closable: true,\n      okButtonProps: {\n        style: { borderColor: '#f54550', color: 'white', backgroundColor: '#f54550' },\n      },\n      cancelText: 'No',\n      async onOk() {\n        try {\n          await deletefun(id)\n          toast.success('Task Activity Deleted Successfully', {\n            position: toast.POSITION.BOTTOM_RIGHT,\n            autoClose: 3000,\n          })\n        } catch (error) {\n          toast.error('Deletion failed', {\n            position: toast.POSITION.BOTTOM_RIGHT,\n            autoClose: 3000,\n          })\n        }\n      },\n      onCancel() {\n        resetValues()\n      },\n    })\n  }\n\n  const resetValues = () => {\n    setSelectedRows([])\n    setHeaderLabel('')\n  }\n\n  const getText = (value, maxLength) => {\n    const modifiedTitle = value\n    return modifiedTitle.length > maxLength\n      ? `${modifiedTitle.substring(0, maxLength)}...`\n      : modifiedTitle\n  }\n\n  const columns = !headerLabel\n    ? [\n        {\n          title: <Checkbox onChange={(e) => handleHeaderCheck(e.target.checked)} />,\n          dataIndex: 'checkbox',\n          key: 'checkbox',\n          width: '3%',\n          align: 'center',\n          render: (_, record) => {\n            if (record.key === 'noMoreData') {\n              return {\n                children: null,\n                props: {\n                  colSpan: 0, // Adjust this number based on the total number of columns to span\n                },\n              }\n            }\n            return (\n              <Checkbox\n                className=\"checkbox_design\"\n                checked={selectedRows.includes(record.id)}\n                onChange={(e) => handleMemberCheck(record.id, e.target.checked)}\n              />\n            )\n          },\n        },\n        {\n          title: 'SI.No',\n          dataIndex: 'index',\n          key: 'index',\n          width: '5%',\n          align: 'center',\n          render: (text, record, index) => {\n            if (record.key === 'noMoreData') {\n              return {\n                children: null,\n                props: {\n                  colSpan: 0, // Adjust this number based on the total number of columns to span\n                },\n              }\n            }\n            return index + 1\n          },\n        },\n        {\n          title: 'Group Name',\n          dataIndex: 'groupName',\n          key: 'groupName',\n          width: '15%',\n          render: (text, record, index) => {\n            console.log(record.key, 'record.key')\n            if (record.key === 'noMoreData') {\n              setIsNorMore(true)\n              return {\n                children: (\n                  <div style={{ textAlign: 'center' }}>\n                    <b style={{ color: '#e40e2d', fontSize: '12px' }}>No more Data to load</b>\n                  </div>\n                ),\n                props: {\n                  colSpan: 5, // Adjust this number based on the total number of columns to span\n                },\n              }\n            }\n            return getText(text, 100)\n          },\n        },\n        {\n          title: 'Activity',\n          dataIndex: 'category',\n          key: 'category',\n          width: '35%',\n          render: (text, record, index) => {\n            if (record.key === 'noMoreData') {\n              return {\n                children: null,\n                props: {\n                  colSpan: 0, // Adjust this number based on the total number of columns to span\n                },\n              }\n            }\n            return getText(text, 100)\n          },\n        },\n        {\n          title: 'Action',\n          dataIndex: 'action',\n          key: 'action',\n          width: '8%',\n          align: 'center',\n          render: (_, record) => {\n            if (record.key === 'noMoreData') {\n              return {\n                children: null,\n                props: {\n                  colSpan: 0, // Adjust this number based on the total number of columns to span\n                },\n              }\n            }\n            return (\n              <div\n                style={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                }}\n              >\n                <button\n                  type=\"button\"\n                  className=\"action-view  edit-button mx-1\"\n                  style={{ padding: '4px 8px' }}\n                  onClick={() => handleTaskEditClick(record.id)}\n                >\n                  <EditSvg\n                    width=\"13\"\n                    height=\"13\"\n                    viewBox=\"0 0 18 18\"\n                    fill=\"none\"\n                    color=\"white\"\n                    clipH=\"18\"\n                    clipW=\"18\"\n                  />\n                </button>\n                <button\n                  type=\"button\"\n                  style={{ padding: '4px 8px' }}\n                  className=\"action-view check-button mx-1\"\n                  onClick={() => {\n                    handleDesignation(record.id)\n                    designationClick(record.id)\n                  }}\n                >\n                  <PlusSvg width=\"13\" height=\"12\" viewBox=\"0 0 18 18\" fill=\"#A5A1A1\" />\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"action-view cross-button mx-1\"\n                  style={{ padding: '4px 8px' }}\n                  onClick={!headerLabel ? () => warning(record.id) : null}\n                >\n                  <DeleteSvg width=\"16\" height=\"15\" viewBox=\"0 0 18 18\" fill=\"#A5A1A1\" />\n                </button>\n              </div>\n            )\n          },\n        },\n      ]\n    : [\n        {\n          title: (\n            <Checkbox\n              className=\"checkbox_design\"\n              checked={selectedRows.length === taskTable.length && taskTable.length}\n              onChange={(e) => handleHeaderCheck(e.target.checked)}\n            />\n          ),\n          dataIndex: 'checkbox',\n          key: 'checkbox',\n          width: '3%',\n          align: 'center',\n          render: (_, record) => {\n            if (record.key === 'noMoreData') {\n              return {\n                children: null,\n                props: {\n                  colSpan: 0, // Adjust this number based on the total number of columns to span\n                },\n              }\n            }\n            return (\n              <Checkbox\n                className=\"checkbox_design\"\n                checked={selectedRows.includes(record.id)}\n                onChange={(e) => handleMemberCheck(record.id, e.target.checked)}\n              />\n            )\n          },\n        },\n        {\n          title: <span style={{ color: '#f50505' }}>{headerLabel}</span>,\n          dataIndex: 'index',\n          key: 'index',\n          width: '5%',\n          align: 'center',\n          render: (text, record, index) => {\n            if (record.key === 'noMoreData') {\n              return {\n                children: null,\n                props: {\n                  colSpan: 0, // Adjust this number based on the total number of columns to span\n                },\n              }\n            }\n            return index + 1\n          },\n        },\n        {\n          title: '',\n          dataIndex: 'groupName',\n          key: 'groupName',\n          width: '35%',\n          render: (text, record, index) => {\n            if (record.key === 'noMoreData') {\n              return {\n                children: (\n                  <div style={{ textAlign: 'center' }}>\n                    <b style={{ color: '#e40e2d', fontSize: '12px' }}>No more Data to load</b>\n                  </div>\n                ),\n                props: {\n                  colSpan: 5, // Adjust this number based on the total number of columns to span\n                },\n              }\n            }\n            return getText(text, 100)\n          },\n        },\n        {\n          title: 'Activity',\n          dataIndex: 'category',\n          key: 'category',\n          width: '35%',\n          render: (text, record, index) => {\n            if (record.key === 'noMoreData') {\n              return {\n                children: null,\n                props: {\n                  colSpan: 0, // Adjust this number based on the total number of columns to span\n                },\n              }\n            }\n            return getText(text, 100)\n          },\n        },\n        {\n          title: (\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n              <button\n                type=\"button\"\n                className=\"action-view cross-button\"\n                onClick={() => warning(selectedRows)}\n                style={{ padding: '4px 8px' }}\n              >\n                <DeleteSvg width=\"16\" height=\"15\" viewBox=\"0 0 18 18\" fill=\"#e40e2d\" />\n              </button>\n            </div>\n          ),\n          dataIndex: 'action',\n          key: 'action',\n          width: '5%',\n          align: 'center',\n          render: (_, record) => {\n            if (record.key === 'noMoreData') {\n              return {\n                children: null,\n                props: {\n                  colSpan: 0, // Adjust this number based on the total number of columns to span\n                },\n              }\n            }\n            return (\n              <div\n                style={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                }}\n              >\n                <button\n                  type=\"button\"\n                  className=\"action-view  edit-button mx-1\"\n                  style={{ padding: '4px 8px' }}\n                  onClick={() => handleTaskEditClick(record.id)}\n                >\n                  <EditSvg\n                    width=\"13\"\n                    height=\"13\"\n                    viewBox=\"0 0 18 18\"\n                    fill=\"none\"\n                    color=\"white\"\n                    clipH=\"18\"\n                    clipW=\"18\"\n                  />\n                </button>\n                <button\n                  type=\"button\"\n                  style={{ padding: '4px 8px' }}\n                  className=\"action-view check-button mx-1\"\n                  onClick={() => {\n                    handleDesignation(record.id)\n                    designationClick(record.id)\n                  }}\n                >\n                  <PlusSvg width=\"13\" height=\"12\" viewBox=\"0 0 18 18\" fill=\"#A5A1A1\" />\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"action-view cross-button mx-1\"\n                  style={{ padding: '4px 8px' }}\n                  onClick={!headerLabel ? () => warning(record.id) : null}\n                >\n                  <DeleteSvg width=\"16\" height=\"15\" viewBox=\"0 0 18 18\" fill=\"#A5A1A1\" />\n                </button>\n              </div>\n            )\n          },\n        },\n      ]\n\n  const displayData = [\n    ...taskTable.map((row, index) => ({\n      key: row.id,\n      id: row.id,\n      index: index + 1,\n      category: row.category,\n      groupName: row.groupName,\n    })),\n  ]\n\n  // Append the \"No more Data to load\" message as the last row if noMoreData is true\n  if (!hasMoreRef.current && displayData.length !== 0 && displayData.length > 10) {\n    displayData.push({\n      key: 'noMoreData',\n      index: '',\n      groupName: 'No more Data to load',\n      category: '',\n      checkbox: '',\n      action: '',\n    })\n  }\n\n  let designationComponent\n  if (taskVisible) {\n    designationComponent = <AddTaskActivity close={resetAddComponent} />\n  } else if (taskVisibleEdit) {\n    designationComponent = <EditTaskActivity close={resetEditComponent} viewTask={viewTaskData} />\n  } else if (taskDesignationView) {\n    designationComponent = (\n      <DesignationMapping\n        close={resetDesignationComponent}\n        viewDesignation={designationValue}\n        viewTask={viewTaskData}\n      />\n    )\n  } else {\n    designationComponent = (\n      <>\n        <CRow className=\"mt-3 user-master-header\">\n          <CCol sm={8}>\n            <b style={{ paddingLeft: '30px' }}>Designation Master</b>\n            <br />\n            <Breadcrumb\n              style={{ paddingLeft: '30px' }}\n              className=\"bread-tab\"\n              separator={<span className=\"breadcrumb-separator\">|</span>}\n              items={[\n                {\n                  title: (\n                    <Link\n                      rel=\"Dashboard\"\n                      to={'/dashboard'}\n                      className=\"bread-items text-decoration-none text-secondary \"\n                    >\n                      Dashboard\n                    </Link>\n                  ),\n                },\n                {\n                  title: (\n                    <span className=\"text-secondary \" style={{ cursor: 'default' }}>\n                      Designation Master\n                    </span>\n                  ),\n                },\n              ]}\n            />\n          </CCol>\n\n          <CCol sm={2}>\n            {' '}\n            <div style={{ width: '90%', marginRight: '20px' }} className=\"mt-1 des-mas\">\n              <Input\n                placeholder=\"Search\"\n                variant={'borderless'}\n                className=\"border-0 time-border-bottom \"\n                onChange={(e) => handleSearch(e.target.value)}\n                prefix={\n                  <img\n                    src={searchIcon}\n                    alt=\"Search\"\n                    className=\"search-icon\"\n                    style={{ width: '14px', height: '14px' }}\n                  />\n                }\n              />\n            </div>\n          </CCol>\n          <CCol sm={2}>\n            <div style={{ width: '100%' }}>\n              <button\n                className=\"createdesignation-button button-clr\"\n                type=\"button\"\n                onClick={openTaskModal}\n              >\n                <span className=\"plus-lable\">+</span> Add Designation\n              </button>\n            </div>\n          </CCol>\n        </CRow>\n\n        <div className=\"mt-2 design_table\">\n          <style>\n            {`\n            .design_table .ant-table-wrapper .ant-table-thead > tr > th {\n              background-color: ${headerLabel ? '#ffa5b240 !important' : ''};\n            }\n          `}\n          </style>\n\n          <Table\n            columns={columns}\n            dataSource={displayData}\n            className={`${isNorMore ? 'last-row-table' : ''}`}\n            size={'middle'}\n            rowKey=\"id\"\n            pagination={false}\n            scroll={{ y: 490 }}\n            loading={{\n              spinning: commonLoader,\n              indicator: <CSpinner color=\"danger\" />,\n            }}\n          />\n        </div>\n      </>\n    )\n  }\n\n  const fetchMoreData = () => {\n    if (hasMoreRef.current) {\n      getTaskList()\n    }\n  }\n\n  const handleScroll = useCallback(\n    debounce(() => {\n      if (!tableBodyRef.current) return\n\n      const { scrollTop, scrollHeight, clientHeight } = tableBodyRef.current\n      if (scrollTop + clientHeight >= scrollHeight - 10) {\n        if (hasMoreRef.current && !commonLoader) {\n          setCommonLoader(true)\n          fetchMoreData()\n        }\n      }\n    }, 100),\n    [hasMoreRef.current, commonLoader],\n  )\n\n  useEffect(() => {\n    const tableBody = document.querySelector('.design_table .ant-table-body')\n    if (tableBody) {\n      tableBodyRef.current = tableBody\n      tableBody.addEventListener('scroll', handleScroll)\n    }\n\n    return () => {\n      if (tableBody) {\n        tableBody.removeEventListener('scroll', handleScroll)\n      }\n    }\n  }, [handleScroll])\n\n  return designationComponent\n}\n\nexport default TaskActivity\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Circle = ({ width, height, fill, viewBox, color }) => (\n  <svg\n    width={width}\n    height={height}\n    viewBox={viewBox}\n    fill={fill}\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <circle cx=\"5.3457\" cy=\"4.5\" r=\"4.5\" fill={color} />\n  </svg>\n)\nCircle.propTypes = {\n  width: PropTypes.string,\n  height: PropTypes.string,\n  fill: PropTypes.string,\n  viewBox: PropTypes.string,\n  color: PropTypes.string,\n}\nexport default Circle\n","const TO_RADIANS = Math.PI / 180\n\nexport async function canvasPreview(image, canvas, crop, scale = 1, rotate = 0) {\n  const ctx = canvas.getContext('2d')\n\n  if (!ctx) {\n    throw new Error('No 2d context')\n  }\n\n  const scaleX = image.naturalWidth / image.width\n  const scaleY = image.naturalHeight / image.height\n  const pixelRatio = window.devicePixelRatio\n  // const pixelRatio = 1\n\n  canvas.width = Math.floor(crop.width * scaleX * pixelRatio)\n  canvas.height = Math.floor(crop.height * scaleY * pixelRatio)\n\n  ctx.scale(pixelRatio, pixelRatio)\n  ctx.imageSmoothingQuality = 'high'\n\n  const cropX = crop.x * scaleX\n  const cropY = crop.y * scaleY\n\n  const rotateRads = rotate * TO_RADIANS\n  const centerX = image.naturalWidth / 2\n  const centerY = image.naturalHeight / 2\n\n  ctx.save()\n\n  // 5) Move the crop origin to the canvas origin (0,0)\n  ctx.translate(-cropX, -cropY)\n  // 4) Move the origin to the center of the original position\n  ctx.translate(centerX, centerY)\n  // 3) Rotate around the origin\n  ctx.rotate(rotateRads)\n  // 2) Scale the image\n  ctx.scale(scale, scale)\n  // 1) Move the center of the image to the origin (0,0)\n  ctx.translate(-centerX, -centerY)\n  ctx.drawImage(\n    image,\n    0,\n    0,\n    image.naturalWidth,\n    image.naturalHeight,\n    0,\n    0,\n    image.naturalWidth,\n    image.naturalHeight,\n  )\n\n  ctx.restore()\n}\n","import React, { useEffect, useState, useRef } from 'react'\n\nimport PropTypes from 'prop-types'\nimport { Card, Modal } from 'antd'\nimport ReactCrop, { centerCrop, makeAspectCrop } from 'react-image-crop'\nimport { useDebounceEffect } from './useDebounceEffect'\nimport { canvasPreview } from './canvasPreview.js'\nimport { toast } from 'react-toastify'\nimport { CButton, CCardBody, CCol, CRow } from '@coreui/react'\nimport DeleteSvg from 'src/views/svgImages/DeleteSvg'\n\nfunction centerAspectCrop(mediaWidth, mediaHeight, aspect) {\n  return centerCrop(\n    makeAspectCrop(\n      {\n        unit: '%',\n        width: 80,\n        height: 80,\n      },\n      aspect,\n      mediaWidth,\n      mediaHeight,\n    ),\n    mediaWidth,\n    mediaHeight,\n  )\n}\n\nexport default function BannerModal({\n  handleOpenModalBanner,\n  handleCloseModalBanner,\n  handledefaultprofic,\n  handleprofilepicvalue,\n}) {\n  const [imgSrc, setImgSrc] = useState(handledefaultprofic)\n  const previewCanvasRef = useRef(null)\n  const imgRef = useRef(null)\n  const [crop, setCrop] = useState()\n  const [completedCrop, setCompletedCrop] = useState(handledefaultprofic)\n\n  const [validationMessage, setValidationMessage] = useState('')\n\n  const [selectedFile, setSelectedFile] = useState('')\n\n  const scale = 1\n  const rotate = 0\n  const aspect = 16 / 16\n  const fileInputRef = useRef(null)\n  const handleBrowseClick = () => {\n    fileInputRef.current.click()\n  }\n\n  useEffect(() => {\n    const imageUrlToFile = async (url, filename) => {\n      try {\n        // Fetch the image data from the URL\n        const response = await fetch(url)\n        if (!response.ok) {\n          throw new Error('Failed to fetch image')\n        }\n        const blob = await response.blob()\n        const file = new File([blob], filename, { type: blob.type })\n        setSelectedFile(file)\n      } catch (error) {\n        // console.error('Error converting image URL to File:', error)\n        // Handle error as needed\n      }\n    }\n\n    const url = new URL(handledefaultprofic)\n    const pathname = url.pathname\n    const parts = pathname.split('/')\n    const imageUrl = pathname\n    const filename = parts[parts.length - 1]\n\n    imageUrlToFile(imageUrl, filename)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const handleFileChange = (e) => {\n    const file = e.target.files[0]\n    setSelectedFile(file)\n    const fileInput = e.target\n\n    if (fileInput.files && fileInput.files.length > 0) {\n      const selectedFile = fileInput.files[0]\n\n      if (\n        !selectedFile.type.startsWith('image/png') &&\n        !selectedFile.type.startsWith('image/jpeg') &&\n        !selectedFile.type.startsWith('image/jpg')\n      ) {\n        setImgSrc('')\n        setCrop(undefined)\n\n        setValidationMessage('Please select a PNG, JPG, or JPEG file.')\n\n        fileInput.value = ''\n        return\n      }\n\n      setCrop(undefined)\n\n      const reader = new FileReader()\n      reader.addEventListener('load', () => setImgSrc(reader.result.toString() || ''))\n      reader.readAsDataURL(selectedFile)\n\n      // Clear any previous error state\n      setValidationMessage('')\n    } else {\n      // No file selected\n      setValidationMessage('Please select an image file.')\n    }\n  }\n  //   const onSelectFile = (e) => {\n  //     const fileInput = e.target\n\n  //     if (fileInput.files && fileInput.files.length > 0) {\n  //       const selectedFile = fileInput.files[0]\n\n  //       if (\n  //         !selectedFile.type.startsWith('image/png') &&\n  //         !selectedFile.type.startsWith('image/jpeg') &&\n  //         !selectedFile.type.startsWith('image/jpg')\n  //       ) {\n  //         setImgSrc('')\n  //         setCrop(undefined)\n\n  //         setValidationMessage('Please select a PNG, JPG, or JPEG file.')\n\n  //         fileInput.value = ''\n  //         return\n  //       }\n\n  //       setCrop(undefined)\n\n  //       const reader = new FileReader()\n  //       reader.addEventListener('load', () => setImgSrc(reader.result.toString() || ''))\n  //       reader.readAsDataURL(selectedFile)\n\n  //       // Clear any previous error state\n  //       setValidationMessage('')\n  //     } else {\n  //       // No file selected\n  //       setValidationMessage('Please select an image file.')\n  //     }\n  //   }\n\n  function onImageLoad(e) {\n    if (aspect) {\n      const { width, height } = e.currentTarget\n      setCrop(centerAspectCrop(width, height, aspect))\n    }\n  }\n\n  useDebounceEffect(\n    async () => {\n      if (\n        completedCrop?.width &&\n        completedCrop?.height &&\n        imgRef.current &&\n        previewCanvasRef.current\n      ) {\n        canvasPreview(imgRef.current, previewCanvasRef.current, completedCrop, scale, rotate)\n      }\n    },\n    100,\n    [completedCrop, scale, rotate],\n  )\n\n  const handleCrop = async () => {\n    if (completedCrop && imgRef.current) {\n      try {\n        // Get the cropped canvas\n        const canvas = document.createElement('canvas')\n        const scaleX = imgRef.current.naturalWidth / imgRef.current.width\n        const scaleY = imgRef.current.naturalHeight / imgRef.current.height\n\n        canvas.width = completedCrop.width\n        canvas.height = completedCrop.height\n        const ctx = canvas.getContext('2d')\n\n        // Ensure the image is loaded from the same origin\n        const img = new Image()\n        img.crossOrigin = 'anonymous' // Set crossOrigin attribute\n        img.src = imgSrc // Use the imgSrc loaded from your state\n\n        img.onload = () => {\n          ctx.drawImage(\n            img,\n            completedCrop.x * scaleX,\n            completedCrop.y * scaleY,\n            completedCrop.width * scaleX,\n            completedCrop.height * scaleY,\n            0,\n            0,\n            completedCrop.width,\n            completedCrop.height,\n          )\n\n          // Convert canvas to a blob\n          canvas.toBlob((blob) => {\n            // Create a File from the blob\n            const croppedFile = new File([blob], 'croppedImage.jpeg', {\n              type: 'image/jpeg',\n            })\n\n            // Dispatch the action to upload the cropped image\n            handleprofilepicvalue(croppedFile)\n            toast.success('Profile Image Uploaded Successfully', {\n              position: toast.POSITION.BOTTOM_RIGHT,\n              autoClose: 3000,\n            })\n            handleCloseModalBanner()\n          }, 'image/jpeg')\n        }\n      } catch (error) {\n        toast.error('Profile Image Failed to Upload', {\n          position: toast.POSITION.BOTTOM_RIGHT,\n          autoClose: 3000,\n        })\n      }\n    } else {\n      handleprofilepicvalue('')\n      toast.success('Profile Image Removed Successfully', {\n        position: toast.POSITION.BOTTOM_RIGHT,\n        autoClose: 3000,\n      })\n      handleCloseModalBanner()\n    }\n  }\n\n  const handleDeleteButton = () => {\n    // Handle click event to clear imgSrc and selectedFile\n    setImgSrc('')\n    fileInputRef.current.value = ''\n    setSelectedFile('')\n  }\n\n  BannerModal.propTypes = {\n    handleOpenModalBanner: PropTypes.func.isRequired,\n    handleCloseModalBanner: PropTypes.func.isRequired,\n    handledefaultprofic: PropTypes.string.isRequired,\n    handleprofilepicvalue: PropTypes.func.isRequired,\n  }\n  return (\n    <Modal\n      visible={handleOpenModalBanner}\n      onCancel={handleCloseModalBanner}\n      style={{ maxWidth: '1000px' }}\n      maskClosable={false}\n      size=\"extra-small\"\n      footer={false}\n      className=\"modal_width\"\n    >\n      {/* <ModalHeader toggle={handleCloseModalBanner}> */}\n      <>\n        <h6 style={{ fontWeight: '700' }}> Edit Profile Picture</h6>\n        <button\n          className=\"btn-close invisible\"\n          type=\"button\"\n          onClick={handleCloseModalBanner}\n        ></button>\n      </>\n      {/* </ModalHeader> */}\n      {/* <ModalBody> */}\n      <Card>\n        {/* <CardHeader>\n            <h5>Image Cropper</h5>\n          </CardHeader> */}\n        <CCardBody>\n          {Boolean(imgSrc) ? (\n            <ReactCrop\n              crop={crop}\n              onChange={(_, percentCrop) => setCrop(percentCrop)}\n              onComplete={(c) => setCompletedCrop(c)}\n              aspect={aspect}\n            >\n              <img\n                ref={imgRef}\n                alt=\"Crop me\"\n                src={imgSrc}\n                style={{\n                  transform: `scale(${scale}) rotate(${rotate}deg)`,\n                  height: '100%',\n                  width: '100%',\n                }}\n                onLoad={onImageLoad}\n              />\n            </ReactCrop>\n          ) : (\n            <div\n              style={{\n                height: '154px',\n                width: '200px',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n              }}\n              className=\"text-center\"\n            >\n              <b style={{ marginLeft: '71px', fontSize: '14px' }}> Add Profile</b>\n            </div>\n          )}\n\n          {/* <div>\n            {Boolean(completedCrop) && (\n              <canvas\n                ref={previewCanvasRef}\n                style={{\n                  // border: '1px solid black',\n                  objectFit: 'contain',\n                  width: '100%',\n                  height: completedCrop.height,\n                }}\n              />\n            )}\n          </div> */}\n        </CCardBody>\n      </Card>\n      {/* <div className=\"Crop-Controls\">\n        <input\n          className=\"form-control\"\n          type=\"file\"\n          accept=\"image/png, image/jpeg, image/jpg\"\n          onChange={onSelectFile}\n        />\n\n        {validationMessage && <div style={{ color: 'red' }}>{validationMessage}</div>}\n      </div> */}\n      <CRow className=\"mt-2\">\n        <CCol sm={10}>\n          <div className=\"input-group  custom-input-group custom_input_group\">\n            <input\n              type=\"text\"\n              value={selectedFile ? selectedFile.name : ''}\n              readOnly\n              name=\"fieldName\"\n              className=\"form-control border-0\"\n              aria-label=\"Upload File\"\n              aria-describedby=\"basic-addon1\"\n              style={{ fontSize: '13px', fontWeight: '500' }}\n            />\n            <div className=\"input-group-append\">\n              <button\n                className=\"browse input-group-text text-danger\"\n                onClick={handleBrowseClick}\n                type=\"button\"\n              >\n                Choose File\n              </button>\n            </div>\n          </div>\n          {validationMessage && <div style={{ color: 'red' }}>{validationMessage}</div>}\n          <input\n            type=\"file\"\n            className=\"file\"\n            ref={fileInputRef}\n            style={{ display: 'none' }}\n            accept=\"image/png, image/jpeg, image/jpg\"\n            onChange={handleFileChange}\n          />\n        </CCol>\n        <CCol sm={1}>\n          <button\n            type=\"button\"\n            className=\"action-view cross-button\"\n            style={{ marginTop: '5px' }}\n            onClick={handleDeleteButton}\n            // onClick={() => handleViewClick(flow.id)}\n          >\n            <DeleteSvg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"red\" />\n          </button>\n        </CCol>\n      </CRow>\n      {/* </ModalBody> */}\n      {/* <ModalFooter> */}\n      <CRow className=\"mt-3\">\n        <CCol sm={5}></CCol>\n        <CCol sm={12} className=\"d-flex justify-content-end align-items-center\">\n          <CButton\n            className=\"cancel-btn text-c\"\n            onClick={handleCloseModalBanner}\n            style={{ width: '100px', height: '44px', marginTop: '2px' }}\n          >\n            Cancel\n          </CButton>\n          <CButton\n            className=\"submit-button save_changes \"\n            style={{ fontSize: '13px', color: 'white', marginTop: '-3px' }}\n            type=\"button\"\n            onClick={handleCrop}\n          >\n            Update\n          </CButton>\n        </CCol>\n      </CRow>\n      {/* </ModalFooter> */}\n    </Modal>\n  )\n}\n","import { useEffect } from 'react'\n\nexport function useDebounceEffect(fn, waitTime, deps) {\n  useEffect(() => {\n    const t = setTimeout(() => {\n      fn.apply(undefined, deps)\n    }, waitTime)\n\n    return () => {\n      clearTimeout(t)\n    }\n    // eslint-disable-next-line\n  }, deps)\n}\n","import React, { useRef, useState, useEffect } from 'react'\nimport { ImageUrl, getHeaders } from 'src/constant/Global'\nimport { CCol, CRow } from '@coreui/react'\nimport PropTypes from 'prop-types'\nimport { Breadcrumb, Input, Form, Row, Col, Button, Select, DatePicker } from 'antd'\nimport { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport BackArrowSvg from 'src/views/svgImages/BackArrowSvg'\nimport { CameraOutlined } from '@ant-design/icons'\nimport profileImage1 from '../../../assets/images/avatars/default-profile.png'\nimport BannerModal from './BannerModal'\nimport useAxios from 'src/constant/UseAxios'\nimport eventEmitter from 'src/constant/EventEmitter'\nimport Downarrowimg from '../../../assets/images/downarrow.png'\nimport { toPascalCase } from '../../../constant/TimeUtils'\nimport Calendar from 'src/views/svgImages/Calendar'\nimport dayjs from 'dayjs'\nimport { Link } from 'react-router-dom'\n\nconst { Option } = Select\nconst AddUser = ({ close }) => {\n  let api = useAxios()\n  const formRef = useRef(null)\n  const [techHeadList1, setTechHeadList] = useState([])\n  const [Approverlist, setApprover] = useState([])\n  const [prodHeadList1, setProdHeadList] = useState([])\n  const [userList1, setUserList] = useState([])\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [branch, setBranch] = useState('')\n  const [roleType, setRoleType] = useState('')\n  const [selectedFile1, setSelectedFile1] = useState(profileImage1)\n  const [bannerModal, setBannerModal] = useState(false)\n  const [form] = Form.useForm()\n  const [loadings, setLoadings] = useState(false)\n  const selectRef = useRef(null)\n  const [startDate, setStartDate] = useState(null)\n\n  const getTechHead = async () => {\n    const url = `common/tech_head`\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        setTechHeadList(response.data.data)\n      })\n      .catch((error) => {})\n  }\n  const getProdHead = async () => {\n    const url = `common/prod_head`\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        setProdHeadList(response.data.data)\n      })\n      .catch((error) => {})\n  }\n  const getapproverlist = async (id) => {\n    const url = `user/approval-user/list`\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        setApprover(response.data.data)\n      })\n      .catch((error) => {})\n  }\n  let techHeadList\n  if (Array.isArray(techHeadList1) && Array.isArray(Approverlist)) {\n    // if (Array.isArray(techList) && Symbol.iterator in prodList) {\n    techHeadList = [...techHeadList1, ...Approverlist]\n  } else {\n    techHeadList = []\n  }\n  let prodHeadList\n  if (Array.isArray(prodHeadList1) && Array.isArray(Approverlist)) {\n    // if (Array.isArray(techList) && Symbol.iterator in prodList) {\n    prodHeadList = [...prodHeadList1, ...Approverlist]\n  } else {\n    prodHeadList = []\n  }\n  let userList\n  if (Array.isArray(userList1) && Array.isArray(Approverlist)) {\n    // if (Array.isArray(techList) && Symbol.iterator in prodList) {\n    userList = [...userList1, ...Approverlist]\n  } else {\n    userList = []\n  }\n  const techHeadOptions = techHeadList.map((user) => ({\n    value: user.userName,\n    label: (\n      <div className=\"select-options select-options-bg\">\n        <img\n          src={user.profile_pic ? ImageUrl + user.profile_pic : profileImage1}\n          style={user.profile_pic ? { width: '29px' } : { width: '39px' }}\n          alt={user.name}\n          className=\"img-flag\"\n        />\n        <div className=\"node1\" style={user.profile_pic ? { marginLeft: '11px' } : {}}>\n          <p className=\"user-name1\" title={user.name}>\n            {user.name}\n          </p>\n          <p className=\"role-text1\">{user.role}</p>\n        </div>\n      </div>\n    ),\n  }))\n  const options = userList.map((user) => ({\n    value: user.userName,\n    label: (\n      <div className=\"select-options select-options-bg\">\n        <img\n          src={user.profile_pic ? ImageUrl + user.profile_pic : profileImage1}\n          style={user.profile_pic ? { width: '29px' } : { width: '39px' }}\n          alt={user.name}\n          className=\"img-flag\"\n        />\n        <div className=\"node1\" style={user.profile_pic ? { marginLeft: '11px' } : {}}>\n          <p className=\"user-name1\" title={user.name}>\n            {toPascalCase(user.name)}\n          </p>\n          <p className=\"role-text1\">{user.role}</p>\n        </div>\n      </div>\n    ),\n  }))\n  const prodHeadOptions = prodHeadList.map((user) => ({\n    value: user.userName,\n    label: (\n      <div className=\"select-options select-options-bg\">\n        <img\n          src={user.profile_pic ? ImageUrl + user.profile_pic : profileImage1}\n          style={user.profile_pic ? { width: '29px' } : { width: '39px' }}\n          alt={user.name}\n          className=\"img-flag\"\n        />\n        <div className=\"node1\" style={user.profile_pic ? { marginLeft: '11px' } : {}}>\n          <p className=\"user-name1\" title={user.name}>\n            {toPascalCase(user.name)}\n          </p>\n          <p className=\"role-text1\">{user.role}</p>\n        </div>\n      </div>\n    ),\n  }))\n  const handleBranch = (value) => {\n    setBranch(value)\n    form.setFieldsValue({ supervisor: undefined })\n    getUserList(value)\n  }\n  const getUserList = async (branch) => {\n    const url = 'master/employee/list/' + branch\n    await api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        const data = response.data.data\n        setUserList(data)\n      })\n      .catch((error) => {})\n  }\n\n  useEffect(() => {\n    getRoles()\n    getTechHead()\n    getapproverlist()\n    getProdHead()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const [role, setRole] = useState([])\n  const getRoles = async () => {\n    const url = 'master/role/all-list'\n    await api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        const data = response.data.data\n        setRole(data)\n      })\n      .catch((error) => {})\n  }\n  const handleSubmit = async (values) => {\n    setLoadings(true)\n    const formData = new FormData()\n    formData.append('files', selectedFile)\n    formData.append('jod', startDate)\n    Object.keys(values).forEach((key) => {\n      if (key === 'nameValue') {\n        //change name value as pascal string\n        let capitalizedString = values[key]\n          .split(' ')\n          .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n          .join(' ')\n        formData.append('name', capitalizedString)\n      } else formData.append(key, values[key])\n    })\n\n    const url = 'master/employee/create'\n    await api\n      .post(url, formData, {\n        headers: getHeaders('multi'),\n      })\n      .then((response) => {\n        setLoadings(false)\n        if (response.status === 208) {\n          toast.error(response.data.message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n            autoClose: 3000,\n          })\n        } else {\n          toast.success(response.data.message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n            autoClose: 3000,\n          })\n          resetComponent()\n        }\n      })\n      .catch((error) => {\n        setLoadings(false)\n        toast.error(error, {\n          position: toast.POSITION.BOTTOM_RIGHT,\n          autoClose: 3000,\n        })\n      })\n  }\n  const resetComponent = () => {\n    close()\n    setRoleType('')\n    setBranch('')\n    setSelectedFile(null)\n    form.resetFields()\n    eventEmitter.emit('callUserList')\n  }\n  const handleRoleSelect = (value) => {\n    selectRef.current.blur()\n    form.setFieldsValue({ finalApprove: undefined })\n    setRoleType(value)\n  }\n  const handleOpenModalBanner = () => {\n    setBannerModal(true)\n  }\n\n  const handleCloseModalBanner = () => {\n    setBannerModal(false)\n  }\n  const handleprofilepic = (profile) => {\n    if (profile) {\n      setSelectedFile(profile)\n      setSelectedFile1(URL.createObjectURL(profile))\n    } else {\n      setSelectedFile(profileImage1)\n      setSelectedFile1(profileImage1)\n    }\n  }\n\n  const roleOptions = role.map((role) => ({\n    value: role.id,\n    label: role.name,\n  }))\n\n  const handleDateChange = (date, dateString) => {\n    if (date) {\n      const parsedDate = dayjs(date, 'DD MMM, YYYY')\n      const formattedDate = parsedDate.format('YYYY-MM-DD')\n      setStartDate(formattedDate)\n    }\n  }\n\n  const targetDate = dayjs('2024-05-01')\n\n  const disabledDate = (current) => {\n    // Disable dates before May 1, 2024\n    return current && current < targetDate.startOf('day')\n  }\n\n  return (\n    <CRow>\n      <CCol sm={1} style={{ width: '20px' }} className=\"cancle-arrow-content\">\n        {' '}\n        <span\n          style={{ cursor: 'pointer', marginRight: '2px' }}\n          onClick={close}\n          className=\"back_arrow\"\n        >\n          <BackArrowSvg width=\"16\" height=\"15\" viewBox=\"0 0 18 18\" fill=\"#A5A1A1\" />\n        </span>\n      </CCol>\n      <CCol>\n        <h6 className=\"draft-heading\" style={{ marginTop: '29px' }}>\n          Add User\n        </h6>\n        <Breadcrumb\n          // style={{ marginLeft: '12px' }}\n          className=\"bread-tab\"\n          separator={<span className=\"breadcrumb-separator\">|</span>}\n          items={[\n            {\n              title: (\n                <Link\n                  rel=\"Dashboard\"\n                  to={'/dashboard'}\n                  className=\"bread-items text-decoration-none text-secondary first-subheading\"\n                >\n                  Dashboard\n                </Link>\n              ),\n            },\n            {\n              title: (\n                <span\n                  className=\"bread-items text-secondary second-subheading\"\n                  style={{ cursor: 'pointer' }}\n                  onClick={resetComponent}\n                >\n                  User Master\n                </span>\n              ),\n            },\n            {\n              title: (\n                <span className=\"text-secondary second-subheading\" style={{ cursor: 'default' }}>\n                  Add User\n                </span>\n              ),\n            },\n          ]}\n        />\n        {/* </CRow>  */}\n        {bannerModal && (\n          <BannerModal\n            handleOpenModalBanner={handleOpenModalBanner}\n            handleCloseModalBanner={handleCloseModalBanner}\n            handledefaultprofic={selectedFile1}\n            handleprofilepicvalue={handleprofilepic}\n          />\n        )}\n        {/* <CRow> */}\n        <Form\n          className=\"mt-4 needs-validation\"\n          ref={formRef}\n          form={form}\n          layout=\"vertical\"\n          onFinish={handleSubmit}\n          requiredMark={false}\n          encType=\"multipart/form-data\"\n          validateTrigger=\"onSubmit\"\n          style={{ marginLeft: '22px', width: '100%' }}\n        >\n          <Row className=\"mb-4\">\n            <Col>\n              <div\n                // className=\"user_pic_div\"\n                onClick={(e) => {\n                  e.stopPropagation() // Prevent the event from propagating\n                  handleOpenModalBanner()\n                }}\n              >\n                <div className=\"image-background\">\n                  <img\n                    src={selectedFile1}\n                    className=\"user_pic height_width_profile\"\n                    alt=\"profile\"\n                    style={{ height: '49px', width: '51px' }}\n                  />\n                  <div className=\"overlay-text text-center\">\n                    <CameraOutlined /> Choose picture\n                  </div>\n                </div>\n                <div\n                  className=\"node1 access-person-hovercard\"\n                  // style={viewUser.profile_pic ? { marginLeft: '11px' } : {}}\n                >\n                  {/* <p className=\"member-user-name1 user_pic_name\" title=\" Edit Profile Picture\">\n                    {' '}\n                    Edit Profile Picture\n                  </p> */}\n                </div>\n              </div>\n            </Col>\n          </Row>\n          <Row gutter={16}>\n            <Col sm={4} span={4}>\n              <Form.Item\n                name=\"nameValue\"\n                label={\n                  <span className=\"form-label\">\n                    Name <span className=\"red-text1\">*</span>\n                  </span>\n                }\n                colon={false}\n                validateTrigger={['onChange', 'onSubmit']}\n                rules={[\n                  { required: true, message: 'Please enter user name' },\n                  {\n                    pattern: /^(?!.*\\s$)(?!^\\s)(?!.*\\s{2,})[a-zA-Z\\s.]+$/,\n                    message: 'Invalid input',\n                  },\n                ]}\n              >\n                <Input\n                  variant={'borderless'}\n                  maxLength={48}\n                  className=\"border-0 time-border-bottom\"\n                  placeholder=\"Enter the User name\"\n                />\n              </Form.Item>\n            </Col>\n            <Col sm={1} span={1}></Col>\n            <Col sm={4} span={3}>\n              <Form.Item\n                name=\"email\"\n                label={\n                  <span className=\"form-label\">\n                    Email <span className=\"red-text1\">*</span>\n                  </span>\n                }\n                colon={false}\n                rules={[\n                  { required: true, message: 'Please enter Email Address' },\n                  { type: 'email', message: 'Please enter a valid email address' },\n                ]}\n              >\n                <Input\n                  variant={'borderless'}\n                  className=\"border-0 time-border-bottom\"\n                  placeholder=\"Enter the Email Address\"\n                />\n              </Form.Item>\n            </Col>\n            <Col sm={1} span={1}></Col>\n            <Col sm={4} span={3}>\n              <Form.Item\n                label={\n                  <span className=\"form-label\">\n                    Employee Id <span className=\"red-text1\">*</span>\n                  </span>\n                }\n                // name=\"employeeId\"\n                name=\"username\"\n                colon={false}\n                validateTrigger={['onChange', 'onSubmit']}\n                rules={[\n                  { required: true, message: 'Please enter Employee Id' },\n                  {\n                    pattern: /^(?=.*[a-zA-Z])(?=.*[0-9])[a-zA-Z0-9]*[0-9]+[a-zA-Z0-9]*$|^[0-9]+$/,\n                    message: 'Only alphanumeric or numeric characters are allowed.',\n                  },\n                ]}\n              >\n                <Input\n                  variant={'borderless'}\n                  maxLength={15}\n                  className=\"border-0 time-border-bottom\"\n                  placeholder=\"Enter the Employee Id\"\n                />\n              </Form.Item>\n            </Col>\n            <Col sm={1} span={1}></Col>\n            <Col sm={4} span={4}>\n              <Form.Item\n                name=\"role_id\"\n                label={\n                  <span className=\"form-label\">\n                    Designation <span className=\"red-text1\">*</span>\n                  </span>\n                }\n                rules={[{ required: true, message: 'Please Choose Designation' }]}\n              >\n                <Select\n                  className=\"border-0 time-border-bottom hide-cursor\"\n                  placeholder=\"Choose Designation\"\n                  // onChange={handleRoleName}\n                  allowClear\n                  filterOption={(input, option) =>\n                    option.label.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                  }\n                  showSearch\n                  ref={selectRef}\n                  suffixIcon={\n                    <img\n                      src={Downarrowimg}\n                      alt=\"Downarrowimg\"\n                      style={{ width: '10px', height: '6px' }}\n                    />\n                  }\n                  options={roleOptions}\n                />\n                {/* <Option value=\"\">Choose Designation</Option>\n                  {role &&\n                    role.map((value, index) => (\n                      <Option value={value.id} key={index}>\n                        {value.name}\n                      </Option>\n                    ))}\n                </Select> */}\n              </Form.Item>\n            </Col>\n            <Col sm={1} span={1}></Col>\n            <Col sm={4}>\n              <Form.Item\n                name=\"joiningDate\"\n                label={\n                  <span className=\"form-label\">\n                    Joining Date <span className=\"red-text1\">*</span>\n                  </span>\n                }\n                rules={[{ required: true, message: 'Please Choose Joining Date' }]}\n              >\n                <DatePicker\n                  variant=\"borderless\"\n                  className=\"border-0 time-border-bottom\"\n                  style={{ paddingLeft: '0px', marginTop: '9px' }}\n                  placeholder=\"Choose Date\"\n                  allowClear\n                  suffixIcon={<Calendar width=\"15\" height=\"14\" viewBox=\"0 0 15 14\" fill=\"white\" />}\n                  disabledDate={disabledDate}\n                  onChange={handleDateChange}\n                  format=\"DD MMM, YYYY\"\n                />\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row gutter={16} className=\"mt-3\">\n            <Col sm={4}>\n              <Form.Item\n                name=\"designation\"\n                label={\n                  <span className=\"form-label\">\n                    Role <span className=\"red-text1\">*</span>\n                  </span>\n                }\n                rules={[{ required: true, message: 'Please Choose Role' }]}\n              >\n                <Select\n                  className=\"border-0 time-border-bottom\"\n                  placeholder=\"Choose Role\"\n                  // onChange={onInputChange}\n                  suffixIcon={\n                    <img\n                      src={Downarrowimg}\n                      alt=\"Downarrowimg\"\n                      style={{ width: '10px', height: '6px' }}\n                    />\n                  }\n                >\n                  <Option value=\"\">Choose Role</Option>\n                  <Option value=\"Head\">Head</Option>\n                  <Option value=\"Employee\">Employee</Option>\n                  <Option value=\"Owner\">Owner</Option>\n                  <Option value=\"Approver\">Approver</Option>\n                  <Option value=\"Others\">Others</Option>\n                </Select>\n              </Form.Item>\n            </Col>\n            <Col sm={1} span={1}></Col>\n            <Col sm={4}>\n              <Form.Item\n                name=\"branch\"\n                label={\n                  <span className=\"form-label\">\n                    Branch <span className=\"red-text1\">*</span>\n                  </span>\n                }\n                rules={[{ required: true, message: 'Please Choose Branch' }]}\n              >\n                <Select\n                  className=\"border-0 time-border-bottom\"\n                  placeholder=\"Choose Branch\"\n                  onChange={handleBranch}\n                  suffixIcon={\n                    <img\n                      src={Downarrowimg}\n                      alt=\"Downarrowimg\"\n                      style={{ width: '10px', height: '6px' }}\n                    />\n                  }\n                >\n                  <Option value=\"Technical\">Technical</Option>\n                  <Option value=\"Product\">Product</Option>\n                  <Option value=\"Data\">Data</Option>\n                </Select>\n              </Form.Item>\n            </Col>\n            <Col sm={1} span={1}></Col>\n            <Col sm={4}>\n              <Form.Item\n                name=\"supervisor\"\n                label={\n                  <span className=\"form-label\">\n                    Supervisor <span className=\"red-text1\">*</span>\n                  </span>\n                }\n                rules={[{ required: true, message: 'Please Choose Supervisor' }]}\n              >\n                <Select\n                  className=\"border-0 time-border-bottom\"\n                  placeholder=\"Choose Supervisor\"\n                  allowClear\n                  showSearch\n                  options={options}\n                  onChange={(selectedOption) => {\n                    selectRef.current.blur()\n                  }}\n                  filterOption={(input, option) => {\n                    const userNameArray =\n                      option.label.props.children[1].props.children[0].props.children\n                    const userName = userNameArray\n                    const lowerCaseInput = input.toLowerCase()\n                    const lowerCaseUserName = userName.toLowerCase()\n                    return lowerCaseUserName.includes(lowerCaseInput)\n                  }}\n                  ref={selectRef}\n                  suffixIcon={\n                    <img\n                      src={Downarrowimg}\n                      alt=\"Downarrowimg\"\n                      style={{ width: '10px', height: '6px' }}\n                    />\n                  }\n                ></Select>\n              </Form.Item>\n            </Col>\n            <Col sm={1} span={1}></Col>\n            <Col sm={4}>\n              <Form.Item\n                name=\"roleType\"\n                label={\n                  <span className=\"form-label\">\n                    Role Intake <span className=\"red-text1\">*</span>\n                  </span>\n                }\n                rules={[{ required: true, message: 'Please Choose Supervisor' }]}\n              >\n                <Select\n                  className=\"border-0 time-border-bottom\"\n                  showSearch\n                  placeholder=\"Choose Role\"\n                  allowClear\n                  ref={selectRef}\n                  suffixIcon={\n                    <img\n                      src={Downarrowimg}\n                      alt=\"Downarrowimg\"\n                      style={{ width: '10px', height: '6px' }}\n                    />\n                  }\n                  onChange={handleRoleSelect}\n                >\n                  <Option value=\"ON Role\">ON Role</Option>\n                  <Option value=\"Contract\">Contract</Option>\n                </Select>\n              </Form.Item>\n            </Col>\n            <Col sm={1}></Col>\n            {roleType === 'Contract' && (\n              <>\n                <Col sm={3}>\n                  <Form.Item\n                    name=\"finalApprove\"\n                    label={\n                      <span className=\"form-label\">\n                        {' '}\n                        Final &nbsp;Approver <span className=\"red-text1\">*</span>\n                      </span>\n                    }\n                    rules={[{ required: true, message: 'Please Choose Final Approver' }]}\n                  >\n                    <Select\n                      className=\"border-0 time-border-bottom\"\n                      placeholder=\"Choose Role\"\n                      // onChange={onInputChange}\n                      allowClear\n                      showSearch\n                      suffixIcon={\n                        <img\n                          src={Downarrowimg}\n                          alt=\"Downarrowimg\"\n                          style={{ width: '10px', height: '6px' }}\n                        />\n                      }\n                      filterOption={(input, option) => {\n                        const userNameArray =\n                          option.label.props.children[1].props.children[0].props.children\n                        const userName = userNameArray\n                        const lowerCaseInput = input.toLowerCase()\n                        const lowerCaseUserName = userName.toLowerCase()\n                        return lowerCaseUserName.includes(lowerCaseInput)\n                      }}\n                      // defaultValue={\n                      //   branch === 'Technical'\n                      //     ? techHeadOptions.length === 1\n                      //       ? techHeadOptions[0]\n                      //       : null\n                      //     : prodHeadOptions.length === 1\n                      //     ? prodHeadOptions[0]\n                      //     : null\n                      // }\n                      onChange={(selectedOption) => {\n                        selectRef.current.blur()\n                      }}\n                      ref={selectRef}\n                      options={branch === 'Technical' ? techHeadOptions : prodHeadOptions}\n                    ></Select>\n                  </Form.Item>\n                </Col>\n              </>\n            )}\n          </Row>\n          {/* <div style={{ position: 'absolute', bottom: 0, right: '-103px', padding: '20px' }}> */}\n          <Row>\n            <Col\n              style={{ width: '95%' }}\n              className=\"d-flex justify-content-end align-items-end user-master-footer\"\n            >\n              <Button className=\"edit-cancel-btn\" onClick={close}>\n                Cancel\n              </Button>\n              <Button\n                className=\" Edit_save_changes\"\n                style={{ fontSize: '13px', color: 'white' }}\n                htmlType=\"submit\"\n                loading={loadings}\n              >\n                Submit\n              </Button>\n            </Col>\n          </Row>\n          {/* </div> */}\n        </Form>\n      </CCol>\n    </CRow>\n  )\n}\n\nAddUser.propTypes = {\n  close: PropTypes.func,\n}\nexport default AddUser\n","import React, { useRef, useState, useEffect } from 'react'\nimport { ImageUrl, getHeaders } from 'src/constant/Global'\nimport { CCol, CRow } from '@coreui/react'\nimport PropTypes from 'prop-types'\nimport { Breadcrumb, Input, Form, Button, Select } from 'antd'\nimport { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport BackArrowSvg from 'src/views/svgImages/BackArrowSvg'\nimport { Link } from 'react-router-dom'\nimport { CameraOutlined } from '@ant-design/icons'\nimport profileImage1 from '../../../assets/images/avatars/default-profile.png'\nimport 'react-image-crop/dist/ReactCrop.css'\nimport BannerModal from './BannerModal'\nimport useAxios from 'src/constant/UseAxios'\nimport Downarrowimg from '../../../assets/images/downarrow.png'\nimport { toPascalCase } from 'src/constant/TimeUtils'\n\nconst { Option } = Select\nconst EditUser = ({ close, viewUser }) => {\n  let api = useAxios()\n  const formRef = useRef(null)\n  const [techHeadList1, setTechHeadList] = useState([])\n  const [Approverlist, setApprover] = useState([])\n  const [prodHeadList1, setProdHeadList] = useState([])\n  const [userList1, setUserList] = useState([])\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [selectedFile1, setSelectedFile1] = useState(\n    viewUser.profile_pic ? ImageUrl + viewUser.profile_pic : profileImage1,\n  )\n  const [branch, setBranch] = useState(viewUser.branch)\n  const [roleType, setRoleType] = useState(viewUser.roleType)\n  // const [supervisorId, setSupervisorId] = useState(0)\n  const supervisorId = useRef(viewUser.supervisorId)\n  const approvalId = useRef(viewUser.approvalFinalId)\n  // const [approvalId, setApprovalId] = useState(viewUser.approvalFinalId)\n  const [form] = Form.useForm()\n  const [bannerModal, setBannerModal] = useState(false)\n  const [roleName, setRoleName] = useState(viewUser.rolesid)\n  const [loadings, setLoadings] = useState(false)\n  const selectRef = useRef(null)\n\n  const handleOpenModalBanner = () => {\n    setBannerModal(true)\n  }\n\n  const handleCloseModalBanner = () => {\n    setBannerModal(false)\n  }\n\n  const getTechHead = async () => {\n    const url = `common/tech_head`\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        setTechHeadList(response.data.data)\n      })\n      .catch((error) => {})\n  }\n  const getProdHead = async () => {\n    const url = `common/prod_head`\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        setProdHeadList(response.data.data)\n      })\n      .catch((error) => {})\n  }\n  const getapproverlist = async (id) => {\n    const url = `user/approval-user/list`\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        setApprover(response.data.data)\n      })\n      .catch((error) => {})\n  }\n  let techHeadList\n  if (Array.isArray(techHeadList1) && Array.isArray(Approverlist)) {\n    // if (Array.isArray(techList) && Symbol.iterator in prodList) {\n    techHeadList = [...techHeadList1, ...Approverlist]\n  } else {\n    techHeadList = []\n  }\n  let prodHeadList\n  if (Array.isArray(prodHeadList1) && Array.isArray(Approverlist)) {\n    // if (Array.isArray(techList) && Symbol.iterator in prodList) {\n    prodHeadList = [...prodHeadList1, ...Approverlist]\n  } else {\n    prodHeadList = []\n  }\n  let userList\n  if (Array.isArray(userList1) && Array.isArray(Approverlist)) {\n    // if (Array.isArray(techList) && Symbol.iterator in prodList) {\n    userList = [...userList1, ...Approverlist]\n  } else {\n    userList = []\n  }\n  const techHeadOptions = techHeadList.map((user) => ({\n    value: user.userName,\n    val: user.userName,\n    label: (\n      <div className=\"select-options select-options-bg\">\n        <img\n          src={user.profile_pic ? ImageUrl + user.profile_pic : profileImage1}\n          style={user.profile_pic ? { width: '29px' } : { width: '39px' }}\n          alt={user.name}\n          className=\"img-flag\"\n        />\n        <div className=\"node1\" style={user.profile_pic ? { marginLeft: '11px' } : {}}>\n          <p className=\"user-name1\" title={user.name}>\n            {' '}\n            {user.name}\n          </p>\n          <p className=\"role-text1\">{user.role}</p>\n        </div>\n      </div>\n    ),\n  }))\n  const options = userList.map((user) => ({\n    value: user.userName,\n    val: user.userName,\n    label: (\n      <div className=\"select-options select-options-bg\">\n        <img\n          src={user.profile_pic ? ImageUrl + user.profile_pic : profileImage1}\n          style={user.profile_pic ? { width: '29px' } : { width: '39px' }}\n          alt={user.name}\n          className=\"img-flag\"\n        />\n        <div className=\"node1\" style={user.profile_pic ? { marginLeft: '11px' } : {}}>\n          <p className=\"user-name1\" title={user.name}>\n            {toPascalCase(user.name)}\n          </p>\n          <p className=\"role-text1\">{user.role}</p>\n        </div>\n      </div>\n    ),\n  }))\n\n  const prodHeadOptions = prodHeadList.map((user) => ({\n    value: user.userName,\n    val: user.userName,\n    label: (\n      <div className=\"select-options select-options-bg\">\n        <img\n          src={user.profile_pic ? ImageUrl + user.profile_pic : profileImage1}\n          style={user.profile_pic ? { width: '29px' } : { width: '39px' }}\n          alt={user.name}\n          className=\"img-flag\"\n        />\n        <div className=\"node1\" style={user.profile_pic ? { marginLeft: '11px' } : {}}>\n          <p className=\"user-name1\" title={user.name}>\n            {toPascalCase(user.name)}\n          </p>\n          <p className=\"role-text1\">{user.role}</p>\n        </div>\n      </div>\n    ),\n  }))\n  const handleBranch = (value) => {\n    setBranch(value)\n    form.setFieldsValue({ supervisor: undefined })\n    getUserList(value)\n  }\n  const getUserList = async (branch) => {\n    const url = 'master/employee/list/' + branch\n    await api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        const data = response.data.data\n        setUserList(data)\n      })\n      .catch((error) => {})\n  }\n\n  useEffect(() => {\n    getRoles()\n    getTechHead()\n    getapproverlist()\n    getProdHead()\n    getUserList(viewUser.branch)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [viewUser])\n\n  const [role, setRole] = useState([])\n  const getRoles = async () => {\n    const url = 'master/role/all-list'\n    await api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        const data = response.data.data\n        setRole(data)\n      })\n      .catch((error) => {})\n  }\n  const handleSubmit = async (values) => {\n    const formData = new FormData()\n    setLoadings(true)\n    formData.append('files', selectedFile)\n    Object.keys(values).forEach((key) => {\n      if (key === 'role') {\n        formData.append('role_id', roleName)\n      }\n      if (key === 'nameValue') {\n        //change name value as pascal string\n        let capitalizedString = values[key]\n          .split(' ')\n          .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n          .join(' ')\n        formData.append('name', capitalizedString)\n      } else formData.append(key, values[key])\n    })\n\n    const url = 'master/employee/update/' + viewUser.id\n    await api\n      .put(url, formData, {\n        headers: getHeaders('multi'),\n      })\n      .then((response) => {\n        setLoadings(false)\n        if (response.status === 208) {\n          toast.error(response.data.message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n            autoClose: 3000,\n          })\n        } else {\n          toast.success(response.data.message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n            autoClose: 3000,\n          })\n          resetComponent()\n        }\n      })\n      .catch((error) => {\n        setLoadings(false)\n        toast.error(error, {\n          position: toast.POSITION.BOTTOM_RIGHT,\n          autoClose: 3000,\n        })\n      })\n  }\n  const resetComponent = () => {\n    // eventEmitter.emit('callUserList')\n    close()\n    setRoleType('')\n    setBranch('')\n    supervisorId.current = 0\n    approvalId.current = 0\n    setSelectedFile(null)\n  }\n  const handleRoleSelect = (value) => {\n    selectRef.current.blur()\n    form.setFieldsValue({ finalApprove: undefined })\n    setRoleType(value)\n  }\n  const handleRoleName = (value) => {\n    const rolename = role.find((option) => (option.name === value ? option.id : null))\n    setRoleName(rolename.id)\n    selectRef.current.blur()\n  }\n  form.setFieldsValue({\n    supervisorname: options.find((option) =>\n      option.val === viewUser.supervisorId ? option : null,\n    ),\n  })\n  if (viewUser.roleType === 'Contract') {\n    form.setFieldsValue({\n      finalApprovename:\n        viewUser.branch === 'Technical'\n          ? techHeadOptions.find((option) =>\n              option.val === viewUser.approvalFinalId ? option : null,\n            )\n          : prodHeadOptions.find((option) =>\n              option.val === viewUser.approvalFinalId ? option : null,\n            ),\n    })\n  }\n  const handleprofilepic = (profile) => {\n    if (profile) {\n      setSelectedFile(profile)\n      setSelectedFile1(URL.createObjectURL(profile))\n    } else {\n      setSelectedFile(profileImage1)\n      setSelectedFile1(profileImage1)\n    }\n    // setSelectedFile1(URL.createObjectURL(profile))\n    // setSelectedFile(profile)\n  }\n  return (\n    <>\n      <CRow>\n        <CCol xs={1} style={{ width: '10px', display: 'felx' }} className=\"cancle-arrow-content\">\n          {' '}\n          <span style={{ cursor: 'pointer', marginRight: '2px' }} onClick={close}>\n            <BackArrowSvg width=\"16\" height=\"15\" viewBox=\"0 0 18 18\" fill=\"#A5A1A1\" />\n          </span>\n        </CCol>\n        <CCol xs={11}>\n          <h6 className=\"draft-heading\" style={{ marginTop: '29px' }}>\n            Edit User\n          </h6>\n          <Breadcrumb\n            style={{ marginLeft: '12px' }}\n            className=\"bread-tab\"\n            separator={<span className=\"breadcrumb-separator\">|</span>}\n            items={[\n              {\n                title: (\n                  <Link\n                    rel=\"Dashboard\"\n                    to={'/dashboard'}\n                    className=\"bread-items text-decoration-none text-secondary edit-first-subheading\"\n                  >\n                    Dashboard\n                  </Link>\n                ),\n              },\n              {\n                title: (\n                  <span\n                    className=\"bread-items text-secondary second-subheading\"\n                    style={{ cursor: 'pointer' }}\n                    onClick={resetComponent}\n                  >\n                    User Master\n                  </span>\n                ),\n              },\n              {\n                title: (\n                  <span className=\"text-secondary second-subheading\" style={{ cursor: 'default' }}>\n                    Edit User\n                  </span>\n                ),\n              },\n            ]}\n          />\n          {/* </CCol>\n      </CRow> */}\n          {bannerModal && (\n            // <>\n            <BannerModal\n              handleOpenModalBanner={handleOpenModalBanner}\n              handleCloseModalBanner={handleCloseModalBanner}\n              handledefaultprofic={selectedFile1}\n              handleprofilepicvalue={handleprofilepic}\n            />\n            // </>\n          )}\n          {/* <CRow> */}\n          <Form\n            className=\"mt-4 needs-validation edit_user_card\"\n            ref={formRef}\n            form={form}\n            initialValues={{\n              nameValue: viewUser.name,\n              email: viewUser.email,\n              branch: viewUser.branch,\n              roleType: viewUser.roleType,\n              username: viewUser.employeeId,\n              designation: viewUser.designation,\n              role: viewUser.role,\n              supervisor: viewUser.supervisorId ? viewUser.supervisorId : null,\n              finalApprove: viewUser.approvalFinalId ? viewUser.approvalFinalId : null,\n            }}\n            layout=\"vertical\"\n            onFinish={handleSubmit}\n            requiredMark={false}\n            encType=\"multipart/form-data\"\n            validateTrigger=\"onSubmit\"\n            style={{ marginLeft: '20px', width: '100%' }}\n          >\n            <CRow className=\"mb-5\">\n              <CCol sm={4}>\n                <div\n                  className=\"user_pic_div\"\n                  onClick={(e) => {\n                    e.stopPropagation() // Prevent the event from propagating\n                    handleOpenModalBanner()\n                  }}\n                >\n                  <div className=\"image-background\">\n                    <img\n                      src={selectedFile1}\n                      className=\"user_pic height_width_profile\"\n                      alt={viewUser.name}\n                      style={{ height: '49px', width: '51px' }}\n                    />\n                    <div className=\"overlay-text text-center\">\n                      <CameraOutlined /> Choose picture\n                    </div>\n                  </div>\n                  <div\n                    className=\"node1 access-person-hovercard\"\n                    style={viewUser.profile_pic ? { marginLeft: '11px' } : {}}\n                  >\n                    <p className=\"member-user-name1 user_pic_name\" title={viewUser.name}>\n                      {' '}\n                      {viewUser.name}\n                    </p>\n                    <p className=\"member-role-text1 user_pic_role\">{viewUser.role}</p>\n                  </div>\n                </div>\n              </CCol>\n            </CRow>\n            <CRow className=\"edit_user_details\">\n              <CCol sm={4} md={3}>\n                <Form.Item\n                  name=\"nameValue\"\n                  label={\n                    <span className=\"form-label\">\n                      Name <span className=\"red-text1\">*</span>\n                    </span>\n                  }\n                  colon={false}\n                  rules={[\n                    { required: true, message: 'Please enter user name' },\n                    {\n                      pattern: /^(?!.*\\s$)(?!^\\s)(?!.*\\s{2,})[a-zA-Z\\s.]+$/,\n                      message: 'Invalid input',\n                    },\n                  ]}\n                  validateTrigger={['onChange', 'onSubmit']}\n                >\n                  <Input\n                    maxLength={48}\n                    variant={'borderless'}\n                    className=\"border-0 time-border-bottom user-input\"\n                    placeholder=\"Enter the User name\"\n                  />\n                </Form.Item>\n              </CCol>\n\n              <CCol sm={4} md={3}>\n                <Form.Item\n                  name=\"email\"\n                  label={\n                    <span className=\"form-label\">\n                      Email <span className=\"red-text1\">*</span>\n                    </span>\n                  }\n                  colon={false}\n                  rules={[\n                    { required: true, message: 'Please enter Email Address' },\n                    { type: 'email', message: 'Please enter a valid email address' },\n                  ]}\n                >\n                  <Input\n                    variant={'borderless'}\n                    className=\"border-0 time-border-bottom\"\n                    placeholder=\"Enter the Email Address\"\n                  />\n                </Form.Item>\n              </CCol>\n\n              <CCol sm={4} md={3}>\n                <Form.Item\n                  name=\"username\"\n                  label={\n                    <span className=\"form-label\">\n                      Employee Id <span className=\"red-text1\">*</span>\n                    </span>\n                  }\n                  colon={false}\n                  rules={[\n                    { required: true, message: 'Please enter Employee Id' },\n                    {\n                      pattern: /^(?=.*[a-zA-Z])(?=.*[0-9])[a-zA-Z0-9]*[0-9]+[a-zA-Z0-9]*$|^[0-9]+$/,\n                      message: 'Only alphanumeric characters or numeric are allowed',\n                    },\n                  ]}\n                  validateTrigger={['onChange', 'onSubmit']}\n                >\n                  <Input\n                    variant={'borderless'}\n                    maxLength={15}\n                    className=\"border-0 time-border-bottom\"\n                    placeholder=\"Enter the Employee Id\"\n                  />\n                </Form.Item>\n              </CCol>\n\n              <CCol sm={4} md={3}>\n                <Form.Item\n                  name=\"role\"\n                  label={\n                    <span className=\"form-label\">\n                      Designation <span className=\"red-text1\">*</span>\n                    </span>\n                  }\n                  rules={[{ required: true, message: 'Please Choose Designation' }]}\n                >\n                  <Select\n                    className=\"border-0 time-border-bottom\"\n                    placeholder=\"Choose Designation\"\n                    onChange={handleRoleName}\n                    allowClear\n                    ref={selectRef}\n                    showSearch\n                    suffixIcon={\n                      <img\n                        src={Downarrowimg}\n                        alt=\"Downarrowimg\"\n                        style={{ width: '10px', height: '6px' }}\n                      />\n                    }\n                  >\n                    {role &&\n                      role.map((value, index) => (\n                        <Option value={value.name} key={index}>\n                          {value.name}\n                        </Option>\n                      ))}\n                  </Select>\n                </Form.Item>\n              </CCol>\n\n              <CCol sm={3} md={3}>\n                <Form.Item\n                  name=\"designation\"\n                  label={\n                    <span className=\"form-label\">\n                      Role <span className=\"red-text1\">*</span>\n                    </span>\n                  }\n                  rules={[{ required: true, message: 'Please Choose Role' }]}\n                >\n                  <Select\n                    className=\"border-0 time-border-bottom\"\n                    placeholder=\"Choose Role\"\n                    suffixIcon={\n                      <img\n                        src={Downarrowimg}\n                        alt=\"Downarrowimg\"\n                        style={{ width: '10px', height: '6px' }}\n                      />\n                    }\n                  >\n                    <Option value=\"\">Choose Role</Option>\n                    <Option value=\"Head\">Head</Option>\n                    <Option value=\"Employee\">Employee</Option>\n                    <Option value=\"Owner\">Owner</Option>\n                    <Option value=\"Approver\">Approver</Option>\n                    <Option value=\"Others\">Others</Option>\n                  </Select>\n                </Form.Item>\n              </CCol>\n\n              <CCol sm={4} md={3}>\n                <Form.Item\n                  name=\"branch\"\n                  label={\n                    <span className=\"form-label\">\n                      Branch <span className=\"red-text1\">*</span>\n                    </span>\n                  }\n                  rules={[{ required: true, message: 'Please Choose Branch' }]}\n                >\n                  <Select\n                    className=\"border-0 time-border-bottom\"\n                    placeholder=\"Choose Branch\"\n                    onChange={handleBranch}\n                    suffixIcon={\n                      <img\n                        src={Downarrowimg}\n                        alt=\"Downarrowimg\"\n                        style={{ width: '10px', height: '6px' }}\n                      />\n                    }\n                  >\n                    <Option value=\"Technical\">Technical</Option>\n                    <Option value=\"Product\">Product</Option>\n                    <Option value=\"Data\">Data</Option>\n                  </Select>\n                </Form.Item>\n              </CCol>\n\n              <CCol sm={4} md={3}>\n                <Form.Item\n                  name=\"supervisor\"\n                  label={\n                    <span className=\"form-label\">\n                      Supervisor <span className=\"red-text1\">*</span>\n                    </span>\n                  }\n                  rules={[{ required: true, message: 'Please Choose Supervisor' }]}\n                >\n                  <Select\n                    className=\"border-0 time-border-bottom\"\n                    placeholder=\"Choose Supervisor\"\n                    allowClear\n                    showSearch\n                    options={options}\n                    filterOption={(input, option) => {\n                      const userNameArray =\n                        option.label.props.children[1].props.children[0].props.children\n                      const userName = userNameArray\n                      const lowerCaseInput = input.toLowerCase()\n                      const lowerCaseUserName = userName.toLowerCase()\n                      return lowerCaseUserName.includes(lowerCaseInput)\n                    }}\n                    onChange={(selectedOption) => {\n                      if (selectedOption) {\n                        const newValue = selectedOption\n                        supervisorId.current = newValue\n                      } else {\n                        supervisorId.current = 0\n                      }\n                      selectRef.current.blur()\n                    }}\n                    ref={selectRef}\n                    suffixIcon={\n                      <img\n                        src={Downarrowimg}\n                        alt=\"Downarrowimg\"\n                        style={{ width: '10px', height: '6px' }}\n                      />\n                    }\n                  ></Select>\n                </Form.Item>\n              </CCol>\n\n              <CCol sm={4} md={3}>\n                <Form.Item\n                  name=\"roleType\"\n                  label={\n                    <span className=\"form-label\">\n                      RoleIntake <span className=\"red-text1\">*</span>\n                    </span>\n                  }\n                  rules={[{ required: true, message: 'Please Choose Supervisor' }]}\n                >\n                  <Select\n                    className=\"border-0 time-border-bottom\"\n                    showSearch\n                    placeholder=\"Choose Role\"\n                    allowClear\n                    suffixIcon={\n                      <img\n                        src={Downarrowimg}\n                        alt=\"Downarrowimg\"\n                        style={{ width: '10px', height: '6px' }}\n                      />\n                    }\n                    onChange={handleRoleSelect}\n                    ref={selectRef}\n                  >\n                    <Option value=\"ON Role\">ON Role</Option>\n                    <Option value=\"Contract\">Contract</Option>\n                  </Select>\n                </Form.Item>\n              </CCol>\n              {roleType === 'Contract' && (\n                <CCol sm={4} className=\"final_approver\">\n                  <Form.Item\n                    name=\"finalApprove\"\n                    label={\n                      <span className=\"form-label\">\n                        Final Approver <span className=\"red-text1\">*</span>\n                      </span>\n                    }\n                    rules={[{ required: true, message: 'Please Choose Final Approver' }]}\n                  >\n                    <Select\n                      className=\"border-0 time-border-bottom \"\n                      placeholder=\"Choose Approver\"\n                      allowClear\n                      showSearch\n                      suffixIcon={\n                        <img\n                          src={Downarrowimg}\n                          alt=\"Downarrowimg\"\n                          style={{ width: '10px', height: '6px' }}\n                        />\n                      }\n                      filterOption={(input, option) => {\n                        const userNameArray =\n                          option.label.props.children[1].props.children[0].props.children\n                        const userName = userNameArray\n                        const lowerCaseInput = input.toLowerCase()\n                        const lowerCaseUserName = userName.toLowerCase()\n                        return lowerCaseUserName.includes(lowerCaseInput)\n                      }}\n                      onChange={(selectedOption) => {\n                        if (selectedOption) {\n                          const newValue = selectedOption\n                          approvalId.current = newValue\n                        } else {\n                          approvalId.current = 0\n                        }\n                        selectRef.current.blur()\n                      }}\n                      ref={selectRef}\n                      options={branch === 'Technical' ? techHeadOptions : prodHeadOptions}\n                    ></Select>\n                  </Form.Item>\n                </CCol>\n              )}\n            </CRow>\n\n            <CRow>\n              <CCol\n                style={{ width: '100%' }}\n                className=\"d-flex justify-content-end align-items-end edit-master-footer \"\n              >\n                <Button className=\"edit-cancel-btn \" onClick={close}>\n                  Cancel\n                </Button>\n                <Button\n                  className=\" Edit_save_changes\"\n                  style={{ fontSize: '13px', color: 'white' }}\n                  htmlType=\"submit\"\n                  loading={loadings}\n                >\n                  Update\n                </Button>\n              </CCol>\n            </CRow>\n          </Form>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nEditUser.propTypes = {\n  close: PropTypes.func,\n  viewUser: PropTypes.object,\n}\nexport default EditUser\n","import React, { useState, useEffect, useRef } from 'react'\nimport { Input, Modal, Switch, Breadcrumb, Checkbox } from 'antd'\nimport {\n  CButton,\n  CCol,\n  CModal,\n  CModalBody,\n  CRow,\n  CSpinner,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport { getHeaders, ImageUrl } from 'src/constant/Global'\nimport { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport EditSvg from '../../svgImages/EditSvg'\nimport DeleteSvg from '../../svgImages/DeleteSvg'\nimport profileImage1 from '../../../assets/images/avatars/avatar1.png'\nimport Circle from 'src/views/svgImages/Circle'\nimport AddUser from './AddUser'\nimport EditUser from './EditUser'\nimport useAxios from 'src/constant/UseAxios'\nimport searchicon from '../../../assets/images/form/search-Icon.png'\nimport InfiniteScroll from 'react-infinite-scroll-component'\nimport { toPascalCase } from '../../../constant/TimeUtils'\nimport { ExclamationCircleFilled } from '@ant-design/icons'\nimport { Link } from 'react-router-dom'\nconst { confirm } = Modal\nconst User = () => {\n  let api = useAxios()\n  const [UserTable, setUserTable] = useState([])\n  const [selectedRows, setSelectedRows] = useState([])\n  const [headerLabel, setHeaderLabel] = useState('')\n  const [userVisible, setUserVisible] = useState(false)\n  const [userVisibleEdit, setUserVisibleEdit] = useState(false)\n  const [viewUserData, setViewUserData] = useState(null)\n  const searchValueRef = useRef('')\n  const [showConfirmationModal, setShowConfirmationModal] = useState(false)\n  const [commonLoader, setCommonLoader] = useState(true)\n  const [confirmationData, setConfirmationData] = useState({\n    rowIndex: null,\n    userStatus: null,\n  })\n  const [abortController, setAbortController] = useState(new AbortController())\n  const hasMoreRef = useRef(true)\n  const pageRef = useRef(0)\n  const [page, setPage] = useState(0)\n  const searchRef = useRef(false)\n\n  useEffect(() => {\n    if (!userVisibleEdit && !userVisible) {\n      hasMoreRef.current = true\n      getUserList(0)\n      const tableContainer = document.querySelector('.table-container')\n      tableContainer.addEventListener('scroll', handleScroll)\n      return () => {\n        tableContainer.removeEventListener('scroll', handleScroll)\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [userVisibleEdit, userVisible])\n\n  const handleScroll = () => {\n    const tableContainer = document.querySelector('.table-container')\n    if (tableContainer.scrollTop + tableContainer.clientHeight === tableContainer.scrollHeight) {\n      if (hasMoreRef.current === true) {\n        getUserList(0)\n      }\n    }\n  }\n\n  const handleHeaderCheck = (isChecked) => {\n    if (isChecked) {\n      const allRowIds = UserTable.map((row) => row.id)\n      setSelectedRows(allRowIds)\n      setHeaderLabel(`${allRowIds.length} Selected`)\n    } else {\n      setSelectedRows([])\n      setHeaderLabel('')\n    }\n  }\n  const handleSearch = (value) => {\n    pageRef.current = 0\n    setPage(0)\n    hasMoreRef.current = true\n    searchValueRef.current = value\n    searchRef.current = true\n    if (value === '') searchRef.current = false\n    getUserList(1)\n  }\n\n  const handleMemberCheck = (rowId, isChecked) => {\n    if (isChecked) {\n      setSelectedRows((prevSelectedRows) => [...prevSelectedRows, rowId])\n    } else {\n      setSelectedRows((prevSelectedRows) =>\n        prevSelectedRows.filter((selectedId) => selectedId !== rowId),\n      )\n    }\n\n    // Calculate the new number of selected rows\n    const newSelectedRows = isChecked\n      ? [...selectedRows, rowId]\n      : selectedRows.filter((selectedId) => selectedId !== rowId)\n    const newSelectedRowCount = newSelectedRows.length\n\n    // Update the header label\n    if (newSelectedRowCount < 1) {\n      setHeaderLabel('')\n    } else {\n      setHeaderLabel(`${newSelectedRowCount} Selected`)\n    }\n  }\n\n  const resetEditComponent = () => {\n    setUserVisibleEdit(false)\n    pageRef.current = 0\n    setPage(0)\n    searchValueRef.current = ''\n    searchRef.current = false\n  }\n  const resetAddComponent = () => {\n    setUserVisible(false)\n    pageRef.current = 0\n    setPage(0)\n    searchValueRef.current = ''\n    searchRef.current = false\n  }\n\n  const handleSwitchChange = () => {\n    setShowConfirmationModal(true)\n  }\n\n  const getUserList = async (type) => {\n    let newAbortController\n    let pageCount = pageRef.current\n    if (type) {\n      setPage(0)\n      pageRef.current = 0\n      pageCount = 0\n      setCommonLoader(true)\n      setUserTable([])\n      abortController.abort()\n      newAbortController = new AbortController()\n      setAbortController(newAbortController)\n    }\n    const url = `master/employee/list?page=${pageCount}&size=10&search=${searchRef.current}&value=${searchValueRef.current}`\n    await api\n      .get(url, {\n        headers: getHeaders('json'),\n        signal: newAbortController?.signal,\n      })\n      .then((response) => {\n        const data = response.data.data\n        if (type) {\n          setUserTable(data)\n        } else {\n          setUserTable((prevUserData) => {\n            const uniqueSet = new Set(prevUserData.map((user) => user.id))\n            const newData = data.filter((user) => !uniqueSet.has(user.id))\n            return [...prevUserData, ...newData]\n          })\n        }\n        if (data.length < 10) {\n          hasMoreRef.current = false\n        }\n\n        console.log(pageCount + 1, 'Loading')\n\n        // Update the page state correctly using the functional form of setPage\n        setPage(pageCount + 1)\n        pageRef.current = pageCount + 1\n        setCommonLoader(false)\n      })\n      .catch((error) => {})\n  }\n\n  const openUserModal = () => {\n    setUserVisible(true)\n  }\n\n  const deletefun = async (ids) => {\n    const url = `master/employee/delete/user/` + ids\n\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        api\n          .delete(url, {\n            headers: getHeaders('json'),\n          })\n          .then((response) => {\n            // Handle success\n            pageRef.current = 0\n            setPage(0)\n            searchValueRef.current = ''\n            searchRef.current = false\n            getUserList(1)\n            setHeaderLabel('')\n            setSelectedRows([])\n            resolve(response)\n          })\n          .catch((error) => {\n            // Handle error\n            reject(error)\n          })\n      }, 1000) // Timeout after 1 second\n    })\n  }\n  const handleConfirmationModalConfirm = async () => {\n    const reciprocalUserStatus = !confirmationData.userStatus\n\n    try {\n      const url = `master/employee/update/${confirmationData.rowIndex}/status/${reciprocalUserStatus}`\n\n      const response = await api.put(\n        url,\n        {\n          id: confirmationData.rowIndex,\n          status: reciprocalUserStatus,\n        },\n        {\n          headers: getHeaders('json'),\n        },\n      )\n\n      const data = response.data.data\n      if (Array.isArray(data)) {\n        setUserTable(data.filter(/* your filter condition */))\n      } else {\n        // Handle the case where data is not an array\n        // console.error('Data is not an array:', data)\n      }\n\n      pageRef.current = 0\n      setPage(0)\n      searchValueRef.current = ''\n      searchRef.current = false\n      // Call getUserList only after a successful response\n      return getUserList(1) // Assuming getUserList returns a promise\n    } catch (error) {\n    } finally {\n      setShowConfirmationModal(false)\n      setConfirmationData({\n        rowIndex: null,\n        userStatus: null,\n      })\n    }\n  }\n  const handleConfirmationModalCancel = () => {\n    setShowConfirmationModal(false)\n  }\n  const handleUserEditClick = async (id) => {\n    const url = `master/employee/view/` + id\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        const data = response.data.data\n        setViewUserData(data)\n        setUserVisibleEdit(true)\n      })\n      .catch((error) => {})\n  }\n\n  const warning = (id) => {\n    confirm({\n      title: 'Delete User',\n      content: 'Are you sure to delete this User ?',\n      icon: <ExclamationCircleFilled />,\n      okText: 'Yes',\n      okType: 'danger',\n      cancelButtonProps: {\n        style: { borderColor: '#f54550', color: 'black' },\n      },\n      closable: true,\n      okButtonProps: {\n        style: { borderColor: '#f54550', color: 'white', backgroundColor: '#f54550' },\n      },\n      cancelText: 'No',\n      async onOk() {\n        try {\n          await deletefun(id)\n          toast.success('User Deleted Successfully', {\n            position: toast.POSITION.BOTTOM_RIGHT,\n            autoClose: 3000,\n          })\n        } catch (error) {\n          toast.error('Deletion failed', {\n            position: toast.POSITION.BOTTOM_RIGHT,\n            autoClose: 3000,\n          })\n        }\n      },\n      onCancel() {\n        resetValues()\n      },\n    })\n  }\n\n  const resetValues = () => {\n    setSelectedRows([])\n    setHeaderLabel('')\n  }\n\n  return (\n    <>\n      {userVisible ? (\n        <AddUser close={resetAddComponent} />\n      ) : userVisibleEdit ? (\n        <EditUser close={resetEditComponent} viewUser={viewUserData} />\n      ) : (\n        <>\n          <CRow className=\"mt-3 user-master-header\">\n            <CCol xs={12} sm={6} md={8}>\n              <b style={{ paddingLeft: '30px' }}>User Master</b>\n              <br />\n              <Breadcrumb\n                style={{ paddingLeft: '30px' }}\n                className=\"bread-tab\"\n                separator={<span className=\"breadcrumb-separator\">|</span>}\n                items={[\n                  {\n                    title: (\n                      <Link\n                        rel=\"Dashboard\"\n                        to={'/dashboard'}\n                        className=\"bread-items text-decoration-none text-secondary \"\n                      >\n                        Dashboard\n                      </Link>\n                    ),\n                  },\n                  {\n                    title: (\n                      <span className=\"text-secondary \" style={{ cursor: 'default' }}>\n                        User Master\n                      </span>\n                    ),\n                  },\n                ]}\n              />\n            </CCol>\n\n            <CCol xs={6} sm={3} md={2}>\n              {' '}\n              <Input\n                placeholder=\"Search\"\n                className=\"border-0 user-select-sec \"\n                onChange={(e) => handleSearch(e.target.value)}\n                variant={'borderless'}\n                prefix={\n                  <img\n                    src={searchicon}\n                    alt={searchicon}\n                    style={{ width: '14px', height: '14px' }}\n                    className=\"search-icon\"\n                  />\n                }\n              />\n            </CCol>\n            <CCol xs={6} sm={3} md={2} className=\"add-usermaster\">\n              <button\n                className=\"master-createflow-button button-clr\"\n                type=\"button\"\n                onClick={openUserModal}\n              >\n                {/* <CheckOutlined /> */}\n                <span className=\"plus-lable\">+</span> Add User\n              </button>\n            </CCol>\n          </CRow>\n          <div\n            className=\"table-container table_scroll_master masters-table-scroll mt-2\"\n            style={{ border: 'none' }}\n          >\n            <InfiniteScroll\n              dataLength={UserTable.length}\n              next={handleScroll}\n              hasMore={hasMoreRef.current}\n              loader={\n                <div className=\"text-c text-center my-3 td-text\">\n                  <CSpinner color=\"danger\" />\n                </div>\n              }\n              endMessage={\n                UserTable.length !== 0 && (\n                  <p style={{ textAlign: 'center' }}>\n                    <b style={{ color: '#e40e2d', fontSize: '12px' }}>No more Data to load</b>\n                  </p>\n                )\n              }\n            >\n              <CTable hover>\n                <CTableHead className=\"head-row\">\n                  {!headerLabel ? (\n                    <CTableRow>\n                      <CTableHeaderCell\n                        className=\"table-head-draft head-row text-center  text-c\"\n                        width=\"4%\"\n                        // style={{ backgroundColor: '#fff8f9' }}\n                      >\n                        <Checkbox\n                          id=\"flexCheckDefault\"\n                          onChange={(e) => handleHeaderCheck(e.target.checked)}\n                          //   disabled={true}\n                        />\n                      </CTableHeaderCell>\n                      <CTableHeaderCell\n                        className=\"table-head-draft  text-c grid-cell-header text-center\"\n                        scope=\"col\"\n                        width=\"4%\"\n                      >\n                        SI.No\n                      </CTableHeaderCell>\n                      <CTableHeaderCell\n                        className=\"table-head-draft  text-c grid-cell-header\"\n                        scope=\"col\"\n                        width=\"17%\"\n                      >\n                        Username & Email\n                      </CTableHeaderCell>\n                      <CTableHeaderCell\n                        className=\"table-head-draft  text-c grid-cell-header\"\n                        scope=\"col\"\n                        width=\"10%\"\n                      >\n                        Employee ID\n                      </CTableHeaderCell>\n                      <CTableHeaderCell\n                        className=\"table-head-draft  text-c grid-cell-header\"\n                        scope=\"col\"\n                        width=\"10%\"\n                      >\n                        Designation\n                      </CTableHeaderCell>\n                      <CTableHeaderCell\n                        className=\"table-head-draft  text-c grid-cell-header\"\n                        scope=\"col\"\n                        width=\"6%\"\n                      >\n                        Role\n                      </CTableHeaderCell>\n                      <CTableHeaderCell\n                        className=\"table-head-draft  text-c grid-cell-header\"\n                        scope=\"col\"\n                        width=\"10%\"\n                      >\n                        Branch\n                      </CTableHeaderCell>\n                      <CTableHeaderCell\n                        className=\"table-head-draft  text-c grid-cell-header\"\n                        scope=\"col\"\n                        width=\"10%\"\n                      >\n                        Supervisor\n                      </CTableHeaderCell>\n                      <CTableHeaderCell\n                        className=\"table-head-draft  text-c grid-cell-header\"\n                        scope=\"col\"\n                        width=\"10%\"\n                      >\n                        Role Intake\n                      </CTableHeaderCell>\n                      <CTableHeaderCell\n                        className=\"table-head-draft  text-c grid-cell-header\"\n                        scope=\"col\"\n                        width=\"10%\"\n                      >\n                        Final Approval\n                      </CTableHeaderCell>\n                      <CTableHeaderCell\n                        className=\"table-head-draft  text-c grid-cell-header text-center\"\n                        scope=\"col\"\n                        width=\"20%\"\n                      >\n                        Action\n                      </CTableHeaderCell>\n                    </CTableRow>\n                  ) : (\n                    <CTableRow>\n                      <CTableHeaderCell\n                        className=\"table-head-selected head-row text-center  text-c \"\n                        scope=\"col\"\n                        width=\"4%\"\n                        style={{ position: 'sticky', top: '0', zIndex: '12' }}\n                      >\n                        <Checkbox\n                          id=\"flexCheckDefault\"\n                          className=\"checkbox_design\"\n                          checked={selectedRows.length === UserTable.length && UserTable.length}\n                          onChange={(e) => handleHeaderCheck(e.target.checked)}\n                        />\n                      </CTableHeaderCell>\n                      <CTableHeaderCell\n                        className=\"table-head-selected  text-c \"\n                        colSpan=\"9\" // Span across all other columns\n                      >\n                        <span style={{ color: '#f50505' }}>{headerLabel}</span>\n                      </CTableHeaderCell>\n                      <CTableHeaderCell className=\"table-head-selected  text-c \" width=\"10%\">\n                        <div\n                          style={{\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                          }}\n                        >\n                          <button\n                            type=\"button\"\n                            className=\"action-view cross-button\"\n                            onClick={() => warning(selectedRows)}\n                            style={{ padding: '4px 8px' }}\n                          >\n                            <DeleteSvg width=\"16\" height=\"15\" viewBox=\"0 0 18 18\" fill=\"#e40e2d\" />\n                          </button>\n                        </div>\n                      </CTableHeaderCell>\n                    </CTableRow>\n                  )}\n                </CTableHead>\n                <CTableBody>\n                  {UserTable &&\n                    UserTable.map((row, index) => (\n                      <CTableRow key={index}>\n                        <CTableDataCell\n                          className={`text-c  text-center grid-cell ${\n                            selectedRows.includes(row.id) ? 'checked-table-row' : ''\n                          }`}\n                          width=\"4%\"\n                        >\n                          <Checkbox\n                            id=\"flexCheckDefault\"\n                            className=\"checkbox_design\"\n                            checked={selectedRows.includes(row.id)}\n                            onChange={(e) => {\n                              handleMemberCheck(row.id, e.target.checked)\n                            }}\n                          />\n                        </CTableDataCell>\n                        <CTableDataCell\n                          className=\"text-c pd-text1 grid-cell text-center\"\n                          width=\"4%\"\n                        >\n                          {index + 1}\n                        </CTableDataCell>\n                        <CTableDataCell\n                          className=\"text-c pdn-text1 grid-cell\"\n                          title={row.name}\n                          width=\"17%\"\n                        >\n                          <div className=\"user_pic_div\">\n                            <div style={{ marginBottom: '11px' }}>\n                              <Circle\n                                color={row.userStatus ? '#A3FA34' : '#ED0023'}\n                                width=\"10\"\n                                height=\"9\"\n                                viewBox=\"0 0 10 9\"\n                                fill=\"none\"\n                              />\n                            </div>\n                            <div className=\"image-background\">\n                              <img\n                                src={row.profile_pic ? ImageUrl + row.profile_pic : profileImage1}\n                                className=\"user_pic\"\n                                alt={row.name}\n                              />\n                            </div>\n                            <div\n                              className=\"node1 access-person-hovercard\"\n                              style={\n                                row.profile_pic ? { marginLeft: '11px', marginTop: '10px' } : {}\n                              }\n                            >\n                              <p\n                                className=\"member-user-name1 user_pic_name\"\n                                title={toPascalCase(row.name)}\n                              >\n                                {' '}\n                                {toPascalCase(row.name)}\n                              </p>\n                              <p className=\"member-role-text1 user_pic_name\" title={row.email}>\n                                {row.email}\n                              </p>\n                            </div>\n                          </div>\n                        </CTableDataCell>\n                        <CTableDataCell\n                          className=\"text-c pd-text1 grid-cell\"\n                          title={row.employeeId}\n                          width=\"8%\"\n                        >\n                          {row.employeeId}\n                        </CTableDataCell>\n                        <CTableDataCell\n                          className=\"text-c pd-text1 grid-cell\"\n                          title={row.role}\n                          width=\"10%\"\n                        >\n                          {row.role}\n                        </CTableDataCell>\n                        <CTableDataCell\n                          className=\"text-c pd-text1 grid-cell\"\n                          title={row.designation}\n                          width=\"10%\"\n                        >\n                          {row.designation}\n                        </CTableDataCell>\n                        <CTableDataCell\n                          className=\"text-c pd-text1 grid-cell\"\n                          title={row.branch}\n                          width=\"10%\"\n                        >\n                          {row.branch}\n                        </CTableDataCell>\n                        <CTableDataCell\n                          className=\"text-c pd-text1 grid-cell\"\n                          title={toPascalCase(row.supervisor)}\n                          width=\"10%\"\n                        >\n                          {toPascalCase(row.supervisor)}\n                        </CTableDataCell>\n                        <CTableDataCell\n                          className=\"text-c pd-text1 grid-cell\"\n                          title={row.roleType}\n                          width=\"7%\"\n                        >\n                          {row.roleType}\n                        </CTableDataCell>\n                        <CTableDataCell\n                          className=\"text-c pd-text1 grid-cell\"\n                          title={row.approvalFinalName}\n                          width=\"10%\"\n                        >\n                          {row.approvalFinalName !== null\n                            ? toPascalCase(row.approvalFinalName)\n                            : '-'}\n                        </CTableDataCell>\n                        <CTableDataCell\n                          // className={`text-c pd-text1 text-center grid-cell ${\n                          //   selectedRows.includes(row.id) ? 'checked-table-row' : ''\n                          // }`}\n                          width=\"20%\"\n                        >\n                          <div style={{ display: 'flex', alignItems: 'center' }}>\n                            <button\n                              type=\"button\"\n                              className=\"action-view  edit-button\"\n                              style={{ padding: '4px 8px' }}\n                              onClick={() => handleUserEditClick(row.id)}\n                            >\n                              <EditSvg\n                                width=\"13\"\n                                height=\"13\"\n                                viewBox=\"0 0 18 18\"\n                                fill=\"none\"\n                                color=\"white\"\n                                clipH=\"18\"\n                                clipW=\"18\"\n                              />\n                            </button>\n                            <Switch\n                              className={row.userStatus ? 'activeUser mx-1' : 'inactiveUser mx-1'}\n                              size=\"small\"\n                              id=\"formSwitchCheckDefaultLg\"\n                              onChange={handleSwitchChange}\n                              onClick={() => {\n                                setConfirmationData({\n                                  rowIndex: row.id,\n                                  userStatus: row.userStatus,\n                                })\n                                // Optionally, you can open your modal here\n                              }}\n                              checked={row.userStatus}\n                              style={{\n                                backgroundColor: row.userStatus ? '#3CB043' : '#fa170f',\n                                cursor: 'pointer',\n                              }}\n                            />\n                            <button\n                              type=\"button\"\n                              className=\"action-view cross-button\"\n                              style={{ padding: '4px 8px' }}\n                              onClick={!headerLabel ? () => warning(row.id) : null}\n                            >\n                              <DeleteSvg\n                                width=\"14\"\n                                height=\"13\"\n                                viewBox=\"0 0 18 18\"\n                                fill=\"#A5A1A1\"\n                              />\n                            </button>\n                          </div>\n                        </CTableDataCell>\n                      </CTableRow>\n                    ))}\n                </CTableBody>\n              </CTable>\n\n              {(UserTable === null && !commonLoader) ||\n              (UserTable.length === 0 && !commonLoader) ? (\n                <div className=\"text-c text-center my-3 td-text\">No Data Found</div>\n              ) : commonLoader ? (\n                <div className=\"text-c text-center my-3 td-text\">\n                  <CSpinner color=\"danger\" />\n                </div>\n              ) : (\n                <div></div>\n              )}\n            </InfiniteScroll>\n          </div>\n\n          {showConfirmationModal && (\n            <CModal\n              size=\"sm\"\n              backdrop=\"static\"\n              alignment=\"center\"\n              visible={showConfirmationModal}\n              onClose={handleConfirmationModalCancel}\n              className={`right ${showConfirmationModal ? 'modal-visible' : 'modal-hidden'}`}\n            >\n              <CModalBody>\n                <CRow>\n                  <CCol style={{ fontSize: '14px', fontWeight: '600' }}>\n                    {confirmationData.userStatus === true\n                      ? 'Are you sure you want to Inactivate this User?'\n                      : 'Are you sure you want to Activate this User?'}\n                  </CCol>\n                </CRow>\n                <CRow className=\"mt-2\">\n                  <CCol className=\"d-flex justify-content-end align-items-end user-master-footer\">\n                    <CButton className=\"edit-cancel-btn\" onClick={handleConfirmationModalCancel}>\n                      Cancel\n                    </CButton>\n                    <CButton\n                      className=\" Edit_save_changes\"\n                      style={{ fontSize: '13px', color: 'white', width: '20%' }}\n                      onClick={() => handleConfirmationModalConfirm()}\n                    >\n                      Confirm\n                    </CButton>\n                  </CCol>\n                </CRow>\n              </CModalBody>\n            </CModal>\n          )}\n        </>\n      )}\n    </>\n  )\n}\n\nexport default User\n","import React, { useState, useEffect, useRef } from 'react'\nimport { Select, Tooltip, Card, Divider, Skeleton } from 'antd'\nimport {\n  CCol,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CSpinner,\n} from '@coreui/react'\nimport { getDecodeData, getHeaders, ImageUrl } from 'src/constant/Global'\nimport profileImage1 from '../../../assets/images/avatars/wrapper.png'\nimport PropTypes from 'prop-types'\nimport { ToastContainer } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport EditSvg from '../../svgImages/EditSvg'\nimport ViewProduct from '../../products/ViewProduct'\nimport useAxios from 'src/constant/UseAxios'\nimport EyeSvg from '../../svgImages/EyeSvg'\nimport InfiniteScroll from 'react-infinite-scroll-component'\nimport Downarrowimg from '../../../assets/images/downarrow.png'\nimport AddProduct from 'src/views/products/productHead/AddProduct'\nimport EditProduct from 'src/views/products/productHead/EditProduct'\n\nconst Product = ({\n  formatDate,\n  FlowList,\n  prodOwnerList,\n  techOwnerList,\n  dataOwnerList,\n  categories,\n  techHeadList,\n  dataHeadList,\n  prodHeadList,\n}) => {\n  let api = useAxios()\n  const user = getDecodeData()\n  const branch = user?.branch\n  const [productId, setProductId] = useState()\n  const [tableData, setTableData] = useState([])\n  const [productNames, setProductNames] = useState([])\n  const [viewProductData, setViewProductData] = useState([])\n  const [viewProductShow, setViewProductShow] = useState(false)\n  const [commonLoader, setCommonLoader] = useState(true)\n  const [abortController, setAbortController] = useState(new AbortController())\n  const selectRef = useRef(null)\n  // const [hasMore, setHasMore] = useState(true)\n  const hasMoreRef = useRef(true)\n  const pageRef = useRef(0)\n  const searchRef = useRef(false)\n  const productRef = useRef(0)\n  const [pLoader, setPLoader] = useState(true)\n  const [addProductShow, setAddProductShow] = useState(false)\n  const [editProductShow, setEditProductShow] = useState(false)\n\n  useEffect(() => {\n    getProductNames()\n    if (!addProductShow && !viewProductShow && !editProductShow) {\n      pageRef.current = 0\n      hasMoreRef.current = true\n      getProductList()\n      const tableContainer = document.querySelector('.table-container')\n      tableContainer.addEventListener('scroll', handleScroll)\n      return () => {\n        tableContainer.removeEventListener('scroll', handleScroll)\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [addProductShow, viewProductShow, editProductShow])\n\n  const handleScroll = () => {\n    const tableContainer = document.querySelector('.table-container')\n    if (tableContainer.scrollTop + tableContainer.clientHeight === tableContainer.scrollHeight) {\n      if (hasMoreRef.current === true) {\n        getProductList()\n      }\n    }\n  }\n\n  const getProductList = async () => {\n    let newAbortController\n    if (pageRef.current === 0) {\n      setCommonLoader(true)\n      setTableData([])\n      abortController.abort()\n      newAbortController = new AbortController()\n      setAbortController(newAbortController)\n    }\n    const url = `product/list?page=${pageRef.current}&size=10&search=${searchRef.current}&status=Approved&value=${productRef.current}&key=Admin`\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n        signal: newAbortController?.signal,\n      })\n      .then((response) => {\n        const data = response.data.data\n        if (pageRef.current === 0) setTableData(data)\n        else setTableData((prevUserData) => [...prevUserData, ...data])\n        if (data.length < 10) {\n          hasMoreRef.current = false\n        }\n\n        // Increment the page number for the next fetch\n        pageRef.current = pageRef.current + 1\n        setCommonLoader(false)\n      })\n      .catch((error) => {})\n  }\n\n  const handleProduct = (value) => {\n    if (value === undefined) {\n      setProductId()\n      searchRef.current = false\n      productRef.current = 0\n    } else {\n      setProductId(value)\n      searchRef.current = true\n      productRef.current = value\n    }\n    selectRef.current.blur()\n    pageRef.current = 0\n    hasMoreRef.current = true\n    getProductList()\n  }\n\n  const techOwnerOptions = techOwnerList.map((user) => ({\n    value: user.name,\n    label: (\n      <div className=\"select-options select-options-bg\">\n        <img\n          src={user.profile_pic ? ImageUrl + user.profile_pic : profileImage1}\n          style={user.profile_pic ? { width: '29px', borderRadius: '14px' } : { width: '39px' }}\n          alt={user.name}\n          className=\"img-flag\"\n        />\n        <div className=\"node1\" style={user.profile_pic ? { marginLeft: '11px' } : {}}>\n          <p className=\"user-name1\" title={user.name}>\n            {' '}\n            {user.name}\n          </p>\n          <p className=\"role-text1\">{user.role}</p>\n        </div>\n      </div>\n    ),\n  }))\n\n  const dataOwnerOptions = dataOwnerList.map((user) => ({\n    value: user.name,\n    label: (\n      <div className=\"select-options select-options-bg\">\n        <img\n          src={user.profile_pic ? ImageUrl + user.profile_pic : profileImage1}\n          style={user.profile_pic ? { width: '29px', borderRadius: '14px' } : { width: '39px' }}\n          alt={user.name}\n          className=\"img-flag\"\n        />\n        <div className=\"node1\" style={user.profile_pic ? { marginLeft: '11px' } : {}}>\n          <p className=\"user-name1\" title={user.name}>\n            {' '}\n            {user.name}\n          </p>\n          <p className=\"role-text1\">{user.role}</p>\n        </div>\n      </div>\n    ),\n  }))\n\n  const prodOwnerOptions = prodOwnerList.map((user) => ({\n    value: user.name,\n    label: (\n      <div className=\"select-options select-options-bg\">\n        <img\n          src={user.profile_pic ? ImageUrl + user.profile_pic : profileImage1}\n          style={user.profile_pic ? { width: '29px', borderRadius: '14px' } : { width: '39px' }}\n          alt={user.name}\n          className=\"img-flag\"\n        />\n        <div className=\"node1\" style={user.profile_pic ? { marginLeft: '11px' } : {}}>\n          <p className=\"user-name1\" title={user.name}>\n            {' '}\n            {user.name}\n          </p>\n          <p className=\"role-text1\">{user.role}</p>\n        </div>\n      </div>\n    ),\n  }))\n\n  const handleProductView = async (id) => {\n    const url = `product/view/` + id\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        const data = response.data.data\n        setViewProductData(data)\n        // setViewProductShow(true)\n      })\n      .catch((error) => {})\n  }\n  const openViewProduct = (id) => {\n    handleProductView(id)\n    setViewProductShow(true)\n  }\n  const closeViewProduct = () => {\n    setViewProductShow(false)\n  }\n  const getProductNames = async () => {\n    const url = `product/head/search?status=Approved`\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        const data = response.data.data\n        setProductNames(data)\n        setPLoader(false)\n      })\n      .catch((error) => {})\n  }\n  const openAddProduct = (id) => {\n    setAddProductShow(true)\n  }\n\n  const closeAddProduct = () => {\n    setAddProductShow(false)\n  }\n\n  const openEditProduct = (id) => {\n    handleProductView(id)\n    setEditProductShow(true)\n  }\n\n  const closeEditProduct = () => {\n    setEditProductShow(false)\n    searchRef.current = false\n    pageRef.current = 0\n    productRef.current = 0\n  }\n  return (\n    <>\n      <ToastContainer />\n      {addProductShow ? (\n        <AddProduct\n          flow={null}\n          flowList={FlowList}\n          close={closeAddProduct}\n          techHeadList={techHeadList}\n          prodHeadList={prodHeadList}\n          dataHeadList={dataHeadList}\n          prodOwnerList={prodOwnerList}\n          techOwnerList={techOwnerList}\n          dataOwnerList={dataOwnerList}\n          titleList=\"Product Creation Master\"\n          categories={categories}\n        />\n      ) : viewProductShow ? (\n        <ViewProduct\n          flowList={FlowList}\n          close={closeViewProduct}\n          techHeadList={techHeadList}\n          prodHeadList={prodHeadList}\n          dataHeadList={dataHeadList}\n          categories={categories}\n          ViewProductData={viewProductData}\n          viewStatus=\"Admin\"\n          titleList=\"Product Creation Master\"\n          ownerOption={\n            branch === 'Technical'\n              ? techOwnerOptions\n              : branch === 'Product'\n              ? prodOwnerOptions\n              : dataOwnerOptions\n          }\n          mastersTech={techOwnerOptions}\n          mastersProd={prodOwnerOptions}\n          mastersData={dataOwnerOptions}\n        />\n      ) : editProductShow ? (\n        <EditProduct\n          flowList={FlowList}\n          techHeadList={techHeadList}\n          prodHeadList={prodHeadList}\n          dataHeadList={dataHeadList}\n          categories={categories}\n          EditProductData={viewProductData}\n          callBackFunc={closeEditProduct}\n          title=\"Product Creation Master\"\n          mastersTech={techOwnerList}\n          mastersProd={prodOwnerList}\n          mastersData={dataOwnerList}\n          viewStatus=\"Admin\"\n        />\n      ) : (\n        <>\n          <CRow className=\"mt-3\">\n            <CCol xs={12} sm={6} md={8}>\n              <b style={{ marginLeft: '30px' }}>Product Creation Master</b>\n            </CCol>\n\n            <CCol xs={6} sm={3} md={2}>\n              <Select\n                ref={selectRef}\n                className=\"contract_members_activity_select custom-select_appr appr-sel\"\n                suffixIcon={\n                  <img\n                    src={Downarrowimg}\n                    alt=\"Downarrowimg\"\n                    style={{ width: '10px', height: '6px' }}\n                  />\n                }\n                id=\"products\"\n                value={productId}\n                onChange={(value) => handleProduct(value)}\n                showSearch\n                allowClear\n                filterOption={(input, option) =>\n                  option.label.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                }\n                dropdownRender={(menu) => (\n                  <div style={{ overflow: 'auto' }} role=\"listbox\">\n                    {menu}\n                  </div>\n                )}\n                options={\n                  pLoader\n                    ? [\n                        {\n                          label: (\n                            <div style={{ textAlign: 'center' }}>\n                              {Array.from({ length: 5 }, (_, index) => (\n                                <Skeleton\n                                  key={index}\n                                  title={false}\n                                  paragraph={{\n                                    rows: 1,\n                                    width: '100%',\n                                    height: '10px',\n                                    style: { height: '10px !important' },\n                                  }}\n                                />\n                              ))}\n                            </div>\n                          ),\n                          value: 'loading',\n                          disabled: true,\n                        },\n                      ]\n                    : productNames.map((prod) => ({\n                        value: prod.id,\n                        label: prod.name,\n                      }))\n                }\n                placeholder=\"Choose Product\"\n                getPopupContainer={(triggerNode) => triggerNode.parentNode}\n              />\n            </CCol>\n            <CCol xs={6} sm={3} md={2} className=\"add-usermaster\">\n              <button\n                className=\"master-createflow-button button-clr\"\n                type=\"button\"\n                onClick={openAddProduct}\n              >\n                {/* <CheckOutlined /> */}\n                <span className=\"plus-lable\">+</span> Add Product\n              </button>\n            </CCol>\n          </CRow>\n\n          <div\n            className=\"table-container table_scroll_master masters-table-scroll mt-2\"\n            style={{ border: 'none' }}\n          >\n            <InfiniteScroll\n              dataLength={tableData.length}\n              next={handleScroll}\n              hasMore={hasMoreRef.current}\n              loader={\n                <div className=\"text-c text-center my-3 td-text\">\n                  <CSpinner color=\"danger\" />\n                </div>\n              }\n              endMessage={\n                tableData.length !== 0 && (\n                  <p style={{ textAlign: 'center' }}>\n                    <b style={{ color: '#e40e2d', fontSize: '12px' }}>No more Data to load</b>\n                  </p>\n                )\n              }\n            >\n              <CTable hover>\n                <CTableHead className=\"head-row draft-head-row-ts\">\n                  <CTableRow>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c text-center\"\n                      scope=\"col\"\n                      width=\"4%\"\n                    >\n                      SI.No\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      Product Name\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"8%\"\n                    >\n                      Flow\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      Product Head\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      Technical Head\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      Data Head\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      Start Date\n                    </CTableHeaderCell>\n                    {/* <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      End Date\n                    </CTableHeaderCell> */}\n                    {/* <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      width=\"10%\"\n                      scope=\"col\"\n                    >\n                      Approval Flow\n                    </CTableHeaderCell> */}\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      width=\"10%\"\n                      scope=\"col\"\n                    >\n                      Technical Owners\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      width=\"10%\"\n                      scope=\"col\"\n                    >\n                      Product Owners\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      width=\"10%\"\n                      scope=\"col\"\n                    >\n                      Data Owners\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c text-center\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      Action\n                    </CTableHeaderCell>\n                  </CTableRow>\n                </CTableHead>\n                <CTableBody>\n                  {!tableData ? (\n                    <div></div>\n                  ) : (\n                    tableData.map((row, index) => (\n                      <CTableRow key={index} className=\"tr-bg-color\">\n                        <CTableDataCell className=\"productflow-col-box text-c pad-bottom_flow td-product-text\">\n                          {index + 1}\n                        </CTableDataCell>\n                        <CTableDataCell className=\"productflow-product-name pad-bottom_flow td-product-text\">\n                          <Tooltip\n                            placement=\"bottomLeft\"\n                            title={row.productName}\n                            className=\"productflow-name-lable\"\n                          >\n                            {row.productName}\n                          </Tooltip>\n                        </CTableDataCell>\n                        <CTableDataCell className=\" productflow-product-flow pad-bottom_flow td-product-text\">\n                          <Tooltip\n                            placement=\"bottomLeft\"\n                            title={row.flowName ? row.flowName : ''}\n                            className=\"flow-name-lable\"\n                          >\n                            {row.flowName ? row.flowName : ''}\n                          </Tooltip>\n                        </CTableDataCell>\n                        <CTableDataCell className=\"productflow-product-head pad-bottom_flow\">\n                          {row.prodHead.length !== 0\n                            ? row.prodHead.map((data) => {\n                                return (\n                                  <div\n                                    style={{ display: 'flex', alignItems: 'center' }}\n                                    key={data.id}\n                                  >\n                                    <img\n                                      src={\n                                        data.profilePic ? ImageUrl + data.profilePic : profileImage1\n                                      }\n                                      alt=\"Profile\"\n                                      className=\"head-td\"\n                                    />\n                                    <div className=\"node1\" style={{ marginTop: '7px' }}>\n                                      <p className=\"head-td-name\" title={data.name}>\n                                        {data.name}\n                                      </p>\n                                      <p className=\"head-td-role\" title={data.designation}>\n                                        {data.designation}\n                                      </p>\n                                    </div>\n                                  </div>\n                                )\n                              })\n                            : '---'}\n                        </CTableDataCell>\n                        <CTableDataCell className=\"productflow-product-head pad-bottom_flow\">\n                          {row.techHead.length !== 0\n                            ? row.techHead.map((data) => {\n                                return (\n                                  <div\n                                    style={{ display: 'flex', alignItems: 'center' }}\n                                    key={data.id}\n                                  >\n                                    <img\n                                      src={\n                                        data.profilePic ? ImageUrl + data.profilePic : profileImage1\n                                      }\n                                      alt=\"Profile\"\n                                      className=\"head-td\"\n                                    />\n                                    <div className=\"node1\" style={{ marginTop: '7px' }}>\n                                      <p className=\"head-td-name\" title={data.name}>\n                                        {data.name}\n                                      </p>\n                                      <p className=\"head-td-role\" title={data.designation}>\n                                        {data.designation}\n                                      </p>\n                                    </div>\n                                  </div>\n                                )\n                              })\n                            : '---'}\n                        </CTableDataCell>\n                        <CTableDataCell className=\"productflow-product-head pad-bottom_flow\">\n                          {row.dataHead.length !== 0\n                            ? row.dataHead.map((data) => {\n                                return (\n                                  <div\n                                    style={{ display: 'flex', alignItems: 'center' }}\n                                    key={data.id}\n                                  >\n                                    <img\n                                      src={\n                                        data.profilePic ? ImageUrl + data.profilePic : profileImage1\n                                      }\n                                      alt=\"Profile\"\n                                      className=\"head-td\"\n                                    />\n                                    <div className=\"node1\" style={{ marginTop: '7px' }}>\n                                      <p className=\"head-td-name\" title={data.name}>\n                                        {data.name}\n                                      </p>\n                                      <p className=\"head-td-role\" title={data.designation}>\n                                        {data.designation}\n                                      </p>\n                                    </div>\n                                  </div>\n                                )\n                              })\n                            : '---'}\n                        </CTableDataCell>\n                        <CTableDataCell className=\"productflow-product-Startdate pad-bottom_flow td-product-text\">\n                          {formatDate(row.startDate)}\n                        </CTableDataCell>\n                        <CTableDataCell className=\"text-c flowlist-accesperson pad-bottom_flow\">\n                          <div className=\"table-cell-container\">\n                            <div className=\"image-background-accessperson\">\n                              {row.technicalOwners.slice(0, 3).map((member, index) => (\n                                <div className=\"accessPerImg\" key={index}>\n                                  <div className=\"tooltip-container\">\n                                    <img\n                                      src={\n                                        member.profilePic\n                                          ? ImageUrl + member.profilePic\n                                          : profileImage1\n                                      }\n                                      className={member.profilePic ? 'first-image' : 'second-image'}\n                                      alt=\"Access Person Images\"\n                                    />\n                                  </div>\n                                </div>\n                              ))}\n                              <div>\n                                {row.technicalOwners.length > 3 && (\n                                  <div className=\"accessPerImg text-center more-person-access rounded-circle\">\n                                    <span>+{row.technicalOwners.length - 3}</span>\n                                  </div>\n                                )}\n                              </div>\n                            </div>\n\n                            <div className=\"card-list-person\">\n                              {row.technicalOwners.length !== 0 && (\n                                <Card\n                                  style={{ width: '230px', height: '120px', overflowY: 'auto' }}\n                                  className=\"Access-card\"\n                                >\n                                  {row.technicalOwners.map((member) => (\n                                    <div key={member.id}>\n                                      <div className=\" access-person-tooltip  \">\n                                        <div className=\"image-background\">\n                                          <img\n                                            src={\n                                              member.profilePic\n                                                ? ImageUrl + member.profilePic\n                                                : profileImage1\n                                            }\n                                            className={\n                                              member.profilePic\n                                                ? 'card-access-image'\n                                                : 'card-approval-image'\n                                            }\n                                            alt={member.name}\n                                          />\n                                        </div>\n                                        <div\n                                          className=\"node1 access-person-hovercard\"\n                                          style={member.profilePic ? { marginLeft: '11px' } : {}}\n                                        >\n                                          <p className=\"member-user-name1\"> {member.name}</p>\n                                          <p className=\"member-role-text1\">{member.designation}</p>\n                                        </div>\n                                      </div>\n                                      <Divider />\n                                    </div>\n                                  ))}\n                                </Card>\n                              )}\n                            </div>\n                          </div>\n                        </CTableDataCell>\n                        <CTableDataCell className=\"text-c flowlist-accesperson pad-bottom_flow\">\n                          <div className=\"table-cell-container\">\n                            <div className=\"image-background-accessperson\">\n                              {row.productOwners?.slice(0, 3).map((member, index) => (\n                                <div className=\"accessPerImg\" key={index}>\n                                  <div className=\"tooltip-container\">\n                                    <img\n                                      src={\n                                        member.profilePic\n                                          ? ImageUrl + member.profilePic\n                                          : profileImage1\n                                      }\n                                      className={member.profilePic ? 'first-image' : 'second-image'}\n                                      alt=\"Access Person Images\"\n                                    />\n                                  </div>\n                                </div>\n                              ))}\n                              <div>\n                                {row.productOwners.length > 3 && (\n                                  <div className=\"accessPerImg text-center more-person-access rounded-circle\">\n                                    <span>+{row.productOwners.length - 3}</span>\n                                  </div>\n                                )}\n                              </div>\n                            </div>\n\n                            <div className=\"card-list-person\">\n                              {row.productOwners.length !== 0 && (\n                                <Card\n                                  style={{ width: '230px', height: '120px', overflowY: 'auto' }}\n                                  className=\"Access-card\"\n                                >\n                                  {row.productOwners.map((member) => (\n                                    <div key={member.id}>\n                                      <div className=\" access-person-tooltip  \">\n                                        <div className=\"image-background\">\n                                          <img\n                                            src={\n                                              member.profilePic\n                                                ? ImageUrl + member.profilePic\n                                                : profileImage1\n                                            }\n                                            className={\n                                              member.profilePic\n                                                ? 'card-access-image'\n                                                : 'card-approval-image'\n                                            }\n                                            alt={member.name}\n                                          />\n                                        </div>\n                                        <div\n                                          className=\"node1 access-person-hovercard\"\n                                          style={member.profilePic ? { marginLeft: '11px' } : {}}\n                                        >\n                                          <p className=\"member-user-name1\"> {member.name}</p>\n                                          <p className=\"member-role-text1\">{member.designation}</p>\n                                        </div>\n                                      </div>\n                                      <Divider />\n                                    </div>\n                                  ))}\n                                </Card>\n                              )}\n                            </div>\n                          </div>\n                        </CTableDataCell>\n                        <CTableDataCell className=\"text-c flowlist-accesperson pad-bottom_flow\">\n                          <div className=\"table-cell-container\">\n                            <div className=\"image-background-accessperson\">\n                              {row.dataOwners?.slice(0, 3).map((member, index) => (\n                                <div className=\"accessPerImg\" key={index}>\n                                  <div className=\"tooltip-container\">\n                                    <img\n                                      src={\n                                        member.profilePic\n                                          ? ImageUrl + member.profilePic\n                                          : profileImage1\n                                      }\n                                      className={member.profilePic ? 'first-image' : 'second-image'}\n                                      alt=\"Access Person Images\"\n                                    />\n                                  </div>\n                                </div>\n                              ))}\n                              <div>\n                                {row.dataOwners.length > 3 && (\n                                  <div className=\"accessPerImg text-center more-person-access rounded-circle\">\n                                    <span>+{row.dataOwners.length - 3}</span>\n                                  </div>\n                                )}\n                              </div>\n                            </div>\n\n                            <div className=\"card-list-person\">\n                              {row.dataOwners.length !== 0 && (\n                                <Card\n                                  style={{ width: '230px', height: '120px', overflowY: 'auto' }}\n                                  className=\"Access-card\"\n                                >\n                                  {row.dataOwners.map((member) => (\n                                    <div key={member.id}>\n                                      <div className=\" access-person-tooltip  \">\n                                        <div className=\"image-background\">\n                                          <img\n                                            src={\n                                              member.profilePic\n                                                ? ImageUrl + member.profilePic\n                                                : profileImage1\n                                            }\n                                            className={\n                                              member.profilePic\n                                                ? 'card-access-image'\n                                                : 'card-approval-image'\n                                            }\n                                            alt={member.name}\n                                          />\n                                        </div>\n                                        <div\n                                          className=\"node1 access-person-hovercard\"\n                                          style={member.profilePic ? { marginLeft: '11px' } : {}}\n                                        >\n                                          <p className=\"member-user-name1\"> {member.name}</p>\n                                          <p className=\"member-role-text1\">{member.designation}</p>\n                                        </div>\n                                      </div>\n                                      <Divider />\n                                    </div>\n                                  ))}\n                                </Card>\n                              )}\n                            </div>\n                          </div>\n                        </CTableDataCell>\n                        <CTableDataCell className=\"productflow-product-Action pad-bottom_flow text-center td-product-text\">\n                          <button\n                            type=\"button\"\n                            className=\"btn border-0 text-c text-secondary cross-button\"\n                            style={{ fontSize: '12px', padding: '4px 8px' }}\n                            onClick={() => openViewProduct(row.id)}\n                          >\n                            <EyeSvg width=\"13\" height=\"13\" viewBox=\"0 0 20 16\" fill=\"#A5A1A1\" />\n                          </button>\n                          <button\n                            type=\"button\"\n                            className=\"action-view edit-button \"\n                            onClick={() => openEditProduct(row.id)}\n                            style={{ padding: '4px 8px' }}\n                          >\n                            <EditSvg\n                              width=\"13\"\n                              height=\"13\"\n                              viewBox=\"0 0 18 18\"\n                              fill=\"none\"\n                              color=\"white\"\n                              clipH=\"18\"\n                              clipW=\"18\"\n                            />\n                          </button>\n                        </CTableDataCell>\n                      </CTableRow>\n                    ))\n                  )}\n                </CTableBody>\n              </CTable>\n              {(tableData === null && !commonLoader) ||\n              (tableData.length === 0 && !commonLoader) ? (\n                <div className=\"text-c text-center my-3 td-text\">No Data Found</div>\n              ) : commonLoader && tableData.length === 0 ? (\n                <div className=\"text-c text-center my-3 td-text\">\n                  <CSpinner color=\"danger\" />\n                </div>\n              ) : (\n                <div></div>\n              )}\n            </InfiniteScroll>\n          </div>\n        </>\n      )}\n    </>\n  )\n}\n\nProduct.propTypes = {\n  formatDate: PropTypes.func,\n  FlowList: PropTypes.array,\n  prodOwnerList: PropTypes.array,\n  techOwnerList: PropTypes.array,\n  dataOwnerList: PropTypes.array,\n  categories: PropTypes.array,\n  techHeadList: PropTypes.array,\n  prodHeadList: PropTypes.array,\n  dataHeadList: PropTypes.array,\n}\nexport default Product\n","import React, { useState, useEffect } from 'react'\nimport { CCard, CCol, CRow, CNavItem, CTabContent, CTabPane, CNav, CNavLink } from '@coreui/react'\nimport { ToastContainer } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport Designation from './Designation/Designation'\nimport Business from './Business/Business'\nimport TaskActivity from './taskActivity/TaskActivity'\nimport User from './User/User'\nimport { getDecodeData, getHeaders } from 'src/constant/Global'\nimport Product from './Product/Product'\nimport useAxios from 'src/constant/UseAxios'\n\nconst Masters = () => {\n  const [activeKey, setActiveKey] = useState(1)\n  let api = useAxios()\n  const user = getDecodeData()\n  const [tableData, setTableData] = useState([])\n  const [prodOwnerList, setProdOwnerList] = useState([])\n  const [techOwnerList, setTechOwnerList] = useState([])\n  const [dataOwnerList, setDataOwnerList] = useState([])\n  const [category, setCategory] = useState([])\n  const [prodHeadList, setProdHeadList] = useState([])\n  const [techHeadList, setTechHeadList] = useState([])\n  const [dataHeadList, setDataHeadList] = useState([])\n  const designation = user?.designation\n\n  useEffect(() => {\n    getFlowList()\n    getProdOwner()\n    getTechOwner()\n    getDataOwner()\n    getDataHead()\n    getCategory()\n    getTechHead()\n    getProdHead()\n    if (designation.includes('Head')) {\n      setActiveKey(3)\n    } else if (designation.includes('Approver')) {\n      setActiveKey(4)\n    } else if (designation.includes('Owner')) {\n      setActiveKey(6)\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const getProdOwner = async () => {\n    const url = `common/prod_owner`\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        setProdOwnerList(response.data.data)\n      })\n      .catch((error) => {})\n  }\n\n  const getTechOwner = async () => {\n    const url = `common/tech_owner`\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        setTechOwnerList(response.data.data)\n      })\n      .catch((error) => {})\n  }\n\n  const getDataOwner = async () => {\n    const url = `common/data_owner`\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        setDataOwnerList(response.data.data)\n      })\n      .catch((error) => {})\n  }\n\n  const getTechHead = async () => {\n    const url = `common/tech_head`\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        setTechHeadList(response.data.data)\n      })\n      .catch((error) => {})\n  }\n\n  const getProdHead = async () => {\n    const url = `common/prod_head`\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        setProdHeadList(response.data.data)\n      })\n      .catch((error) => {})\n  }\n  const getDataHead = async () => {\n    const url = `common/data_head`\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        setDataHeadList(response.data.data)\n      })\n      .catch((error) => {})\n  }\n\n  const getFlowList = async () => {\n    const url = `flow/list/producthead?status=Admin`\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        setTableData(response.data.data)\n      })\n      .catch((error) => {})\n  }\n\n  const getCategory = async () => {\n    const url = `product/categories`\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        setCategory(response.data.data)\n      })\n      .catch((error) => {})\n  }\n\n  const formatDate = (dateString) => {\n    const date = new Date(dateString)\n    const options = { day: 'numeric', month: 'short', year: 'numeric' }\n    let formattedDate = date.toLocaleDateString('en-GB', options)\n    if (!formattedDate.includes(',')) {\n      formattedDate = formattedDate.replace(/(\\w{3}) (\\d{4})/, '$1, $2')\n    }\n    return formattedDate\n  }\n\n  return (\n    <>\n      <ToastContainer />\n      <CRow className=\"my-2\">\n        <CCol xs={12} lg={6}>\n          <CCard className=\"mt-4 timesheet-content-user\">\n            <div>\n              <CNav variant=\"pills\" role=\"tablist\" className=\"master-navbar-list \">\n                <CNavItem role=\"presentation4\">\n                  <CNavLink\n                    className=\"nav-link-lable\"\n                    active={activeKey === 1}\n                    component=\"button\"\n                    role=\"tab\"\n                    aria-controls=\"home-tab-pane\"\n                    aria-selected={activeKey === 1}\n                    onClick={() => setActiveKey(1)}\n                  >\n                    User Master\n                  </CNavLink>\n                </CNavItem>\n                <CNavItem role=\"presentation3\">\n                  <CNavLink\n                    active={activeKey === 2}\n                    component=\"button\"\n                    role=\"tab\"\n                    aria-controls=\"profile-tab-pane\"\n                    aria-selected={activeKey === 2}\n                    onClick={() => setActiveKey(2)}\n                  >\n                    Designation Master\n                  </CNavLink>\n                </CNavItem>\n                <CNavItem role=\"presentation2\">\n                  <CNavLink\n                    active={activeKey === 3}\n                    component=\"button\"\n                    role=\"tab\"\n                    aria-controls=\"contact-tab-pane\"\n                    aria-selected={activeKey === 3}\n                    onClick={() => setActiveKey(3)}\n                  >\n                    Business Master\n                  </CNavLink>\n                </CNavItem>\n                <CNavItem role=\"presentation1\">\n                  <CNavLink\n                    active={activeKey === 4}\n                    component=\"button\"\n                    role=\"tab\"\n                    aria-controls=\"contact-tab-pane\"\n                    aria-selected={activeKey === 4}\n                    onClick={() => setActiveKey(4)}\n                  >\n                    Task Activity Master\n                  </CNavLink>\n                </CNavItem>\n                {designation?.includes('Internal Admin') && (\n                  <CNavItem role=\"presentation5\">\n                    <CNavLink\n                      active={activeKey === 5}\n                      component=\"button\"\n                      role=\"tab\"\n                      aria-controls=\"contact-tab-pane\"\n                      aria-selected={activeKey === 5}\n                      onClick={() => setActiveKey(5)}\n                    >\n                      Product Creation Master\n                    </CNavLink>\n                  </CNavItem>\n                )}\n              </CNav>\n              <CTabContent className=\"master-tab-content \">\n                <CTabPane\n                  role=\"tabpanel\"\n                  aria-labelledby=\"home-tab-pane\"\n                  visible={activeKey === 1}\n                  className=\"master_card tab_height_master\"\n                >\n                  {' '}\n                  <CRow>{activeKey === 1 && <User />}</CRow>\n                </CTabPane>\n                <CTabPane\n                  role=\"tabpanel\"\n                  aria-labelledby=\"profile-tab-pane\"\n                  visible={activeKey === 2}\n                  className=\"master_card tab_height_master\"\n                >\n                  <CRow>{activeKey === 2 && <Designation />}</CRow>\n                </CTabPane>\n                <CTabPane\n                  role=\"tabpanel\"\n                  aria-labelledby=\"contact-tab-pane\"\n                  visible={activeKey === 3}\n                  className=\"master_card tab_height_master\"\n                >\n                  <CRow>{activeKey === 3 && <Business />}</CRow>\n                </CTabPane>\n                <CTabPane\n                  role=\"tabpanel\"\n                  aria-labelledby=\"contact-tab-pane\"\n                  visible={activeKey === 4}\n                  className=\"master_card tab_height_master\"\n                >\n                  <CRow>{activeKey === 4 && <TaskActivity />}</CRow>\n                </CTabPane>\n                <CTabPane\n                  role=\"tabpanel\"\n                  aria-labelledby=\"contact-tab-pane\"\n                  visible={activeKey === 5}\n                  className=\"master_card tab_height_master\"\n                >\n                  <CRow>\n                    {activeKey === 5 && (\n                      <Product\n                        formatDate={formatDate}\n                        FlowList={tableData}\n                        prodOwnerList={prodOwnerList}\n                        techOwnerList={techOwnerList}\n                        dataOwnerList={dataOwnerList}\n                        categories={category}\n                        techHeadList={techHeadList}\n                        prodHeadList={prodHeadList}\n                        dataHeadList={dataHeadList}\n                      />\n                    )}\n                  </CRow>\n                </CTabPane>\n              </CTabContent>\n            </div>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default Masters\n"],"names":["EventEmitter","_ref","close","api","useAxios","validated","setValidated","useState","designation","setDesignation","loadings","setLoadings","formRef","useRef","formErrors","setFormErrors","useEffect","resetComponent","_jsx","_Fragment","children","_jsxs","CRow","CCol","sm","style","width","display","cursor","marginLeft","marginTop","onClick","BackArrowSvg","height","viewBox","fill","className","Breadcrumb","separator","items","title","Link","rel","to","CForm","ref","onSubmit","async","event","values","preventDefault","form","currentTarget","validateForm","errors","checkValidity","stopPropagation","formData","FormData","append","url","post","headers","getHeaders","then","response","status","toast","error","data","message","position","POSITION","BOTTOM_RIGHT","autoClose","success","current","reset","catch","errorMesssage","gutter","span","CFormLabel","htmlFor","Input","variant","maxLength","placeholder","value","onChange","e","target","test","left","right","CButton","Button","fontSize","color","htmlType","loading","viewDesignation","name","eventEmitter","emit","xs","id","put","type","confirm","Modal","Designation","designationTable","setDesignationTable","selectedRows","setSelectedRows","headerLabel","setHeaderLabel","designationVisible","setDesignationVisible","designationVisibleEdit","setDesignationVisibleEdit","viewDesignationData","setViewDesignationData","searchValueRef","commonLoader","setCommonLoader","abortController","setAbortController","AbortController","tableBodyRef","hasMoreRef","pageRef","searchRef","isNorMore","setIsNorMore","getDesignationList","handleHeaderCheck","isChecked","allRowIds","map","row","concat","length","handleMemberCheck","rowId","prevSelectedRows","newSelectedRows","filter","selectedId","resetEditComponent","resetAddComponent","_newAbortController","newAbortController","abort","get","signal","content","prevUserData","uniqueSet","Set","user","newData","has","openDesignationModal","handleDesignationEditClick","warning","icon","ExclamationCircleFilled","okText","okType","cancelButtonProps","borderColor","closable","okButtonProps","backgroundColor","cancelText","onOk","ids","Promise","resolve","reject","setTimeout","delete","deletefun","onCancel","resetValues","columns","Checkbox","checked","dataIndex","key","align","render","_","record","props","colSpan","includes","text","index","textAlign","justifyContent","padding","DeleteSvg","EditSvg","clipH","clipW","displayData","designationComponent","push","checkbox","action","AddDesignation","EditDesignation","paddingLeft","marginRight","handleSearch","prefix","src","searchIcon","alt","Table","dataSource","size","rowKey","pagination","scroll","y","spinning","indicator","CSpinner","handleScroll","useCallback","debounce","scrollTop","scrollHeight","clientHeight","tableBody","document","querySelector","addEventListener","removeEventListener","business","setBusiness","viewBusiness","Business","businessTable","setBusinessTable","businessVisible","setBusinessVisible","businessVisibleEdit","setBusinessVisibleEdit","viewBusinessData","setViewBusinessData","getBusinessList","closeEditComponent","closeAddComponent","openBusinessModal","handleBusinessEditClick","console","log","businessComponent","AddBusiness","EditBusiness","task","setTask","activity","setActivity","taskValues","setTaskValues","setErrors","showAddButton","setShowAddButton","showAddButtonpre","setShowAddButtonpre","newShowAddButton","Array","from","addActivity","prevErrors","i","removeActivity","prevActivity","updatedActivity","splice","prevTaskValues","updatedTaskValues","updatedErrors","prevShowAddButton","isFormValid","forEach","Object","some","flow","React","selectedValue","updatedValues","PlusSvg","viewTask","groupName","categories","newShowAddButtonArray","selectedDesignation","setSelectedDesignation","designationError","designations","_viewDesignation$find","label","find","role","options1","roles","Select","suffixIcon","Downarrowimg","selectedValues","showSearch","mode","allowClear","options","filterOption","input","option","toLowerCase","indexOf","TaskActivity","taskTable","setTaskTable","taskVisible","setTaskVisible","taskVisibleEdit","setTaskVisibleEdit","viewTaskData","setViewTaskData","taskDesignationView","setTaskDesignationView","designationValue","setDesignationValue","getTaskList","resetDesignationComponent","openTaskModal","handleDesignation","designationClick","handleTaskEditClick","getText","modifiedTitle","substring","alignItems","category","AddTaskActivity","EditTaskActivity","DesignationMapping","xmlns","cx","cy","r","TO_RADIANS","Math","PI","BannerModal","handleOpenModalBanner","handleCloseModalBanner","handledefaultprofic","handleprofilepicvalue","imgSrc","setImgSrc","previewCanvasRef","imgRef","crop","setCrop","completedCrop","setCompletedCrop","validationMessage","setValidationMessage","selectedFile","setSelectedFile","fileInputRef","pathname","URL","parts","split","filename","fetch","ok","Error","blob","file","File","imageUrlToFile","fn","waitTime","deps","image","canvas","scale","arguments","undefined","rotate","ctx","getContext","scaleX","naturalWidth","scaleY","naturalHeight","pixelRatio","window","devicePixelRatio","floor","imageSmoothingQuality","cropX","x","cropY","rotateRads","centerX","centerY","save","translate","drawImage","restore","canvasPreview","t","apply","clearTimeout","visible","maxWidth","maskClosable","footer","fontWeight","Card","CCardBody","Boolean","ReactCrop","percentCrop","onComplete","c","aspect","transform","onLoad","mediaWidth","mediaHeight","centerCrop","makeAspectCrop","unit","centerAspectCrop","readOnly","handleBrowseClick","click","accept","files","fileInput","startsWith","reader","FileReader","result","toString","readAsDataURL","handleDeleteButton","createElement","img","Image","crossOrigin","onload","toBlob","croppedFile","Option","techHeadList1","setTechHeadList","Approverlist","setApprover","prodHeadList1","setProdHeadList","userList1","setUserList","branch","setBranch","roleType","setRoleType","selectedFile1","setSelectedFile1","profileImage1","bannerModal","setBannerModal","Form","useForm","selectRef","startDate","setStartDate","techHeadList","prodHeadList","userList","isArray","techHeadOptions","userName","profile_pic","ImageUrl","toPascalCase","prodHeadOptions","getUserList","getRoles","getTechHead","getapproverlist","getProdHead","setRole","resetFields","roleOptions","targetDate","dayjs","profile","createObjectURL","layout","onFinish","keys","capitalizedString","word","charAt","toUpperCase","slice","join","requiredMark","encType","validateTrigger","Row","Col","CameraOutlined","Item","colon","rules","required","pattern","DatePicker","Calendar","disabledDate","startOf","handleDateChange","date","dateString","formattedDate","format","setFieldsValue","supervisor","selectedOption","blur","lowerCaseInput","finalApprove","viewUser","supervisorId","approvalId","approvalFinalId","roleName","setRoleName","rolesid","val","supervisorname","finalApprovename","initialValues","nameValue","email","username","employeeId","md","rolename","newValue","User","UserTable","setUserTable","userVisible","setUserVisible","userVisibleEdit","setUserVisibleEdit","viewUserData","setViewUserData","showConfirmationModal","setShowConfirmationModal","confirmationData","setConfirmationData","rowIndex","userStatus","page","setPage","tableContainer","handleSwitchChange","pageCount","handleConfirmationModalCancel","AddUser","EditUser","searchicon","openUserModal","border","InfiniteScroll","dataLength","next","hasMore","loader","endMessage","CTable","hover","CTableHead","CTableRow","CTableHeaderCell","scope","top","zIndex","CTableBody","CTableDataCell","newSelectedRowCount","marginBottom","Circle","approvalFinalName","handleUserEditClick","Switch","CModal","backdrop","alignment","onClose","CModalBody","reciprocalUserStatus","handleConfirmationModalConfirm","formatDate","FlowList","prodOwnerList","techOwnerList","dataOwnerList","dataHeadList","getDecodeData","productId","setProductId","tableData","setTableData","productNames","setProductNames","viewProductData","setViewProductData","viewProductShow","setViewProductShow","productRef","pLoader","setPLoader","addProductShow","setAddProductShow","editProductShow","setEditProductShow","getProductNames","getProductList","techOwnerOptions","borderRadius","dataOwnerOptions","prodOwnerOptions","handleProductView","ToastContainer","AddProduct","flowList","closeAddProduct","titleList","ViewProduct","closeViewProduct","ViewProductData","viewStatus","ownerOption","mastersTech","mastersProd","mastersData","EditProduct","EditProductData","callBackFunc","closeEditProduct","handleProduct","dropdownRender","menu","overflow","Skeleton","paragraph","rows","disabled","prod","getPopupContainer","triggerNode","parentNode","_row$productOwners","_row$dataOwners","Tooltip","placement","productName","flowName","prodHead","profilePic","techHead","dataHead","technicalOwners","member","overflowY","Divider","productOwners","dataOwners","openViewProduct","EyeSvg","openEditProduct","Masters","activeKey","setActiveKey","setProdOwnerList","setTechOwnerList","setDataOwnerList","setCategory","setDataHeadList","getFlowList","getProdOwner","getTechOwner","getDataOwner","getDataHead","getCategory","lg","CCard","CNav","CNavItem","CNavLink","active","component","CTabContent","CTabPane","Product","Date","toLocaleDateString","day","month","year","replace"],"sourceRoot":""}