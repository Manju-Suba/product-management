{"version":3,"file":"static/js/874.775d0135.chunk.js","mappings":"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","sources":["views/modal/ApprovedConfirmModel.js","views/modal/RejectConfirmModal.js","views/products/productHead/ApprovedList.js","views/products/productHead/DraftList.js","views/products/productHead/FlowList.js","views/products/productHead/ProductPendingList.js","views/products/productOwner/OwnerProductList.js","views/products/productApprover/ApproverProductList.js","views/products/productApprover/ApproverClosedList.js","views/products/productHead/EditRejectedProduct.js","views/products/productHead/RejectedList.js","views/products/Products.js","views/svgImages/CheckSvg.js","../node_modules/antd/es/col/index.js","../node_modules/antd/es/divider/style/index.js","../node_modules/antd/es/divider/index.js","../node_modules/antd/es/row/index.js"],"sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { Input, Modal } from 'antd'\n\nconst { TextArea } = Input\nconst ApprovedConfirmModal = ({\n  isModalOpen,\n  handleCancel,\n  handleApprove,\n  id,\n  headContent,\n  resetFunc,\n}) => {\n  const [remarks, setRemarks] = useState('')\n  const [loading, setLoadings] = useState(false)\n\n  const handleOk = async () => {\n    setLoadings(true)\n    try {\n      const response = await handleApprove('Approved', id, remarks)\n      if (response.status === true) {\n        resetFunc()\n      }\n    } catch (error) {\n    } finally {\n      setLoadings(false)\n    }\n  }\n\n  const handleRemark = (remarks) => {\n    const regex = /^(?!\\s)(?![&@.,()\\s])(?![^a-zA-Z0-9\\s.,()-]+$)[&@a-zA-Z0-9\\s.,()-]*$/\n    if (regex.test(remarks) || remarks === '') {\n      setRemarks(remarks)\n    }\n  }\n\n  return (\n    <Modal\n      title={`Approved ${headContent}`}\n      open={isModalOpen}\n      onOk={handleOk}\n      okText=\"Approved\"\n      onCancel={handleCancel}\n      okButtonProps={{\n        style: { background: '#f54550', borderColor: '#f54550', color: 'white' },\n        loading: loading,\n      }} // Change button color here\n      maskClosable={false}\n    >\n      <p>Do you want to do Approved this {headContent} ?</p>\n\n      <TextArea\n        id=\"Description\"\n        variant={'borderless'}\n        value={remarks}\n        onChange={(e) => handleRemark(e.target.value)}\n        className=\"time-border-bottom\"\n        style={{\n          color: 'black',\n          width: '265px',\n          fontSize: '13px',\n          padding: '0px',\n        }}\n        placeholder=\"Enter Remarks...\"\n        autoSize={{\n          minRows: 0,\n          maxRows: 1,\n        }}\n      />\n      <br />\n    </Modal>\n  )\n}\n\nApprovedConfirmModal.propTypes = {\n  isModalOpen: PropTypes.bool,\n  handleCancel: PropTypes.func,\n  handleApprove: PropTypes.func,\n  id: PropTypes.any,\n  headContent: PropTypes.string,\n  resetFunc: PropTypes.func,\n}\nexport default ApprovedConfirmModal\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { Input, Modal } from 'antd'\n\nconst { TextArea } = Input\nconst RejectConfirmModal = ({\n  isModalOpen,\n  handleCancel,\n  handleApprove,\n  id,\n  headContent,\n  resetFunc,\n}) => {\n  const [remarks, setRemarks] = useState('')\n  const [loadings, setLoadings] = useState(false)\n  const [formErrors, setFormErrors] = useState({\n    remarks: '',\n  })\n\n  const validateForm = () => {\n    const errors = {\n      remarks: '',\n    }\n    if (remarks === '') {\n      errors.remarks = 'Please Enter Remarks'\n    }\n    setFormErrors(errors)\n    const hasErrors = errors.remarks !== ''\n    return !hasErrors\n  }\n\n  const handleOk = async () => {\n    const isFormValid = validateForm()\n    if (isFormValid) {\n      setLoadings(true)\n      try {\n        const response = await handleApprove('Rejected', id, remarks)\n        if (response.status === true) {\n          resetFunc()\n        }\n      } catch (error) {\n      } finally {\n        setLoadings(false)\n      }\n    }\n  }\n\n  const handleRemark = (remarks) => {\n    const regex = /^(?!\\s)(?![&@.,()\\s])(?![^a-zA-Z0-9\\s.,()-]+$)[&@a-zA-Z0-9\\s.,()-]*$/\n    if (regex.test(remarks) || remarks === '') {\n      setRemarks(remarks)\n    }\n  }\n\n  return (\n    <Modal\n      title={`Reject ${headContent}`}\n      open={isModalOpen}\n      onOk={handleOk}\n      okText=\"Reject\"\n      onCancel={handleCancel}\n      okButtonProps={{\n        style: { background: '#f54550', borderColor: '#f54550', color: 'white' },\n        loading: loadings,\n        disabled: remarks.trim() === '',\n      }} // Change button color here\n      maskClosable={false}\n    >\n      <p>Do you want to do reject this {headContent} ?</p>\n\n      <TextArea\n        id=\"Description\"\n        variant={'borderless'}\n        value={remarks}\n        onChange={(e) => handleRemark(e.target.value)}\n        className=\"time-border-bottom\"\n        style={{\n          color: 'black',\n          width: '265px',\n          fontSize: '13px',\n          padding: '0px',\n        }}\n        placeholder=\"Enter Remarks...\"\n        autoSize={{\n          minRows: 0,\n          maxRows: 1,\n        }}\n      />\n      <br />\n      <span className=\"text-danger nameflow-error \">{formErrors.remarks}</span>\n    </Modal>\n  )\n}\n\nRejectConfirmModal.propTypes = {\n  isModalOpen: PropTypes.bool,\n  handleCancel: PropTypes.func,\n  handleApprove: PropTypes.func,\n  id: PropTypes.any,\n  headContent: PropTypes.string,\n  resetFunc: PropTypes.func,\n}\nexport default RejectConfirmModal\n","import React, { useState, useEffect, useRef } from 'react'\nimport { Select, Breadcrumb, Tooltip, Card, Divider, Skeleton } from 'antd'\nimport {\n  CCol,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CSpinner,\n} from '@coreui/react'\nimport { getDecodeData, getHeaders, ImageUrl } from 'src/constant/Global'\nimport profileImage1 from '../../../assets/images/avatars/wrapper.png'\nimport PropTypes from 'prop-types'\nimport { CaretDownOutlined } from '@ant-design/icons'\nimport { toast, ToastContainer } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { formatAmountWithCommas } from 'src/constant/TimeUtils'\nimport EditSvg from '../../svgImages/EditSvg'\nimport ViewProduct from '../ViewProduct'\nimport useAxios from 'src/constant/UseAxios'\nimport EyeSvg from '../../svgImages/EyeSvg'\nimport InfiniteScroll from 'react-infinite-scroll-component'\nimport Downarrowimg from '../../../assets/images/downarrow.png'\nimport CrossSvg from '../../svgImages/CrossSvg'\nimport { Link } from 'react-router-dom'\n\nconst ApprovedList = ({\n  formatDate,\n  FlowList,\n  prodOwnerList,\n  techOwnerList,\n  dataOwnerList,\n  categories,\n  techHeadList,\n  prodHeadList,\n  dataHeadList,\n}) => {\n  let api = useAxios()\n  const user = getDecodeData()\n  const branch = user && user.branch\n  const [productId, setProductId] = useState()\n  const [tableData, setTableData] = useState([])\n  const [productNames, setProductNames] = useState([])\n  const [ViewProductData, setViewProductData] = useState([])\n  const [ViewProductShow, setViewProductShow] = useState(false)\n  const [commonLoader, setCommonLoader] = useState(true)\n  const [abortController, setAbortController] = useState(new AbortController())\n  const selectRef = useRef(null)\n  // const [hasMore, setHasMore] = useState(true)\n  const hasMoreRef = useRef(true)\n  const pageRef = useRef(0)\n  const searchRef = useRef(false)\n  const productRef = useRef(0)\n  const [pLoader, setPLoader] = useState(true)\n\n  useEffect(() => {\n    getProductNames()\n    if (!ViewProductShow) {\n      pageRef.current = 0\n      hasMoreRef.current = true\n      getProductList()\n      const tableContainer = document.querySelector('.table-container')\n      tableContainer.addEventListener('scroll', handleScroll)\n      return () => {\n        tableContainer.removeEventListener('scroll', handleScroll)\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ViewProductShow])\n\n  const handleScroll = () => {\n    const tableContainer = document.querySelector('.table-container')\n    if (tableContainer.scrollTop + tableContainer.clientHeight === tableContainer.scrollHeight) {\n      if (hasMoreRef.current === true) {\n        getProductList()\n      }\n    }\n  }\n\n  const getProductList = async () => {\n    let newAbortController\n    if (pageRef.current === 0) {\n      setCommonLoader(true)\n      setTableData([])\n      abortController.abort()\n      newAbortController = new AbortController()\n      setAbortController(newAbortController)\n    }\n    const url = `product/list?page=${pageRef.current}&size=10&search=${searchRef.current}&status=Approved&value=${productRef.current}`\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n        signal: newAbortController?.signal,\n      })\n      .then((response) => {\n        const data = response.data.data\n        if (pageRef.current === 0) setTableData(data)\n        else setTableData((prevUserData) => [...prevUserData, ...data])\n        if (data.length < 10) {\n          hasMoreRef.current = false\n        }\n\n        // Increment the page number for the next fetch\n        pageRef.current = pageRef.current + 1\n        setCommonLoader(false)\n      })\n      .catch((error) => {})\n  }\n\n  const handleProduct = (value) => {\n    if (value === undefined) {\n      setProductId()\n      searchRef.current = false\n      productRef.current = 0\n    } else {\n      setProductId(value)\n      searchRef.current = true\n      productRef.current = value\n    }\n    selectRef.current.blur()\n    pageRef.current = 0\n    hasMoreRef.current = true\n    getProductList()\n  }\n\n  const techOwnerOptions = techOwnerList.map((user) => ({\n    value: user.name,\n    label: (\n      <div className=\"select-options select-options-bg\">\n        <img\n          src={user.profile_pic ? ImageUrl + user.profile_pic : profileImage1}\n          style={user.profile_pic ? { width: '29px', borderRadius: '14px' } : { width: '39px' }}\n          alt={user.name}\n          className=\"img-flag\"\n        />\n        <div className=\"node1\" style={user.profile_pic ? { marginLeft: '11px' } : {}}>\n          <p className=\"user-name1\" title={user.name}>\n            {' '}\n            {user.name}\n          </p>\n          <p className=\"role-text1\">{user.role}</p>\n        </div>\n      </div>\n    ),\n  }))\n  const prodOwnerOptions = prodOwnerList.map((user) => ({\n    value: user.name,\n    label: (\n      <div className=\"select-options select-options-bg\">\n        <img\n          src={user.profile_pic ? ImageUrl + user.profile_pic : profileImage1}\n          style={user.profile_pic ? { width: '29px', borderRadius: '14px' } : { width: '39px' }}\n          alt={user.name}\n          className=\"img-flag\"\n        />\n        <div className=\"node1\" style={user.profile_pic ? { marginLeft: '11px' } : {}}>\n          <p className=\"user-name1\" title={user.name}>\n            {' '}\n            {user.name}\n          </p>\n          <p className=\"role-text1\">{user.role}</p>\n        </div>\n      </div>\n    ),\n  }))\n  const dataOwnerOptions = dataOwnerList.map((user) => ({\n    value: user.name,\n    label: (\n      <div className=\"select-options select-options-bg\">\n        <img\n          src={user.profile_pic ? ImageUrl + user.profile_pic : profileImage1}\n          style={user.profile_pic ? { width: '29px', borderRadius: '14px' } : { width: '39px' }}\n          alt={user.name}\n          className=\"img-flag\"\n        />\n        <div className=\"node1\" style={user.profile_pic ? { marginLeft: '11px' } : {}}>\n          <p className=\"user-name1\" title={user.name}>\n            {' '}\n            {user.name}\n          </p>\n          <p className=\"role-text1\">{user.role}</p>\n        </div>\n      </div>\n    ),\n  }))\n  const [showCardLists, setShowCardLists] = useState({})\n  const [assignCard, setAssignCard] = useState({})\n  const handleEditClick = (rowId) => {\n    setAssignCard({})\n    setShowCardLists((prevState) => ({\n      ...prevState,\n      [rowId]: !prevState[rowId], // Toggle the visibility for the specific row\n    }))\n  }\n  const handleClose = () => {\n    setShowCardLists({})\n  }\n  const handleClose1 = () => {\n    setAssignCard({})\n  }\n  const handleEditClick1 = (rowId) => {\n    setShowCardLists({})\n    setAssignCard((prevState) => ({\n      ...prevState,\n      [rowId]: !prevState[rowId], // Toggle the visibility for the specific row\n    }))\n  }\n  const handleAccessChange = async (selectedOptions, id) => {\n    let ownerId\n    if (selectedOptions && selectedOptions.length > 0) {\n      const selectedowners = selectedOptions.map((option) => ({\n        id:\n          user?.designation === 'Technical Head'\n            ? Number(techOwnerList.find((user) => user.name === option.value)?.id || '')\n            : user?.designation === 'Product Head'\n            ? Number(prodOwnerList.find((user) => user.name === option.value)?.id || '')\n            : Number(dataOwnerList.find((user) => user.name === option.value)?.id || ''),\n        name: option.value,\n      }))\n      ownerId = selectedowners.map((option) => option.id)\n    } else {\n      ownerId = []\n    }\n    let prod_id, owner, tech_id, data_id\n    if (user?.designation === 'Technical Head') {\n      owner = 'technical'\n      prod_id = null\n      tech_id = ownerId\n      data_id = null\n    } else if (user?.designation === 'Product Head') {\n      owner = 'product'\n      prod_id = ownerId\n      data_id = null\n      tech_id = null\n    } else {\n      owner = 'data'\n      prod_id = null\n      tech_id = null\n      data_id = ownerId\n    }\n\n    // const postData = {\n    //   prodOwner: prod_id,\n    //   techOwner: tech_id,\n    // }\n    const formData = new FormData()\n    formData.append('prodOwner', prod_id)\n    formData.append('techOwner', tech_id)\n    formData.append('dataOwner', data_id)\n    const url = `product/assign/${id}?owner=${owner}`\n    await api\n      .put(url, formData, {\n        headers: getHeaders('multi'),\n      })\n      .then((res) => {\n        pageRef.current = 0\n        searchRef.current = false\n        productRef.current = 0\n        getProductList()\n      })\n      .catch((error) => {\n        toast.error(error, {\n          position: toast.POSITION.BOTTOM_RIGHT,\n          autoClose: 3000,\n        })\n      })\n  }\n\n  const handleProductView = async (id) => {\n    const url = `product/view/` + id\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        const data = response.data.data\n        setViewProductData(data)\n        setViewProductShow(true)\n      })\n      .catch((error) => {})\n  }\n  const closeViewProduct = () => {\n    setViewProductShow(false)\n  }\n  const getProductNames = async () => {\n    const url = `product/head/search?status=Approved`\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        const data = response.data.data\n        setProductNames(data)\n        setPLoader(false)\n      })\n      .catch((error) => {})\n  }\n  return (\n    <>\n      <ToastContainer />\n      {ViewProductShow ? (\n        <ViewProduct\n          flowList={FlowList}\n          close={closeViewProduct}\n          techHeadList={techHeadList}\n          prodHeadList={prodHeadList}\n          dataHeadList={dataHeadList}\n          categories={categories}\n          ViewProductData={ViewProductData}\n          viewStatus=\"Head\"\n          titleList=\"Approved List\"\n          ownerOption={\n            branch === 'Technical'\n              ? techOwnerOptions\n              : branch === 'Product'\n              ? prodOwnerOptions\n              : dataOwnerOptions\n          }\n        />\n      ) : (\n        <>\n          <CRow className=\"mt-3\">\n            <CCol xs={9} sm={9} md={10}>\n              <b style={{ marginLeft: '30px' }}>Approved List</b>\n              <br />\n              <Breadcrumb\n                style={{ marginLeft: '30px' }}\n                className=\"bread-tab\"\n                separator={<span className=\"breadcrumb-separator\">|</span>}\n                items={[\n                  {\n                    title: (\n                      <Link\n                        rel=\"Dashboard\"\n                        to={'/dashboard'}\n                        className=\"bread-items text-decoration-none text-secondary \"\n                      >\n                        Dashboard\n                      </Link>\n                    ),\n                  },\n                  {\n                    title: (\n                      <span className=\"text-secondary \" style={{ cursor: 'default' }}>\n                        Approved List\n                      </span>\n                    ),\n                  },\n                ]}\n              />\n            </CCol>\n\n            <CCol xs={3} sm={3} md={2}>\n              <Select\n                ref={selectRef}\n                className=\"contract_members_activity_select custom-select_appr appr-sel\"\n                suffixIcon={\n                  <img\n                    src={Downarrowimg}\n                    alt=\"Downarrowimg\"\n                    style={{ width: '10px', height: '6px' }}\n                  />\n                }\n                id=\"products\"\n                value={productId}\n                onChange={(value) => handleProduct(value)}\n                showSearch\n                allowClear\n                filterOption={(input, option) =>\n                  option.label.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                }\n                dropdownRender={(menu) => (\n                  <div style={{ overflow: 'auto' }} role=\"listbox\">\n                    {menu}\n                  </div>\n                )}\n                options={\n                  pLoader\n                    ? [\n                        {\n                          label: (\n                            <div style={{ textAlign: 'center' }}>\n                              {Array.from({ length: 5 }, (_, index) => (\n                                <Skeleton\n                                  key={index}\n                                  title={false}\n                                  paragraph={{\n                                    rows: 1,\n                                    width: '100%',\n                                    height: '10px',\n                                    style: { height: '10px !important' },\n                                  }}\n                                />\n                              ))}\n                            </div>\n                          ),\n                          value: 'loading',\n                          disabled: true,\n                        },\n                      ]\n                    : productNames.map((prod) => ({\n                        value: prod.id,\n                        label: prod.name,\n                      }))\n                }\n                placeholder=\"Choose Product\"\n                getPopupContainer={(triggerNode) => triggerNode.parentNode}\n              />\n            </CCol>\n          </CRow>\n\n          <div className=\"table-container table_scroll\" style={{ border: 'none' }}>\n            <InfiniteScroll\n              dataLength={tableData.length}\n              next={handleScroll}\n              hasMore={hasMoreRef.current}\n              loader={\n                <div className=\"text-c text-center my-3 td-text\">\n                  <CSpinner color=\"danger\" />\n                </div>\n              }\n              endMessage={\n                tableData.length !== 0 && (\n                  <p style={{ textAlign: 'center' }}>\n                    <b style={{ color: '#e40e2d', fontSize: '12px' }}>No more Data to load</b>\n                  </p>\n                )\n              }\n            >\n              <CTable hover>\n                <CTableHead className=\"head-row draft-head-row-ts\">\n                  <CTableRow>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c text-center\"\n                      scope=\"col\"\n                      width=\"4%\"\n                    >\n                      SI.No\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      Product Name\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"8%\"\n                    >\n                      Flow\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      Product Head\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      Technical Head\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      Data Head\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      Start Date\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"8%\"\n                    >\n                      End Date\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      width=\"10%\"\n                      scope=\"col\"\n                    >\n                      Approval Flow\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      Budget Details\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"25%\"\n                    >\n                      {user?.designation === 'Technical Head'\n                        ? 'Technical Owners'\n                        : user?.designation === 'Product Head'\n                        ? 'Product Owners'\n                        : 'Data Owners'}\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"5%\"\n                    >\n                      Action\n                    </CTableHeaderCell>\n                  </CTableRow>\n                </CTableHead>\n                <CTableBody>\n                  {!tableData ? (\n                    <div></div>\n                  ) : (\n                    tableData.map((row, index) => (\n                      <CTableRow key={index} className=\"tr-bg-color\">\n                        <CTableDataCell className=\"productflow-col-box text-c pad-bottom_flow td-product-text\">\n                          {index + 1}\n                        </CTableDataCell>\n                        <CTableDataCell className=\"productflow-product-name pad-bottom_flow td-product-text\">\n                          <Tooltip\n                            placement=\"bottomLeft\"\n                            title={row.productName}\n                            className=\"productflow-name-lable\"\n                          >\n                            {row.productName}\n                          </Tooltip>\n                        </CTableDataCell>\n                        <CTableDataCell className=\" productflow-product-flow pad-bottom_flow td-product-text\">\n                          <Tooltip\n                            placement=\"bottomLeft\"\n                            title={row.flowName ? row.flowName : ''}\n                            className=\"flow-name-lable\"\n                          >\n                            {row.flowName ? row.flowName : ''}\n                          </Tooltip>\n                        </CTableDataCell>\n                        <CTableDataCell className=\"productflow-product-head pad-bottom_flow\">\n                          {row.prodHead.length !== 0\n                            ? row.prodHead.map((data) => {\n                                return (\n                                  <div\n                                    style={{ display: 'flex', alignItems: 'center' }}\n                                    key={data.id}\n                                  >\n                                    <img\n                                      src={\n                                        data.profilePic ? ImageUrl + data.profilePic : profileImage1\n                                      }\n                                      alt=\"Profile\"\n                                      className=\"head-td\"\n                                    />\n                                    <div className=\"node1\" style={{ marginTop: '7px' }}>\n                                      <p className=\"head-td-name\" title={data.name}>\n                                        {data.name}\n                                      </p>\n                                      <p className=\"head-td-role\" title={data.designation}>\n                                        {data.designation}\n                                      </p>\n                                    </div>\n                                  </div>\n                                )\n                              })\n                            : '---'}\n                        </CTableDataCell>\n                        <CTableDataCell className=\"productflow-product-head pad-bottom_flow\">\n                          {row.techHead.length !== 0\n                            ? row.techHead.map((data) => {\n                                return (\n                                  <div\n                                    style={{ display: 'flex', alignItems: 'center' }}\n                                    key={data.id}\n                                  >\n                                    <img\n                                      src={\n                                        data.profilePic ? ImageUrl + data.profilePic : profileImage1\n                                      }\n                                      alt=\"Profile\"\n                                      className=\"head-td\"\n                                    />\n                                    <div className=\"node1\" style={{ marginTop: '7px' }}>\n                                      <p className=\"head-td-name\" title={data.name}>\n                                        {data.name}\n                                      </p>\n                                      <p className=\"head-td-role\" title={data.designation}>\n                                        {data.designation}\n                                      </p>\n                                    </div>\n                                  </div>\n                                )\n                              })\n                            : '---'}\n                        </CTableDataCell>\n                        <CTableDataCell className=\"productflow-product-head pad-bottom_flow\">\n                          {row.dataHead.length !== 0\n                            ? row.dataHead.map((data) => {\n                                return (\n                                  <div\n                                    style={{ display: 'flex', alignItems: 'center' }}\n                                    key={data.id}\n                                  >\n                                    <img\n                                      src={\n                                        data.profilePic ? ImageUrl + data.profilePic : profileImage1\n                                      }\n                                      alt=\"Profile\"\n                                      className=\"head-td\"\n                                    />\n                                    <div className=\"node1\" style={{ marginTop: '7px' }}>\n                                      <p className=\"head-td-name\" title={data.name}>\n                                        {data.name}\n                                      </p>\n                                      <p className=\"head-td-role\" title={data.designation}>\n                                        {data.designation}\n                                      </p>\n                                    </div>\n                                  </div>\n                                )\n                              })\n                            : '---'}\n                        </CTableDataCell>\n                        <CTableDataCell className=\"productflow-product-Startdate pad-bottom_flow td-product-text\">\n                          {formatDate(row.startDate)}\n                        </CTableDataCell>\n                        <CTableDataCell className=\"productflow-product-Enddate pad-bottom_flow td-product-text\">\n                          {row.endDate !== null ? formatDate(row.endDate) : '--'}\n                        </CTableDataCell>\n                        <CTableDataCell className=\"text-c flowlist-accesperson pad-bottom_flow\">\n                          <div className=\"table-cell-container\">\n                            <div className=\"image-background-accessperson\">\n                              {row.approvalFlow.slice(0, 3).map((member, index) => (\n                                <div className=\"accessPerImg\" key={index}>\n                                  <div className=\"tooltip-container\">\n                                    <img\n                                      src={\n                                        member.profilePic\n                                          ? ImageUrl + member.profilePic\n                                          : profileImage1\n                                      }\n                                      className={member.profilePic ? 'first-image' : 'second-image'}\n                                      alt=\"Access Person Images\"\n                                    />\n                                  </div>\n                                </div>\n                              ))}\n                              <div>\n                                {row.approvalFlow.length > 3 && (\n                                  <div className=\"accessPerImg text-center more-person-access rounded-circle\">\n                                    <span>+{row.approvalFlow.length - 3}</span>\n                                  </div>\n                                )}\n                              </div>\n                            </div>\n\n                            <div className=\"card-list-person\">\n                              <Card\n                                style={{ width: '230px', height: '120px', overflowY: 'auto' }}\n                                className=\"Access-card\"\n                              >\n                                {row.approvalFlow.map((member) => (\n                                  <div key={member.id}>\n                                    <div className=\" access-person-tooltip  \">\n                                      <div className=\"image-background\">\n                                        <img\n                                          src={\n                                            member.profilePic\n                                              ? ImageUrl + member.profilePic\n                                              : profileImage1\n                                          }\n                                          className={\n                                            member.profilePic\n                                              ? 'card-access-image'\n                                              : 'card-approval-image'\n                                          }\n                                          alt={member.name}\n                                        />\n                                      </div>\n                                      <div\n                                        className=\"node1 access-person-hovercard\"\n                                        style={member.profilePic ? { marginLeft: '11px' } : {}}\n                                      >\n                                        <p className=\"member-user-name1\"> {member.name}</p>\n                                        <p className=\"member-role-text1\">{member.designation}</p>\n                                      </div>\n                                    </div>\n                                    <Divider />\n                                  </div>\n                                ))}\n                              </Card>\n                            </div>\n                          </div>\n                        </CTableDataCell>\n                        <CTableDataCell className=\"productflow-product-budget pad-bottom_flow td-product-text\">\n                          {row.budgetDetails !== 'undefined' &&\n                          row.budgetDetails !== '' &&\n                          row.budgetDetails !== null\n                            ? formatAmountWithCommas(row.budgetDetails, row.currency)\n                            : '---'}\n                        </CTableDataCell>\n                        <CTableDataCell\n                          className=\"text-c  pad-bottom_flow  \"\n                          style={{ border: '1px solid #f1f1f1' }}\n                        >\n                          {user &&\n                          ((user.designation === 'Technical Head' &&\n                            row.technicalOwners.length > 0) ||\n                            (user.designation === 'Product Head' && row.productOwners.length > 0) ||\n                            (user.designation === 'Data Head' && row.dataOwners.length > 0)) ? (\n                            <div className=\"table-cell-container d-flex table-cell-container-border-less\">\n                              <div className=\"image-background-accessperson\">\n                                {(user?.designation === 'Technical Head'\n                                  ? row.technicalOwners\n                                  : user?.designation === 'Product Head'\n                                  ? row.productOwners\n                                  : row.dataOwners\n                                )\n                                  .slice(0, 3)\n                                  .map((member, index) => (\n                                    <div className=\"accessPerImg\" key={index}>\n                                      <div className=\"tooltip-container\">\n                                        <img\n                                          src={\n                                            member.profilePic\n                                              ? ImageUrl + member.profilePic\n                                              : profileImage1\n                                          }\n                                          className={\n                                            member.profilePic ? 'first-image' : 'second-image'\n                                          }\n                                          alt=\"Access Person Images\"\n                                        />\n                                      </div>\n                                    </div>\n                                  ))}\n                                <div>\n                                  {(user?.designation === 'Technical Head'\n                                    ? row.technicalOwners\n                                    : user?.designation === 'Product Head'\n                                    ? row.productOwners\n                                    : row.dataOwners\n                                  ).length > 3 && (\n                                    <div className=\"accessPerImg text-center more-person-access rounded-circle\">\n                                      <span>\n                                        {' '}\n                                        +\n                                        {(user?.designation === 'Technical Head'\n                                          ? row.technicalOwners\n                                          : user?.designation === 'Product Head'\n                                          ? row.productOwners\n                                          : row.dataOwners\n                                        ).length - 3}\n                                      </span>\n                                    </div>\n                                  )}\n                                </div>\n                                <div className=\"card-list-person_owners\">\n                                  <Card\n                                    style={{ width: '230px', height: '250px', overflowY: 'auto' }}\n                                    className=\"Access-card\"\n                                  >\n                                    {(user?.designation === 'Technical Head'\n                                      ? row.technicalOwners\n                                      : user?.designation === 'Product Head'\n                                      ? row.productOwners\n                                      : row.dataOwners\n                                    )\n                                      // .slice(0, 3)\n                                      .map((member) => (\n                                        <div key={member}>\n                                          <div className=\" access-person-tooltip  \">\n                                            <div className=\"image-background\">\n                                              <img\n                                                src={\n                                                  member.profilePic\n                                                    ? ImageUrl + member.profilePic\n                                                    : profileImage1\n                                                }\n                                                className={\n                                                  member.profilePic\n                                                    ? 'card-access-image'\n                                                    : 'card-approval-image'\n                                                }\n                                                alt={member.name}\n                                              />\n                                            </div>\n                                            <div\n                                              className=\"node1 access-person-hovercard\"\n                                              style={\n                                                member.profilePic ? { marginLeft: '11px' } : {}\n                                              }\n                                            >\n                                              <p className=\"member-user-name1\"> {member.name}</p>\n                                              <p className=\"member-role-text1\">\n                                                {member.designation}\n                                              </p>\n                                            </div>\n                                          </div>\n                                          <Divider />\n                                        </div>\n                                      ))}\n                                  </Card>\n                                </div>\n                              </div>\n                              <div\n                                style={{ marginLeft: 'auto' }}\n                                className=\"edit_techow\"\n                                onClick={() => handleEditClick(row.id)}\n                              >\n                                <button\n                                  type=\"button\"\n                                  className=\"action-view  edit-button \"\n                                  // onClick={() => handleUserEditClick(row.id)}\n                                >\n                                  <EditSvg\n                                    width=\"15\"\n                                    height=\"15\"\n                                    viewBox=\"0 0 18 18\"\n                                    fill=\"none\"\n                                    color=\"white\"\n                                    clipH=\"18\"\n                                    clipW=\"18\"\n                                  />\n                                </button>\n                                {showCardLists[row.id] && (\n                                  <div\n                                    className=\"card-list-person_owners_add\"\n                                    onClick={(e) => e.stopPropagation()}\n                                  >\n                                    <Card style={{ width: '517px' }} className=\"Access-card\">\n                                      <button\n                                        className=\"btn border-0 text-c text-secondary cross-button\"\n                                        style={{ position: 'absolute', top: 0, right: 0 }}\n                                        onClick={() => handleClose()}\n                                      >\n                                        <CrossSvg\n                                          width=\"12\"\n                                          height=\"11\"\n                                          viewBox=\"0 0 14 10\"\n                                          fill=\"#A5A1A1\"\n                                        />\n                                      </button>\n                                      <Select\n                                        onClick={(e) => e.stopPropagation()}\n                                        className=\"form-custom-selects access-input-box_owner\"\n                                        value={\n                                          row.technicalOwners\n                                            ? user?.designation === 'Technical Head'\n                                              ? techOwnerOptions.filter((option) =>\n                                                  row.technicalOwners.some(\n                                                    (selected) => selected.name === option.value,\n                                                  ),\n                                                )\n                                              : user?.designation === 'Product Head'\n                                              ? prodOwnerOptions.filter((option) =>\n                                                  row.productOwners.some(\n                                                    (selected) => selected.name === option.value,\n                                                  ),\n                                                )\n                                              : dataOwnerOptions.filter((option) =>\n                                                  row.dataOwners.some(\n                                                    (selected) => selected.name === option.value,\n                                                  ),\n                                                )\n                                            : null\n                                        }\n                                        options={\n                                          user?.designation === 'Technical Head'\n                                            ? techOwnerOptions\n                                            : user?.designation === 'Product Head'\n                                            ? prodOwnerOptions\n                                            : dataOwnerOptions\n                                        }\n                                        onChange={(selectedOptions) =>\n                                          handleAccessChange(selectedOptions, row.id)\n                                        }\n                                        required\n                                        showSearch\n                                        placeholder=\"Choose Access\"\n                                        allowClear\n                                        mode=\"multiple\"\n                                        variant={'borderless'}\n                                        suffixIcon={<CaretDownOutlined className=\"caretdownicon\" />}\n                                        labelInValue={(option) => (\n                                          <div className=\"select-options select-options-approval\">\n                                            <img\n                                              src={\n                                                option.profile_pic\n                                                  ? ImageUrl + option.profile_pic\n                                                  : profileImage1\n                                              }\n                                              style={\n                                                option.profile_pic\n                                                  ? { width: '29px', borderRadius: '14px' }\n                                                  : { width: '39px' }\n                                              }\n                                              alt={option.value}\n                                              className=\"img-flag\"\n                                            />\n                                            <div\n                                              className=\"node1\"\n                                              style={\n                                                option.profile_pic ? { marginLeft: '11px' } : {}\n                                              }\n                                            >\n                                              <p className=\"user-name1\">{option.value}</p>\n                                              <p className=\"role-text1\">{option.label.role}</p>\n                                            </div>\n                                          </div>\n                                        )}\n                                      />\n                                    </Card>\n                                  </div>\n                                )}\n                              </div>\n\n                              {/* <div className=\"card-list-person_owners\">\n                              <Card style={{ width: '250px' }} className=\"Access-card\">\n                                {row.technicalOwners.slice(0, 3).map((member) => (\n                                  <div key={member}>\n                                    <div className=\" access-person-tooltip  \">\n                                      <div className=\"image-background\">\n                                        <img\n                                          src={\n                                            member.profilePic\n                                              ? ImageUrl + member.profilePic\n                                              : profileImage1\n                                          }\n                                          className={\n                                            member.profilePic\n                                              ? 'card-access-image'\n                                              : 'card-approval-image'\n                                          }\n                                          alt={member.name}\n                                        />\n                                      </div>\n                                      <div\n                                        className=\"node1 access-person-hovercard\"\n                                        style={member.profilePic ? { marginLeft: '11px' } : {}}\n                                      >\n                                        <p className=\"member-user-name1\"> {member.name}</p>\n                                        <p className=\"member-role-text1\">{member.designation}</p>\n                                      </div>\n                                    </div>\n                                    <Divider />\n                                  </div>\n                                ))}\n                              </Card>\n                            </div> */}\n                            </div>\n                          ) : (\n                            <div>\n                              <p\n                                className=\"text-danger\"\n                                onClick={() => handleEditClick1(row.id)}\n                                style={{ fontSize: '13px', cursor: 'pointer' }}\n                              >\n                                Assign\n                              </p>\n                              {assignCard[row.id] && (\n                                <div\n                                  className=\"card-list-person_owners_add_default\"\n                                  onClick={(e) => e.stopPropagation()}\n                                >\n                                  <Card style={{ width: '517px' }} className=\"Access-card_add\">\n                                    <button\n                                      className=\"btn border-0 text-c text-secondary cross-button\"\n                                      style={{ position: 'absolute', top: 0, right: 0 }}\n                                      onClick={() => handleClose1()}\n                                    >\n                                      <CrossSvg\n                                        width=\"12\"\n                                        height=\"11\"\n                                        viewBox=\"0 0 14 10\"\n                                        fill=\"#A5A1A1\"\n                                      />\n                                    </button>\n                                    <Select\n                                      onClick={(e) => e.stopPropagation()}\n                                      className=\"form-custom-selects access-input-box_owner test\"\n                                      value={\n                                        row.technicalOwners\n                                          ? user && user.designation === 'Technical Head'\n                                            ? techOwnerOptions.filter((option) =>\n                                                row.technicalOwners.some(\n                                                  (selected) => selected.name === option.value,\n                                                ),\n                                              )\n                                            : prodOwnerOptions.filter((option) =>\n                                                row.technicalOwners.some(\n                                                  (selected) => selected.name === option.value,\n                                                ),\n                                              )\n                                          : null\n                                      }\n                                      options={\n                                        user && user.designation === 'Technical Head'\n                                          ? techOwnerOptions\n                                          : prodOwnerOptions\n                                      }\n                                      onChange={(selectedOptions) =>\n                                        handleAccessChange(selectedOptions, row.id)\n                                      }\n                                      required\n                                      showSearch\n                                      placeholder=\"Choose Access\"\n                                      allowClear\n                                      mode=\"multiple\"\n                                      // bordered={false}\n                                      suffixIcon={<CaretDownOutlined className=\"caretdownicon\" />}\n                                      labelInValue={(option) => (\n                                        <div className=\"select-options select-options-approval\">\n                                          <img\n                                            src={\n                                              option.profile_pic\n                                                ? ImageUrl + option.profile_pic\n                                                : profileImage1\n                                            }\n                                            style={\n                                              option.profile_pic\n                                                ? { width: '29px', borderRadius: '14px' }\n                                                : { width: '39px' }\n                                            }\n                                            alt={option.value}\n                                            className=\"img-flag\"\n                                          />\n                                          <div\n                                            className=\"node1\"\n                                            style={option.profile_pic ? { marginLeft: '11px' } : {}}\n                                          >\n                                            <p className=\"user-name1\">{option.value}</p>\n                                            <p className=\"role-text1\">{option.label.role}</p>\n                                          </div>\n                                        </div>\n                                      )}\n                                    />\n                                  </Card>\n                                </div>\n                              )}\n                            </div>\n                          )}\n                        </CTableDataCell>\n                        <CTableDataCell className=\"productflow-product-Action pad-bottom_flow text-center td-product-text\">\n                          <button\n                            type=\"button\"\n                            className=\"btn border-0 text-c text-secondary cross-button\"\n                            style={{ fontSize: '12px', padding: '4px 8px' }}\n                            onClick={() => handleProductView(row.id)}\n                          >\n                            <EyeSvg width=\"13\" height=\"13\" viewBox=\"0 0 20 16\" fill=\"#A5A1A1\" />\n                          </button>\n                        </CTableDataCell>\n                      </CTableRow>\n                    ))\n                  )}\n                </CTableBody>\n              </CTable>\n              {(tableData === null && !commonLoader) ||\n              (tableData.length === 0 && !commonLoader) ? (\n                <div className=\"text-c text-center my-3 td-text\">No Data Found</div>\n              ) : commonLoader && tableData.length === 0 ? (\n                <div className=\"text-c text-center my-3 td-text\">\n                  <CSpinner color=\"danger\" />\n                </div>\n              ) : (\n                <div></div>\n              )}\n            </InfiniteScroll>\n          </div>\n        </>\n      )}\n    </>\n  )\n}\n\nApprovedList.propTypes = {\n  formatDate: PropTypes.func,\n  FlowList: PropTypes.array,\n  prodOwnerList: PropTypes.array,\n  techOwnerList: PropTypes.array,\n  dataOwnerList: PropTypes.array,\n  categories: PropTypes.array,\n  techHeadList: PropTypes.array,\n  prodHeadList: PropTypes.array,\n  dataHeadList: PropTypes.array,\n}\nexport default ApprovedList\n","import React, { useState, useEffect, useRef } from 'react'\nimport {\n  CCol,\n  CRow,\n  CSpinner,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport { getHeaders, ImageUrl } from 'src/constant/Global'\nimport profileImage1 from '../../../assets/images/avatars/wrapper.png'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport PropTypes from 'prop-types'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport { Breadcrumb, Checkbox, Card, Divider, Tooltip, Modal } from 'antd'\nimport DeleteSvg from '../../svgImages/DeleteSvg'\nimport EditProduct from './EditProduct'\nimport { formatAmountWithCommas } from 'src/constant/TimeUtils'\nimport useAxios from 'src/constant/UseAxios'\nimport EditSvg from '../../svgImages/EditSvg'\nimport InfiniteScroll from 'react-infinite-scroll-component'\nimport { ExclamationCircleFilled } from '@ant-design/icons'\nimport { Link } from 'react-router-dom'\nconst { confirm } = Modal\nconst DraftList = ({\n  formatDate,\n  FlowList,\n  categories,\n  techHeadList,\n  prodHeadList,\n  dataHeadList,\n}) => {\n  let api = useAxios()\n  const [DraftTable, setDraftTable] = useState([])\n  const [selectedRows, setSelectedRows] = useState([])\n  const [headerLabel, setHeaderLabel] = useState('')\n  const [EditProductShow, setEditProductShow] = useState(false)\n  const [EditProductData, setEditProductData] = useState([])\n  const [commonLoader, setCommonLoader] = useState(true)\n  // const [hasMore, setHasMore] = useState(true)\n  const hasMoreRef = useRef(true)\n  const pageRef = useRef(0)\n  const searchRef = useRef(false)\n\n  useEffect(() => {\n    if (!EditProductShow) {\n      pageRef.current = 0\n      hasMoreRef.current = true\n      getDraftList()\n      const tableContainer = document.querySelector('.table-container')\n      tableContainer.addEventListener('scroll', handleScroll)\n      return () => {\n        tableContainer.removeEventListener('scroll', handleScroll)\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [EditProductShow])\n\n  const handleScroll = () => {\n    const tableContainer = document.querySelector('.table-container')\n    if (tableContainer.scrollTop + tableContainer.clientHeight === tableContainer.scrollHeight) {\n      if (hasMoreRef.current === true) {\n        getDraftList()\n      }\n    }\n  }\n\n  const getDraftList = async () => {\n    const url = `product/list?page=${pageRef.current}&size=10&search=${searchRef.current}&status=Draft&value=0`\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        const data = response.data.data\n        if (pageRef.current === 0) setDraftTable(data)\n        else setDraftTable((prevUserData) => [...prevUserData, ...data])\n        if (data.length < 10) {\n          hasMoreRef.current = false\n        }\n\n        pageRef.current = pageRef.current + 1\n        setCommonLoader(false)\n      })\n      .catch((error) => {})\n  }\n\n  const handleHeaderCheck = (isChecked) => {\n    if (isChecked) {\n      const allRowIds = DraftTable.map((row) => row.id)\n      setSelectedRows(allRowIds)\n      setHeaderLabel(`${allRowIds.length} Selected`)\n    } else {\n      setSelectedRows([])\n      setHeaderLabel('')\n    }\n  }\n\n  const handleMemberCheck = (rowId, isChecked) => {\n    if (isChecked) {\n      setSelectedRows((prevSelectedRows) => [...prevSelectedRows, rowId])\n    } else {\n      setSelectedRows((prevSelectedRows) =>\n        prevSelectedRows.filter((selectedId) => selectedId !== rowId),\n      )\n    }\n\n    const newSelectedRows = isChecked\n      ? [...selectedRows, rowId]\n      : selectedRows.filter((selectedId) => selectedId !== rowId)\n    const newSelectedRowCount = newSelectedRows.length\n\n    if (newSelectedRowCount < 1) {\n      setHeaderLabel('')\n    } else {\n      setHeaderLabel(`${newSelectedRowCount} Selected`)\n    }\n  }\n\n  const openEditProduct = (id) => {\n    handleEdit(id)\n    setEditProductShow(true)\n  }\n\n  const closeEditProduct = () => {\n    setEditProductShow(false)\n  }\n\n  const handleEdit = async (id) => {\n    const url = `product/view/` + id\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        const data = response.data.data\n        setEditProductData(data)\n      })\n      .catch((error) => {})\n  }\n\n  const deletefun = (id) => {\n    const url = `product/delete/` + id\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        api\n          .delete(url, {\n            headers: getHeaders('json'),\n          })\n          .then((response) => {\n            callDraftLists()\n            setSelectedRows([])\n            setHeaderLabel('')\n            setEditProductShow(false)\n            resolve(response)\n          })\n          .catch((error) => {\n            reject(error)\n          })\n      }, 1000)\n    })\n  }\n\n  const resetValues = () => {\n    setSelectedRows([])\n    setHeaderLabel('')\n  }\n\n  const callDraftList = () => {\n    closeEditProduct()\n    searchRef.current = false\n    pageRef.current = 0\n    // getDraftList()\n  }\n\n  const callDraftLists = () => {\n    closeEditProduct()\n    searchRef.current = false\n    pageRef.current = 0\n    getDraftList()\n  }\n\n  const warning = (id) => {\n    confirm({\n      title: 'Delete Draft product',\n      content: 'Are you sure to delete this Draft product ?',\n      icon: <ExclamationCircleFilled />,\n      okText: 'Yes',\n      okType: 'danger',\n      cancelButtonProps: {\n        style: { borderColor: '#f54550', color: 'black' },\n      },\n      closable: true,\n      okButtonProps: {\n        style: { borderColor: '#f54550', color: 'white', backgroundColor: '#f54550' },\n      },\n      cancelText: 'No',\n      async onOk() {\n        try {\n          await deletefun(id)\n          toast.success('Product Deleted Successfully', {\n            position: toast.POSITION.BOTTOM_RIGHT,\n            autoClose: 3000,\n          })\n        } catch (error) {\n          toast.error('Deletion failed', {\n            position: toast.POSITION.BOTTOM_RIGHT,\n            autoClose: 3000,\n          })\n        }\n      },\n      onCancel() {\n        resetValues()\n      },\n    })\n  }\n\n  return (\n    <>\n      <ToastContainer />\n      {EditProductShow ? (\n        <EditProduct\n          flowList={FlowList}\n          techHeadList={techHeadList}\n          prodHeadList={prodHeadList}\n          dataHeadList={dataHeadList}\n          categories={categories}\n          EditProductData={EditProductData}\n          callBackFunc={callDraftList}\n          title=\"Draft List\"\n        />\n      ) : (\n        <>\n          <CRow className=\"m-3\">\n            <CCol md={4}>\n              <b>Draft List</b>\n              <br />\n              <Breadcrumb\n                className=\"bread-tab\"\n                separator={<span className=\"breadcrumb-separator\">|</span>}\n                items={[\n                  {\n                    title: (\n                      <Link\n                        to={'/dashboard'}\n                        className=\"bread-items text-decoration-none text-secondary\"\n                      >\n                        Dashboard\n                      </Link>\n                    ),\n                  },\n                  {\n                    title: (\n                      <span className=\"text-secondary \" style={{ cursor: 'default' }}>\n                        Draft List\n                      </span>\n                    ),\n                  },\n                ]}\n              />\n            </CCol>\n          </CRow>\n\n          <div className=\"table-container table_scroll\" style={{ border: 'none' }}>\n            <InfiniteScroll\n              dataLength={DraftTable.length}\n              next={handleScroll}\n              hasMore={hasMoreRef.current}\n              loader={\n                <div className=\"text-c text-center my-3 td-text\">\n                  <CSpinner color=\"danger\" />\n                </div>\n              }\n              endMessage={\n                DraftTable.length !== 0 && (\n                  <p style={{ textAlign: 'center' }}>\n                    <b style={{ color: '#e40e2d', fontSize: '12px' }}>No more Data to load</b>\n                  </p>\n                )\n              }\n            >\n              <CTable className=\"flowlist-fulltable\" hover>\n                <CTableHead className=\"head-row\">\n                  {!headerLabel ? (\n                    <CTableRow>\n                      {DraftTable === null || DraftTable.length === 0 ? (\n                        <CTableHeaderCell\n                          className=\"table-head-draft  text-c text-center grid-cell-header check_box_position\"\n                          scope=\"col\"\n                          width=\"4%\"\n                        >\n                          <Checkbox\n                            id=\"flexCheckDefault\"\n                            onChange={(e) => handleHeaderCheck(e.target.checked)}\n                            disabled={true}\n                          />\n                        </CTableHeaderCell>\n                      ) : (\n                        <CTableHeaderCell\n                          className=\"table-head-draft text-center text-c grid-cell-header\"\n                          scope=\"col\"\n                          width=\"4%\"\n                          style={{ position: 'sticky', top: '0', zIndex: '12' }}\n                        >\n                          <Checkbox\n                            id=\"flexCheckDefault\"\n                            className=\"checkbox_design\"\n                            checked={selectedRows.length === DraftTable.length && DraftTable.length}\n                            onChange={(e) => handleHeaderCheck(e.target.checked)}\n                          />\n                        </CTableHeaderCell>\n                      )}\n                      <CTableHeaderCell\n                        className=\"table-head-productlist text-c text-center \"\n                        scope=\"col\"\n                        width=\"4%\"\n                      >\n                        SI.No\n                      </CTableHeaderCell>\n                      <CTableHeaderCell\n                        className=\"table-head-productlist text-c\"\n                        scope=\"col\"\n                        width=\"10%\"\n                      >\n                        Product Name\n                      </CTableHeaderCell>\n                      <CTableHeaderCell\n                        className=\"table-head-productlist text-c\"\n                        scope=\"col\"\n                        width=\"8%\"\n                      >\n                        Flow\n                      </CTableHeaderCell>\n                      <CTableHeaderCell\n                        className=\"table-head-productlist text-c\"\n                        scope=\"col\"\n                        width=\"10%\"\n                      >\n                        Product Head\n                      </CTableHeaderCell>\n                      <CTableHeaderCell\n                        className=\"table-head-productlist text-c\"\n                        scope=\"col\"\n                        width=\"10%\"\n                      >\n                        Technical Head\n                      </CTableHeaderCell>\n                      <CTableHeaderCell\n                        className=\"table-head-productlist text-c\"\n                        scope=\"col\"\n                        width=\"10%\"\n                      >\n                        Data Head\n                      </CTableHeaderCell>\n                      <CTableHeaderCell\n                        className=\"table-head-productlist text-c\"\n                        scope=\"col\"\n                        width=\"10%\"\n                      >\n                        Start Date\n                      </CTableHeaderCell>\n                      <CTableHeaderCell\n                        className=\"table-head-productlist text-c\"\n                        scope=\"col\"\n                        width=\"10%\"\n                      >\n                        End Date\n                      </CTableHeaderCell>\n                      <CTableHeaderCell\n                        className=\"table-head-productlist text-c\"\n                        width=\"10%\"\n                        scope=\"col\"\n                      >\n                        Approval Flow\n                      </CTableHeaderCell>\n                      <CTableHeaderCell\n                        className=\"table-head-productlist text-c\"\n                        scope=\"col\"\n                        width=\"10%\"\n                      >\n                        Budget Details\n                      </CTableHeaderCell>\n                      <CTableHeaderCell\n                        className=\"table-head-productlist text-c\"\n                        scope=\"col\"\n                        width=\"5%\"\n                      >\n                        Action\n                      </CTableHeaderCell>\n                    </CTableRow>\n                  ) : (\n                    <CTableRow>\n                      <CTableHeaderCell\n                        className=\"table-head-selected text-center  text-c \"\n                        width=\"4%\"\n                      >\n                        <Checkbox\n                          id=\"flexCheckDefault\"\n                          className=\"checkbox_design\"\n                          checked={selectedRows.length === DraftTable.length && DraftTable.length}\n                          onChange={(e) => handleHeaderCheck(e.target.checked)}\n                        />\n                      </CTableHeaderCell>\n                      <CTableHeaderCell className=\"table-head-selected  text-c \" colSpan=\"7\">\n                        <span style={{ color: '#f50505' }}>{headerLabel}</span>\n                      </CTableHeaderCell>\n                      <CTableHeaderCell\n                        className=\"table-head-selected \"\n                        colSpan=\"5\"\n                        style={{ textAlign: 'right' }}\n                      >\n                        <div\n                          className=\"action-request\"\n                          style={{\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'flex-end',\n                            marginRight: '10px',\n                          }}\n                        >\n                          <button\n                            className=\"border-0 bg-none\"\n                            style={{\n                              cursor: 'pointer',\n                              background: 'none',\n                            }}\n                            onClick={() => warning(selectedRows)}\n                          >\n                            <DeleteSvg width=\"16\" height=\"15\" viewBox=\"0 0 18 18\" fill=\"#EF1B39\" />\n                          </button>\n                        </div>\n                      </CTableHeaderCell>\n                    </CTableRow>\n                  )}\n                </CTableHead>\n                <CTableBody>\n                  {DraftTable &&\n                    DraftTable.map((row, index) => (\n                      <CTableRow key={index} className=\"tr-bg-color\">\n                        <CTableDataCell\n                          className={`text-c text-center pd-text1 grid-cell pad-bottom_flow td-product-text ${\n                            selectedRows.includes(row.id) ? 'checked-table-row' : ''\n                          }`}\n                          width=\"4%\"\n                        >\n                          <Checkbox\n                            className=\"checkbox_design\"\n                            id={`flexCheckDefault-${index}`}\n                            value={row.id}\n                            disabled={\n                              row.status === 'Approved' ||\n                              row.status === 'Rejected' ||\n                              row.approved === true\n                            }\n                            checked={selectedRows.includes(row.id)}\n                            onChange={(e) => {\n                              handleMemberCheck(row.id, e.target.checked)\n                            }}\n                          />\n                        </CTableDataCell>\n                        <CTableDataCell className=\"productflow-col-box text-c pad-bottom_flow td-product-text\">\n                          {index + 1}\n                        </CTableDataCell>\n                        <CTableDataCell className=\"productflow-product-name pad-bottom_flow td-product-text\">\n                          <Tooltip\n                            placement=\"bottomLeft\"\n                            title={row.productName}\n                            className=\"productflow-name-lable\"\n                          >\n                            {row.productName}\n                          </Tooltip>\n                        </CTableDataCell>\n                        <CTableDataCell className=\" productflow-product-flow pad-bottom_flow td-product-text\">\n                          <Tooltip\n                            placement=\"bottomLeft\"\n                            title={row.flowName ? row.flowName : ''}\n                            className=\"flow-name-lable\"\n                          >\n                            {row.flowName ? row.flowName : ''}\n                          </Tooltip>\n                        </CTableDataCell>\n                        <CTableDataCell className=\"productflow-product-head pad-bottom_flow\">\n                          {row.prodHead.length !== 0\n                            ? row.prodHead.map((data) => {\n                                return (\n                                  <div\n                                    style={{ display: 'flex', alignItems: 'center' }}\n                                    key={data.id}\n                                  >\n                                    <img\n                                      src={\n                                        data.profilePic ? ImageUrl + data.profilePic : profileImage1\n                                      }\n                                      alt=\"Profile\"\n                                      className=\"head-td\"\n                                    />\n                                    <div className=\"node1\" style={{ marginTop: '7px' }}>\n                                      <p className=\"head-td-name\" title={data.name}>\n                                        {data.name}\n                                      </p>\n                                      <p className=\"head-td-role\" title={data.designation}>\n                                        {data.designation}\n                                      </p>\n                                    </div>\n                                  </div>\n                                )\n                              })\n                            : '---'}\n                        </CTableDataCell>\n                        <CTableDataCell className=\"productflow-product-head pad-bottom_flow\">\n                          {row.techHead.length !== 0\n                            ? row.techHead.map((data) => {\n                                return (\n                                  <div\n                                    style={{ display: 'flex', alignItems: 'center' }}\n                                    key={data.id}\n                                  >\n                                    <img\n                                      src={\n                                        data.profilePic ? ImageUrl + data.profilePic : profileImage1\n                                      }\n                                      alt=\"Profile\"\n                                      className=\"head-td\"\n                                    />\n                                    <div className=\"node1\" style={{ marginTop: '7px' }}>\n                                      <p className=\"head-td-name\" title={data.name}>\n                                        {data.name}\n                                      </p>\n                                      <p className=\"head-td-role\" title={data.designation}>\n                                        {data.designation}\n                                      </p>\n                                    </div>\n                                  </div>\n                                )\n                              })\n                            : '---'}\n                        </CTableDataCell>\n                        <CTableDataCell className=\"productflow-product-head pad-bottom_flow\">\n                          {row.dataHead.length !== 0\n                            ? row.dataHead.map((data) => {\n                                return (\n                                  <div\n                                    style={{ display: 'flex', alignItems: 'center' }}\n                                    key={data.id}\n                                  >\n                                    <img\n                                      src={\n                                        data.profilePic ? ImageUrl + data.profilePic : profileImage1\n                                      }\n                                      alt=\"Profile\"\n                                      className=\"head-td\"\n                                    />\n                                    <div className=\"node1\" style={{ marginTop: '7px' }}>\n                                      <p className=\"head-td-name\" title={data.name}>\n                                        {data.name}\n                                      </p>\n                                      <p className=\"head-td-role\" title={data.designation}>\n                                        {data.designation}\n                                      </p>\n                                    </div>\n                                  </div>\n                                )\n                              })\n                            : '---'}\n                        </CTableDataCell>\n                        <CTableDataCell className=\"productflow-product-Startdate pad-bottom_flow td-product-text\">\n                          {formatDate(row.startDate)}\n                        </CTableDataCell>\n                        <CTableDataCell className=\"productflow-product-Enddate pad-bottom_flow td-product-text\">\n                          {row.endDate !== null ? formatDate(row.endDate) : '--'}\n                        </CTableDataCell>\n                        <CTableDataCell className=\"text-c flowlist-accesperson pad-bottom_flow\">\n                          <div className=\"table-cell-container\">\n                            <div className=\"image-background-accessperson\">\n                              {row.approvalFlow.slice(0, 3).map((member, index) => (\n                                <div className=\"accessPerImg\" key={index}>\n                                  <div className=\"tooltip-container\">\n                                    <img\n                                      src={\n                                        member.profilePic\n                                          ? ImageUrl + member.profilePic\n                                          : profileImage1\n                                      }\n                                      className={member.profilePic ? 'first-image' : 'second-image'}\n                                      alt=\"Access Person Images\"\n                                    />\n                                  </div>\n                                </div>\n                              ))}\n                              <div>\n                                {row.approvalFlow.length > 3 && (\n                                  <div className=\"accessPerImg text-center more-person-access rounded-circle\">\n                                    <span>+{row.approvalFlow.length - 3}</span>\n                                  </div>\n                                )}\n                              </div>\n                            </div>\n\n                            <div className=\"card-list-person\">\n                              <Card\n                                style={{ width: '230px', height: '120px', overflowY: 'auto' }}\n                                className=\"Access-card\"\n                              >\n                                {row.approvalFlow.map((member) => (\n                                  <div key={member}>\n                                    <div className=\" access-person-tooltip  \">\n                                      <div className=\"image-background\">\n                                        <img\n                                          src={\n                                            member.profilePic\n                                              ? ImageUrl + member.profilePic\n                                              : profileImage1\n                                          }\n                                          className={\n                                            member.profilePic\n                                              ? 'card-access-image'\n                                              : 'card-approval-image'\n                                          }\n                                          alt={member.name}\n                                        />\n                                      </div>\n                                      <div\n                                        className=\"node1 access-person-hovercard\"\n                                        style={member.profilePic ? { marginLeft: '11px' } : {}}\n                                      >\n                                        <p className=\"member-user-name1\"> {member.name}</p>\n                                        <p className=\"member-role-text1\">{member.designation}</p>\n                                      </div>\n                                    </div>\n                                    <Divider />\n                                  </div>\n                                ))}\n                              </Card>\n                            </div>\n                          </div>\n                        </CTableDataCell>\n                        <CTableDataCell className=\"productflow-product-budget pad-bottom_flow td-product-text\">\n                          {row.budgetDetails !== 'undefined' &&\n                          row.budgetDetails !== '' &&\n                          row.budgetDetails !== null\n                            ? formatAmountWithCommas(row.budgetDetails, row.currency)\n                            : '---'}\n                        </CTableDataCell>\n                        <CTableDataCell\n                          className={`text-c pd-text1 text-center grid-cell pad-bottom_flow td-product-text ${\n                            selectedRows.includes(row.id) ? 'checked-table-row' : ''\n                          }`}\n                          width=\"8%\"\n                        >\n                          <button\n                            type=\"button\"\n                            className=\"action-view edit-button \"\n                            onClick={() => openEditProduct(row.id)}\n                            style={{ padding: '4px 8px' }}\n                          >\n                            <EditSvg\n                              width=\"13\"\n                              height=\"13\"\n                              viewBox=\"0 0 18 18\"\n                              fill=\"none\"\n                              color=\"white\"\n                              clipH=\"18\"\n                              clipW=\"18\"\n                            />\n                          </button>\n                          <button\n                            className=\"border-0 bg-none cross-button\"\n                            style={{\n                              cursor: 'pointer',\n                              background: 'none',\n                              borderRadius: '8px',\n                            }}\n                            onClick={() => warning(row.id)}\n                            disabled={selectedRows.includes(row.id)}\n                          >\n                            <DeleteSvg width=\"16\" height=\"15\" viewBox=\"0 0 18 18\" fill=\"#A5A1A1\" />\n                          </button>\n                        </CTableDataCell>\n                      </CTableRow>\n                    ))}\n                </CTableBody>\n              </CTable>\n              {(DraftTable === null && !commonLoader) ||\n              (DraftTable.length === 0 && !commonLoader) ? (\n                <div className=\"text-c text-center my-3 td-text\">No Data Found</div>\n              ) : commonLoader && DraftTable.length === 0 ? (\n                <div className=\"text-c text-center my-3 td-text\">\n                  <CSpinner color=\"danger\" />\n                </div>\n              ) : (\n                <div></div>\n              )}\n            </InfiniteScroll>\n          </div>\n        </>\n      )}\n    </>\n  )\n}\n\nDraftList.propTypes = {\n  formatDate: PropTypes.func,\n  FlowList: PropTypes.array,\n  categories: PropTypes.array,\n  techHeadList: PropTypes.array,\n  prodHeadList: PropTypes.array,\n  dataHeadList: PropTypes.array,\n}\nexport default DraftList\n","import React, { useState, useEffect, useMemo } from 'react'\nimport { Breadcrumb, Input, Tooltip, Card, Divider } from 'antd'\nimport {\n  CCol,\n  CRow,\n  CSpinner,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport { ImageUrl, getHeaders } from 'src/constant/Global'\nimport profileImage1 from '../../../assets/images/avatars/wrapper.png'\nimport 'react-toastify/dist/ReactToastify.css'\nimport line from '../../../assets/images/Approval Flow Line.png'\nimport AddProduct from './AddProduct'\nimport PropTypes from 'prop-types'\nimport { ToastContainer } from 'react-toastify'\nimport useAxios from 'src/constant/UseAxios'\nimport searchicon from '../../../assets/images/form/search-Icon.png'\nimport { textWrap } from 'src/constant/TimeUtils'\nimport { Link } from 'react-router-dom'\n\nconst FlowList = ({ categories, techHeadList, prodHeadList, dataHeadList }) => {\n  let api = useAxios()\n  const [tableData, setTableData] = useState()\n  const [searchValue, setSearchValue] = useState('')\n  const [AddProductShow, setAddProductShow] = useState(false)\n  const [FlowId, setFlowId] = useState()\n  const [CommonLoader, setCommonLoader] = useState(true)\n\n  const getFlowList = async () => {\n    const url = `flow/list/producthead`\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        setTableData(response.data.data)\n        setCommonLoader(false)\n      })\n      .catch((error) => {})\n  }\n  useEffect(() => {\n    getFlowList()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const handleSearch = (value) => {\n    setSearchValue(value)\n  }\n  const filterFlowTable = useMemo(() => {\n    if (!tableData) {\n      return [] // Return an empty array if tableData is undefined\n    }\n\n    const filterTable = tableData.filter((data) => {\n      const flow = data.name || ''\n      const flowMatch = !searchValue || flow.toLowerCase().includes(searchValue.toLowerCase())\n      return flowMatch\n    })\n    return filterTable\n  }, [searchValue, tableData])\n\n  const openAddProduct = (id) => {\n    setAddProductShow(true)\n    setFlowId(id)\n  }\n\n  const closeAddProduct = (id) => {\n    setAddProductShow(false)\n    setFlowId()\n    getFlowList()\n  }\n\n  return (\n    <>\n      <ToastContainer />\n      {AddProductShow ? (\n        <AddProduct\n          flow={FlowId}\n          flowList={tableData}\n          close={closeAddProduct}\n          techHeadList={techHeadList}\n          prodHeadList={prodHeadList}\n          dataHeadList={dataHeadList}\n          titleList=\"Flow List\"\n          categories={categories}\n          callBackFunc={closeAddProduct}\n        />\n      ) : (\n        <>\n          <CRow className=\"mt-3\">\n            <CCol xs={8} sm={9} md={10}>\n              <b style={{ marginLeft: '30px' }}>Flow List</b>\n              <br />\n              <Breadcrumb\n                style={{ marginLeft: '30px' }}\n                className=\"bread-tab\"\n                separator={<span className=\"breadcrumb-separator\">|</span>}\n                items={[\n                  {\n                    title: (\n                      <Link\n                        rel=\"Dashboard\"\n                        to={'/dashboard'}\n                        className=\"bread-items text-decoration-none text-secondary \"\n                      >\n                        Dashboard\n                      </Link>\n                    ),\n                  },\n                  {\n                    title: (\n                      <span className=\"text-secondary \" style={{ cursor: 'default' }}>\n                        Flow List\n                      </span>\n                    ),\n                  },\n                ]}\n              />\n            </CCol>\n\n            <CCol xs={4} sm={3} md={2} style={{ marginTop: '-5px' }}>\n              {' '}\n              <Input\n                style={{ width: '90%' }}\n                placeholder=\"Search\"\n                className=\"border-0 user-border-bottom \"\n                onChange={(e) => handleSearch(e.target.value)}\n                variant={'borderless'}\n                prefix={\n                  <img\n                    src={searchicon}\n                    alt={searchicon}\n                    style={{ width: '14px', height: '14px' }}\n                    className=\"search-icon\"\n                  />\n                }\n              />\n            </CCol>\n          </CRow>\n          <div\n            className=\"table-container table_scroll_flowlist lap-table\"\n            style={{ marginTop: '20px' }}\n          >\n            <CTable className=\"flowlist-fulltable\" hover>\n              <CTableHead className=\"head-row flowlist-table\">\n                <CTableRow>\n                  <CTableHeaderCell\n                    className=\"table-head-flowlist text-c text-center\"\n                    scope=\"col\"\n                    width=\"4%\"\n                  >\n                    SI.No\n                  </CTableHeaderCell>\n                  <CTableHeaderCell\n                    className=\"table-head table-head-flowlist text-c\"\n                    width=\"10%\"\n                    scope=\"col\"\n                  >\n                    Name of the flow\n                  </CTableHeaderCell>\n                  <CTableHeaderCell\n                    className=\"table-head table-head-flowlist text-c\"\n                    scope=\"col\"\n                    width=\"10%\"\n                  >\n                    Access Persons\n                  </CTableHeaderCell>\n                  <CTableHeaderCell\n                    className=\"table-head table-head-flowlist text-c \"\n                    scope=\"col\"\n                    width=\"60%\"\n                  >\n                    Approval Flow\n                  </CTableHeaderCell>\n                  <CTableHeaderCell\n                    className=\"table-head table-head-flowlist-active text-c text-center\"\n                    scope=\"col\"\n                    width=\"10%\"\n                  >\n                    Action\n                  </CTableHeaderCell>\n                </CTableRow>\n              </CTableHead>\n              <CTableBody>\n                {!filterFlowTable ? (\n                  <CSpinner color=\"danger\" />\n                ) : (\n                  filterFlowTable.map((flow, index) => (\n                    <CTableRow key={flow.id}>\n                      <CTableDataCell\n                        className=\"activity-text-index td-text flowlist-name text-center pad-bottom_flow\"\n                        width=\"4%\"\n                      >\n                        {index + 1}\n                      </CTableDataCell>\n\n                      <CTableDataCell\n                        className=\"td-text text-c flowlist-name pad-bottom_flow\"\n                        width=\"8%\"\n                      >\n                        <Tooltip\n                          placement=\"bottomLeft\"\n                          title={flow.name}\n                          // className=\"flowlist-name-lable\"\n                        >\n                          {textWrap(flow.name, 15)}\n                        </Tooltip>\n                      </CTableDataCell>\n\n                      <CTableDataCell\n                        className=\"td-text flowlist-accesperson pad-bottom_flow\"\n                        width=\"5%\"\n                      >\n                        <div className=\"table-cell-container\">\n                          <div className=\"image-background-accessperson\">\n                            {flow.access.slice(0, 3).map((member, index) => (\n                              <div className=\"accessPerImg\" key={index}>\n                                <div className=\"tooltip-container\">\n                                  <img\n                                    src={\n                                      member.profile_pic\n                                        ? ImageUrl + member.profile_pic\n                                        : profileImage1\n                                    }\n                                    className={member.profile_pic ? 'first-image' : 'second-image'}\n                                    alt=\"Access Person Images\"\n                                  />\n                                </div>\n                              </div>\n                            ))}\n                            <div>\n                              {flow.access.length > 3 && (\n                                <div className=\"accessPerImg text-center more-person-access rounded-circle\">\n                                  <span>+{flow.access.length - 3}</span>\n                                </div>\n                              )}\n                            </div>\n                          </div>\n                          {flow.access.length > 3 && (\n                            <div className=\"card-list-person\">\n                              <Card\n                                style={{ width: '250px', overflowY: 'auto', height: '200px' }}\n                                className=\"Access-card\"\n                              >\n                                {flow.access.map((member) => (\n                                  <div key={member}>\n                                    <div className=\" access-person-tooltip  \">\n                                      <div className=\"image-background\">\n                                        <img\n                                          src={\n                                            member.profile_pic\n                                              ? ImageUrl + member.profile_pic\n                                              : profileImage1\n                                          }\n                                          className={\n                                            member.profile_pic\n                                              ? 'card-access-image'\n                                              : 'card-approval-image'\n                                          }\n                                          alt={member.name}\n                                        />\n                                      </div>\n                                      <div\n                                        className=\"node1 access-person-hovercard\"\n                                        style={member.profile_pic ? { marginLeft: '11px' } : {}}\n                                      >\n                                        <p className=\"member-user-name1\"> {member.name}</p>\n                                        <p className=\"member-role-text1\">{member.role}</p>\n                                      </div>\n                                    </div>\n                                    <Divider />\n                                  </div>\n                                ))}\n                              </Card>\n                            </div>\n                          )}\n                        </div>\n                      </CTableDataCell>\n                      <CTableDataCell\n                        className=\"td-text flowlist-approvalflow pad-bottom_flow\"\n                        width=\"50%\"\n                      >\n                        <div className=\"table-cell-container-flow\">\n                          <div className=\"flow-chart Approval-flow-chart  mt-3\">\n                            {flow.approvals.slice(0, 5).map((approver, approverIndex) => (\n                              <React.Fragment key={approverIndex}>\n                                <div className=\" approval-lable-content\">\n                                  <div className=\"image-background\">\n                                    <img\n                                      src={\n                                        approver.profile_pic\n                                          ? ImageUrl + approver.profile_pic\n                                          : profileImage1\n                                      }\n                                      alt=\"Access Person Images\"\n                                      className={\n                                        approver.profile_pic\n                                          ? 'first-image-approval'\n                                          : 'second-image'\n                                      }\n                                    />\n                                  </div>\n                                  <div className=\"approval-flow\">\n                                    <p className=\"user-name-table \" title={approver.name}>\n                                      {approver.name}\n                                    </p>\n                                    <p\n                                      className=\"role-text1 approver-role-text1\"\n                                      title={approver.role}\n                                    >\n                                      {approver.role}\n                                    </p>\n                                  </div>\n                                </div>\n                                {approverIndex < 4 && approverIndex < flow.approvals.length - 1 && (\n                                  <div className=\"connector access-line-img\">\n                                    <img src={line} alt=\"Access Person Images\" width=\"22px\" />\n                                  </div>\n                                )}\n                              </React.Fragment>\n                            ))}\n                            <div>\n                              {flow.approvals.length > 5 && (\n                                <p\n                                  style={{\n                                    fontSize: '11px',\n                                    color: '#989696',\n                                    marginTop: '-20px',\n                                    marginLeft: '15px',\n                                  }}\n                                >\n                                  +{flow.approvals.length - 5}\n                                  <div> more</div>\n                                </p>\n                              )}\n                            </div>\n                          </div>\n                          {flow.approvals.length > 5 && (\n                            <div className=\"card-list-flow\">\n                              <Card style={{ width: '220px' }} className=\"flow-card\">\n                                {flow.approvals.map((approver, approverIndex) => (\n                                  <div key={approverIndex}>\n                                    <div className=\" access-person-tooltip \">\n                                      <img\n                                        src={\n                                          approver.profile_pic\n                                            ? ImageUrl + approver.profile_pic\n                                            : profileImage1\n                                        }\n                                        className={\n                                          approver.profile_pic\n                                            ? 'card-approval-image'\n                                            : 'card-approval-image'\n                                        }\n                                        alt={approver.name}\n                                      />\n                                      <div\n                                        className=\"node1 access-person-hovercard\"\n                                        style={approver.profile_pic ? { marginLeft: '11px' } : {}}\n                                      >\n                                        <p className=\"approver-user-name1\"> {approver.name}</p>\n                                        <p className=\"approver-role-text12\">{approver.role}</p>\n                                      </div>\n                                    </div>\n                                    <Divider />\n                                  </div>\n                                ))}\n                              </Card>\n                            </div>\n                          )}\n                        </div>\n                      </CTableDataCell>\n                      <CTableDataCell\n                        className=\"td-text flowlist-Action pad-bottom_flow\"\n                        width=\"4%\"\n                      >\n                        <div className=\"action-items\">\n                          <button\n                            type=\"button\"\n                            className=\"action-view-product\"\n                            onClick={() => openAddProduct(flow.id)}\n                          >\n                            Create Product\n                          </button>\n                        </div>\n                      </CTableDataCell>\n                    </CTableRow>\n                  ))\n                )}\n              </CTableBody>\n            </CTable>\n            {(filterFlowTable === null && !CommonLoader) ||\n            (filterFlowTable.length === 0 && !CommonLoader) ? (\n              <div className=\"text-c text-center my-3 td-text\">No Data Found</div>\n            ) : CommonLoader ? (\n              <div className=\"text-c text-center my-3 td-text\">\n                <CSpinner color=\"danger\" />\n              </div>\n            ) : (\n              <div></div>\n            )}\n          </div>\n          <div style={{ height: '50px' }}></div>\n        </>\n      )}\n    </>\n  )\n}\n\nFlowList.propTypes = {\n  categories: PropTypes.array,\n  techHeadList: PropTypes.array,\n  prodHeadList: PropTypes.array,\n  dataHeadList: PropTypes.array,\n}\nexport default FlowList\n","import React, { useState, useEffect, useRef } from 'react'\nimport { Select, Breadcrumb, Tooltip, Card, Divider, Row, Skeleton } from 'antd'\nimport {\n  CCol,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CButton,\n  CSpinner,\n} from '@coreui/react'\nimport { getHeaders, ImageUrl } from 'src/constant/Global'\nimport profileImage1 from '../../../assets/images/avatars/wrapper.png'\nimport PropTypes from 'prop-types'\nimport { formatAmountWithCommas } from '../../../constant/TimeUtils'\nimport 'react-toastify/dist/ReactToastify.css'\nimport AddProduct from './AddProduct'\nimport ViewProduct from '../ViewProduct'\nimport infoIcon from '../../../assets/images/info-icon.png'\nimport stage from '../../../assets/images/form/stage.png'\nimport stage1 from '../../../assets/images/form/stage-p.png'\nimport stage2 from '../../../assets/images/form/stage-a.png'\nimport stage3 from '../../../assets/images/form/stage-r.png'\nimport useAxios from 'src/constant/UseAxios'\nimport EyeSvg from '../../svgImages/EyeSvg'\nimport InfiniteScroll from 'react-infinite-scroll-component'\nimport { ToastContainer } from 'react-toastify'\nimport Downarrowimg from '../../../assets/images/downarrow.png'\nimport { Link } from 'react-router-dom'\n\nconst PendingList = ({\n  formatDate,\n  FlowList,\n  categories,\n  techHeadList,\n  prodHeadList,\n  dataHeadList,\n}) => {\n  let api = useAxios()\n  const [productId, setProductId] = useState()\n  const [tableData, setTableData] = useState([])\n  const [productNames, setProductNames] = useState([])\n  const [ViewProductData, setViewProductData] = useState({})\n  const [AddProductShow, setAddProductShow] = useState(false)\n  const [ViewProductShow, setViewProductShow] = useState(false)\n  const [commonLoader, setCommonLoader] = useState(true)\n  // const [hasMore, setHasMore] = useState(true)\n  const hasMoreRef = useRef(true)\n  const pageRef = useRef(0)\n  const searchRef = useRef(false)\n  const productRef = useRef(0)\n  const selectRef = useRef(null)\n  const [abortController, setAbortController] = useState(new AbortController())\n  const [pLoader, setPLoader] = useState(true)\n\n  useEffect(() => {\n    if (!AddProductShow && !ViewProductShow) {\n      pageRef.current = 0\n      hasMoreRef.current = true\n      getProductList()\n      getProductNames()\n      const tableContainer = document.querySelector('.table-container')\n      tableContainer.addEventListener('scroll', handleScroll)\n      return () => {\n        tableContainer.removeEventListener('scroll', handleScroll)\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [AddProductShow, ViewProductShow])\n\n  const handleScroll = () => {\n    const tableContainer = document.querySelector('.table-container')\n    if (tableContainer.scrollTop + tableContainer.clientHeight === tableContainer.scrollHeight) {\n      if (hasMoreRef.current === true) {\n        getProductList()\n      }\n    }\n  }\n  const getProductList = async () => {\n    let newAbortController\n    if (pageRef.current === 0) {\n      setCommonLoader(true)\n      setTableData([])\n      abortController.abort()\n      newAbortController = new AbortController()\n      setAbortController(newAbortController)\n    }\n\n    const url = `product/list?page=${pageRef.current}&size=10&search=${searchRef.current}&status=Pending&value=${productRef.current}`\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n        signal: newAbortController?.signal,\n      })\n      .then((response) => {\n        const data = response.data.data\n        if (pageRef.current === 0) setTableData(data)\n        else setTableData((prevUserData) => [...prevUserData, ...data])\n        if (data.length < 10) {\n          hasMoreRef.current = false\n        }\n        // Increment the page number for the next fetch\n        pageRef.current = pageRef.current + 1\n        setCommonLoader(false)\n      })\n      .catch((error) => {})\n  }\n\n  const handleProductView = async (id) => {\n    const url = `product/view/` + id\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        const data = response.data.data\n        setViewProductData(data)\n      })\n      .catch((error) => {})\n  }\n\n  const openViewProduct = (id) => {\n    handleProductView(id)\n    setViewProductShow(true)\n  }\n\n  const handleProduct = (value) => {\n    if (value === undefined) {\n      setProductId()\n      searchRef.current = false\n      productRef.current = 0\n    } else {\n      setProductId(value)\n      searchRef.current = true\n      productRef.current = value\n    }\n    selectRef.current.blur()\n    pageRef.current = 0\n    hasMoreRef.current = true\n    getProductList()\n  }\n\n  const openAddProduct = (id) => {\n    setAddProductShow(true)\n  }\n\n  const closeAddProduct = () => {\n    setAddProductShow(false)\n  }\n\n  const closeViewProduct = () => {\n    setViewProductShow(false)\n  }\n\n  const getProductNames = async () => {\n    const url = `product/head/search?status=Pending`\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        const data = response.data.data\n        setProductNames(data)\n        setPLoader(false)\n      })\n      .catch((error) => {})\n  }\n\n  return (\n    <>\n      <ToastContainer />\n      {AddProductShow ? (\n        <AddProduct\n          flow={null}\n          flowList={FlowList}\n          close={closeAddProduct}\n          techHeadList={techHeadList}\n          prodHeadList={prodHeadList}\n          dataHeadList={dataHeadList}\n          titleList=\"Pending List\"\n          categories={categories}\n        />\n      ) : ViewProductShow ? (\n        <ViewProduct\n          flowList={FlowList}\n          close={closeViewProduct}\n          techHeadList={techHeadList}\n          prodHeadList={prodHeadList}\n          dataHeadList={dataHeadList}\n          categories={categories}\n          ViewProductData={ViewProductData}\n          viewStatus=\"View\"\n          titleList=\"Pending List\"\n          ownerOption={[]}\n        />\n      ) : (\n        <>\n          <CRow className=\"mt-3\">\n            <CCol sm={6} md={8}>\n              <b style={{ marginLeft: '30px' }}>Product List</b>\n              <br />\n              <Breadcrumb\n                style={{ marginLeft: '30px' }}\n                className=\"bread-tab\"\n                separator={<span className=\"breadcrumb-separator\">|</span>}\n                items={[\n                  {\n                    title: (\n                      <Link\n                        rel=\"Dashboard\"\n                        to={'/dashboard'}\n                        className=\"bread-items text-decoration-none text-secondary \"\n                      >\n                        Dashboard\n                      </Link>\n                    ),\n                  },\n                  {\n                    title: (\n                      <span className=\"text-secondary \" style={{ cursor: 'default' }}>\n                        Product List\n                      </span>\n                    ),\n                  },\n                ]}\n              />\n            </CCol>\n            <CCol xs={6} sm={3} md={2}>\n              <Select\n                ref={selectRef}\n                style={{ marginTop: '10px' }}\n                className=\" custom-select pend-sel\"\n                suffixIcon={\n                  <img\n                    src={Downarrowimg}\n                    alt=\"Downarrowimg\"\n                    style={{ width: '10px', height: '6px' }}\n                  />\n                }\n                id=\"products\"\n                value={productId}\n                onChange={(value) => handleProduct(value)}\n                showSearch\n                allowClear\n                filterOption={(input, option) =>\n                  option.label.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                }\n                dropdownRender={(menu) => (\n                  <div style={{ overflow: 'auto' }} role=\"listbox\">\n                    {menu}\n                  </div>\n                )}\n                options={\n                  pLoader\n                    ? [\n                        {\n                          label: (\n                            <div style={{ textAlign: 'center' }}>\n                              {Array.from({ length: 5 }, (_, index) => (\n                                <Skeleton\n                                  key={index}\n                                  title={false}\n                                  paragraph={{\n                                    rows: 1,\n                                    width: '100%',\n                                    height: '10px',\n                                    style: { height: '10px !important' },\n                                  }}\n                                />\n                              ))}\n                            </div>\n                          ),\n                          value: 'loading',\n                          disabled: true,\n                        },\n                      ]\n                    : productNames.map((prod) => ({\n                        value: prod.id,\n                        label: prod.name,\n                      }))\n                }\n                placeholder=\"Choose Product\"\n                getPopupContainer={(triggerNode) => triggerNode.parentNode}\n              />\n            </CCol>\n            <CCol xs={6} sm={3} md={2}>\n              <CButton className=\"create-product-button\" onClick={openAddProduct}>\n                Create Product\n              </CButton>\n            </CCol>\n          </CRow>\n\n          <div className=\"table-container table_scroll   mt-4 \" style={{ border: 'none' }}>\n            <InfiniteScroll\n              dataLength={tableData.length}\n              next={handleScroll}\n              hasMore={hasMoreRef.current}\n              loader={\n                <div className=\"text-c text-center my-3 td-text\">\n                  <CSpinner color=\"danger\" />\n                </div>\n              }\n              endMessage={\n                tableData.length !== 0 && (\n                  <p style={{ textAlign: 'center' }}>\n                    <b style={{ color: '#e40e2d', fontSize: '12px' }}>No more Data to load</b>\n                  </p>\n                )\n              }\n            >\n              <CTable className=\"flowlist-fulltable\" hover>\n                <CTableHead className=\"head-row draft-head-row-ts\">\n                  <CTableRow>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c text-center \"\n                      scope=\"col\"\n                      width=\"4%\"\n                    >\n                      SI.No\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      Product Name\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"8%\"\n                    >\n                      Flow\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      Product Head\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      Technical Head\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      Data Head\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      Start Date\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      End Date\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      width=\"10%\"\n                      scope=\"col\"\n                    >\n                      Approval Flow\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      Budget Details\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      Approver Status\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      Action\n                    </CTableHeaderCell>\n                  </CTableRow>\n                </CTableHead>\n                <CTableBody>\n                  {!tableData ? (\n                    <div></div>\n                  ) : (\n                    tableData.map((row, index) => (\n                      <CTableRow key={index}>\n                        <CTableDataCell className=\"productflow-col-box text-c pad-bottom_flow td-product-text\">\n                          {index + 1}\n                        </CTableDataCell>\n                        <CTableDataCell className=\"productflow-product-name pad-bottom_flow td-product-text\">\n                          <Tooltip\n                            placement=\"bottomLeft\"\n                            title={row.productName}\n                            className=\"productflow-name-lable\"\n                          >\n                            {row.productName}\n                          </Tooltip>\n                        </CTableDataCell>\n                        <CTableDataCell className=\" productflow-product-flow pad-bottom_flow td-product-text\">\n                          <Tooltip\n                            placement=\"bottomLeft\"\n                            title={row.flowName ? row.flowName : ''}\n                            className=\"flow-name-lable\"\n                          >\n                            {row.flowName ? row.flowName : ''}\n                          </Tooltip>\n                        </CTableDataCell>\n                        <CTableDataCell className=\"productflow-product-head pad-bottom_flow\">\n                          {row.prodHead.length !== 0\n                            ? row.prodHead.map((data) => {\n                                return (\n                                  <div\n                                    style={{ display: 'flex', alignItems: 'center' }}\n                                    key={data.id}\n                                  >\n                                    <img\n                                      src={\n                                        data.profilePic ? ImageUrl + data.profilePic : profileImage1\n                                      }\n                                      alt=\"Profile\"\n                                      className=\"head-td\"\n                                    />\n                                    <div className=\"node1\" style={{ marginTop: '7px' }}>\n                                      <p className=\"head-td-name\" title={data.name}>\n                                        {data.name}\n                                      </p>\n                                      <p className=\"head-td-role\" title={data.designation}>\n                                        {data.designation}\n                                      </p>\n                                    </div>\n                                  </div>\n                                )\n                              })\n                            : '---'}\n                        </CTableDataCell>\n                        <CTableDataCell className=\"productflow-product-head pad-bottom_flow\">\n                          {row.techHead.length !== 0\n                            ? row.techHead.map((data) => {\n                                return (\n                                  <div\n                                    style={{ display: 'flex', alignItems: 'center' }}\n                                    key={data.id}\n                                  >\n                                    <img\n                                      src={\n                                        data.profilePic ? ImageUrl + data.profilePic : profileImage1\n                                      }\n                                      alt=\"Profile\"\n                                      className=\"head-td\"\n                                    />\n                                    <div className=\"node1\" style={{ marginTop: '7px' }}>\n                                      <p className=\"head-td-name\" title={data.name}>\n                                        {data.name}\n                                      </p>\n                                      <p className=\"head-td-role\" title={data.designation}>\n                                        {data.designation}\n                                      </p>\n                                    </div>\n                                  </div>\n                                )\n                              })\n                            : '---'}\n                        </CTableDataCell>\n                        <CTableDataCell className=\"productflow-product-head pad-bottom_flow\">\n                          {row.dataHead.length !== 0\n                            ? row.dataHead.map((data) => {\n                                return (\n                                  <div\n                                    style={{ display: 'flex', alignItems: 'center' }}\n                                    key={data.id}\n                                  >\n                                    <img\n                                      src={\n                                        data.profilePic ? ImageUrl + data.profilePic : profileImage1\n                                      }\n                                      alt=\"Profile\"\n                                      className=\"head-td\"\n                                    />\n                                    <div className=\"node1\" style={{ marginTop: '7px' }}>\n                                      <p className=\"head-td-name\" title={data.name}>\n                                        {data.name}\n                                      </p>\n                                      <p className=\"head-td-role\" title={data.designation}>\n                                        {data.designation}\n                                      </p>\n                                    </div>\n                                  </div>\n                                )\n                              })\n                            : '---'}\n                        </CTableDataCell>\n                        <CTableDataCell className=\"productflow-product-Startdate pad-bottom_flow td-product-text\">\n                          {formatDate(row.startDate)}\n                        </CTableDataCell>\n                        <CTableDataCell className=\"productflow-product-Enddate pad-bottom_flow td-product-text\">\n                          {row.endDate !== null ? formatDate(row.endDate) : '--'}\n                        </CTableDataCell>\n                        <CTableDataCell className=\" text-c flowlist-accesperson-app pad-bottom_flow\">\n                          <div className=\"table-cell-container\">\n                            <div className=\"image-background-accessperson\">\n                              {row.approvalFlow.slice(0, 3).map((member, index) => (\n                                <div className=\"accessPerImg\" key={index}>\n                                  <div className=\"tooltip-container\">\n                                    <img\n                                      src={\n                                        member.profilePic\n                                          ? ImageUrl + member.profilePic\n                                          : profileImage1\n                                      }\n                                      className={member.profilePic ? 'first-image' : 'second-image'}\n                                      alt=\"Access Person Images\"\n                                    />\n                                  </div>\n                                </div>\n                              ))}\n                              <div>\n                                {row.approvalFlow.length > 3 && (\n                                  <div className=\"accessPerImg text-center more-person-access rounded-circle\">\n                                    <span>+{row.approvalFlow.length - 3}</span>\n                                  </div>\n                                )}\n                              </div>\n                            </div>\n                            {row.approvalFlow.length > 0 && (\n                              <div className=\"card-list-person\">\n                                <Card\n                                  style={{ width: '230px', height: '120px', overflowY: 'auto' }}\n                                  className=\"Access-card\"\n                                >\n                                  {row.approvalFlow.map((member) => (\n                                    <div key={member.id}>\n                                      <div className=\" access-person-tooltip  \">\n                                        <div className=\"image-background\">\n                                          <img\n                                            src={\n                                              member.profilePic\n                                                ? ImageUrl + member.profilePic\n                                                : profileImage1\n                                            }\n                                            className={\n                                              member.profilePic\n                                                ? 'card-access-image'\n                                                : 'card-approval-image'\n                                            }\n                                            alt={member.name}\n                                          />\n                                        </div>\n                                        <div\n                                          className=\"node1 access-person-hovercard\"\n                                          style={member.profilePic ? { marginLeft: '11px' } : {}}\n                                        >\n                                          <p className=\"member-user-name1\"> {member.name}</p>\n                                          <p className=\"member-role-text1\">{member.designation}</p>\n                                        </div>\n                                      </div>\n                                      <Divider />\n                                    </div>\n                                  ))}\n                                </Card>\n                              </div>\n                            )}\n                          </div>\n                        </CTableDataCell>\n                        <CTableDataCell className=\"productflow-product-budget pad-bottom_flow td-product-text\">\n                          {row.budgetDetails !== 'undefined' &&\n                          row.budgetDetails !== '' &&\n                          row.budgetDetails !== null\n                            ? formatAmountWithCommas(row.budgetDetails, row.currency)\n                            : '---'}\n                        </CTableDataCell>\n                        <CTableDataCell\n                          className=\"productflow-product-technical pad-bottom_flow\"\n                          width=\"10%\"\n                        >\n                          <div className=\"approver-status-td\">\n                            <button className=\"appro-status\" style={{ cursor: 'pointer' }}>\n                              <span>{row.approvalStatus}</span>\n                            </button>\n                            <div className=\"tooltip-trigger\">\n                              <img\n                                src={infoIcon}\n                                style={{ width: '17px', height: '17px', cursor: 'pointer' }}\n                                alt=\"info\"\n                              />\n                              <div className=\"tooltip-container-approvals\">\n                                <div\n                                  style={{\n                                    width: '200px',\n                                    minHeight: '85px',\n                                    borderRadius: '7px',\n                                  }}\n                                  className=\"flow-card\"\n                                >\n                                  {row.approvalFlow.map((approver, approverIndex) => (\n                                    <div key={approverIndex}>\n                                      <Row\n                                        className=\"align-items-center\"\n                                        style={{ margin: '16px' }}\n                                      >\n                                        {/* Stage Image */}\n                                        <div className=\"col-md-1\">\n                                          <img\n                                            alt=\"stages\"\n                                            style={{ width: '12px' }}\n                                            className=\"content-img appr_img\"\n                                            src={\n                                              approver.approvalStatus === 'Pending'\n                                                ? stage1\n                                                : approver.approvalStatus === 'Approved'\n                                                ? stage2\n                                                : approver.approvalStatus === 'Rejected'\n                                                ? stage3\n                                                : stage\n                                            }\n                                          />\n                                        </div>\n\n                                        {/* Vertical Line */}\n                                        <div className=\"col-md-1\">\n                                          <div className=\"vertical-line-appr\"></div>\n                                        </div>\n\n                                        {/* Profile details */}\n                                        <div className=\"col-md-2\">\n                                          <img\n                                            alt=\"profile\"\n                                            className=\"appr-img-td\"\n                                            src={\n                                              approver.profilePic\n                                                ? ImageUrl + approver.profilePic\n                                                : profileImage1\n                                            }\n                                          />\n                                        </div>\n                                        <div\n                                          className=\"col-sm-7 name_role\"\n                                          // style={{ paddingLeft: '2px' }}\n                                        >\n                                          <p\n                                            className=\"head-td-name\"\n                                            style={{ marginTop: '21px' }}\n                                            title={approver.name}\n                                          >\n                                            {approver.name}\n                                          </p>\n                                          <p\n                                            className=\"head-td-role_card\"\n                                            title={approver.designation}\n                                          >\n                                            {approver.designation}\n                                          </p>\n                                        </div>\n                                      </Row>\n                                    </div>\n                                  ))}\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </CTableDataCell>\n                        <CTableDataCell className=\"productflow-product-Action pad-bottom_flow text-center td-product-text\">\n                          <button\n                            className=\"btn border-0 text-c text-secondary cross-button\"\n                            style={{ fontSize: '12px', padding: '4px 8px' }}\n                            onClick={() => openViewProduct(row.id)}\n                          >\n                            <EyeSvg width=\"13\" height=\"13\" viewBox=\"0 0 20 16\" fill=\"#A5A1A1\" />\n                          </button>\n                        </CTableDataCell>\n                      </CTableRow>\n                    ))\n                  )}\n                </CTableBody>\n              </CTable>\n              {(tableData === null && !commonLoader) ||\n              (tableData.length === 0 && !commonLoader) ? (\n                <div className=\"text-c text-center my-3 td-text\">No Data Found</div>\n              ) : commonLoader && tableData.length === 0 ? (\n                <div className=\"text-c text-center my-3 td-text\">\n                  <CSpinner color=\"danger\" />\n                </div>\n              ) : (\n                <div></div>\n              )}\n            </InfiniteScroll>\n          </div>\n        </>\n      )}\n    </>\n  )\n}\n\nPendingList.propTypes = {\n  formatDate: PropTypes.func,\n  FlowList: PropTypes.array,\n  categories: PropTypes.array,\n  techHeadList: PropTypes.array,\n  prodHeadList: PropTypes.array,\n  dataHeadList: PropTypes.array,\n}\nexport default PendingList\n","import React, { useState, useEffect, useRef } from 'react'\nimport { Select, Breadcrumb, Tooltip, Card, Divider, Skeleton } from 'antd'\nimport {\n  CCol,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CSpinner,\n} from '@coreui/react'\nimport { getHeaders, ImageUrl } from 'src/constant/Global'\nimport profileImage1 from '../../../assets/images/avatars/wrapper.png'\nimport PropTypes from 'prop-types'\nimport { ToastContainer } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { formatAmountWithCommas } from 'src/constant/TimeUtils'\nimport EditSvg from '../../svgImages/EditSvg'\nimport PlusSvg from 'src/views/svgImages/PlusSvg'\nimport ViewProduct from '../ViewProduct'\nimport useAxios from 'src/constant/UseAxios'\nimport InfiniteScroll from 'react-infinite-scroll-component'\nimport { Link } from 'react-router-dom'\nimport Downarrowimg from '../../../assets/images/downarrow.png'\nconst OwnerProductList = ({ FlowList, categories, techHeadList, prodHeadList, dataHeadList }) => {\n  let api = useAxios()\n  const [tableData, setTableData] = useState([])\n  const [productId, setProductId] = useState(null)\n  const [productNames, setProductNames] = useState([])\n  const [commonLoader, setCommonLoader] = useState(true)\n  const [ViewProductShow, setViewProductShow] = useState(false)\n  const [ViewProductData, setViewProductData] = useState({})\n  const [ownerStatus, setOwnerStatus] = useState('OwnerCreate')\n  const [abortController, setAbortController] = useState(new AbortController())\n  // const [hasMore, setHasMore] = useState(true)\n  const hasMoreRef = useRef(true)\n  const pageRef = useRef(0)\n  const searchRef = useRef(false)\n  const productRef = useRef(0)\n  const selectRef = useRef(null)\n  const [pLoader, setPLoader] = useState(true)\n\n  useEffect(() => {\n    getProductNames()\n    if (!ViewProductShow) {\n      pageRef.current = 0\n      hasMoreRef.current = true\n      getProductList()\n      const tableContainer = document.querySelector('.table-container')\n      tableContainer.addEventListener('scroll', handleScroll)\n      return () => {\n        tableContainer.removeEventListener('scroll', handleScroll)\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ViewProductShow])\n\n  const handleScroll = () => {\n    const tableContainer = document.querySelector('.table-container')\n    if (tableContainer.scrollTop + tableContainer.clientHeight === tableContainer.scrollHeight) {\n      if (hasMoreRef.current === true) {\n        if (productRef.current !== 0) {\n          pageRef.current = 0\n        }\n        getProductList()\n      }\n    }\n  }\n\n  const formatDate = (dateString) => {\n    const date = new Date(dateString)\n    const options = { day: 'numeric', month: 'short', year: 'numeric' }\n    let formattedDate = date.toLocaleDateString('en-GB', options)\n    if (!formattedDate.includes(',')) {\n      formattedDate = formattedDate.replace(/(\\w{3}) (\\d{4})/, '$1, $2')\n    }\n    return formattedDate\n  }\n\n  const getProductList = async () => {\n    let newAbortController\n    if (pageRef.current === 0) {\n      setCommonLoader(true)\n      setTableData([])\n      if (abortController) {\n        abortController.abort()\n      }\n      newAbortController = new AbortController()\n      setAbortController(newAbortController)\n    }\n    const url = `member/product-list?page=${pageRef.current}&size=10&search=${searchRef.current}&value=${productRef.current}`\n    await api\n      .get(url, {\n        headers: getHeaders('json'),\n        signal: newAbortController?.signal,\n      })\n      .then((response) => {\n        const data = response.data.data\n        if (data !== null) {\n          if (pageRef.current === 0) setTableData(data)\n          else setTableData((prevUserData) => [...prevUserData, ...data])\n          if (data.length < 10) {\n            hasMoreRef.current = false\n          }\n\n          // Increment the page number for the next fetch\n          pageRef.current = pageRef.current + 1\n        } else {\n          hasMoreRef.current = false\n        }\n        setCommonLoader(false)\n      })\n      .catch((error) => {})\n  }\n\n  const handleProduct = (value) => {\n    selectRef.current.blur()\n    if (value === undefined) {\n      setProductId(null)\n      searchRef.current = false\n      productRef.current = 0\n    } else {\n      setProductId(value)\n      searchRef.current = true\n      productRef.current = value\n    }\n    pageRef.current = 0\n    hasMoreRef.current = true\n    getProductList()\n  }\n\n  const getProductNames = async () => {\n    const url = `product/owner/serach`\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        const data = response.data.data\n        setProductNames(data)\n        setPLoader(false)\n      })\n      .catch((error) => {})\n  }\n\n  const handleProductViewedit = async (id) => {\n    setOwnerStatus('OwnerEdit')\n    const url = `product/view/` + id\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        const data = response.data.data\n        setViewProductData(data)\n        setViewProductShow(true)\n      })\n      .catch((error) => {})\n  }\n  const handleProductView = async (id) => {\n    setOwnerStatus('OwnerCreate')\n    const url = `product/view/` + id\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        const data = response.data.data\n        setViewProductData(data)\n        setViewProductShow(true)\n      })\n      .catch((error) => {})\n  }\n  const closeViewProduct = () => {\n    pageRef.current = 0\n    productRef.current = 0\n    searchRef.current = false\n    setViewProductShow(false)\n  }\n  return (\n    <>\n      <ToastContainer />\n      {ViewProductShow ? (\n        <ViewProduct\n          flowList={FlowList}\n          close={closeViewProduct}\n          techHeadList={techHeadList}\n          prodHeadList={prodHeadList}\n          dataHeadList={dataHeadList}\n          categories={categories}\n          ViewProductData={ViewProductData}\n          viewStatus={ownerStatus}\n          titleList=\"Product List\"\n          ownerOption={[]}\n        />\n      ) : (\n        <>\n          <CRow className=\"mt-3\">\n            <CCol sm={10}>\n              <b style={{ marginLeft: '30px' }}>Product List</b>\n              <br />\n              <Breadcrumb\n                style={{ marginLeft: '30px' }}\n                className=\"bread-tab\"\n                separator={<span className=\"breadcrumb-separator\">|</span>}\n                items={[\n                  {\n                    title: (\n                      <Link\n                        to={'/dashboard'}\n                        className=\"bread-items text-decoration-none text-secondary\"\n                      >\n                        Dashboard\n                      </Link>\n                    ),\n                  },\n                  {\n                    title: (\n                      <span className=\"text-secondary \" style={{ cursor: 'default' }}>\n                        Product List\n                      </span>\n                    ),\n                  },\n                ]}\n              />\n            </CCol>\n\n            <CCol sm={2}>\n              <Select\n                className=\"contract_members_activity_select custom_select_prd\"\n                suffixIcon={\n                  <img\n                    src={Downarrowimg}\n                    alt=\"Downarrowimg\"\n                    style={{ width: '10px', height: '6px' }}\n                  />\n                }\n                variant={'borderless'}\n                id=\"products\"\n                value={productId}\n                onChange={(selectedOption) => handleProduct(selectedOption)}\n                showSearch\n                ref={selectRef}\n                allowClear\n                filterOption={(input, option) =>\n                  option.label.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                }\n                dropdownRender={(menu) => (\n                  <div style={{ overflow: 'auto' }} role=\"listbox\">\n                    {menu}\n                  </div>\n                )}\n                options={\n                  pLoader\n                    ? [\n                        {\n                          label: (\n                            <div style={{ textAlign: 'center' }}>\n                              {Array.from({ length: 5 }, (_, index) => (\n                                <Skeleton\n                                  key={index}\n                                  title={false}\n                                  paragraph={{\n                                    rows: 1,\n                                    width: '100%',\n                                    height: '10px',\n                                    style: { height: '10px !important' },\n                                  }}\n                                />\n                              ))}\n                            </div>\n                          ),\n                          value: 'loading',\n                          disabled: true,\n                        },\n                      ]\n                    : productNames.map((prod) => ({\n                        value: prod.id,\n                        label: prod.name,\n                      }))\n                }\n                placeholder=\"Choose Product\"\n                getPopupContainer={(triggerNode) => triggerNode.parentNode}\n              />\n            </CCol>\n          </CRow>\n\n          <div className=\"table-container table_scroll\" style={{ border: 'none' }}>\n            <InfiniteScroll\n              dataLength={tableData.length}\n              next={handleScroll}\n              hasMore={hasMoreRef.current}\n              loader={\n                <div className=\"text-c text-center my-3 td-text\">\n                  <CSpinner color=\"danger\" />\n                </div>\n              }\n              endMessage={\n                tableData.length !== 0 && (\n                  <p style={{ textAlign: 'center' }}>\n                    <b style={{ color: '#e40e2d', fontSize: '12px' }}>No more Data to load</b>\n                  </p>\n                )\n              }\n            >\n              <CTable hover>\n                <CTableHead className=\"head-row draft-head-row-ts\">\n                  <CTableRow>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c text-center\"\n                      scope=\"col\"\n                      width=\"4%\"\n                    >\n                      SI.No\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      Product Name\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      Flow\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      Product Head\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      Technical Head\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      Data Head\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      Start Date\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      End Date\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      width=\"10%\"\n                      scope=\"col\"\n                    >\n                      Approval Flow\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      Budget Details\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      Business Category\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c text-center\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      Action\n                    </CTableHeaderCell>\n                  </CTableRow>\n                </CTableHead>\n                <CTableBody>\n                  {!tableData ? (\n                    <div></div>\n                  ) : (\n                    tableData.map((row, index) => (\n                      <CTableRow key={index} className=\"tr-bg-color\">\n                        <CTableDataCell className=\"productflow-col-box text-c pad-bottom_flow td-product-text\">\n                          {index + 1}\n                        </CTableDataCell>\n                        <CTableDataCell className=\"productflow-product-name pad-bottom_flow td-product-text\">\n                          <Tooltip\n                            placement=\"bottomLeft\"\n                            title={row.productName}\n                            className=\"productflow-name-lable\"\n                          >\n                            {row.productName}\n                          </Tooltip>\n                        </CTableDataCell>\n                        <CTableDataCell className=\" productflow-product-flow pad-bottom_flow td-product-text\">\n                          <Tooltip\n                            placement=\"bottomLeft\"\n                            title={row.flowName ? row.flowName : ''}\n                            className=\"flow-name-lable\"\n                          >\n                            {row.flowName ? row.flowName : ''}\n                          </Tooltip>\n                        </CTableDataCell>\n                        <CTableDataCell className=\"productflow-product-head pad-bottom_flow\">\n                          {row.prodHead ? (\n                            <div style={{ display: 'flex', alignItems: 'center' }}>\n                              <img\n                                src={\n                                  row.prodHead.profilePic\n                                    ? ImageUrl + row.prodHead.profilePic\n                                    : profileImage1\n                                }\n                                alt=\"Profile\"\n                                className=\"head-td\"\n                              />\n                              <div className=\"node1\" style={{ marginTop: '6px' }}>\n                                <p className=\"head-td-name\" title={row.prodHead.name}>\n                                  {row.prodHead.name}\n                                </p>\n                                <p className=\"head-td-role\" title={row.prodHead.designation}>\n                                  {row.prodHead.designation}\n                                </p>\n                              </div>\n                            </div>\n                          ) : (\n                            '---'\n                          )}\n                        </CTableDataCell>\n                        <CTableDataCell className=\"productflow-product-head pad-bottom_flow\">\n                          {row.techHead ? (\n                            <div style={{ display: 'flex', alignItems: 'center' }}>\n                              <img\n                                src={\n                                  row.techHead.profilePic\n                                    ? ImageUrl + row.techHead.profilePic\n                                    : profileImage1\n                                }\n                                alt=\"Profile\"\n                                className=\"head-td\"\n                              />\n                              <div className=\"node1\" style={{ marginTop: '6px' }}>\n                                <p className=\"head-td-name\" title={row.techHead.name}>\n                                  {row.techHead.name}\n                                </p>\n                                <p className=\"head-td-role\" title={row.techHead.designation}>\n                                  {row.techHead.designation}\n                                </p>\n                              </div>\n                            </div>\n                          ) : (\n                            '---'\n                          )}\n                        </CTableDataCell>\n                        <CTableDataCell className=\"productflow-product-head pad-bottom_flow\">\n                          {row.dataHead ? (\n                            <div style={{ display: 'flex', alignItems: 'center' }}>\n                              <img\n                                src={\n                                  row.dataHead.profilePic\n                                    ? ImageUrl + row.dataHead.profilePic\n                                    : profileImage1\n                                }\n                                alt=\"Profile\"\n                                className=\"head-td\"\n                              />\n                              <div className=\"node1\" style={{ marginTop: '6px' }}>\n                                <p className=\"head-td-name\" title={row.dataHead.name}>\n                                  {row.dataHead.name}\n                                </p>\n                                <p className=\"head-td-role\" title={row.dataHead.designation}>\n                                  {row.dataHead.designation}\n                                </p>\n                              </div>\n                            </div>\n                          ) : (\n                            '---'\n                          )}\n                        </CTableDataCell>\n                        <CTableDataCell className=\"productflow-product-Startdate pad-bottom_flow td-product-text\">\n                          {formatDate(row.startDate)}\n                        </CTableDataCell>\n                        <CTableDataCell className=\"productflow-product-Enddate pad-bottom_flow td-product-text\">\n                          {row.endDate !== null ? formatDate(row.endDate) : '--'}\n                        </CTableDataCell>\n                        <CTableDataCell className=\"text-c flowlist-accesperson pad-bottom_flow\">\n                          <div className=\"table-cell-container\">\n                            <div className=\"image-background-accessperson\">\n                              {row.approvalFlow.slice(0, 3).map((member, index) => (\n                                <div className=\"accessPerImg\" key={index}>\n                                  <div className=\"tooltip-container\">\n                                    <img\n                                      src={\n                                        member.profilePic\n                                          ? ImageUrl + member.profilePic\n                                          : profileImage1\n                                      }\n                                      className={member.profilePic ? 'first-image' : 'second-image'}\n                                      alt=\"Access Person Images\"\n                                    />\n                                  </div>\n                                </div>\n                              ))}\n                              <div>\n                                {row.approvalFlow.length > 3 && (\n                                  <div className=\"accessPerImg text-center more-person-access rounded-circle\">\n                                    <span>+{row.approvalFlow.length - 3}</span>\n                                  </div>\n                                )}\n                              </div>\n                            </div>\n\n                            <div className=\"card-list-person\">\n                              <Card\n                                style={{ width: '250px', height: '120px', overflowY: 'auto' }}\n                                className=\"Access-card\"\n                              >\n                                {row.approvalFlow.map((member) => (\n                                  <div key={member}>\n                                    <div className=\" access-person-tooltip  \">\n                                      <div className=\"image-background\">\n                                        <img\n                                          src={\n                                            member.profilePic\n                                              ? ImageUrl + member.profilePic\n                                              : profileImage1\n                                          }\n                                          className={\n                                            member.profilePic\n                                              ? 'card-access-image'\n                                              : 'card-approval-image'\n                                          }\n                                          alt={member.name}\n                                        />\n                                      </div>\n                                      <div\n                                        className=\"node1 access-person-hovercard\"\n                                        style={member.profilePic ? { marginLeft: '11px' } : {}}\n                                      >\n                                        <p className=\"member-user-name1\"> {member.name}</p>\n                                        <p className=\"member-role-text1\">{member.designation}</p>\n                                      </div>\n                                    </div>\n                                    <Divider />\n                                  </div>\n                                ))}\n                              </Card>\n                            </div>\n                          </div>\n                        </CTableDataCell>\n                        <CTableDataCell className=\"productflow-product-budget pad-bottom_flow td-product-text\">\n                          {row.budgetDetails !== 'undefined' &&\n                          row.budgetDetails !== '' &&\n                          row.budgetDetails !== null\n                            ? formatAmountWithCommas(row.budgetDetails, row.currency)\n                            : '---'}\n                        </CTableDataCell>\n                        <CTableDataCell className=\"productflow-product-Startdate pad-bottom_flow td-product-text\">\n                          {row.bussinessCategory}\n                        </CTableDataCell>\n\n                        <CTableDataCell className=\"productflow-product-Action pad-bottom_flow text-center td-product-text\">\n                          {row.member.length > 0 ? (\n                            <button\n                              type=\"button\"\n                              className=\"action-view  edit-button\"\n                              onClick={() => handleProductViewedit(row.id)}\n                            >\n                              <EditSvg\n                                width=\"10\"\n                                height=\"10\"\n                                viewBox=\"0 0 18 18\"\n                                fill=\"none\"\n                                color=\"white\"\n                                clipH=\"18\"\n                                clipW=\"18\"\n                              />\n                            </button>\n                          ) : (\n                            <button\n                              type=\"button\"\n                              className=\"action-view cross-button\"\n                              onClick={() => {\n                                handleProductView(row.id)\n                              }}\n                            >\n                              <PlusSvg width=\"8\" height=\"12\" viewBox=\"0 0 18 18\" fill=\"#A5A1A1\" />\n                            </button>\n                          )}\n                        </CTableDataCell>\n                      </CTableRow>\n                    ))\n                  )}\n                </CTableBody>\n              </CTable>\n              {(tableData === null && !commonLoader) ||\n              (tableData.length === 0 && !commonLoader) ? (\n                <div className=\"text-c text-center my-3 td-text\">No Data Found</div>\n              ) : commonLoader && tableData.length === 0 ? (\n                <div className=\"text-c text-center my-3 td-text\">\n                  <CSpinner color=\"danger\" />\n                </div>\n              ) : (\n                <div></div>\n              )}\n            </InfiniteScroll>\n          </div>\n        </>\n      )}\n    </>\n  )\n}\nOwnerProductList.propTypes = {\n  FlowList: PropTypes.array,\n  categories: PropTypes.array,\n  techHeadList: PropTypes.array,\n  prodHeadList: PropTypes.array,\n  dataHeadList: PropTypes.array,\n}\nexport default OwnerProductList\n","import React, { useState, useEffect, useRef } from 'react'\nimport { Select, Breadcrumb, Tooltip, Card, Divider, Checkbox, Skeleton } from 'antd'\nimport {\n  CCol,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CSpinner,\n} from '@coreui/react'\nimport { getHeaders, ImageUrl } from 'src/constant/Global'\nimport profileImage1 from '../../../assets/images/avatars/wrapper.png'\nimport PropTypes from 'prop-types'\nimport { toast, ToastContainer } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { formatAmountWithCommas } from 'src/constant/TimeUtils'\nimport CheckSvg from '../../svgImages/CheckSvg'\nimport CrossSvg from '../../svgImages/CrossSvg'\nimport RejectConfirmModal from '../../modal/RejectConfirmModal'\nimport ViewProduct from '../ViewProduct'\nimport useAxios from 'src/constant/UseAxios'\nimport EyeSvg from '../../svgImages/EyeSvg'\nimport InfiniteScroll from 'react-infinite-scroll-component'\nimport ApprovedConfirmModal from '../../modal/ApprovedConfirmModel'\nimport Downarrowimg from '../../../assets/images/downarrow.png'\nimport { Link } from 'react-router-dom'\nconst CustomDropdownRender = (menu) => {\n  return (\n    <div style={{ overflow: 'auto' }} role=\"listbox\">\n      {menu}\n    </div>\n  )\n}\n\nexport { CustomDropdownRender }\nconst ProductList = ({ FlowList, categories, techHeadList, prodHeadList, dataHeadList }) => {\n  let api = useAxios()\n  const [productId, setProductId] = useState()\n  const [tableData, setTableData] = useState([])\n  const [productNames, setProductNames] = useState([])\n  const [commonLoader, setCommonLoader] = useState(true)\n  const [selectedRows, setSelectedRows] = useState([])\n  const [headerLabel, setHeaderLabel] = useState('')\n  const [isModalOpen, setIsModalOpen] = useState(false)\n  const [viewProductShow, setViewProductShow] = useState(false)\n  const [openSelectAll, setOpenSelectAll] = useState(false)\n  const [approvedStatusAll, setApprovedStatusAll] = useState('')\n  const [openSelectRejectAll, setOpenSelectRejectAll] = useState(false)\n  const [viewProductData, setViewProductData] = useState({})\n  const [singleApprovedId, setSingleApprovedId] = useState('')\n  const [approvedStatus, setApprovedStatus] = useState('')\n  const [abortController, setAbortController] = useState(new AbortController())\n  const [open, setOpen] = useState(false)\n  const [singleId, setSingleId] = useState()\n  const pageRef = useRef(0)\n  // const [hasMore, setHasMore] = useState(true)\n  const hasMoreRef = useRef(true)\n  const statusRef = useRef('Pending')\n  const searchRef = useRef(false)\n  const productRef = useRef(0)\n  const selectRef = useRef(null)\n  const [pLoader, setPLoader] = useState(true)\n\n  const showPopconfirm = (status, rowId) => {\n    setOpen(true)\n    setSingleApprovedId(rowId)\n    setApprovedStatus(status)\n  }\n  const handleApproveCancel = () => {\n    setOpen(false)\n  }\n  const showPopconfirmAll = (status) => {\n    if (status === 'Approved') {\n      setOpenSelectAll(true)\n      setApprovedStatusAll('Approved')\n    } else if (status === 'Rejected') {\n      setOpenSelectRejectAll(true)\n      setApprovedStatusAll('Rejected')\n    }\n  }\n  const handleApproveCancelAll = () => {\n    setOpenSelectAll(false)\n  }\n\n  useEffect(() => {\n    getProductNames()\n    if (!viewProductShow) {\n      hasMoreRef.current = true\n      getProductList()\n      const tableContainer = document.querySelector('.table-container')\n      tableContainer.addEventListener('scroll', handleScroll)\n      return () => {\n        tableContainer.removeEventListener('scroll', handleScroll)\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [viewProductShow])\n\n  const handleScroll = () => {\n    const tableContainer = document.querySelector('.table-container')\n    if (tableContainer.scrollTop + tableContainer.clientHeight === tableContainer.scrollHeight) {\n      if (hasMoreRef.current === true) {\n        getProductList()\n      }\n    }\n  }\n\n  const handleHeaderCheck = (isChecked) => {\n    if (isChecked) {\n      const allRowIds = tableData.map((row) => row.id)\n      setSelectedRows(allRowIds)\n      setHeaderLabel(`${allRowIds.length} Selected`)\n    } else {\n      setSelectedRows([])\n      setHeaderLabel('')\n    }\n  }\n\n  const handleMemberCheck = (rowId, isChecked) => {\n    if (isChecked) {\n      setSelectedRows((prevSelectedRows) => [...prevSelectedRows, rowId])\n    } else {\n      setSelectedRows((prevSelectedRows) =>\n        prevSelectedRows.filter((selectedId) => selectedId !== rowId),\n      )\n    }\n\n    // Calculate the new number of selected rows\n    const newSelectedRows = isChecked\n      ? [...selectedRows, rowId]\n      : selectedRows.filter((selectedId) => selectedId !== rowId)\n    const newSelectedRowCount = newSelectedRows.length\n\n    // Update the header label\n    if (newSelectedRowCount < 1) {\n      setHeaderLabel('')\n    } else {\n      setHeaderLabel(`${newSelectedRowCount} Selected`)\n    }\n  }\n  const formatDate = (dateString) => {\n    const date = new Date(dateString)\n    const options = { day: 'numeric', month: 'short', year: 'numeric' }\n    let formattedDate = date.toLocaleDateString('en-GB', options)\n    if (!formattedDate.includes(',')) {\n      formattedDate = formattedDate.replace(/(\\w{3}) (\\d{4})/, '$1, $2')\n    }\n    return formattedDate\n  }\n  const getProductList = async () => {\n    let newAbortController\n    if (pageRef.current === 0) {\n      setCommonLoader(true)\n      setTableData([])\n      if (abortController) {\n        abortController.abort()\n      }\n      newAbortController = new AbortController()\n      setAbortController(newAbortController)\n    }\n    const url = `approval/product/list?page=${pageRef.current}&size=10&search=${searchRef.current}&status=${statusRef.current}&value=${productRef.current}`\n    await api\n      .get(url, {\n        headers: getHeaders('json'),\n        signal: newAbortController?.signal,\n      })\n      .then((response) => {\n        const data = response.data.data\n        if (pageRef.current === 0) setTableData(data)\n        else setTableData((prevUserData) => [...prevUserData, ...data])\n        if (data.length < 10) {\n          hasMoreRef.current = false\n        }\n\n        // Increment the page number for the next fetch\n        pageRef.current = pageRef.current + 1\n        setCommonLoader(false)\n      })\n      .catch((error) => {})\n  }\n\n  const handleProduct = (value) => {\n    if (value === undefined) {\n      setProductId()\n      searchRef.current = false\n      productRef.current = 0\n    } else {\n      setProductId(value)\n      searchRef.current = true\n      productRef.current = value\n    }\n    selectRef.current.blur()\n    pageRef.current = 0\n    hasMoreRef.current = true\n    getProductList()\n  }\n\n  const handleButtonClick = async (status, id, remarksValue) => {\n    if (approvedStatusAll === 'Rejected' && remarksValue === '') {\n      toast.error('Please Enter Remarks!..', {\n        position: toast.POSITION.BOTTOM_RIGHT,\n        autoClose: 3000,\n      })\n    } else {\n      return await statuschange(approvedStatusAll, selectedRows, remarksValue)\n    }\n  }\n  const statuschange = async (statusValue, id, remarks) => {\n    const postData = {\n      status: statusValue,\n      remarks: remarks,\n    }\n\n    const url = `approval/product/approve/` + id\n    try {\n      const response = await api.put(url, postData, {\n        headers: getHeaders('json'),\n      })\n      if (response?.data) {\n        const message = `Product ${statusValue} Successfully`\n        toast.success(message, {\n          position: toast.POSITION.BOTTOM_RIGHT,\n          autoClose: 2000,\n        })\n        return response.data\n      } else {\n        throw new Error('Empty response received from the server')\n      }\n    } catch (error) {\n      toast.error(error.message, {\n        position: toast.POSITION.BOTTOM_RIGHT,\n        autoClose: 3000,\n      })\n      throw error // Rethrow the error so it can be caught by the caller\n    }\n  }\n\n  const resetFormValues = () => {\n    setIsModalOpen(false)\n    setOpen(false)\n    setOpenSelectAll(false)\n    setOpenSelectRejectAll(false)\n    setSelectedRows([])\n    setHeaderLabel('')\n    pageRef.current = 0\n    productRef.current = 0\n    searchRef.current = false\n    statusRef.current = 'Pending'\n    getProductList()\n  }\n  const showModal = (id) => {\n    setIsModalOpen(true)\n    setSingleId(id)\n  }\n\n  const handleCancel = () => {\n    setIsModalOpen(false)\n  }\n  const handleRejectProduct = async (status, id, remarks) => {\n    return await statuschange(status, id, remarks)\n  }\n\n  const handleApproved = async (status, singleApprovedId, remarks) => {\n    return await statuschange(approvedStatus, singleApprovedId, remarks)\n  }\n\n  const handleProductView = async (id) => {\n    const url = `product/view/` + id\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        const data = response.data.data\n        setViewProductData(data)\n        setViewProductShow(true)\n      })\n      .catch((error) => {})\n  }\n\n  const closeViewProduct = () => {\n    setViewProductShow(false)\n  }\n  const getProductNames = async () => {\n    const url = `/approval/product/search?status=${statusRef.current}`\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        const data = response.data.data\n        setProductNames(data)\n        setPLoader(false)\n      })\n      .catch((error) => {})\n  }\n  const handleRejectCancelAll = () => {\n    setOpenSelectRejectAll(false)\n  }\n\n  const displayContent = commonLoader ? (\n    <div className=\"text-c text-center my-3 td-text\">\n      <CSpinner color=\"danger\" />\n    </div>\n  ) : (\n    <div></div>\n  )\n\n  return (\n    <>\n      <ToastContainer />\n      {viewProductShow ? (\n        <ViewProduct\n          flowList={FlowList}\n          close={closeViewProduct}\n          techHeadList={techHeadList}\n          prodHeadList={prodHeadList}\n          dataHeadList={dataHeadList}\n          categories={categories}\n          viewProductData={viewProductData}\n          viewStatus=\"View\"\n          titleList=\"Pending List\"\n          ownerOption={[]}\n        />\n      ) : (\n        <>\n          <CRow className=\"mt-3\">\n            <CCol md={10}>\n              <b style={{ paddingLeft: '30px' }}>Pending List</b>\n              <br />\n              <Breadcrumb\n                style={{ paddingLeft: '30px' }}\n                className=\"bread-tab\"\n                separator={<span className=\"breadcrumb-separator\">|</span>}\n                items={[\n                  {\n                    title: (\n                      <Link\n                        rel=\"Dashboard\"\n                        to={'/dashboard'}\n                        className=\"bread-items text-decoration-none text-secondary \"\n                      >\n                        Dashboard\n                      </Link>\n                    ),\n                  },\n                  {\n                    title: (\n                      <span className=\"text-secondary \" style={{ cursor: 'default' }}>\n                        Pending List\n                      </span>\n                    ),\n                  },\n                ]}\n              />\n            </CCol>\n\n            <CCol sm={2}>\n              <Select\n                ref={selectRef}\n                className=\"contract_members_activity_select custom_prod_pend\"\n                suffixIcon={\n                  <img\n                    src={Downarrowimg}\n                    alt=\"Downarrowimg\"\n                    style={{ width: '10px', height: '6px' }}\n                  />\n                }\n                id=\"products\"\n                value={productId}\n                onChange={(value) => handleProduct(value)}\n                showSearch\n                allowClear\n                filterOption={(input, option) =>\n                  option.label.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                }\n                dropdownRender={CustomDropdownRender}\n                options={\n                  pLoader\n                    ? [\n                        {\n                          label: (\n                            <div style={{ textAlign: 'center' }}>\n                              {Array.from({ length: 5 }, (_, index) => (\n                                <Skeleton\n                                  key={index}\n                                  title={false}\n                                  paragraph={{\n                                    rows: 1,\n                                    width: '100%',\n                                    height: '10px',\n                                    style: { height: '10px !important' },\n                                  }}\n                                />\n                              ))}\n                            </div>\n                          ),\n                          value: 'loading',\n                          disabled: true,\n                        },\n                      ]\n                    : productNames.map((prod) => ({\n                        value: prod.id,\n                        label: prod.name,\n                      }))\n                }\n                placeholder=\"Choose Product\"\n                getPopupContainer={(triggerNode) => triggerNode.parentNode}\n              />\n            </CCol>\n          </CRow>\n\n          <div className=\"table-container  table_scroll\" style={{ border: 'none' }}>\n            <InfiniteScroll\n              dataLength={tableData.length}\n              next={handleScroll}\n              hasMore={hasMoreRef.current}\n              loader={\n                <div className=\"text-c text-center my-3 td-text\">\n                  <CSpinner color=\"danger\" />\n                </div>\n              }\n              endMessage={\n                tableData.length !== 0 && (\n                  <p style={{ textAlign: 'center' }}>\n                    <b style={{ color: '#e40e2d', fontSize: '12px' }}>No more Data to load</b>\n                  </p>\n                )\n              }\n            >\n              <CTable className=\"flowlist-fulltable\" hover>\n                <CTableHead className=\"head-row draft-head-row-ts\">\n                  {!headerLabel ? (\n                    <CTableRow>\n                      <CTableHeaderCell\n                        className=\"table-head-draft text-center text-c grid-cell-header\"\n                        scope=\"col\"\n                        width=\"4%\"\n                        style={{ position: 'sticky', top: '0', zIndex: '12' }}\n                      >\n                        <Checkbox\n                          id=\"flexCheckDefault\"\n                          className=\"checkbox_design\"\n                          checked={selectedRows.length === tableData.length && tableData.length}\n                          onChange={(e) => handleHeaderCheck(e.target.checked)}\n                        />\n                      </CTableHeaderCell>\n                      <CTableHeaderCell\n                        className=\"table-head-productlist text-c text-center \"\n                        scope=\"col\"\n                        width=\"4%\"\n                      >\n                        SI.No\n                      </CTableHeaderCell>\n                      <CTableHeaderCell\n                        className=\"table-head-productlist text-c\"\n                        scope=\"col\"\n                        width=\"10%\"\n                      >\n                        Product Name\n                      </CTableHeaderCell>\n                      <CTableHeaderCell\n                        className=\"table-head-productlist text-c\"\n                        scope=\"col\"\n                        width=\"10%\"\n                      >\n                        Flow\n                      </CTableHeaderCell>\n                      <CTableHeaderCell\n                        className=\"table-head-productlist text-c\"\n                        scope=\"col\"\n                        width=\"10%\"\n                      >\n                        Product Head\n                      </CTableHeaderCell>\n                      <CTableHeaderCell\n                        className=\"table-head-productlist text-c\"\n                        scope=\"col\"\n                        width=\"10%\"\n                      >\n                        Technical Head\n                      </CTableHeaderCell>\n                      <CTableHeaderCell\n                        className=\"table-head-productlist text-c\"\n                        scope=\"col\"\n                        width=\"10%\"\n                      >\n                        Data Head\n                      </CTableHeaderCell>\n                      <CTableHeaderCell\n                        className=\"table-head-productlist text-c\"\n                        scope=\"col\"\n                        width=\"10%\"\n                      >\n                        Start Date\n                      </CTableHeaderCell>\n                      <CTableHeaderCell\n                        className=\"table-head-productlist text-c\"\n                        scope=\"col\"\n                        width=\"10%\"\n                      >\n                        End Date\n                      </CTableHeaderCell>\n                      <CTableHeaderCell\n                        className=\"table-head-productlist text-c\"\n                        width=\"10%\"\n                        scope=\"col\"\n                      >\n                        Approval Flow\n                      </CTableHeaderCell>\n                      <CTableHeaderCell\n                        className=\"table-head-productlist text-c\"\n                        scope=\"col\"\n                        width=\"10%\"\n                      >\n                        Budget Details\n                      </CTableHeaderCell>\n                      <CTableHeaderCell\n                        className=\"table-head-productlist text-c text-center\"\n                        scope=\"col\"\n                        width=\"10%\"\n                      >\n                        Action\n                      </CTableHeaderCell>\n                    </CTableRow>\n                  ) : (\n                    <CTableRow>\n                      <CTableHeaderCell\n                        className=\"table-head-selected text-center  text-c \"\n                        width=\"4%\"\n                      >\n                        <Checkbox\n                          id=\"flexCheckDefault\"\n                          className=\"checkbox_design\"\n                          checked={selectedRows.length === tableData.length && tableData.length}\n                          onChange={(e) => handleHeaderCheck(e.target.checked)}\n                        />\n                      </CTableHeaderCell>\n                      <CTableHeaderCell className=\"table-head-selected  text-c \" colSpan=\"7\">\n                        <span style={{ color: '#f50505' }}>{headerLabel}</span>\n                      </CTableHeaderCell>\n                      <CTableHeaderCell\n                        className=\"table-head-selected \"\n                        colSpan=\"7\"\n                        style={{ textAlign: 'right' }}\n                      >\n                        <div\n                          className=\"action-request\"\n                          style={{\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'flex-end',\n                            marginRight: '36px',\n                          }}\n                        >\n                          {/* <TextArea\n                            id=\"Description\"\n                            bordered={false}\n                            value={remarksValue}\n                            onChange={handleRemarksChange}\n                            style={{ color: 'black' }}\n                            placeholder=\"Enter Remarks...\"\n                            autoSize={{\n                              minRows: 0,\n                              maxRows: 1,\n                            }}\n                          /> */}\n                          <button\n                            className=\"btn border-0 text-c text-secondary \"\n                            style={{ fontSize: '12px' }}\n                            type=\"button\"\n                            onClick={() => showPopconfirmAll('Approved')}\n                          >\n                            <CheckSvg width=\"11\" height=\"9\" viewBox=\"0 0 14 10\" fill=\"#00ab55\" />\n                          </button>\n                          <button\n                            className=\"btn border-0 text-c text-secondary \"\n                            style={{ fontSize: '12px', padding: '2px' }}\n                            onClick={() => {\n                              showPopconfirmAll('Rejected')\n                            }}\n                          >\n                            <CrossSvg width=\"9\" height=\"11\" viewBox=\"0 0 14 10\" fill=\"#e40e2d\" />\n                          </button>\n                        </div>\n                      </CTableHeaderCell>\n                    </CTableRow>\n                  )}\n                </CTableHead>\n                <CTableBody>\n                  {!tableData ? (\n                    <div></div>\n                  ) : (\n                    tableData.map((row, index) => (\n                      <CTableRow key={row.id} className=\"tr-bg-color\">\n                        <CTableDataCell\n                          className={`text-c text-center pd-text1 grid-cell ${\n                            selectedRows.includes(row.id) ? 'checked-table-row' : ''\n                          }`}\n                          width=\"6%\"\n                        >\n                          <Checkbox\n                            className=\"checkbox_design\"\n                            id={`flexCheckDefault-${index}`}\n                            value={row.id}\n                            checked={selectedRows.includes(row.id)}\n                            onChange={(e) => {\n                              handleMemberCheck(row.id, e.target.checked)\n                            }}\n                          />\n                        </CTableDataCell>\n                        <CTableDataCell\n                          className=\"productflow-col-box text-c pad-bottom_flow td-product-text\"\n                          width=\"5%\"\n                        >\n                          {index + 1}\n                        </CTableDataCell>\n                        <CTableDataCell\n                          className=\"productflow-product-name pad-bottom_flow td-product-text\"\n                          width=\"10%\"\n                        >\n                          <Tooltip\n                            placement=\"bottomLeft\"\n                            title={row.productName}\n                            className=\"productflow-name-lable\"\n                          >\n                            {row.productName}\n                          </Tooltip>\n                        </CTableDataCell>\n                        <CTableDataCell\n                          className=\" productflow-product-flow pad-bottom_flow td-product-text\"\n                          width=\"10%\"\n                        >\n                          <Tooltip\n                            placement=\"bottomLeft\"\n                            title={row.flowName ? row.flowName : ''}\n                            className=\"flow-name-lable\"\n                          >\n                            {row.flowName ? row.flowName : ''}\n                          </Tooltip>\n                        </CTableDataCell>\n                        <CTableDataCell\n                          className=\"productflow-product-head pad-bottom_flow\"\n                          width=\"10%\"\n                        >\n                          {row.prodHead.length !== 0\n                            ? row.prodHead.map((data) => {\n                                return (\n                                  <div\n                                    style={{ display: 'flex', alignItems: 'center' }}\n                                    key={data.id}\n                                  >\n                                    <img\n                                      src={\n                                        data.profilePic ? ImageUrl + data.profilePic : profileImage1\n                                      }\n                                      alt=\"Profile\"\n                                      className=\"head-td\"\n                                    />\n                                    <div className=\"node1\" style={{ marginTop: '7px' }}>\n                                      <p className=\"head-td-name\" title={data.name}>\n                                        {data.name}\n                                      </p>\n                                      <p className=\"head-td-role\" title={data.designation}>\n                                        {data.designation}\n                                      </p>\n                                    </div>\n                                  </div>\n                                )\n                              })\n                            : '---'}\n                        </CTableDataCell>\n                        <CTableDataCell\n                          className=\"productflow-product-head pad-bottom_flow\"\n                          width=\"10%\"\n                        >\n                          {row.techHead.length !== 0\n                            ? row.techHead.map((data) => {\n                                return (\n                                  <div\n                                    style={{ display: 'flex', alignItems: 'center' }}\n                                    key={data.id}\n                                  >\n                                    <img\n                                      src={\n                                        data.profilePic ? ImageUrl + data.profilePic : profileImage1\n                                      }\n                                      alt=\"Profile\"\n                                      className=\"head-td\"\n                                    />\n                                    <div className=\"node1\" style={{ marginTop: '7px' }}>\n                                      <p className=\"head-td-name\" title={data.name}>\n                                        {data.name}\n                                      </p>\n                                      <p className=\"head-td-role\" title={data.designation}>\n                                        {data.designation}\n                                      </p>\n                                    </div>\n                                  </div>\n                                )\n                              })\n                            : '---'}\n                        </CTableDataCell>\n                        <CTableDataCell\n                          className=\"productflow-product-head pad-bottom_flow\"\n                          width=\"10%\"\n                        >\n                          {row.dataHead.length !== 0\n                            ? row.dataHead.map((data) => {\n                                return (\n                                  <div\n                                    style={{ display: 'flex', alignItems: 'center' }}\n                                    key={data.id}\n                                  >\n                                    <img\n                                      src={\n                                        data.profilePic ? ImageUrl + data.profilePic : profileImage1\n                                      }\n                                      alt=\"Profile\"\n                                      className=\"head-td\"\n                                    />\n                                    <div className=\"node1\" style={{ marginTop: '7px' }}>\n                                      <p className=\"head-td-name\" title={data.name}>\n                                        {data.name}\n                                      </p>\n                                      <p className=\"head-td-role\" title={data.designation}>\n                                        {data.designation}\n                                      </p>\n                                    </div>\n                                  </div>\n                                )\n                              })\n                            : '---'}\n                        </CTableDataCell>\n                        <CTableDataCell\n                          className=\"productflow-product-Startdate pad-bottom_flow td-product-text\"\n                          width=\"10%\"\n                        >\n                          {formatDate(row.startDate)}\n                        </CTableDataCell>\n                        <CTableDataCell\n                          className=\"productflow-product-Enddate pad-bottom_flow td-product-text\"\n                          width=\"10%\"\n                        >\n                          {row.endDate !== null ? formatDate(row.endDate) : '--'}\n                        </CTableDataCell>\n                        <CTableDataCell\n                          className=\"text-c flowlist-accesperson pad-bottom_flow\"\n                          width=\"10%\"\n                        >\n                          <div className=\"table-cell-container\">\n                            <div className=\"image-background-accessperson\">\n                              {row.approvalFlow.slice(0, 3).map((member, index) => (\n                                <div className=\"accessPerImg\" key={row.id}>\n                                  <div className=\"tooltip-container\">\n                                    <img\n                                      src={\n                                        member.profilePic\n                                          ? ImageUrl + member.profilePic\n                                          : profileImage1\n                                      }\n                                      className={member.profilePic ? 'first-image' : 'second-image'}\n                                      alt=\"Access Person Images\"\n                                    />\n                                  </div>\n                                </div>\n                              ))}\n                              <div>\n                                {row.approvalFlow.length > 3 && (\n                                  <div className=\"accessPerImg text-center more-person-access rounded-circle\">\n                                    <span>+{row.approvalFlow.length - 3}</span>\n                                  </div>\n                                )}\n                              </div>\n                            </div>\n\n                            <div className=\"card-list-person\">\n                              <Card\n                                style={{ width: '230px', height: '120px', overflowY: 'auto' }}\n                                className=\"Access-card\"\n                              >\n                                {row.approvalFlow.map((member) => (\n                                  <div key={member}>\n                                    <div className=\" access-person-tooltip  \">\n                                      <div className=\"image-background\">\n                                        <img\n                                          src={\n                                            member.profilePic\n                                              ? ImageUrl + member.profilePic\n                                              : profileImage1\n                                          }\n                                          className={\n                                            member.profilePic\n                                              ? 'card-access-image'\n                                              : 'card-approval-image'\n                                          }\n                                          alt={member.name}\n                                        />\n                                      </div>\n                                      <div\n                                        className=\"node1 access-person-hovercard\"\n                                        style={member.profilePic ? { marginLeft: '11px' } : {}}\n                                      >\n                                        <p className=\"member-user-name1\"> {member.name}</p>\n                                        <p className=\"member-role-text1\">{member.designation}</p>\n                                      </div>\n                                    </div>\n                                    <Divider />\n                                  </div>\n                                ))}\n                              </Card>\n                            </div>\n                          </div>\n                        </CTableDataCell>\n                        <CTableDataCell\n                          className=\"productflow-product-budget pad-bottom_flow td-product-text\"\n                          width=\"10%\"\n                        >\n                          {row.budgetDetails !== 'undefined' &&\n                          row.budgetDetails !== '' &&\n                          row.budgetDetails !== null\n                            ? formatAmountWithCommas(row.budgetDetails, row.currency)\n                            : '---'}\n                        </CTableDataCell>\n\n                        <CTableDataCell\n                          className=\"productflow-product-Action pad-bottom_flow text-center td-product-text\"\n                          width=\"10%\"\n                        >\n                          <button\n                            className=\"btn border-0 text-c text-secondary check-button\"\n                            style={{ fontSize: '12px', padding: '4px 8px' }}\n                            disabled={selectedRows.includes(row.id)}\n                            // onClick={() => handleApproved('Approved', row.id)}\n                            onClick={() => showPopconfirm('Approved', row.id)}\n                          >\n                            <CheckSvg width=\"11\" height=\"9\" viewBox=\"0 0 14 10\" fill=\"#A5A1A1\" />\n                          </button>\n                          <button\n                            className=\"btn border-0 text-c text-secondary cross-button\"\n                            style={{ fontSize: '12px', padding: '4px 8px' }}\n                            onClick={() => showModal(row.id)}\n                            disabled={selectedRows.includes(row.id)}\n                          >\n                            <CrossSvg width=\"9\" height=\"11\" viewBox=\"0 0 14 10\" fill=\"#A5A1A1\" />\n                          </button>\n                          <button\n                            type=\"button\"\n                            className=\"btn border-0 text-c text-secondary cross-button\"\n                            style={{ fontSize: '13px', padding: '4px 8px' }}\n                            onClick={() => handleProductView(row.id)}\n                          >\n                            <EyeSvg width=\"13\" height=\"13\" viewBox=\"0 0 20 16\" fill=\"#A5A1A1\" />\n                          </button>\n                        </CTableDataCell>\n                      </CTableRow>\n                    ))\n                  )}\n                </CTableBody>\n              </CTable>\n              {(tableData === null && !commonLoader) ||\n              (tableData.length === 0 && !commonLoader) ? (\n                <div className=\"text-c text-center my-3 td-text\">No Data Found</div>\n              ) : (\n                displayContent\n              )}\n            </InfiniteScroll>\n          </div>\n          {isModalOpen && (\n            <RejectConfirmModal\n              isModalOpen={isModalOpen}\n              handleCancel={handleCancel}\n              handleApprove={handleRejectProduct}\n              id={singleId}\n              headContent=\"Product\"\n              resetFunc={resetFormValues}\n            />\n          )}\n          {open && (\n            <ApprovedConfirmModal\n              isModalOpen={open}\n              handleCancel={handleApproveCancel}\n              handleApprove={handleApproved}\n              id={singleApprovedId}\n              headContent=\"Product\"\n              resetFunc={resetFormValues}\n            />\n          )}\n        </>\n      )}\n      {openSelectAll && (\n        <ApprovedConfirmModal\n          isModalOpen={openSelectAll}\n          handleCancel={handleApproveCancelAll}\n          handleApprove={handleButtonClick}\n          headContent=\"Product\"\n          resetFunc={resetFormValues}\n        />\n      )}\n      {openSelectRejectAll && (\n        <RejectConfirmModal\n          isModalOpen={openSelectRejectAll}\n          handleCancel={handleRejectCancelAll}\n          handleApprove={handleButtonClick}\n          headContent=\"Product\"\n          resetFunc={resetFormValues}\n        />\n      )}\n    </>\n  )\n}\n\nProductList.propTypes = {\n  FlowList: PropTypes.array,\n  categories: PropTypes.array,\n  techHeadList: PropTypes.array,\n  prodHeadList: PropTypes.array,\n  dataHeadList: PropTypes.array,\n}\nexport default ProductList\n","import React, { useState, useEffect, useRef } from 'react'\nimport { Select, Breadcrumb, Tooltip, Card, Divider, Skeleton } from 'antd'\nimport {\n  CCol,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CSpinner,\n} from '@coreui/react'\nimport { getHeaders, ImageUrl } from 'src/constant/Global'\nimport profileImage1 from '../../../assets/images/avatars/wrapper.png'\nimport PropTypes from 'prop-types'\nimport { ToastContainer } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { formatAmountWithCommas } from 'src/constant/TimeUtils'\nimport ViewProduct from '../ViewProduct'\nimport useAxios from 'src/constant/UseAxios'\nimport EyeSvg from '../../svgImages/EyeSvg'\nimport { Link } from 'react-router-dom'\nimport InfiniteScroll from 'react-infinite-scroll-component'\nimport Downarrowimg from '../../../assets/images/downarrow.png'\n\nconst ApproverCloseList = ({ FlowList, categories, techHeadList, prodHeadList, dataHeadList }) => {\n  let api = useAxios()\n  const [productId, setProductId] = useState()\n  const [tableData, setTableData] = useState([])\n  const [productNames, setProductNames] = useState([])\n  const [commonLoader, setCommonLoader] = useState(true)\n  const [viewProductShow, setViewProductShow] = useState(false)\n  const [viewProductData, setViewProductData] = useState({})\n  const [abortController, setAbortController] = useState(new AbortController())\n  const [abortControllerStatus, setAbortControllerStatus] = useState(new AbortController())\n\n  const pageRef = useRef(0)\n  // const [hasMore, setHasMore] = useState(true)\n  const hasMoreRef = useRef(true)\n  const statusRef = useRef('both')\n  const searchRef = useRef(false)\n  const productRef = useRef(0)\n  const selectRef = useRef(null)\n  const [pLoader, setPLoader] = useState(true)\n\n  // useEffect(() => {\n  //   getProductList()\n  //   eventEmitter.on('callProductList', callBackProductList)\n  //   return () => {\n  //     eventEmitter.off('callProductList', callBackProductList)\n  //   }\n  // }, [])\n\n  useEffect(() => {\n    getProductNames()\n    if (!viewProductShow) {\n      statusRef.current = 'both'\n      searchRef.current = false\n      productRef.current = 0\n      pageRef.current = 0\n      hasMoreRef.current = true\n      getProductList()\n      const tableContainer = document.querySelector('.table-container')\n      tableContainer.addEventListener('scroll', handleScroll)\n      return () => {\n        tableContainer.removeEventListener('scroll', handleScroll)\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [viewProductShow])\n\n  const handleScroll = () => {\n    const tableContainer = document.querySelector('.table-container')\n    if (tableContainer.scrollTop + tableContainer.clientHeight === tableContainer.scrollHeight) {\n      if (hasMoreRef.current === true) {\n        getProductList()\n      }\n    }\n  }\n\n  const formatDate = (dateString) => {\n    const date = new Date(dateString)\n    const options = { day: 'numeric', month: 'short', year: 'numeric' }\n    let formattedDate = date.toLocaleDateString('en-GB', options)\n    if (!formattedDate.includes(',')) {\n      formattedDate = formattedDate.replace(/(\\w{3}) (\\d{4})/, '$1, $2')\n    }\n    return formattedDate\n  }\n  const getProductList = async () => {\n    let newAbortController\n    if (pageRef.current === 0) {\n      setCommonLoader(true)\n      setTableData([])\n      if (abortController) {\n        abortController.abort()\n      }\n      newAbortController = new AbortController()\n      setAbortController(newAbortController)\n    }\n    const url = `approval/product/list?page=${pageRef.current}&size=10&search=${searchRef.current}&status=${statusRef.current}&value=${productRef.current}`\n    await api\n      .get(url, {\n        headers: getHeaders('json'),\n        signal: newAbortController?.signal,\n      })\n      .then((response) => {\n        const data = response.data.data\n        if (pageRef.current === 0) setTableData(data)\n        else setTableData((prevUserData) => [...prevUserData, ...data])\n        if (data.length < 10) {\n          hasMoreRef.current = false\n        }\n\n        // Increment the page number for the next fetch\n        pageRef.current = pageRef.current + 1\n        setCommonLoader(false)\n      })\n      .catch((error) => {})\n  }\n\n  const handleProduct = (value) => {\n    if (value === undefined) {\n      setProductId()\n      searchRef.current = false\n      productRef.current = 0\n    } else {\n      setProductId(value)\n      searchRef.current = true\n      productRef.current = value\n    }\n    selectRef.current.blur()\n    pageRef.current = 0\n    hasMoreRef.current = true\n    getProductList()\n  }\n\n  const handleStatus = (value) => {\n    if (value === undefined) {\n      statusRef.current = 'both'\n    } else {\n      statusRef.current = value\n    }\n    searchRef.current = false\n    pageRef.current = 0\n    productRef.current = 0\n    hasMoreRef.current = true\n    getProductNames()\n    getProductList()\n  }\n\n  const handleProductView = async (id) => {\n    const url = `product/view/` + id\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        const data = response.data.data\n        setViewProductData(data)\n        setViewProductShow(true)\n      })\n      .catch((error) => {})\n  }\n  const closeViewProduct = () => {\n    setViewProductShow(false)\n  }\n\n  const getProductNames = async () => {\n    let newAbortController\n    if (pageRef.current === 0) {\n      setCommonLoader(true)\n      setProductNames([])\n      if (abortControllerStatus) {\n        abortControllerStatus.abort()\n      }\n      newAbortController = new AbortController()\n      setAbortControllerStatus(newAbortController)\n    }\n    const url = `/approval/product/search?status=${statusRef.current}`\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n        signal: newAbortController?.signal,\n      })\n      .then((response) => {\n        const data = response.data.data\n        setProductNames(data)\n        setPLoader(false)\n      })\n      .catch((error) => {})\n  }\n\n  const loaderElement = commonLoader ? (\n    <div className=\"text-c text-center my-3 td-text\">\n      <CSpinner color=\"danger\" />\n    </div>\n  ) : (\n    <div></div>\n  )\n\n  const getStatusClass = (approvalStatus) => {\n    if (approvalStatus === 'Approved') {\n      return 'green-text1 '\n    } else if (approvalStatus === 'Rejected') {\n      return 'red-text1 '\n    } else {\n      return 'warning-text1 '\n    }\n  }\n\n  return (\n    <>\n      <ToastContainer />\n      {viewProductShow ? (\n        <ViewProduct\n          flowList={FlowList}\n          close={closeViewProduct}\n          techHeadList={techHeadList}\n          prodHeadList={prodHeadList}\n          dataHeadList={dataHeadList}\n          categories={categories}\n          ViewProductData={viewProductData}\n          viewStatus=\"View\"\n          titleList=\"Closed List\"\n          ownerOption={[]}\n        />\n      ) : (\n        <>\n          <CRow className=\"mt-3\">\n            <CCol sm={8}>\n              <b style={{ paddingLeft: '30px' }}>Closed List</b>\n              <br />\n              <Breadcrumb\n                style={{ paddingLeft: '30px' }}\n                className=\"bread-tab\"\n                separator={<span className=\"breadcrumb-separator\">|</span>}\n                items={[\n                  {\n                    title: (\n                      <Link\n                        to={'/dashboard'}\n                        className=\"bread-items text-decoration-none text-secondary\"\n                      >\n                        Dashboard\n                      </Link>\n                    ),\n                  },\n                  {\n                    title: (\n                      <span className=\"text-secondary \" style={{ cursor: 'default' }}>\n                        Closed List\n                      </span>\n                    ),\n                  },\n                ]}\n              />\n            </CCol>\n            <CCol sm={2}>\n              <Select\n                suffixIcon={\n                  <img\n                    src={Downarrowimg}\n                    alt=\"Downarrowimg\"\n                    style={{ width: '10px', height: '6px' }}\n                  />\n                }\n                className=\"contract_members_activity_select custom-select_closedlist\"\n                allowClear\n                placeholder=\"Choose Status\"\n                options={[\n                  {\n                    value: 'Approved',\n                    label: 'Approved',\n                  },\n                  {\n                    value: 'Rejected',\n                    label: 'Rejected',\n                  },\n                ]}\n                onChange={(value) => handleStatus(value)}\n              />\n            </CCol>\n            <CCol sm={2}>\n              <Select\n                ref={selectRef}\n                className=\"contract_members_activity_select custom-select_closedlist\"\n                suffixIcon={\n                  <img\n                    src={Downarrowimg}\n                    alt=\"Downarrowimg\"\n                    style={{ width: '10px', height: '6px' }}\n                  />\n                }\n                id=\"products\"\n                value={productId}\n                onChange={(value) => handleProduct(value)}\n                showSearch\n                allowClear\n                filterOption={(input, option) =>\n                  option.label.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                }\n                dropdownRender={(menu) => (\n                  <div style={{ overflow: 'auto' }} role=\"listbox\">\n                    {menu}\n                  </div>\n                )}\n                options={\n                  pLoader\n                    ? [\n                        {\n                          label: (\n                            <div style={{ textAlign: 'center' }}>\n                              {Array.from({ length: 5 }, (_, index) => (\n                                <Skeleton\n                                  key={index}\n                                  title={false}\n                                  paragraph={{\n                                    rows: 1,\n                                    width: '100%',\n                                    height: '10px',\n                                    style: { height: '10px !important' },\n                                  }}\n                                />\n                              ))}\n                            </div>\n                          ),\n                          value: 'loading',\n                          disabled: true,\n                        },\n                      ]\n                    : productNames.map((prod) => ({\n                        value: prod.id,\n                        label: prod.name,\n                      }))\n                }\n                placeholder=\"Choose Product\"\n                getPopupContainer={(triggerNode) => triggerNode.parentNode}\n              />\n            </CCol>\n          </CRow>\n          <div className=\"table-container table_scroll\" style={{ border: 'none' }}>\n            <InfiniteScroll\n              dataLength={tableData.length}\n              next={handleScroll}\n              hasMore={hasMoreRef.current}\n              loader={\n                <div className=\"text-c text-center my-3 td-text\">\n                  <CSpinner color=\"danger\" />\n                </div>\n              }\n              endMessage={\n                tableData.length !== 0 && (\n                  <p style={{ textAlign: 'center' }}>\n                    <b style={{ color: '#e40e2d', fontSize: '12px' }}>No more Data to load</b>\n                  </p>\n                )\n              }\n            >\n              <CTable hover>\n                <CTableHead className=\"head-row draft-head-row-ts\">\n                  <CTableRow>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c text-center \"\n                      scope=\"col\"\n                      width=\"4%\"\n                    >\n                      SI.No\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      Product Name\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      Flow\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      Product Head\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      Technical Head\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      Data Head\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      Start Date\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      End Date\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      width=\"10%\"\n                      scope=\"col\"\n                    >\n                      Approval Flow\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      Budget Details\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      Status\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c text-center\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      Action\n                    </CTableHeaderCell>\n                  </CTableRow>\n                </CTableHead>\n                <CTableBody>\n                  {!tableData ? (\n                    <div></div>\n                  ) : (\n                    tableData.map((row, index) => (\n                      <CTableRow key={row.id} className=\"tr-bg-color\">\n                        <CTableDataCell className=\"productflow-col-box text-c pad-bottom_flow td-product-text\">\n                          {index + 1}\n                        </CTableDataCell>\n                        <CTableDataCell className=\"productflow-product-name pad-bottom_flow td-product-text\">\n                          <Tooltip\n                            placement=\"bottomLeft\"\n                            title={row.productName}\n                            className=\"productflow-name-lable\"\n                          >\n                            {row.productName}\n                          </Tooltip>\n                        </CTableDataCell>\n                        <CTableDataCell className=\" productflow-product-flow pad-bottom_flow td-product-text\">\n                          <Tooltip\n                            placement=\"bottomLeft\"\n                            title={row.flowName ? row.flowName : ''}\n                            className=\"flow-name-lable\"\n                          >\n                            {row.flowName ? row.flowName : ''}\n                          </Tooltip>\n                        </CTableDataCell>\n                        <CTableDataCell className=\"productflow-product-head pad-bottom_flow\">\n                          {row.prodHead.length !== 0\n                            ? row.prodHead.map((data) => {\n                                return (\n                                  <div\n                                    style={{ display: 'flex', alignItems: 'center' }}\n                                    key={data.id}\n                                  >\n                                    <img\n                                      src={\n                                        data.profilePic ? ImageUrl + data.profilePic : profileImage1\n                                      }\n                                      alt=\"Profile\"\n                                      className=\"head-td\"\n                                    />\n                                    <div className=\"node1\" style={{ marginTop: '7px' }}>\n                                      <p className=\"head-td-name\" title={data.name}>\n                                        {data.name}\n                                      </p>\n                                      <p className=\"head-td-role\" title={data.designation}>\n                                        {data.designation}\n                                      </p>\n                                    </div>\n                                  </div>\n                                )\n                              })\n                            : '---'}\n                        </CTableDataCell>\n                        <CTableDataCell className=\"productflow-product-head pad-bottom_flow\">\n                          {row.techHead.length !== 0\n                            ? row.techHead.map((data) => {\n                                return (\n                                  <div\n                                    style={{ display: 'flex', alignItems: 'center' }}\n                                    key={data.id}\n                                  >\n                                    <img\n                                      src={\n                                        data.profilePic ? ImageUrl + data.profilePic : profileImage1\n                                      }\n                                      alt=\"Profile\"\n                                      className=\"head-td\"\n                                    />\n                                    <div className=\"node1\" style={{ marginTop: '7px' }}>\n                                      <p className=\"head-td-name\" title={data.name}>\n                                        {data.name}\n                                      </p>\n                                      <p className=\"head-td-role\" title={data.designation}>\n                                        {data.designation}\n                                      </p>\n                                    </div>\n                                  </div>\n                                )\n                              })\n                            : '---'}\n                        </CTableDataCell>\n                        <CTableDataCell className=\"productflow-product-head pad-bottom_flow\">\n                          {row.dataHead.length !== 0\n                            ? row.dataHead.map((data) => {\n                                return (\n                                  <div\n                                    style={{ display: 'flex', alignItems: 'center' }}\n                                    key={data.id}\n                                  >\n                                    <img\n                                      src={\n                                        data.profilePic ? ImageUrl + data.profilePic : profileImage1\n                                      }\n                                      alt=\"Profile\"\n                                      className=\"head-td\"\n                                    />\n                                    <div className=\"node1\" style={{ marginTop: '7px' }}>\n                                      <p className=\"head-td-name\" title={data.name}>\n                                        {data.name}\n                                      </p>\n                                      <p className=\"head-td-role\" title={data.designation}>\n                                        {data.designation}\n                                      </p>\n                                    </div>\n                                  </div>\n                                )\n                              })\n                            : '---'}\n                        </CTableDataCell>\n                        <CTableDataCell className=\"productflow-product-Startdate pad-bottom_flow td-product-text\">\n                          {formatDate(row.startDate)}\n                        </CTableDataCell>\n                        <CTableDataCell className=\"productflow-product-Enddate pad-bottom_flow td-product-text\">\n                          {row.endDate !== null ? formatDate(row.endDate) : '--'}\n                        </CTableDataCell>\n                        <CTableDataCell className=\"text-c flowlist-accesperson pad-bottom_flow\">\n                          <div className=\"table-cell-container\">\n                            <div className=\"image-background-accessperson\">\n                              {row.approvalFlow.slice(0, 3).map((member, index) => (\n                                <div className=\"accessPerImg\" key={row.id}>\n                                  <div className=\"tooltip-container\">\n                                    <img\n                                      src={\n                                        member.profilePic\n                                          ? ImageUrl + member.profilePic\n                                          : profileImage1\n                                      }\n                                      className={member.profilePic ? 'first-image' : 'second-image'}\n                                      alt=\"Access Person Images\"\n                                    />\n                                  </div>\n                                </div>\n                              ))}\n                              <div>\n                                {row.approvalFlow.length > 3 && (\n                                  <div className=\"accessPerImg text-center more-person-access rounded-circle\">\n                                    <span>+{row.approvalFlow.length - 3}</span>\n                                  </div>\n                                )}\n                              </div>\n                            </div>\n\n                            <div className=\"card-list-person\">\n                              <Card\n                                style={{ width: '230px', height: '120px', overflowY: 'auto' }}\n                                className=\"Access-card\"\n                              >\n                                {row.approvalFlow.map((member) => (\n                                  <div key={member}>\n                                    <div className=\" access-person-tooltip  \">\n                                      <div className=\"image-background\">\n                                        <img\n                                          src={\n                                            member.profilePic\n                                              ? ImageUrl + member.profilePic\n                                              : profileImage1\n                                          }\n                                          className={\n                                            member.profilePic\n                                              ? 'card-access-image'\n                                              : 'card-approval-image'\n                                          }\n                                          alt={member.name}\n                                        />\n                                      </div>\n                                      <div\n                                        className=\"node1 access-person-hovercard\"\n                                        style={member.profilePic ? { marginLeft: '11px' } : {}}\n                                      >\n                                        <p className=\"member-user-name1\"> {member.name}</p>\n                                        <p className=\"member-role-text1\">{member.designation}</p>\n                                      </div>\n                                    </div>\n                                    <Divider />\n                                  </div>\n                                ))}\n                              </Card>\n                            </div>\n                          </div>\n                        </CTableDataCell>\n                        <CTableDataCell className=\"productflow-product-budget pad-bottom_flow td-product-text\">\n                          {row.budgetDetails !== 'undefined' &&\n                          row.budgetDetails !== '' &&\n                          row.budgetDetails !== null\n                            ? formatAmountWithCommas(row.budgetDetails, row.currency)\n                            : '---'}\n                        </CTableDataCell>\n                        <CTableDataCell\n                          className={`productflow-product-budget pad-bottom_flow td-product-text ${getStatusClass(\n                            row.approvalStatus,\n                          )}`}\n                          width=\"10%\"\n                        >\n                          <span>\n                            {row.approvalStatus === 'Approved' && (\n                              <span style={{ fontSize: '20px' }}>&#8226;</span>\n                            )}\n                            {row.approvalStatus === 'Rejected' && (\n                              <span style={{ fontSize: '20px' }}>&#8226;</span>\n                            )}\n                            <span style={{ marginLeft: '5px' }}>{row.approvalStatus}</span>\n                          </span>\n                        </CTableDataCell>\n                        <CTableDataCell className=\"productflow-product-Action pad-bottom_flow text-center td-product-text\">\n                          <button\n                            type=\"button\"\n                            className=\"btn border-0 text-c text-secondary cross-button\"\n                            style={{ fontSize: '13px', padding: '4px 8px' }}\n                            onClick={() => handleProductView(row.id)}\n                          >\n                            <EyeSvg width=\"13\" height=\"13\" viewBox=\"0 0 20 16\" fill=\"#A5A1A1\" />\n                          </button>\n                        </CTableDataCell>\n                      </CTableRow>\n                    ))\n                  )}\n                </CTableBody>\n              </CTable>\n              {(tableData === null && !commonLoader) ||\n              (tableData.length === 0 && !commonLoader) ? (\n                <div className=\"text-c text-center my-3 td-text\">No Data Found</div>\n              ) : (\n                loaderElement\n              )}\n            </InfiniteScroll>\n          </div>\n        </>\n      )}\n    </>\n  )\n}\nApproverCloseList.propTypes = {\n  FlowList: PropTypes.array,\n  categories: PropTypes.array,\n  techHeadList: PropTypes.array,\n  prodHeadList: PropTypes.array,\n  dataHeadList: PropTypes.array,\n}\nexport default ApproverCloseList\n","import React, { useState, useRef, useEffect } from 'react'\nimport { CCol, CRow } from '@coreui/react'\nimport PropTypes from 'prop-types'\nimport { ImageUrl, getDecodeData, getHeaders } from '../../../constant/Global'\nimport { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport profileImage1 from '../../../assets/images/avatars/man1.png'\nimport { Breadcrumb, Select, Row, Input, Button, Form, DatePicker } from 'antd'\nimport BackArrowSvg from 'src/views/svgImages/BackArrowSvg'\nimport Calendar from '../../svgImages/Calendar'\nimport dayjs from 'dayjs'\nimport stage from '../../../assets/images/form/stage.png'\nimport stage1 from '../../../assets/images/form/stage-p.png'\nimport stage2 from '../../../assets/images/form/stage-a.png'\nimport stage3 from '../../../assets/images/form/stage-r.png'\nimport eyeIcon from '../../../assets/images/login/Show.png'\nimport useAxios from 'src/constant/UseAxios'\nimport Downarrowimg from '../../../assets/images/downarrow.png'\nimport { Link } from 'react-router-dom'\n\nconst EditRejectedProduct = ({\n  flowList,\n  close,\n  techHeadList,\n  prodHeadList,\n  dataHeadList,\n  categories,\n  EditProductData,\n}) => {\n  let api = useAxios()\n  const user = getDecodeData()\n  const userId = user && user.id\n  const formRef = useRef(null)\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [status, setStatus] = useState('')\n  const [startDate, setStartDate] = useState()\n  const [endDate, setEndDate] = useState()\n  const [loadingState, setLoadings] = useState(false)\n  const fileInputRef = useRef(null)\n  const [form] = Form.useForm()\n  const [flowId, setFlowId] = useState()\n  const selectRef = useRef(null)\n  const [error, setError] = useState('')\n\n  const handleBrowseClick = () => {\n    fileInputRef.current.click()\n  }\n  const handleDropdownVisibleChange = (visible) => {\n    if (!visible && selectRef.current) {\n      selectRef.current.blur()\n    }\n  }\n  const openFileInNewTab = () => {\n    window.open(ImageUrl + EditProductData.file, '_blank')\n  }\n\n  const handleFileChange = (event) => {\n    const file = event.target.files[0]\n    setSelectedFile(file)\n  }\n\n  const prodHeadOption = prodHeadList.map((user) => ({\n    value: user.id,\n    label: (\n      <div className=\"select-options1 select-options-form\">\n        <img\n          src={user.profile_pic ? ImageUrl + user.profile_pic : profileImage1}\n          style={user.profile_pic ? { width: '20px' } : { width: '29px' }}\n          alt={user.name}\n          className=\"img-flag\"\n        />\n        <div className=\"node1\" style={user.profile_pic ? { marginLeft: '11px' } : {}}>\n          <p className=\"user-name1\" title={user.name}>\n            {' '}\n            {user.name}\n          </p>\n          <p className=\"role-text1\" title={user.role}>\n            {user.role}\n          </p>\n        </div>\n      </div>\n    ),\n  }))\n\n  const techHeadOption = techHeadList.map((user) => ({\n    value: user.id,\n    label: (\n      <div className=\"select-options1 select-options-form\">\n        <img\n          src={user.profile_pic ? ImageUrl + user.profile_pic : profileImage1}\n          style={user.profile_pic ? { width: '20px' } : { width: '29px' }}\n          alt={user.name}\n          className=\"img-flag\"\n        />\n        <div className=\"node1\" style={user.profile_pic ? { marginLeft: '11px' } : {}}>\n          <p className=\"user-name1\" title={user.name}>\n            {user.name}\n          </p>\n          <p className=\"role-text1\" title={user.role}>\n            {user.role}\n          </p>\n        </div>\n      </div>\n    ),\n  }))\n\n  const dataHeadOption = dataHeadList.map((user) => ({\n    value: user.id,\n    label: (\n      <div className=\"select-options1 select-options-form\">\n        <img\n          src={user.profile_pic ? ImageUrl + user.profile_pic : profileImage1}\n          style={user.profile_pic ? { width: '20px' } : { width: '29px' }}\n          alt={user.name}\n          className=\"img-flag\"\n        />\n        <div className=\"node1\" style={user.profile_pic ? { marginLeft: '11px' } : {}}>\n          <p className=\"user-name1\" title={user.name}>\n            {user.name}\n          </p>\n          <p className=\"role-text1\" title={user.role}>\n            {user.role}\n          </p>\n        </div>\n      </div>\n    ),\n  }))\n\n  const options = flowList.map((flow) => ({\n    value: flow.id,\n    label: flow.name,\n  }))\n\n  const categoryOption = categories.map((cate) => ({\n    value: cate.id,\n    label: cate.name,\n  }))\n\n  useEffect(() => {\n    form.setFieldsValue({\n      budget: EditProductData.budget,\n      summary: EditProductData.summary,\n      flowValue: EditProductData.flowName,\n      name: EditProductData.name,\n      techHeadValue: EditProductData.tech_headId !== 0 ? EditProductData.tech_headId : '',\n      prodHeadValue: EditProductData.prod_headId !== 0 ? EditProductData.prod_headId : '',\n      startDateValue: EditProductData.startDate && dayjs(EditProductData.startDate),\n      endDateValue: EditProductData.endDate && dayjs(EditProductData.endDate),\n      filesValue: EditProductData.file,\n      currency:\n        EditProductData.currency === 'undefined' || EditProductData.currency === 'null'\n          ? null\n          : EditProductData.currency,\n      category: EditProductData.categoryID,\n      rejRemarks: EditProductData.approvalremarks,\n    })\n    setSelectedFile(EditProductData.file)\n    setStartDate(EditProductData.startDate)\n    setEndDate(EditProductData.endDate)\n    setFlowId(EditProductData.flow)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [EditProductData])\n\n  const handleSubmit = async (values) => {\n    if (selectedFile) {\n      const validFormats = ['.png', '.jpeg', '.jpg', '.pdf', '.docx']\n      const fileExtension = selectedFile.name.split('.').pop()\n\n      if (!validFormats.includes('.' + fileExtension.toLowerCase())) {\n        setError('Please select a valid file (.png, .jpeg, .jpg, .pdf, .docx).')\n        return\n      }\n    }\n    const formData = new FormData()\n    setLoadings(true)\n    formData.append('option', status)\n    Object.keys(values).forEach((key) => {\n      if (key === 'endDateValue') {\n        if (endDate === undefined || endDate === null) {\n          formData.append('endDate', '')\n        } else {\n          formData.append('endDate', endDate)\n        }\n      }\n      if (key === 'prodHeadValue') {\n        if (values[key] === undefined) {\n          formData.append('prodHead', 0)\n        } else {\n          formData.append('prodHead', values[key])\n        }\n      }\n      if (key === 'techHeadValue') {\n        if (values[key] === undefined) {\n          formData.append('techHead', 0)\n        } else {\n          formData.append('techHead', values[key])\n        }\n      }\n      if (key === 'dataHeadValue') {\n        if (values[key] === undefined) {\n          formData.append('dataHead', 0)\n        } else {\n          formData.append('dataHead', values[key])\n        }\n      }\n      if (key === 'startDateValue') {\n        formData.append('startDate', startDate)\n      }\n      if (key === 'flowValue') {\n        formData.append('flow', flowId)\n      }\n      if (key === 'filesValue') formData.append('files', selectedFile)\n      else formData.append(key, values[key])\n    })\n    const url = 'approval/product/update/' + EditProductData.id\n    await api\n      .put(url, formData, {\n        headers: getHeaders('multi'),\n      })\n      .then((response) => {\n        if (response.status === 208) {\n          toast.error(response.data.message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n            autoClose: 3000,\n          })\n        } else {\n          toast.success(response.data.message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n            autoClose: 3000,\n          })\n          resetComponent()\n        }\n        setLoadings(false)\n      })\n      .catch((error) => {\n        const errorMessage = error.response\n        if (errorMessage.status !== 400) {\n          toast.error(errorMessage.data.message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n            autoClose: 3000,\n          })\n        } else {\n          toast.error('Request to failed', {\n            position: toast.POSITION.BOTTOM_RIGHT,\n            autoClose: 3000,\n          })\n        }\n        setLoadings(false)\n      })\n  }\n\n  const handleStartDateChange = (date, dateString) => {\n    if (date) {\n      const parsedDate = dayjs(date, 'DD MMM, YYYY')\n      const formattedDate = parsedDate.format('YYYY-MM-DD')\n      setStartDate(formattedDate)\n      form.setFieldsValue({ endDateValue: undefined })\n    }\n  }\n\n  const handleEndDateChange = (date, dateString) => {\n    if (date) {\n      const parsedDate = dayjs(date, 'DD MMM, YYYY')\n      const formattedDate = parsedDate.format('YYYY-MM-DD')\n      setEndDate(formattedDate)\n    }\n  }\n\n  const disabledDate = (current) => {\n    return current && current < dayjs().startOf('day')\n  }\n\n  const disabledEndDate = (current) => {\n    if (!startDate) {\n      return current && current < dayjs().startOf('day')\n    }\n    return current && current < dayjs(startDate).startOf('day')\n  }\n\n  const resetComponent = () => {\n    close()\n    setStatus('')\n    setSelectedFile(null)\n    form.resetFields()\n  }\n\n  return (\n    <>\n      <CRow>\n        <CCol xs={9} md={9}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ display: 'flex', alignItems: 'center', width: '35px' }}>\n              <span\n                className=\"back_arrow_rej\"\n                onClick={resetComponent}\n                style={{ cursor: 'pointer', marginTop: '17px', marginLeft: '10px' }}\n              >\n                <BackArrowSvg width=\"16\" height=\"15\" viewBox=\"0 0 18 18\" fill=\"#A5A1A1\" />\n              </span>\n            </div>\n            <CCol>\n              {/* <div\n                style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}\n              > */}\n              <CRow>\n                <CCol xs={12} sm={12} md={6}>\n                  <div style={{ marginTop: '20px' }}>\n                    <h6 className=\"product-heading\" style={{ marginTop: '2%' }}>\n                      Edit <span style={{ color: '#E01B38' }}>{EditProductData.name}</span>\n                    </h6>\n                  </div>\n                  <Breadcrumb\n                    // style={{ marginLeft: '19px' }}\n                    className=\"bread-tab\"\n                    separator={<span className=\"breadcrumb-separator\">|</span>}\n                    items={[\n                      {\n                        title: (\n                          <Link\n                            rel=\"Dashboard\"\n                            to={'/dashboard'}\n                            className=\"bread-items text-decoration-none text-secondary \"\n                          >\n                            Dashboard\n                          </Link>\n                        ),\n                      },\n                      {\n                        title: (\n                          <span\n                            className=\"bread-items text-secondary second-subheading\"\n                            style={{ cursor: 'pointer' }}\n                            onClick={close}\n                          >\n                            Rejected List\n                          </span>\n                        ),\n                      },\n                      {\n                        title: (\n                          <span\n                            className=\"text-secondary second-subheading\"\n                            style={{ cursor: 'default' }}\n                          >\n                            Edit Rejected Product\n                          </span>\n                        ),\n                      },\n                    ]}\n                  />\n                </CCol>\n                <CCol md={6}>\n                  <div>\n                    <p className=\"text-c\" style={{ fontSize: '13px', marginTop: '12px' }}>\n                      This Product has been Rejected by {EditProductData.approvalby}{' '}\n                      {EditProductData.approvalRole}\n                    </p>\n                  </div>\n                </CCol>\n              </CRow>\n              {/* </div> */}\n              {/* <p style={{ fontSize: '12px', color: '#9B9B9B' }}>\n                Remarks : {EditProductData.approvalremarks}\n              </p> */}\n              {/* </div> */}\n            </CCol>\n          </div>\n\n          <CRow className=\"product-draft-edit\">\n            <Form\n              className=\"mt-4 needs-validation\"\n              ref={formRef}\n              form={form}\n              initialValues={{\n                budget: EditProductData.budget,\n                summary: EditProductData.summary,\n                flowValue: EditProductData.flowName,\n                name: EditProductData.name,\n                techHeadValue: EditProductData.tech_headId !== 0 ? EditProductData.tech_headId : '',\n                prodHeadValue: EditProductData.prod_headId !== 0 ? EditProductData.prod_headId : '',\n                dataHeadValue: EditProductData.data_headId !== 0 ? EditProductData.data_headId : '',\n                startDateValue: EditProductData.startDate && dayjs(EditProductData.startDate),\n                endDateValue:\n                  EditProductData.endDate !== null ? dayjs(EditProductData.endDate) : '',\n                filesValue: EditProductData.file,\n                currency:\n                  EditProductData.currency === 'undefined' || EditProductData.currency === 'null'\n                    ? null\n                    : EditProductData.currency,\n                category: EditProductData.categoryID,\n                rejRemarks: EditProductData.approvalremarks,\n              }}\n              layout=\"vertical\"\n              onFinish={handleSubmit}\n              encType=\"multipart/form-data\"\n              requiredMark={false}\n              validateTrigger=\"onSubmit\"\n              style={{ marginLeft: '39px', width: '100%', paddingRight: '45px' }}\n            >\n              <CRow>\n                <h6 style={{ fontWeight: '700', fontSize: '13px' }}>Product Details</h6>\n              </CRow>\n              <CRow style={{ marginTop: '10px' }}>\n                <CCol xs={6} sm={4} md={3}>\n                  <Form.Item\n                    name=\"flowValue\"\n                    label={\n                      <span className=\"form-label\">\n                        Flow <span className=\"red-text1\">*</span>\n                      </span>\n                    }\n                    rules={[{ required: true, message: 'Please Choose Flow' }]}\n                  >\n                    <Select\n                      ref={selectRef}\n                      onDropdownVisibleChange={handleDropdownVisibleChange}\n                      className=\"border-0 time-border-bottom\"\n                      placeholder=\"Choose Flow\"\n                      suffixIcon={\n                        <img\n                          src={Downarrowimg}\n                          alt=\"Downarrowimg\"\n                          style={{ width: '10px', height: '6px' }}\n                        />\n                      }\n                      options={options}\n                      showSearch\n                      filterOption={(input, option) =>\n                        option.label.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                      }\n                      onChange={(value) => setFlowId(value)}\n                    />\n                  </Form.Item>\n                </CCol>\n                <CCol xs={6} sm={4} md={3}>\n                  <Form.Item\n                    name=\"name\"\n                    label={\n                      <span className=\"form-label\">\n                        Product Name <span className=\"red-text1\">*</span>\n                      </span>\n                    }\n                    rules={[\n                      { required: true, message: 'Please Enter Product Name' },\n                      {\n                        pattern:\n                          /^(?!.*\\s$)(?!^\\s)(?!.*\\s{2,})(?!.*\\(\\))(?!^\\(\\))[a-zA-Z0-9\\s.()-]+$/,\n                        message: 'Invalid input',\n                      },\n                    ]}\n                  >\n                    <Input\n                      variant={'borderless'}\n                      maxLength={48}\n                      className=\"border-0 time-border-bottom px-0\"\n                      placeholder=\"Enter Product Name\"\n                    />\n                  </Form.Item>\n                </CCol>\n                <CCol xs={6} sm={4} md={3}>\n                  <Form.Item\n                    name=\"prodHeadValue\"\n                    label={<span className=\"form-label\">Product Head</span>}\n                  >\n                    <Select\n                      ref={selectRef}\n                      className=\"border-0 time-border-bottom rej_selectbox\"\n                      placeholder=\"Choose Product Head\"\n                      suffixIcon={\n                        <img\n                          src={Downarrowimg}\n                          alt=\"Downarrowimg\"\n                          style={{ width: '10px', height: '6px' }}\n                        />\n                      }\n                      options={prodHeadOption}\n                      disabled={prodHeadOption.find((option) => option.value === userId)}\n                      filterOption={(input, option) => {\n                        const userName =\n                          option.label.props.children[1].props.children[0].props.children[1] // Adjust this according to the actual structure\n                        return userName.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                      }}\n                      onDropdownVisibleChange={handleDropdownVisibleChange}\n                      allowClear\n                      showSearch\n                    />\n                  </Form.Item>\n                </CCol>\n                <CCol xs={6} sm={4} md={3}>\n                  <Form.Item\n                    name=\"techHeadValue\"\n                    label={<span className=\"form-label\">Technical Head</span>}\n                  >\n                    <Select\n                      ref={selectRef}\n                      className=\"border-0 time-border-bottom rej_selectbox\"\n                      placeholder=\"Choose Technical Head\"\n                      suffixIcon={\n                        <img\n                          src={Downarrowimg}\n                          alt=\"Downarrowimg\"\n                          style={{ width: '10px', height: '6px' }}\n                        />\n                      }\n                      options={techHeadOption}\n                      disabled={techHeadOption.some((option) => option.value === userId)}\n                      filterOption={(input, option) => {\n                        const userName =\n                          option.label.props.children[1].props.children[0].props.children[1] // Adjust this according to the actual structure\n                        return userName.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                      }}\n                      allowClear\n                      showSearch\n                      onDropdownVisibleChange={handleDropdownVisibleChange}\n                    />\n                  </Form.Item>\n                </CCol>\n                <CCol xs={6} sm={4} md={3}>\n                  <Form.Item\n                    name=\"dataHeadValue\"\n                    label={<span className=\"form-label\">Data Head</span>}\n                  >\n                    <Select\n                      ref={selectRef}\n                      className=\"border-0 time-border-bottom rej_selectbox\"\n                      placeholder=\"Choose Data Head\"\n                      suffixIcon={\n                        <img\n                          src={Downarrowimg}\n                          alt=\"Downarrowimg\"\n                          style={{ width: '10px', height: '6px' }}\n                        />\n                      }\n                      options={dataHeadOption}\n                      disabled={dataHeadOption.some((option) => option.value === userId)}\n                      filterOption={(input, option) => {\n                        const userName =\n                          option.label.props.children[1].props.children[0].props.children[1] // Adjust this according to the actual structure\n                        return userName.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                      }}\n                      allowClear\n                      showSearch\n                      onDropdownVisibleChange={handleDropdownVisibleChange}\n                    />\n                  </Form.Item>\n                </CCol>\n                <CCol xs={6} sm={4} md={3}>\n                  <Form.Item\n                    name=\"category\"\n                    label={\n                      <span className=\"form-label\">\n                        Business Category <span className=\"red-text1\">*</span>\n                      </span>\n                    }\n                    rules={[{ required: true, message: 'Please Choose Category' }]}\n                  >\n                    <Select\n                      ref={selectRef}\n                      className=\"border-0 time-border-bottom\"\n                      placeholder=\"Choose Category\"\n                      suffixIcon={\n                        <img\n                          src={Downarrowimg}\n                          alt=\"Downarrowimg\"\n                          style={{ width: '10px', height: '6px' }}\n                        />\n                      }\n                      options={categoryOption}\n                      allowClear\n                      filterOption={(input, option) =>\n                        option.label.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                      }\n                      showSearch\n                      onDropdownVisibleChange={handleDropdownVisibleChange}\n                    />\n                  </Form.Item>\n                </CCol>\n                {/* </CRow>\n              <Row gutter={16} style={{ marginTop: '10px' }}> */}\n                <CCol xs={6} sm={4} md={3}>\n                  <Form.Item\n                    name=\"startDateValue\"\n                    label={\n                      <span className=\"form-label\">\n                        Start Date <span className=\"red-text1\">*</span>\n                      </span>\n                    }\n                    rules={[{ required: true, message: 'Please Select Start Date' }]}\n                  >\n                    <DatePicker\n                      variant={'borderless'}\n                      className=\"border-0 time-border-bottom\"\n                      style={{ paddingLeft: '0px', marginTop: '10px' }}\n                      placeholder=\"Choose Date\"\n                      allowClear\n                      suffixIcon={\n                        <Calendar width=\"15\" height=\"14\" viewBox=\"0 0 15 14\" fill=\"white\" />\n                      }\n                      disabledDate={disabledDate}\n                      onChange={handleStartDateChange}\n                      format=\"DD MMM,YYYY\"\n                    />\n                  </Form.Item>\n                </CCol>\n                <CCol xs={6} sm={4} md={3}>\n                  <Form.Item\n                    name=\"endDateValue\"\n                    label={<span className=\"form-label\">End Date</span>}\n                    // rules={[{ required: true, message: 'Please Choose End Date' }]}\n                  >\n                    <DatePicker\n                      variant={'borderless'}\n                      className=\"border-0 time-border-bottom\"\n                      style={{ paddingLeft: '0px', marginTop: '10px' }}\n                      placeholder=\"Choose Date\"\n                      allowClear\n                      suffixIcon={\n                        <Calendar width=\"15\" height=\"14\" viewBox=\"0 0 15 14\" fill=\"white\" />\n                      }\n                      onChange={handleEndDateChange}\n                      disabledDate={disabledEndDate}\n                      format=\"DD MMM,YYYY\"\n                    />\n                  </Form.Item>\n                </CCol>\n                <CCol xs={6} sm={9} md={3}>\n                  <Form.Item\n                    name=\"summary\"\n                    label={<span className=\"form-label\">Product Summary</span>}\n                    // rules={[{ required: true, message: 'Please Enter Summary' }]}\n                  >\n                    <Input.TextArea\n                      className=\"border-0 time-border-bottom px-0\"\n                      placeholder=\"Enter Summary\"\n                      id=\"summary\"\n                      variant={'borderless'}\n                      style={{ color: 'black', marginTop: '10px' }} // Adjust '100px' to your desired minimum height\n                      autoSize={{\n                        minRows: 0,\n                        maxRows: 1,\n                      }}\n                    />\n                  </Form.Item>\n                </CCol>\n                <CCol xs={6} sm={4} md={3}>\n                  <Form.Item\n                    name=\"filesValue\"\n                    label={\n                      <div style={{ width: '220px' }}>\n                        <span className=\"form-label\">File</span>\n                        <button\n                          onClick={openFileInNewTab}\n                          type=\"button\"\n                          className=\"border-0 bg-none\"\n                          style={{\n                            cursor: 'pointer',\n                            background: 'none',\n                            float: 'inline-end',\n                          }}\n                          disabled={EditProductData.file === null}\n                        >\n                          <img src={eyeIcon} alt=\"Password\" width={12} />\n                        </button>\n                      </div>\n                    }\n                  >\n                    <div className=\"input-group custom-input-group custom_input_group\">\n                      <input\n                        type=\"text\"\n                        value={selectedFile ? selectedFile.name : ''}\n                        readOnly\n                        name=\"fieldName\"\n                        className=\"form-control border-0\"\n                        aria-label=\"Upload File\"\n                        aria-describedby=\"basic-addon1\"\n                        style={{ fontSize: '13px', fontWeight: '500', height: '10px' }}\n                      />\n                      <div className=\"input-group-append\">\n                        <button\n                          className=\"browse input-group-text text-danger\"\n                          onClick={handleBrowseClick}\n                          type=\"button\"\n                        >\n                          Upload\n                        </button>\n                      </div>\n                    </div>\n                    <input\n                      type=\"file\"\n                      className=\"file\"\n                      ref={fileInputRef}\n                      style={{ display: 'none' }}\n                      onChange={handleFileChange}\n                    />\n                    <p className=\"text-danger\" style={{ fontSize: '12px' }}>\n                      {error}\n                    </p>\n                  </Form.Item>\n                </CCol>\n              </CRow>\n              <CRow style={{ marginTop: '10px' }}>\n                <h6 style={{ fontWeight: '700', fontSize: '13px' }}>Budget Details</h6>\n              </CRow>\n              <CRow style={{ marginTop: '10px' }}>\n                <CCol sm={4} md={3}>\n                  <Form.Item\n                    name=\"budget\"\n                    label={<span className=\"form-label\">Product Budget</span>}\n                    rules={[\n                      {\n                        required: true,\n                        message: 'Please Enter Budget',\n                        validator: async (_, value) => {\n                          const currencyValue = form.getFieldValue('currency')\n                          if (currencyValue && !value) {\n                            throw new Error('Please enter product budget')\n                          }\n                        },\n                      },\n                      { pattern: /^[0-9,.]{1,8}$/, message: 'Please enter numbers only' },\n                    ]}\n                  >\n                    <Input\n                      className=\"border-0 time-border-bottom px-0\"\n                      placeholder=\"Choose Budget\"\n                      id=\"budget\"\n                      variant={'borderless'}\n                      style={{ color: 'black' }}\n                    />\n                  </Form.Item>\n                </CCol>\n                <CCol sm={4} md={3}>\n                  <Form.Item\n                    name=\"currency\"\n                    label={<span className=\"form-label\">Currency</span>}\n                    rules={[\n                      {\n                        required: true,\n                        message: 'Please Choose Currency',\n                        validator: async (_, value) => {\n                          const budgetValue = form.getFieldValue('budget')\n                          if (budgetValue && !value) {\n                            throw new Error('Please choose currency')\n                          }\n                        },\n                      },\n                    ]}\n                  >\n                    <Select\n                      className=\"border-0 time-border-bottom\"\n                      placeholder=\"Choose Currency\"\n                      suffixIcon={\n                        <img\n                          src={Downarrowimg}\n                          alt=\"Downarrowimg\"\n                          style={{ width: '10px', height: '6px' }}\n                        />\n                      }\n                    >\n                      <Select.Option value=\"USD\">USD</Select.Option>\n                      <Select.Option value=\"INR\">INR</Select.Option>\n                    </Select>\n                  </Form.Item>\n                </CCol>\n                <CCol sm={4} md={3}>\n                  <Form.Item\n                    name=\"rejRemarks\"\n                    label={<span className=\"form-label\">Rejected Remarks</span>}\n                    // rules={[{ required: true, message: 'Please Enter Rejected Remarks' }]}\n                  >\n                    <Input.TextArea\n                      className=\"border-0 time-border-bottom px-0\"\n                      id=\"Rejected Remarks\"\n                      disabled\n                      variant={'borderless'}\n                      style={{ color: 'black', marginTop: '10px', cursor: 'not-allowed' }} // Adjust '100px' to your desired minimum height\n                      autoSize={{\n                        minRows: 0,\n                        maxRows: 1,\n                      }}\n                    />\n                  </Form.Item>\n                </CCol>\n                <CCol\n                  sm={4}\n                  md={3}\n                  className=\"d-flex justify-content-end align-items-center\"\n                  style={{ padding: '19px' }}\n                >\n                  <Button\n                    className=\" save_changes\"\n                    style={{ fontSize: '13px', color: 'white' }}\n                    htmlType=\"submit\"\n                    onClick={() => setStatus('CREATED')}\n                    loading={loadingState}\n                  >\n                    Update\n                  </Button>\n                </CCol>\n              </CRow>\n            </Form>\n          </CRow>\n        </CCol>\n        <CCol xs={3} md={3} className=\"approvalflow-rightside\">\n          <div style={{ marginLeft: '14px' }}>\n            <Row style={{ marginTop: '31%' }}>\n              <h6 style={{ fontWeight: '700', fontSize: '13px' }}>Approval Flow</h6>\n            </Row>\n            <div style={{ maxHeight: '290px', overflowY: 'auto' }}>\n              {EditProductData.approvalFlow &&\n                EditProductData.approvalFlow.map((approver, approverIndex) => (\n                  <React.Fragment key={approverIndex}>\n                    <CRow className=\"align-items-center mt-2\">\n                      <div className=\"\">\n                        <img\n                          alt=\"stages\"\n                          style={{ width: '12px' }}\n                          className=\"content-img appr_img\"\n                          src={\n                            approver.approvalStatus === 'Pending'\n                              ? stage1\n                              : approver.approvalStatus === 'Approved'\n                              ? stage2\n                              : approver.approvalStatus === 'Rejected'\n                              ? stage3\n                              : stage\n                          }\n                        />\n                        <span style={{ marginLeft: '10%', fontSize: '11px', fontWeight: '600' }}>\n                          Flow {approverIndex + 1}\n                        </span>\n                      </div>\n                    </CRow>\n\n                    <CRow className=\"align-items-center\" style={{ marginTop: '12px' }}>\n                      <div className=\"col-md-1\">\n                        <div className=\"vertical-line\"></div>\n                      </div>\n                    </CRow>\n\n                    {/* Profile details */}\n                    <CRow className=\"align-items-center\">\n                      <div className=\"col-md-1\"></div>\n                      <div className=\"col-md-2 col-sm-2\" style={{ marginleft: '12px' }}>\n                        <img\n                          alt=\"profile\"\n                          className=\"head-td-flow_rej\"\n                          src={\n                            approver.profile_pic ? ImageUrl + approver.profile_pic : profileImage1\n                          }\n                        />\n                      </div>\n                      <div className=\"col-md-6 name_role\" style={{ marginTop: '6px' }}>\n                        <p className=\"head-td-name\" title={approver.name}>\n                          {approver.name}\n                        </p>\n                        <p className=\"head-td-role\" title={approver.role}>\n                          {approver.role}\n                        </p>\n                      </div>\n                    </CRow>\n                  </React.Fragment>\n                ))}\n            </div>\n          </div>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\nEditRejectedProduct.propTypes = {\n  flowList: PropTypes.array.isRequired,\n  close: PropTypes.func,\n  prodOwnerList: PropTypes.array,\n  techOwnerList: PropTypes.array,\n  categories: PropTypes.array,\n  techHeadList: PropTypes.array,\n  prodHeadList: PropTypes.array,\n  dataHeadList: PropTypes.array,\n  EditProductData: PropTypes.array,\n}\nexport default EditRejectedProduct\n","import React, { useState, useEffect, useRef } from 'react'\nimport { Select, Breadcrumb, Tooltip, Card, Divider, Row, Skeleton } from 'antd'\nimport {\n  CCol,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CSpinner,\n} from '@coreui/react'\nimport { getHeaders, ImageUrl } from 'src/constant/Global'\nimport profileImage1 from '../../../assets/images/avatars/wrapper.png'\nimport PropTypes from 'prop-types'\nimport { formatAmountWithCommas } from '../../../constant/TimeUtils'\nimport 'react-toastify/dist/ReactToastify.css'\nimport ViewProduct from '../ViewProduct'\nimport infoIcon from '../../../assets/images/info-icon.png'\nimport stage from '../../../assets/images/form/stage.png'\nimport stage1 from '../../../assets/images/form/stage-p.png'\nimport stage2 from '../../../assets/images/form/stage-a.png'\nimport stage3 from '../../../assets/images/form/stage-r.png'\nimport useAxios from 'src/constant/UseAxios'\nimport EditSvg from '../../svgImages/EditSvg'\nimport EditRejectedProduct from './EditRejectedProduct'\nimport EyeSvg from '../../svgImages/EyeSvg'\nimport InfiniteScroll from 'react-infinite-scroll-component'\nimport { ToastContainer } from 'react-toastify'\nimport Downarrowimg from '../../../assets/images/downarrow.png'\nimport { Link } from 'react-router-dom'\n\nconst RejectedList = ({\n  formatDate,\n  FlowList,\n  categories,\n  techHeadList,\n  prodHeadList,\n  dataHeadList,\n}) => {\n  let api = useAxios()\n  const [productId, setProductId] = useState()\n  const [tableData, setTableData] = useState([])\n  const [productNames, setProductNames] = useState([])\n  const [ViewProductData, setViewProductData] = useState([])\n  const [ViewProductShow, setViewProductShow] = useState(false)\n  const [commonLoader, setCommonLoader] = useState(true)\n  const [EditProductData, setEditProductData] = useState([])\n  const [EditProductShow, setEditProductShow] = useState(false)\n  const [abortController, setAbortController] = useState(new AbortController())\n  const hasMoreRef = useRef(true)\n  const pageRef = useRef(0)\n  const searchRef = useRef(false)\n  const productRef = useRef(0)\n  const selectRef = useRef(null)\n  const [pLoader, setPLoader] = useState(true)\n\n  useEffect(() => {\n    if (!ViewProductShow && !EditProductShow) {\n      pageRef.current = 0\n      hasMoreRef.current = true\n      getProductList()\n      getProductNames()\n      const tableContainer = document.querySelector('.table-container')\n      tableContainer.addEventListener('scroll', handleScroll)\n      return () => {\n        tableContainer.removeEventListener('scroll', handleScroll)\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ViewProductShow, EditProductShow])\n\n  const handleScroll = () => {\n    const tableContainer = document.querySelector('.table-container')\n    if (tableContainer.scrollTop + tableContainer.clientHeight === tableContainer.scrollHeight) {\n      if (hasMoreRef.current === true) {\n        getProductList()\n      }\n    }\n  }\n\n  const getProductList = async () => {\n    let newAbortController\n    if (pageRef.current === 0) {\n      setCommonLoader(true)\n      setTableData([])\n      if (abortController) {\n        abortController.abort()\n      }\n      newAbortController = new AbortController()\n      setAbortController(newAbortController)\n    }\n    const url = `product/list?page=${pageRef.current}&size=10&search=${searchRef.current}&status=Rejected&value=${productRef.current}`\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n        signal: newAbortController?.signal,\n      })\n      .then((response) => {\n        const data = response.data.data\n        if (pageRef.current === 0) setTableData(data)\n        else setTableData((prevUserData) => [...prevUserData, ...data])\n        if (data.length < 10) {\n          hasMoreRef.current = false\n        }\n\n        // Increment the page number for the next fetch\n        pageRef.current = pageRef.current + 1\n        setCommonLoader(false)\n      })\n      .catch((error) => {})\n  }\n\n  const handleProductView = async (id) => {\n    const url = `product/view/` + id\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        const data = response.data.data\n        setViewProductData(data)\n        setViewProductShow(true)\n      })\n      .catch((error) => {})\n  }\n\n  const handleProduct = (value) => {\n    if (value === undefined) {\n      setProductId()\n      searchRef.current = false\n      productRef.current = 0\n    } else {\n      setProductId(value)\n      searchRef.current = true\n      productRef.current = value\n    }\n    selectRef.current.blur()\n    pageRef.current = 0\n    hasMoreRef.current = true\n    getProductList()\n  }\n\n  const closeViewProduct = () => {\n    setViewProductShow(false)\n  }\n\n  const openEditProduct = (id) => {\n    handleEdit(id)\n    setEditProductShow(true)\n  }\n\n  const closeEditProduct = () => {\n    setEditProductShow(false)\n  }\n\n  const handleEdit = async (id) => {\n    const url = `approval/product/reject/` + id\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        const data = response.data.data\n        setEditProductData(data)\n      })\n      .catch((error) => {})\n  }\n\n  const getProductNames = async () => {\n    const url = `product/head/search?status=Rejected`\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        const data = response.data.data\n        setProductNames(data)\n        setPLoader(false)\n      })\n      .catch((error) => {})\n  }\n\n  return (\n    <>\n      <ToastContainer />\n      {EditProductShow ? (\n        <EditRejectedProduct\n          flowList={FlowList}\n          close={closeEditProduct}\n          techHeadList={techHeadList}\n          prodHeadList={prodHeadList}\n          dataHeadList={dataHeadList}\n          categories={categories}\n          EditProductData={EditProductData}\n        />\n      ) : ViewProductShow ? (\n        <ViewProduct\n          flowList={FlowList}\n          close={closeViewProduct}\n          techHeadList={techHeadList}\n          prodHeadList={prodHeadList}\n          dataHeadList={dataHeadList}\n          categories={categories}\n          ViewProductData={ViewProductData}\n          viewStatus=\"View\"\n          titleList=\"Rejected List\"\n          ownerOption={[]}\n        />\n      ) : (\n        <>\n          <CRow className=\"mt-3\">\n            <CCol xs={9} sm={9} md={10}>\n              <b style={{ marginLeft: '30px' }}>Rejected List</b>\n              <br />\n              <Breadcrumb\n                style={{ marginLeft: '30px' }}\n                className=\"bread-tab\"\n                separator={<span className=\"breadcrumb-separator\">|</span>}\n                items={[\n                  {\n                    title: (\n                      <Link\n                        rel=\"Dashboard\"\n                        to={'/dashboard'}\n                        className=\"bread-items text-decoration-none text-secondary \"\n                      >\n                        Dashboard\n                      </Link>\n                    ),\n                  },\n                  {\n                    title: (\n                      <span className=\"text-secondary \" style={{ cursor: 'default' }}>\n                        Rejected List\n                      </span>\n                    ),\n                  },\n                ]}\n              />\n            </CCol>\n\n            <CCol xs={3} sm={3} md={2}>\n              <Select\n                style={{ width: '90%' }}\n                ref={selectRef}\n                className=\"contract_members_activity_select custom-select_rej rej-sel\"\n                suffixIcon={\n                  <img\n                    src={Downarrowimg}\n                    alt=\"Downarrowimg\"\n                    style={{ width: '10px', height: '6px' }}\n                  />\n                }\n                id=\"products\"\n                value={productId}\n                onChange={(value) => handleProduct(value)}\n                showSearch\n                allowClear\n                filterOption={(input, option) =>\n                  option.label.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                }\n                dropdownRender={(menu) => (\n                  <div style={{ overflow: 'auto' }} role=\"listbox\">\n                    {menu}\n                  </div>\n                )}\n                options={\n                  pLoader\n                    ? [\n                        {\n                          label: (\n                            <div style={{ textAlign: 'center' }}>\n                              {Array.from({ length: 5 }, (_, index) => (\n                                <Skeleton\n                                  key={index}\n                                  title={false}\n                                  paragraph={{\n                                    rows: 1,\n                                    width: '100%',\n                                    height: '10px',\n                                    style: { height: '10px !important' },\n                                  }}\n                                />\n                              ))}\n                            </div>\n                          ),\n                          value: 'loading',\n                          disabled: true,\n                        },\n                      ]\n                    : productNames.map((prod) => ({\n                        value: prod.id,\n                        label: prod.name,\n                      }))\n                }\n                placeholder=\"Choose Product\"\n                getPopupContainer={(triggerNode) => triggerNode.parentNode}\n              />\n            </CCol>\n          </CRow>\n\n          <div className=\"table-container table_scroll\" style={{ border: 'none' }}>\n            <InfiniteScroll\n              dataLength={tableData.length}\n              next={handleScroll}\n              hasMore={hasMoreRef.current}\n              loader={\n                <div className=\"text-c text-center my-3 td-text\">\n                  <CSpinner color=\"danger\" />\n                </div>\n              }\n              endMessage={\n                tableData.length !== 0 && (\n                  <p style={{ textAlign: 'center' }}>\n                    <b style={{ color: '#e40e2d', fontSize: '12px' }}>No more Data to load</b>\n                  </p>\n                )\n              }\n            >\n              <CTable hover>\n                <CTableHead className=\"head-row draft-head-row-ts\">\n                  <CTableRow>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c text-center\"\n                      scope=\"col\"\n                      width=\"4%\"\n                    >\n                      SI.No\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      Product Name\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"8%\"\n                    >\n                      Flow\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      Product Head\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      Technical Head\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      Data Head\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      Start Date\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      End Date\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      width=\"10%\"\n                      scope=\"col\"\n                    >\n                      Approval Flow\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      Budget Details\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c\"\n                      scope=\"col\"\n                      width=\"10%\"\n                    >\n                      Approver Status\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      className=\"table-head-productlist text-c text-center\"\n                      scope=\"col\"\n                      width=\"15%\"\n                    >\n                      Action\n                    </CTableHeaderCell>\n                  </CTableRow>\n                </CTableHead>\n                <CTableBody>\n                  {!tableData ? (\n                    <div></div>\n                  ) : (\n                    tableData.map((row, index) => (\n                      <CTableRow key={index}>\n                        <CTableDataCell className=\"productflow-col-box text-c pad-bottom_flow td-product-text\">\n                          {index + 1}\n                        </CTableDataCell>\n                        <CTableDataCell\n                          className=\"productflow-product-name pad-bottom_flow td-product-text\"\n                          onClick={() => handleProductView(row.id)}\n                        >\n                          <Tooltip\n                            placement=\"bottomLeft\"\n                            title={row.productName}\n                            className=\"productflow-name-lable\"\n                          >\n                            {row.productName}\n                          </Tooltip>\n                        </CTableDataCell>\n                        <CTableDataCell\n                          className=\" productflow-product-flow pad-bottom_flow td-product-text\"\n                          onClick={() => handleProductView(row.id)}\n                        >\n                          <Tooltip\n                            placement=\"bottomLeft\"\n                            title={row.flowName ? row.flowName : ''}\n                            className=\"flow-name-lable\"\n                          >\n                            {row.flowName ? row.flowName : ''}\n                          </Tooltip>\n                        </CTableDataCell>\n                        <CTableDataCell\n                          className=\"productflow-product-head pad-bottom_flow\"\n                          onClick={() => handleProductView(row.id)}\n                        >\n                          {row.prodHead.length !== 0\n                            ? row.prodHead.map((data) => {\n                                return (\n                                  <div\n                                    style={{ display: 'flex', alignItems: 'center' }}\n                                    key={data.id}\n                                  >\n                                    <img\n                                      src={\n                                        data.profilePic ? ImageUrl + data.profilePic : profileImage1\n                                      }\n                                      alt=\"Profile\"\n                                      className=\"head-td\"\n                                    />\n                                    <div className=\"node1\" style={{ marginTop: '7px' }}>\n                                      <p className=\"head-td-name\" title={data.name}>\n                                        {data.name}\n                                      </p>\n                                      <p className=\"head-td-role\" title={data.designation}>\n                                        {data.designation}\n                                      </p>\n                                    </div>\n                                  </div>\n                                )\n                              })\n                            : '---'}\n                        </CTableDataCell>\n                        <CTableDataCell\n                          className=\"productflow-product-head pad-bottom_flow\"\n                          onClick={() => handleProductView(row.id)}\n                        >\n                          {row.techHead.length !== 0\n                            ? row.techHead.map((data) => {\n                                return (\n                                  <div\n                                    style={{ display: 'flex', alignItems: 'center' }}\n                                    key={data.id}\n                                  >\n                                    <img\n                                      src={\n                                        data.profilePic ? ImageUrl + data.profilePic : profileImage1\n                                      }\n                                      alt=\"Profile\"\n                                      className=\"head-td\"\n                                    />\n                                    <div className=\"node1\" style={{ marginTop: '7px' }}>\n                                      <p className=\"head-td-name\" title={data.name}>\n                                        {data.name}\n                                      </p>\n                                      <p className=\"head-td-role\" title={data.designation}>\n                                        {data.designation}\n                                      </p>\n                                    </div>\n                                  </div>\n                                )\n                              })\n                            : '---'}\n                        </CTableDataCell>\n                        <CTableDataCell\n                          className=\"productflow-product-head pad-bottom_flow\"\n                          onClick={() => handleProductView(row.id)}\n                        >\n                          {row.dataHead.length !== 0\n                            ? row.dataHead.map((data) => {\n                                return (\n                                  <div\n                                    style={{ display: 'flex', alignItems: 'center' }}\n                                    key={data.id}\n                                  >\n                                    <img\n                                      src={\n                                        data.profilePic ? ImageUrl + data.profilePic : profileImage1\n                                      }\n                                      alt=\"Profile\"\n                                      className=\"head-td\"\n                                    />\n                                    <div className=\"node1\" style={{ marginTop: '7px' }}>\n                                      <p className=\"head-td-name\" title={data.name}>\n                                        {data.name}\n                                      </p>\n                                      <p className=\"head-td-role\" title={data.designation}>\n                                        {data.designation}\n                                      </p>\n                                    </div>\n                                  </div>\n                                )\n                              })\n                            : '---'}\n                        </CTableDataCell>\n                        <CTableDataCell\n                          className=\"productflow-product-Startdate pad-bottom_flow td-product-text\"\n                          onClick={() => handleProductView(row.id)}\n                        >\n                          {formatDate(row.startDate)}\n                        </CTableDataCell>\n                        <CTableDataCell\n                          className=\"productflow-product-Enddate pad-bottom_flow td-product-text\"\n                          onClick={() => handleProductView(row.id)}\n                        >\n                          {row.endDate !== null ? formatDate(row.endDate) : '--'}\n                        </CTableDataCell>\n                        <CTableDataCell className=\"text-c flowlist-accesperson pad-bottom_flow\">\n                          <div className=\"table-cell-container\">\n                            <div className=\"image-background-accessperson\">\n                              {row.approvalFlow.slice(0, 3).map((member, index) => (\n                                <div className=\"accessPerImg\" key={index}>\n                                  <div className=\"tooltip-container\">\n                                    <img\n                                      src={\n                                        member.profilePic\n                                          ? ImageUrl + member.profilePic\n                                          : profileImage1\n                                      }\n                                      className={member.profilePic ? 'first-image' : 'second-image'}\n                                      alt=\"Access Person Images\"\n                                    />\n                                  </div>\n                                </div>\n                              ))}\n                              <div>\n                                {row.approvalFlow.length > 3 && (\n                                  <div className=\"accessPerImg text-center more-person-access rounded-circle\">\n                                    <span>+{row.approvalFlow.length - 3}</span>\n                                  </div>\n                                )}\n                              </div>\n                            </div>\n\n                            <div className=\"card-list-person\">\n                              <Card\n                                style={{ width: '250px', height: '120px', overflowY: 'auto' }}\n                                className=\"Access-card\"\n                              >\n                                {row.approvalFlow.map((member) => (\n                                  <div key={member}>\n                                    <div className=\" access-person-tooltip  \">\n                                      <div className=\"image-background\">\n                                        <img\n                                          src={\n                                            member.profilePic\n                                              ? ImageUrl + member.profilePic\n                                              : profileImage1\n                                          }\n                                          className={\n                                            member.profilePic\n                                              ? 'card-access-image'\n                                              : 'card-approval-image'\n                                          }\n                                          alt={member.name}\n                                        />\n                                      </div>\n                                      <div\n                                        className=\"node1 access-person-hovercard\"\n                                        style={member.profilePic ? { marginLeft: '11px' } : {}}\n                                      >\n                                        <p className=\"member-user-name1\"> {member.name}</p>\n                                        <p className=\"member-role-text1\">{member.designation}</p>\n                                      </div>\n                                    </div>\n                                    <Divider />\n                                  </div>\n                                ))}\n                              </Card>\n                            </div>\n                          </div>\n                        </CTableDataCell>\n                        <CTableDataCell\n                          className=\"productflow-product-budget pad-bottom_flow td-product-text\"\n                          onClick={() => handleProductView(row.id)}\n                        >\n                          {row.budgetDetails !== 'undefined' &&\n                          row.budgetDetails !== '' &&\n                          row.budgetDetails !== null\n                            ? formatAmountWithCommas(row.budgetDetails, row.currency)\n                            : '---'}\n                        </CTableDataCell>\n                        <CTableDataCell className=\"productflow-product-technical pad-bottom_flow\">\n                          <div className=\"approver-status-td\">\n                            <button className=\"rejected-status\" style={{ cursor: 'pointer' }}>\n                              <span>{row.approvalStatus}</span>\n                            </button>\n                            <div className=\"tooltip-trigger\">\n                              <img\n                                src={infoIcon}\n                                style={{ width: '17px', height: '17px', cursor: 'pointer' }}\n                                alt=\"info\"\n                              />\n                              <div className=\"tooltip-container-approvals\">\n                                <div\n                                  style={{ width: '200px', minHeight: '85px', borderRadius: '7px' }}\n                                  className=\"flow-card\"\n                                >\n                                  {row.approvalFlow.slice(0, 3).map((approver, approverIndex) => (\n                                    <div key={approverIndex}>\n                                      <Row\n                                        className=\"align-items-center\"\n                                        style={{ margin: '16px' }}\n                                      >\n                                        {/* Stage Image */}\n                                        <div className=\"col-md-1\">\n                                          <img\n                                            alt=\"stages\"\n                                            style={{ width: '12px' }}\n                                            className=\"content-img appr_img\"\n                                            src={\n                                              approver.approvalStatus === 'Pending'\n                                                ? stage1\n                                                : approver.approvalStatus === 'Approved'\n                                                ? stage2\n                                                : approver.approvalStatus === 'Rejected'\n                                                ? stage3\n                                                : stage\n                                            }\n                                          />\n                                        </div>\n\n                                        {/* Vertical Line */}\n                                        <div className=\"col-md-1\">\n                                          <div className=\"vertical-line-appr\"></div>\n                                        </div>\n\n                                        {/* Profile details */}\n                                        <div className=\"col-md-2\">\n                                          <img\n                                            alt=\"profile\"\n                                            className=\"appr-img-td\"\n                                            src={\n                                              approver.profilePic\n                                                ? ImageUrl + approver.profilePic\n                                                : profileImage1\n                                            }\n                                          />\n                                        </div>\n                                        <div\n                                          className=\"col-md-8 name_role\"\n                                          style={{ paddingLeft: '10px' }}\n                                        >\n                                          <p\n                                            className=\"head-td-name\"\n                                            style={{ marginTop: '21px' }}\n                                            title={approver.name}\n                                          >\n                                            {approver.name}\n                                          </p>\n                                          <p className=\"head-td-role\" title={approver.designation}>\n                                            {approver.designation}\n                                          </p>\n                                        </div>\n                                      </Row>\n                                    </div>\n                                  ))}\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </CTableDataCell>\n                        <CTableDataCell className=\"productflow-product-technical text-center pad-bottom_flow\">\n                          <div className=\"action_table_product\">\n                            <button\n                              type=\"button\"\n                              className=\"btn border-0 text-c text-secondary cross-button view_icon_rej\"\n                              style={{ fontSize: '12px', padding: '4px 8px' }}\n                              onClick={() => handleProductView(row.id)}\n                            >\n                              <EyeSvg width=\"13\" height=\"13\" viewBox=\"0 0 20 16\" fill=\"#A5A1A1\" />\n                            </button>\n                            <button\n                              type=\"button\"\n                              className=\"action-view  edit-button edit_svg_product\"\n                              style={{ marginTop: '10px' }}\n                              onClick={() => openEditProduct(row.id)}\n                            >\n                              <EditSvg\n                                width=\"15\"\n                                height=\"15\"\n                                viewBox=\"0 0 18 18\"\n                                fill=\"none\"\n                                color=\"white\"\n                                clipH=\"18\"\n                                clipW=\"18\"\n                              />\n                            </button>\n                          </div>\n                        </CTableDataCell>\n                      </CTableRow>\n                    ))\n                  )}\n                </CTableBody>\n              </CTable>\n              {(tableData === null && !commonLoader) ||\n              (tableData.length === 0 && !commonLoader) ? (\n                <div className=\"text-c text-center my-3 td-text\">No Data Found</div>\n              ) : commonLoader ? (\n                <div className=\"text-c text-center my-3 td-text\">\n                  <CSpinner color=\"danger\" />\n                </div>\n              ) : (\n                <div></div>\n              )}\n            </InfiniteScroll>\n          </div>\n        </>\n      )}\n    </>\n  )\n}\n\nRejectedList.propTypes = {\n  formatDate: PropTypes.func,\n  FlowList: PropTypes.array,\n  categories: PropTypes.array,\n  techHeadList: PropTypes.array,\n  prodHeadList: PropTypes.array,\n  dataHeadList: PropTypes.array,\n}\nexport default RejectedList\n","import React, { useState, useEffect } from 'react'\nimport { CCard, CCol, CRow, CNavItem, CTabContent, CTabPane, CNav, CNavLink } from '@coreui/react'\nimport { getHeaders, getDecodeData } from 'src/constant/Global'\nimport ApprovedList from './productHead/ApprovedList'\nimport DraftList from './productHead/DraftList'\nimport FlowList from './productHead/FlowList'\nimport PendingList from './productHead/ProductPendingList'\nimport OwnerProductList from './productOwner/OwnerProductList'\nimport ApproverProductList from './productApprover/ApproverProductList'\nimport ApproverCloseList from './productApprover/ApproverClosedList'\nimport RejectedList from './productHead/RejectedList'\nimport useAxios from 'src/constant/UseAxios'\nimport { useLocation } from 'react-router-dom'\n\nconst Products = () => {\n  let api = useAxios()\n  const user = getDecodeData()\n  const [activeKey, setActiveKey] = useState()\n  const [tableData, setTableData] = useState([])\n  const [prodOwnerList, setProdOwnerList] = useState([])\n  const [techOwnerList, setTechOwnerList] = useState([])\n  const [dataOwnerList, setDataOwnerList] = useState([])\n  const [categories, setCategory] = useState([])\n  const [prodHeadList, setProdHeadList] = useState([])\n  const [techHeadList, setTechHeadList] = useState([])\n  const [dataHeadList, setDataHeadList] = useState([])\n  const designation = user?.designation\n  const location = useLocation()\n\n  useEffect(() => {\n    getFlowList()\n    getProdOwner()\n    getTechOwner()\n    getDataOwner()\n    getCategory()\n    getTechHead()\n    getDataHead()\n    getProdHead()\n    if (designation.includes('Head')) {\n      setActiveKey(3)\n    } else if (designation.includes('Approver')) {\n      setActiveKey(4)\n    } else if (designation.includes('Owner')) {\n      setActiveKey(6)\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const getProdOwner = async () => {\n    const url = `common/prod_owner`\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        setProdOwnerList(response.data.data)\n      })\n      .catch((error) => {})\n  }\n\n  const getDataOwner = async () => {\n    const url = `common/data_owner`\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        setDataOwnerList(response.data.data)\n      })\n      .catch((error) => {})\n  }\n\n  const getTechOwner = async () => {\n    const url = `common/tech_owner`\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        setTechOwnerList(response.data.data)\n      })\n      .catch((error) => {})\n  }\n\n  const getTechHead = async () => {\n    const url = `common/tech_head`\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        setTechHeadList(response.data.data)\n      })\n      .catch((error) => {})\n  }\n\n  const getDataHead = async () => {\n    const url = `common/data_head`\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        setDataHeadList(response.data.data)\n      })\n      .catch((error) => {})\n  }\n\n  const getProdHead = async () => {\n    const url = `common/prod_head`\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        setProdHeadList(response.data.data)\n      })\n      .catch((error) => {})\n  }\n\n  const getFlowList = async () => {\n    const url = `flow/list/producthead`\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        setTableData(response.data.data)\n      })\n      .catch((error) => {})\n  }\n\n  const getCategory = async () => {\n    const url = `product/categories`\n    api\n      .get(url, {\n        headers: getHeaders('json'),\n      })\n      .then((response) => {\n        setCategory(response.data.data)\n      })\n      .catch((error) => {})\n  }\n\n  const formatDate = (dateString) => {\n    const date = new Date(dateString)\n    const options = { day: 'numeric', month: 'short', year: 'numeric' }\n    let formattedDate = date.toLocaleDateString('en-GB', options)\n    if (!formattedDate.includes(',')) {\n      formattedDate = formattedDate.replace(/(\\w{3}) (\\d{4})/, '$1, $2')\n    }\n    return formattedDate\n  }\n\n  useEffect(() => {\n    const params = new URLSearchParams(location.search)\n    const tab = params.get('tab')\n    if (tab) {\n      setActiveKey(parseInt(tab, 10))\n    }\n  }, [location])\n\n  return (\n    <CRow className=\"my-2 \">\n      <CCol xs={12}>\n        <CCard xs={12} className=\"mt-4 timesheet-content-product \" style={{ height: '100%' }}>\n          <div>\n            <CNav variant=\"pills\" role=\"tablist\" className=\"nav_bar_product flow-navbar\">\n              {designation?.includes('Head') && (\n                <>\n                  <CNavItem role=\"presentation1\">\n                    <CNavLink\n                      active={activeKey === 3}\n                      component=\"button\"\n                      role=\"tab\"\n                      aria-controls=\"contact-tab-pane\"\n                      aria-selected={activeKey === 3}\n                      onClick={() => setActiveKey(3)}\n                    >\n                      Flow List\n                    </CNavLink>\n                  </CNavItem>\n                  <CNavItem role=\"presentation2\">\n                    <CNavLink\n                      className=\"nav-link-lable\"\n                      active={activeKey === 7}\n                      component=\"button\"\n                      role=\"tab\"\n                      aria-controls=\"home-tab-pane\"\n                      aria-selected={activeKey === 7}\n                      onClick={() => setActiveKey(7)}\n                    >\n                      Product List\n                    </CNavLink>\n                  </CNavItem>\n\n                  <CNavItem role=\"presentation3\">\n                    <CNavLink\n                      active={activeKey === 2}\n                      component=\"button\"\n                      role=\"tab\"\n                      aria-controls=\"profile-tab-pane\"\n                      aria-selected={activeKey === 2}\n                      onClick={() => setActiveKey(2)}\n                    >\n                      Draft List\n                    </CNavLink>\n                  </CNavItem>\n                  <CNavItem role=\"presentation4\">\n                    <CNavLink\n                      className=\"nav-link-lable\"\n                      active={activeKey === 1}\n                      component=\"button\"\n                      role=\"tab\"\n                      aria-controls=\"home-tab-pane\"\n                      aria-selected={activeKey === 1}\n                      onClick={() => setActiveKey(1)}\n                    >\n                      Approved List\n                    </CNavLink>\n                  </CNavItem>\n                  <CNavItem role=\"presentation5\">\n                    <CNavLink\n                      className=\"nav-link-lable\"\n                      active={activeKey === 8}\n                      component=\"button\"\n                      role=\"tab\"\n                      aria-controls=\"home-tab-pane\"\n                      aria-selected={activeKey === 8}\n                      onClick={() => setActiveKey(8)}\n                    >\n                      Rejected List\n                    </CNavLink>\n                  </CNavItem>\n                </>\n              )}\n              {designation?.includes('Approver') && (\n                <>\n                  <CNavItem role=\"presentation6\">\n                    <CNavLink\n                      active={activeKey === 4}\n                      component=\"button\"\n                      role=\"tab\"\n                      aria-controls=\"contact-tab-pane\"\n                      aria-selected={activeKey === 4}\n                      onClick={() => setActiveKey(4)}\n                    >\n                      Pending List\n                    </CNavLink>\n                  </CNavItem>\n                  <CNavItem role=\"presentation7\">\n                    <CNavLink\n                      active={activeKey === 5}\n                      component=\"button\"\n                      role=\"tab\"\n                      aria-controls=\"contact-tab-pane\"\n                      aria-selected={activeKey === 5}\n                      onClick={() => setActiveKey(5)}\n                    >\n                      Closed List\n                    </CNavLink>\n                  </CNavItem>\n                </>\n              )}\n              {designation?.includes('Owner') && (\n                <CNavItem role=\"presentation8\">\n                  <CNavLink\n                    active={activeKey === 6}\n                    component=\"button\"\n                    role=\"tab\"\n                    aria-controls=\"contact-tab-pane\"\n                    aria-selected={activeKey === 6}\n                    onClick={() => setActiveKey(6)}\n                  >\n                    Product List\n                  </CNavLink>\n                </CNavItem>\n              )}\n            </CNav>\n            <CTabContent>\n              <CTabPane\n                role=\"tabpanel\"\n                aria-labelledby=\"home-tab-pane\"\n                visible={activeKey === 1}\n                className=\"pendingactivity-card tab_height\"\n              >\n                <CRow>\n                  {activeKey === 1 && (\n                    <ApprovedList\n                      formatDate={formatDate}\n                      FlowList={tableData}\n                      prodOwnerList={prodOwnerList}\n                      techOwnerList={techOwnerList}\n                      dataOwnerList={dataOwnerList}\n                      categories={categories}\n                      techHeadList={techHeadList}\n                      prodHeadList={prodHeadList}\n                      dataHeadList={dataHeadList}\n                    />\n                  )}\n                </CRow>\n              </CTabPane>\n              <CTabPane\n                role=\"tabpanel\"\n                aria-labelledby=\"profile-tab-pane\"\n                visible={activeKey === 2}\n                className=\"pendingactivity-card tab_height\"\n              >\n                <CRow>\n                  {activeKey === 2 && (\n                    <DraftList\n                      formatDate={formatDate}\n                      FlowList={tableData}\n                      categories={categories}\n                      techHeadList={techHeadList}\n                      prodHeadList={prodHeadList}\n                      dataHeadList={dataHeadList}\n                    />\n                  )}\n                </CRow>\n              </CTabPane>\n              <CTabPane\n                role=\"tabpanel\"\n                aria-labelledby=\"contact-tab-pane\"\n                visible={activeKey === 3}\n                className=\"pendingactivity-card tab_height\"\n              >\n                <CRow>\n                  {activeKey === 3 && (\n                    <FlowList\n                      categories={categories}\n                      techHeadList={techHeadList}\n                      prodHeadList={prodHeadList}\n                      dataHeadList={dataHeadList}\n                    />\n                  )}\n                </CRow>\n              </CTabPane>\n              <CTabPane\n                role=\"tabpanel\"\n                aria-labelledby=\"contact-tab-pane\"\n                visible={activeKey === 4}\n                className=\"pendingactivity-card tab_height\"\n              >\n                <CRow>\n                  {activeKey === 4 && (\n                    <ApproverProductList\n                      FlowList={tableData}\n                      categories={categories}\n                      techHeadList={techHeadList}\n                      prodHeadList={prodHeadList}\n                      dataHeadList={dataHeadList}\n                    />\n                  )}\n                </CRow>\n              </CTabPane>\n              <CTabPane\n                role=\"tabpanel\"\n                aria-labelledby=\"contact-tab-pane\"\n                visible={activeKey === 5}\n                className=\"pendingactivity-card tab_height\"\n              >\n                <CRow>\n                  {activeKey === 5 && (\n                    <ApproverCloseList\n                      FlowList={tableData}\n                      categories={categories}\n                      techHeadList={techHeadList}\n                      prodHeadList={prodHeadList}\n                      dataHeadList={dataHeadList}\n                    />\n                  )}\n                </CRow>\n              </CTabPane>\n              <CTabPane\n                role=\"tabpanel\"\n                aria-labelledby=\"contact-tab-pane\"\n                visible={activeKey === 6}\n                className=\"pendingactivity-card tab_height\"\n              >\n                <CRow>\n                  {activeKey === 6 && (\n                    <OwnerProductList\n                      FlowList={tableData}\n                      categories={categories}\n                      techHeadList={techHeadList}\n                      prodHeadList={prodHeadList}\n                      dataHeadList={dataHeadList}\n                    />\n                  )}\n                </CRow>\n              </CTabPane>\n              <CTabPane\n                role=\"tabpanel\"\n                aria-labelledby=\"home-tab-pane\"\n                visible={activeKey === 7}\n                className=\"pendingactivity-card tab_height\"\n              >\n                <CRow>\n                  {activeKey === 7 && (\n                    <PendingList\n                      formatDate={formatDate}\n                      FlowList={tableData}\n                      categories={categories}\n                      techHeadList={techHeadList}\n                      prodHeadList={prodHeadList}\n                      dataHeadList={dataHeadList}\n                    />\n                  )}\n                </CRow>\n              </CTabPane>\n              <CTabPane\n                role=\"tabpanel\"\n                aria-labelledby=\"home-tab-pane\"\n                visible={activeKey === 8}\n                className=\"pendingactivity-card tab_height\"\n              >\n                <CRow>\n                  {activeKey === 8 && (\n                    <RejectedList\n                      formatDate={formatDate}\n                      FlowList={tableData}\n                      categories={categories}\n                      techHeadList={techHeadList}\n                      prodHeadList={prodHeadList}\n                      dataHeadList={dataHeadList}\n                    />\n                  )}\n                </CRow>\n              </CTabPane>\n            </CTabContent>\n          </div>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default Products\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst CheckSvg = ({ width, height, fill, viewBox }) => (\n  <svg\n    width={width}\n    height={height}\n    viewBox={viewBox}\n    fill={fill}\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M4.87459 9.58157C5.2816 9.58171 5.67193 9.41992 5.95949 9.13188L12.9552 2.13716L12.9553 2.13712C13.3482 1.74402 13.3482 1.10682 12.9553 0.713727L12.9552 0.713671C12.5621 0.320704 11.9249 0.320704 11.5318 0.713671L11.5318 0.713699L4.87459 7.37091L2.4682 4.96451L2.46817 4.96448C2.07508 4.57151 1.43788 4.57151 1.04478 4.96448L1.04473 4.96454C0.651758 5.35763 0.651758 5.99483 1.04473 6.38793L1.04479 6.38799L3.7897 9.13188C3.78971 9.1319 3.78972 9.13191 3.78973 9.13192C4.07729 9.41994 4.46761 9.58171 4.87459 9.58157ZM4.87459 9.58157C4.87456 9.58157 4.87453 9.58157 4.87449 9.58157L4.87459 9.33157L4.8747 9.58157C4.87466 9.58157 4.87463 9.58157 4.87459 9.58157Z\"\n      fill={fill}\n      stroke=\"#A5A1A1\"\n      strokeWidth=\"0.5\"\n    />\n  </svg>\n)\nCheckSvg.propTypes = {\n  width: PropTypes.string,\n  height: PropTypes.string,\n  fill: PropTypes.string,\n  viewBox: PropTypes.string,\n}\nexport default CheckSvg\n","\"use client\";\n\nimport { Col } from '../grid';\nexport default Col;","import { unit } from '@ant-design/cssinjs';\nimport { resetComponent } from '../../style';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\n// ============================== Shared ==============================\nconst genSharedDividerStyle = token => {\n  const {\n    componentCls,\n    sizePaddingEdgeHorizontal,\n    colorSplit,\n    lineWidth,\n    textPaddingInline,\n    orientationMargin,\n    verticalMarginInline\n  } = token;\n  return {\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      borderBlockStart: `${unit(lineWidth)} solid ${colorSplit}`,\n      // vertical\n      '&-vertical': {\n        position: 'relative',\n        top: '-0.06em',\n        display: 'inline-block',\n        height: '0.9em',\n        marginInline: verticalMarginInline,\n        marginBlock: 0,\n        verticalAlign: 'middle',\n        borderTop: 0,\n        borderInlineStart: `${unit(lineWidth)} solid ${colorSplit}`\n      },\n      '&-horizontal': {\n        display: 'flex',\n        clear: 'both',\n        width: '100%',\n        minWidth: '100%',\n        // Fix https://github.com/ant-design/ant-design/issues/10914\n        margin: `${unit(token.dividerHorizontalGutterMargin)} 0`\n      },\n      [`&-horizontal${componentCls}-with-text`]: {\n        display: 'flex',\n        alignItems: 'center',\n        margin: `${unit(token.dividerHorizontalWithTextGutterMargin)} 0`,\n        color: token.colorTextHeading,\n        fontWeight: 500,\n        fontSize: token.fontSizeLG,\n        whiteSpace: 'nowrap',\n        textAlign: 'center',\n        borderBlockStart: `0 ${colorSplit}`,\n        '&::before, &::after': {\n          position: 'relative',\n          width: '50%',\n          borderBlockStart: `${unit(lineWidth)} solid transparent`,\n          // Chrome not accept `inherit` in `border-top`\n          borderBlockStartColor: 'inherit',\n          borderBlockEnd: 0,\n          transform: 'translateY(50%)',\n          content: \"''\"\n        }\n      },\n      [`&-horizontal${componentCls}-with-text-left`]: {\n        '&::before': {\n          width: `calc(${orientationMargin} * 100%)`\n        },\n        '&::after': {\n          width: `calc(100% - ${orientationMargin} * 100%)`\n        }\n      },\n      [`&-horizontal${componentCls}-with-text-right`]: {\n        '&::before': {\n          width: `calc(100% - ${orientationMargin} * 100%)`\n        },\n        '&::after': {\n          width: `calc(${orientationMargin} * 100%)`\n        }\n      },\n      [`${componentCls}-inner-text`]: {\n        display: 'inline-block',\n        paddingBlock: 0,\n        paddingInline: textPaddingInline\n      },\n      '&-dashed': {\n        background: 'none',\n        borderColor: colorSplit,\n        borderStyle: 'dashed',\n        borderWidth: `${unit(lineWidth)} 0 0`\n      },\n      [`&-horizontal${componentCls}-with-text${componentCls}-dashed`]: {\n        '&::before, &::after': {\n          borderStyle: 'dashed none none'\n        }\n      },\n      [`&-vertical${componentCls}-dashed`]: {\n        borderInlineStartWidth: lineWidth,\n        borderInlineEnd: 0,\n        borderBlockStart: 0,\n        borderBlockEnd: 0\n      },\n      [`&-plain${componentCls}-with-text`]: {\n        color: token.colorText,\n        fontWeight: 'normal',\n        fontSize: token.fontSize\n      },\n      [`&-horizontal${componentCls}-with-text-left${componentCls}-no-default-orientation-margin-left`]: {\n        '&::before': {\n          width: 0\n        },\n        '&::after': {\n          width: '100%'\n        },\n        [`${componentCls}-inner-text`]: {\n          paddingInlineStart: sizePaddingEdgeHorizontal\n        }\n      },\n      [`&-horizontal${componentCls}-with-text-right${componentCls}-no-default-orientation-margin-right`]: {\n        '&::before': {\n          width: '100%'\n        },\n        '&::after': {\n          width: 0\n        },\n        [`${componentCls}-inner-text`]: {\n          paddingInlineEnd: sizePaddingEdgeHorizontal\n        }\n      }\n    })\n  };\n};\nexport const prepareComponentToken = token => ({\n  textPaddingInline: '1em',\n  orientationMargin: 0.05,\n  verticalMarginInline: token.marginXS\n});\n// ============================== Export ==============================\nexport default genStyleHooks('Divider', token => {\n  const dividerToken = mergeToken(token, {\n    dividerHorizontalWithTextGutterMargin: token.margin,\n    dividerHorizontalGutterMargin: token.marginLG,\n    sizePaddingEdgeHorizontal: 0\n  });\n  return [genSharedDividerStyle(dividerToken)];\n}, prepareComponentToken, {\n  unitless: {\n    orientationMargin: true\n  }\n});","\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { devUseWarning } from '../_util/warning';\nimport { ConfigContext } from '../config-provider';\nimport useStyle from './style';\nconst Divider = props => {\n  const {\n    getPrefixCls,\n    direction,\n    divider\n  } = React.useContext(ConfigContext);\n  const {\n      prefixCls: customizePrefixCls,\n      type = 'horizontal',\n      orientation = 'center',\n      orientationMargin,\n      className,\n      rootClassName,\n      children,\n      dashed,\n      plain,\n      style\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"type\", \"orientation\", \"orientationMargin\", \"className\", \"rootClassName\", \"children\", \"dashed\", \"plain\", \"style\"]);\n  const prefixCls = getPrefixCls('divider', customizePrefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls);\n  const orientationPrefix = orientation.length > 0 ? `-${orientation}` : orientation;\n  const hasChildren = !!children;\n  const hasCustomMarginLeft = orientation === 'left' && orientationMargin != null;\n  const hasCustomMarginRight = orientation === 'right' && orientationMargin != null;\n  const classString = classNames(prefixCls, divider === null || divider === void 0 ? void 0 : divider.className, hashId, cssVarCls, `${prefixCls}-${type}`, {\n    [`${prefixCls}-with-text`]: hasChildren,\n    [`${prefixCls}-with-text${orientationPrefix}`]: hasChildren,\n    [`${prefixCls}-dashed`]: !!dashed,\n    [`${prefixCls}-plain`]: !!plain,\n    [`${prefixCls}-rtl`]: direction === 'rtl',\n    [`${prefixCls}-no-default-orientation-margin-left`]: hasCustomMarginLeft,\n    [`${prefixCls}-no-default-orientation-margin-right`]: hasCustomMarginRight\n  }, className, rootClassName);\n  const memoizedOrientationMargin = React.useMemo(() => {\n    if (typeof orientationMargin === 'number') {\n      return orientationMargin;\n    }\n    if (/^\\d+$/.test(orientationMargin)) {\n      return Number(orientationMargin);\n    }\n    return orientationMargin;\n  }, [orientationMargin]);\n  const innerStyle = Object.assign(Object.assign({}, hasCustomMarginLeft && {\n    marginLeft: memoizedOrientationMargin\n  }), hasCustomMarginRight && {\n    marginRight: memoizedOrientationMargin\n  });\n  // Warning children not work in vertical mode\n  if (process.env.NODE_ENV !== 'production') {\n    const warning = devUseWarning('Divider');\n    process.env.NODE_ENV !== \"production\" ? warning(!children || type !== 'vertical', 'usage', '`children` not working in `vertical` mode.') : void 0;\n  }\n  return wrapCSSVar( /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: classString,\n    style: Object.assign(Object.assign({}, divider === null || divider === void 0 ? void 0 : divider.style), style)\n  }, restProps, {\n    role: \"separator\"\n  }), children && type !== 'vertical' && ( /*#__PURE__*/React.createElement(\"span\", {\n    className: `${prefixCls}-inner-text`,\n    style: innerStyle\n  }, children))));\n};\nif (process.env.NODE_ENV !== 'production') {\n  Divider.displayName = 'Divider';\n}\nexport default Divider;","\"use client\";\n\nimport { Row } from '../grid';\nexport default Row;"],"names":["TextArea","Input","_ref","isModalOpen","handleCancel","handleApprove","id","headContent","resetFunc","remarks","setRemarks","useState","loading","setLoadings","_jsxs","Modal","title","concat","open","onOk","async","status","error","okText","onCancel","okButtonProps","style","background","borderColor","color","maskClosable","children","_jsx","variant","value","onChange","e","test","handleRemark","target","className","width","fontSize","padding","placeholder","autoSize","minRows","maxRows","loadings","formErrors","setFormErrors","validateForm","errors","disabled","trim","formatDate","FlowList","prodOwnerList","techOwnerList","dataOwnerList","categories","techHeadList","prodHeadList","dataHeadList","api","useAxios","user","getDecodeData","branch","productId","setProductId","tableData","setTableData","productNames","setProductNames","ViewProductData","setViewProductData","ViewProductShow","setViewProductShow","commonLoader","setCommonLoader","abortController","setAbortController","AbortController","selectRef","useRef","hasMoreRef","pageRef","searchRef","productRef","pLoader","setPLoader","useEffect","getProductNames","current","getProductList","tableContainer","document","querySelector","addEventListener","handleScroll","removeEventListener","scrollTop","clientHeight","scrollHeight","_newAbortController","newAbortController","abort","url","get","headers","getHeaders","signal","then","response","data","prevUserData","length","catch","techOwnerOptions","map","name","label","src","profile_pic","ImageUrl","profileImage1","borderRadius","alt","marginLeft","role","prodOwnerOptions","dataOwnerOptions","showCardLists","setShowCardLists","assignCard","setAssignCard","handleAccessChange","selectedOptions","ownerId","prod_id","owner","tech_id","data_id","selectedowners","option","_techOwnerList$find","_prodOwnerList$find","_dataOwnerList$find","designation","Number","find","formData","FormData","append","put","res","toast","position","POSITION","BOTTOM_RIGHT","autoClose","_Fragment","ToastContainer","ViewProduct","flowList","close","closeViewProduct","viewStatus","titleList","ownerOption","CRow","CCol","xs","sm","md","Breadcrumb","separator","items","Link","rel","to","cursor","Select","ref","suffixIcon","Downarrowimg","height","undefined","blur","handleProduct","showSearch","allowClear","filterOption","input","toLowerCase","indexOf","dropdownRender","menu","overflow","options","textAlign","Array","from","_","index","Skeleton","paragraph","rows","prod","getPopupContainer","triggerNode","parentNode","border","InfiniteScroll","dataLength","next","hasMore","loader","CSpinner","endMessage","CTable","hover","CTableHead","CTableRow","CTableHeaderCell","scope","CTableBody","row","CTableDataCell","Tooltip","placement","productName","flowName","prodHead","display","alignItems","profilePic","marginTop","techHead","dataHead","startDate","endDate","approvalFlow","slice","member","Card","overflowY","Divider","budgetDetails","formatAmountWithCommas","currency","technicalOwners","productOwners","dataOwners","onClick","handleEditClick","rowId","prevState","type","EditSvg","viewBox","fill","clipH","clipW","stopPropagation","top","right","CrossSvg","filter","some","selected","required","mode","CaretDownOutlined","labelInValue","handleEditClick1","handleProductView","EyeSvg","confirm","DraftTable","setDraftTable","selectedRows","setSelectedRows","headerLabel","setHeaderLabel","EditProductShow","setEditProductShow","EditProductData","setEditProductData","getDraftList","handleHeaderCheck","isChecked","allRowIds","closeEditProduct","handleEdit","callDraftLists","warning","content","icon","ExclamationCircleFilled","okType","cancelButtonProps","closable","backgroundColor","cancelText","Promise","resolve","reject","setTimeout","delete","deletefun","success","EditProduct","callBackFunc","callDraftList","Checkbox","checked","colSpan","justifyContent","marginRight","DeleteSvg","zIndex","includes","approved","handleMemberCheck","prevSelectedRows","selectedId","newSelectedRowCount","openEditProduct","searchValue","setSearchValue","AddProductShow","setAddProductShow","FlowId","setFlowId","CommonLoader","getFlowList","filterFlowTable","useMemo","flow","closeAddProduct","AddProduct","handleSearch","prefix","searchicon","textWrap","access","approvals","approver","approverIndex","React","line","openAddProduct","openViewProduct","CButton","approvalStatus","infoIcon","minHeight","Row","margin","stage1","stage2","stage3","stage","ownerStatus","setOwnerStatus","dateString","formattedDate","Date","toLocaleDateString","day","month","year","replace","selectedOption","bussinessCategory","handleProductViewedit","PlusSvg","CustomDropdownRender","setIsModalOpen","viewProductShow","openSelectAll","setOpenSelectAll","approvedStatusAll","setApprovedStatusAll","openSelectRejectAll","setOpenSelectRejectAll","viewProductData","singleApprovedId","setSingleApprovedId","approvedStatus","setApprovedStatus","setOpen","singleId","setSingleId","statusRef","showPopconfirmAll","handleButtonClick","remarksValue","statuschange","statusValue","postData","message","Error","resetFormValues","displayContent","paddingLeft","CheckSvg","showPopconfirm","showModal","RejectConfirmModal","ApprovedConfirmModal","handleApproveCancel","handleApproveCancelAll","handleRejectCancelAll","abortControllerStatus","setAbortControllerStatus","_newAbortController2","loaderElement","handleStatus","userId","formRef","selectedFile","setSelectedFile","setStatus","setStartDate","setEndDate","loadingState","fileInputRef","form","Form","useForm","flowId","setError","handleDropdownVisibleChange","visible","prodHeadOption","techHeadOption","dataHeadOption","categoryOption","cate","setFieldsValue","budget","summary","flowValue","techHeadValue","tech_headId","prodHeadValue","prod_headId","startDateValue","dayjs","endDateValue","filesValue","file","category","categoryID","rejRemarks","approvalremarks","resetComponent","resetFields","BackArrowSvg","approvalby","approvalRole","initialValues","dataHeadValue","data_headId","layout","onFinish","validFormats","fileExtension","split","pop","Object","keys","values","forEach","key","errorMessage","encType","requiredMark","validateTrigger","paddingRight","fontWeight","Item","rules","onDropdownVisibleChange","pattern","maxLength","props","DatePicker","Calendar","disabledDate","startOf","handleStartDateChange","date","format","handleEndDateChange","openFileInNewTab","window","float","eyeIcon","readOnly","handleBrowseClick","click","event","files","validator","getFieldValue","Option","Button","htmlType","maxHeight","marginleft","EditRejectedProduct","Products","activeKey","setActiveKey","setProdOwnerList","setTechOwnerList","setDataOwnerList","setCategory","setProdHeadList","setTechHeadList","setDataHeadList","location","useLocation","getProdOwner","getTechOwner","getDataOwner","getCategory","getTechHead","getDataHead","getProdHead","tab","URLSearchParams","search","parseInt","CCard","CNav","CNavItem","CNavLink","active","component","CTabContent","CTabPane","ApprovedList","DraftList","ApproverProductList","ApproverCloseList","OwnerProductList","PendingList","RejectedList","xmlns","d","stroke","strokeWidth","genSharedDividerStyle","token","componentCls","sizePaddingEdgeHorizontal","colorSplit","lineWidth","textPaddingInline","orientationMargin","verticalMarginInline","assign","borderBlockStart","unit","marginInline","marginBlock","verticalAlign","borderTop","borderInlineStart","clear","minWidth","dividerHorizontalGutterMargin","dividerHorizontalWithTextGutterMargin","colorTextHeading","fontSizeLG","whiteSpace","borderBlockStartColor","borderBlockEnd","transform","paddingBlock","paddingInline","borderStyle","borderWidth","borderInlineStartWidth","borderInlineEnd","colorText","paddingInlineStart","paddingInlineEnd","genStyleHooks","dividerToken","mergeToken","marginLG","marginXS","unitless","__rest","s","t","p","prototype","hasOwnProperty","call","getOwnPropertySymbols","i","propertyIsEnumerable","getPrefixCls","direction","divider","ConfigContext","prefixCls","customizePrefixCls","orientation","rootClassName","dashed","plain","restProps","wrapCSSVar","hashId","cssVarCls","useStyle","orientationPrefix","hasChildren","hasCustomMarginLeft","hasCustomMarginRight","classString","classNames","memoizedOrientationMargin","innerStyle"],"sourceRoot":""}